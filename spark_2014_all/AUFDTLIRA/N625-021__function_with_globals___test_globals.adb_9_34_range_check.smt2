(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range1 temp___expr_39)))
(define-fun to_rep ((x natural)) Int (naturalqtint x))
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (integer integer) Bool)
(declare-const dummy1 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__test_globals__my_rec__d natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural (rec__test_globals__my_rec__d a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__test_globals__my_rec__f natural)))))
(define-fun us_split_fields_F__projection ((a us_split_fields)) natural (rec__test_globals__my_rec__f a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__test_globals__my_rec__d (us_split_discrs1 a))) (to_rep (rec__test_globals__my_rec__d (us_split_discrs1 b)))) (= (to_rep (rec__test_globals__my_rec__f (us_split_fields1 a))) (to_rep (rec__test_globals__my_rec__f (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const test_globals__my_rec__d__first__bit Int)
(declare-const test_globals__my_rec__d__last__bit Int)
(declare-const test_globals__my_rec__d__position Int)
(assert (<= 0 test_globals__my_rec__d__first__bit))
(assert (< test_globals__my_rec__d__first__bit test_globals__my_rec__d__last__bit))
(assert (<= 0 test_globals__my_rec__d__position))
(declare-const test_globals__my_rec__f__first__bit Int)
(declare-const test_globals__my_rec__f__last__bit Int)
(declare-const test_globals__my_rec__f__position Int)
(assert (<= 0 test_globals__my_rec__f__first__bit))
(assert (< test_globals__my_rec__f__first__bit test_globals__my_rec__f__last__bit))
(assert (<= 0 test_globals__my_rec__f__position))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((my_rec__ref (mk_my_rec__ref (my_rec__content us_rep)))))
(define-fun my_rec__ref___projection ((a my_rec__ref)) us_rep (my_rec__content a))
(define-fun in_range3 ((rec__test_globals__my_rec__d1 Int) (a us_rep)) Bool (= rec__test_globals__my_rec__d1 (to_rep (rec__test_globals__my_rec__d (us_split_discrs1 a)))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const test_globals__my_rec__d__first__bit1 Int)
(declare-const test_globals__my_rec__d__last__bit1 Int)
(declare-const test_globals__my_rec__d__position1 Int)
(assert (<= 0 test_globals__my_rec__d__first__bit1))
(assert (< test_globals__my_rec__d__first__bit1 test_globals__my_rec__d__last__bit1))
(assert (<= 0 test_globals__my_rec__d__position1))
(declare-const test_globals__my_rec__f__first__bit1 Int)
(declare-const test_globals__my_rec__f__last__bit1 Int)
(declare-const test_globals__my_rec__f__position1 Int)
(assert (<= 0 test_globals__my_rec__f__first__bit1))
(assert (< test_globals__my_rec__f__first__bit1 test_globals__my_rec__f__last__bit1))
(assert (<= 0 test_globals__my_rec__f__position1))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((my_rec_stat__ref (mk_my_rec_stat__ref (my_rec_stat__content us_rep)))))
(define-fun my_rec_stat__ref___projection ((a my_rec_stat__ref)) us_rep (my_rec_stat__content a))
(declare-const rs__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun in_range4 ((rec__test_globals__my_rec__d1 Int) (a us_rep)) Bool (= rec__test_globals__my_rec__d1 (to_rep (rec__test_globals__my_rec__d (us_split_discrs1 a)))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const test_globals__my_rec__d__first__bit2 Int)
(declare-const test_globals__my_rec__d__last__bit2 Int)
(declare-const test_globals__my_rec__d__position2 Int)
(assert (<= 0 test_globals__my_rec__d__first__bit2))
(assert (< test_globals__my_rec__d__first__bit2 test_globals__my_rec__d__last__bit2))
(assert (<= 0 test_globals__my_rec__d__position2))
(declare-const test_globals__my_rec__f__first__bit2 Int)
(declare-const test_globals__my_rec__f__last__bit2 Int)
(declare-const test_globals__my_rec__f__position2 Int)
(assert (<= 0 test_globals__my_rec__f__first__bit2))
(assert (< test_globals__my_rec__f__first__bit2 test_globals__my_rec__f__last__bit2))
(assert (<= 0 test_globals__my_rec__f__position2))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((my_rec_dyn__ref (mk_my_rec_dyn__ref (my_rec_dyn__content us_rep)))))
(define-fun my_rec_dyn__ref___projection ((a my_rec_dyn__ref)) us_rep (my_rec_dyn__content a))
(declare-const rd__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const ad__first integer)
(declare-const ad__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const ru__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const au__first integer)
(declare-const au__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-fun nested_with_globals ((Array Int natural) (Array Int natural) (Array Int natural) us_split_fields us_split_fields us_split_fields) Bool)
(declare-fun nested_with_globals__function_guard (Bool (Array Int natural) (Array Int natural) (Array Int natural) us_split_fields us_split_fields us_split_fields) Bool)
(declare-const c Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int natural)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))
(define-fun of_array ((a (Array Int natural)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int natural)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int natural)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int natural)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq2 ((x us_t) (y us_t)) Bool (bool_eq1 (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq5 (us_t us_t) Bool)
(declare-const dummy5 us_t)
(declare-datatypes () ((my_array__ref (mk_my_array__ref (my_array__content us_t)))))
(define-fun my_array__ref___projection ((a my_array__ref)) us_t (my_array__content a))
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((tmy_array_dynP1__ref (mk_tmy_array_dynP1__ref (tmy_array_dynP1__content integer)))))
(define-fun tmy_array_dynP1__ref___projection ((a tmy_array_dynP1__ref)) integer (tmy_array_dynP1__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int natural)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int natural) (elts1 a))
(define-fun of_array1 ((a (Array Int natural)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int natural)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int natural)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int natural)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq1 (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq7 (us_t1 us_t1) Bool)
(declare-const dummy7 us_t1)
(declare-datatypes () ((my_array_dyn__ref (mk_my_array_dyn__ref (my_array_dyn__content us_t1)))))
(define-fun my_array_dyn__ref___projection ((a my_array_dyn__ref)) us_t1 (my_array_dyn__content a))
(define-fun dynamic_invariant1 ((temp___expr_191 us_rep) (temp___is_init_187 Bool) (temp___skip_constant_188 Bool) (temp___do_toplevel_189 Bool) (temp___do_typ_inv_190 Bool)) Bool (=> (not (= temp___skip_constant_188 true)) (in_range3 100 temp___expr_191)))
(define-fun default_initial_assumption ((temp___expr_193 us_rep) (temp___skip_top_level_194 Bool)) Bool (= (to_rep (rec__test_globals__my_rec__d (us_split_discrs1 temp___expr_193))) 100))
(define-fun dynamic_invariant2 ((temp___expr_201 us_rep) (temp___is_init_197 Bool) (temp___skip_constant_198 Bool) (temp___do_toplevel_199 Bool) (temp___do_typ_inv_200 Bool)) Bool (=> (not (= temp___skip_constant_198 true)) (in_range4 c temp___expr_201)))
(define-fun default_initial_assumption1 ((temp___expr_203 us_rep) (temp___skip_top_level_204 Bool)) Bool (= (to_rep (rec__test_globals__my_rec__d (us_split_discrs1 temp___expr_203))) c))
(assert true)
(assert (forall ((test_globals__au (Array Int natural)) (test_globals__as (Array Int natural)) (test_globals__ad (Array Int natural))) (forall ((test_globals__ru__fields us_split_fields)) (forall ((test_globals__rs__fields us_split_fields)) (forall ((test_globals__rd__fields us_split_fields)) (! (= (= (nested_with_globals test_globals__au test_globals__as test_globals__ad test_globals__ru__fields test_globals__rs__fields test_globals__rd__fields) true) (ite (< 0 c) (and (and (= (to_rep (select test_globals__au 1)) 0) (= (to_rep (select test_globals__as 1)) 0)) (= (to_rep (select test_globals__ad 1)) 0)) (and (and (= (to_rep (rec__test_globals__my_rec__f (us_split_fields1 (mk___rep ru__split_discrs test_globals__ru__fields)))) 0) (= (to_rep (rec__test_globals__my_rec__f (us_split_fields1 (mk___rep rs__split_discrs test_globals__rs__fields)))) 0)) (= (to_rep (rec__test_globals__my_rec__f (us_split_fields1 (mk___rep rd__split_discrs test_globals__rd__fields)))) 0)))) :pattern ((nested_with_globals test_globals__au test_globals__as test_globals__ad test_globals__ru__fields test_globals__rs__fields test_globals__rd__fields))))))))
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content integer)))))
(define-fun t3b__ref___projection ((a t3b__ref)) integer (t3b__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int natural)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int natural) (elts2 a))
(define-fun of_array2 ((a (Array Int natural)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int natural)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int natural)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int natural)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment5 a))))
(define-fun bool_eq4 ((x us_t2) (y us_t2)) Bool (bool_eq1 (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq9 (us_t2 us_t2) Bool)
(declare-const dummy9 us_t2)
(declare-datatypes () ((t4b__ref (mk_t4b__ref (t4b__content us_t2)))))
(define-fun t4b__ref___projection ((a t4b__ref)) us_t2 (t4b__content a))
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content integer)))))
(define-fun t7b__ref___projection ((a t7b__ref)) integer (t7b__content a))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property5 range_first range_last low) (dynamic_property5 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int natural)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int natural) (elts3 a))
(define-fun of_array3 ((a (Array Int natural)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int natural)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int natural)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int natural)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment6 a))))
(define-fun bool_eq5 ((x us_t3) (y us_t3)) Bool (bool_eq1 (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq11 (us_t3 us_t3) Bool)
(declare-const dummy11 us_t3)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content us_t3)))))
(define-fun t8b__ref___projection ((a t8b__ref)) us_t3 (t8b__content a))
(define-fun in_range5 ((rec__test_globals__my_rec__d1 Int) (a us_rep)) Bool (= rec__test_globals__my_rec__d1 (to_rep (rec__test_globals__my_rec__d (us_split_discrs1 a)))))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep)) (<= 0 (object__alignment7 a))))
(declare-const test_globals__my_rec__d__first__bit3 Int)
(declare-const test_globals__my_rec__d__last__bit3 Int)
(declare-const test_globals__my_rec__d__position3 Int)
(assert (<= 0 test_globals__my_rec__d__first__bit3))
(assert (< test_globals__my_rec__d__first__bit3 test_globals__my_rec__d__last__bit3))
(assert (<= 0 test_globals__my_rec__d__position3))
(declare-const test_globals__my_rec__f__first__bit3 Int)
(declare-const test_globals__my_rec__f__last__bit3 Int)
(declare-const test_globals__my_rec__f__position3 Int)
(assert (<= 0 test_globals__my_rec__f__first__bit3))
(assert (< test_globals__my_rec__f__first__bit3 test_globals__my_rec__f__last__bit3))
(assert (<= 0 test_globals__my_rec__f__position3))
(declare-fun user_eq12 (us_rep us_rep) Bool)
(declare-const dummy12 us_rep)
(declare-datatypes () ((t9b__ref (mk_t9b__ref (t9b__content us_rep)))))
(define-fun t9b__ref___projection ((a t9b__ref)) us_rep (t9b__content a))
(define-fun in_range6 ((rec__test_globals__my_rec__d1 Int) (a us_rep)) Bool (= rec__test_globals__my_rec__d1 (to_rep (rec__test_globals__my_rec__d (us_split_discrs1 a)))))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep)) (<= 0 (object__alignment8 a))))
(declare-const test_globals__my_rec__d__first__bit4 Int)
(declare-const test_globals__my_rec__d__last__bit4 Int)
(declare-const test_globals__my_rec__d__position4 Int)
(assert (<= 0 test_globals__my_rec__d__first__bit4))
(assert (< test_globals__my_rec__d__first__bit4 test_globals__my_rec__d__last__bit4))
(assert (<= 0 test_globals__my_rec__d__position4))
(declare-const test_globals__my_rec__f__first__bit4 Int)
(declare-const test_globals__my_rec__f__last__bit4 Int)
(declare-const test_globals__my_rec__f__position4 Int)
(assert (<= 0 test_globals__my_rec__f__first__bit4))
(assert (< test_globals__my_rec__f__first__bit4 test_globals__my_rec__f__last__bit4))
(assert (<= 0 test_globals__my_rec__f__position4))
(declare-fun user_eq13 (us_rep us_rep) Bool)
(declare-const dummy13 us_rep)
(declare-datatypes () ((t10b__ref (mk_t10b__ref (t10b__content us_rep)))))
(define-fun t10b__ref___projection ((a t10b__ref)) us_rep (t10b__content a))
(define-fun in_range7 ((rec__test_globals__my_rec__d1 Int) (a us_rep)) Bool (= rec__test_globals__my_rec__d1 (to_rep (rec__test_globals__my_rec__d (us_split_discrs1 a)))))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep)) (<= 0 (object__alignment9 a))))
(declare-const test_globals__my_rec__d__first__bit5 Int)
(declare-const test_globals__my_rec__d__last__bit5 Int)
(declare-const test_globals__my_rec__d__position5 Int)
(assert (<= 0 test_globals__my_rec__d__first__bit5))
(assert (< test_globals__my_rec__d__first__bit5 test_globals__my_rec__d__last__bit5))
(assert (<= 0 test_globals__my_rec__d__position5))
(declare-const test_globals__my_rec__f__first__bit5 Int)
(declare-const test_globals__my_rec__f__last__bit5 Int)
(declare-const test_globals__my_rec__f__position5 Int)
(assert (<= 0 test_globals__my_rec__f__first__bit5))
(assert (< test_globals__my_rec__f__first__bit5 test_globals__my_rec__f__last__bit5))
(assert (<= 0 test_globals__my_rec__f__position5))
(declare-fun user_eq14 (us_rep us_rep) Bool)
(declare-const dummy14 us_rep)
(declare-datatypes () ((t11b__ref (mk_t11b__ref (t11b__content us_rep)))))
(define-fun t11b__ref___projection ((a t11b__ref)) us_rep (t11b__content a))
(declare-fun test_globals__au__aggregate_def (Int Int Int) us_t2)
(declare-fun test_globals__as__aggregate_def (Int) (Array Int natural))
(declare-fun test_globals__ad__aggregate_def (Int Int Int) us_t3)
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_18)))
(define-fun dynamic_invariant4 ((temp___expr_159 us_t) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (not (= temp___skip_constant_156 true)) (dynamic_property 0 2147483647 (first1 temp___expr_159) (last1 temp___expr_159))))
(define-fun dynamic_invariant5 ((temp___expr_175 us_t1) (temp___is_init_171 Bool) (temp___skip_constant_172 Bool) (temp___do_toplevel_173 Bool) (temp___do_typ_inv_174 Bool)) Bool (=> (not (= temp___skip_constant_172 true)) (and (dynamic_property2 1 c (first3 temp___expr_175) (last3 temp___expr_175)) (and (= (first3 temp___expr_175) 1) (= (last3 temp___expr_175) c)))))
(declare-const rliteral natural)
(assert (= (naturalqtint rliteral) 0))
(assert (forall ((temp___223 Int) (temp___224 Int) (temp___225 Int)) (let ((temp___222 (test_globals__au__aggregate_def temp___223 temp___224 temp___225))) (=> (dynamic_invariant temp___223 true true true true) (and (=> (dynamic_property 0 2147483647 temp___224 temp___225) (and (= (first5 temp___222) temp___224) (= (last5 temp___222) temp___225))) (forall ((temp___226 Int)) (= (select (to_array2 temp___222) temp___226) rliteral)))))))
(assert (forall ((temp___231 Int)) (=> (dynamic_invariant temp___231 true true true true) (forall ((temp___232 Int)) (= (select (test_globals__as__aggregate_def temp___231) temp___232) rliteral)))))
(assert (forall ((temp___234 Int) (temp___235 Int) (temp___236 Int)) (let ((temp___233 (test_globals__ad__aggregate_def temp___234 temp___235 temp___236))) (=> (dynamic_invariant temp___234 true true true true) (and (=> (dynamic_property 0 2147483647 temp___235 temp___236) (and (= (first7 temp___233) temp___235) (= (last7 temp___233) temp___236))) (forall ((temp___237 Int)) (= (select (to_array3 temp___233) temp___237) rliteral)))))))
(declare-const us Int)
(assert (in_range1 c))
(assert (and (= us 100) (in_range1 100)))
(assert (not (in_range1 c)))
(check-sat)
(exit)
