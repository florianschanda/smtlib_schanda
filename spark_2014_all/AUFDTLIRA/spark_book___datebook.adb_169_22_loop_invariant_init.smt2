(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort year_type 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 2000 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (year_type year_type) Bool)
(declare-const dummy4 year_type)
(declare-datatypes () ((year_type__ref (mk_year_type__ref (year_type__content year_type)))))
(define-fun year_type__ref___projection ((a year_type__ref)) year_type (year_type__content a))
(declare-fun to_rep2 (year_type) Int)
(declare-fun of_rep2 (Int) year_type)
(assert (forall ((x year_type)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x year_type)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort month_type 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (month_type month_type) Bool)
(declare-const dummy5 month_type)
(declare-datatypes () ((month_type__ref (mk_month_type__ref (month_type__content month_type)))))
(define-fun month_type__ref___projection ((a month_type__ref)) month_type (month_type__content a))
(declare-fun to_rep3 (month_type) Int)
(declare-fun of_rep3 (Int) month_type)
(assert (forall ((x month_type)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x month_type)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort day_type 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (day_type day_type) Bool)
(declare-const dummy6 day_type)
(declare-datatypes () ((day_type__ref (mk_day_type__ref (day_type__content day_type)))))
(define-fun day_type__ref___projection ((a day_type__ref)) day_type (day_type__content a))
(declare-fun to_rep4 (day_type) Int)
(declare-fun of_rep4 (Int) day_type)
(assert (forall ((x day_type)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x day_type)) (! (in_range6 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__dates__date__day day_type) (rec__dates__date__month month_type) (rec__dates__date__year year_type)))))
(define-fun us_split_fields_Day__projection ((a us_split_fields)) day_type (rec__dates__date__day a))
(define-fun us_split_fields_Month__projection ((a us_split_fields)) month_type (rec__dates__date__month a))
(define-fun us_split_fields_Year__projection ((a us_split_fields)) year_type (rec__dates__date__year a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep4 (rec__dates__date__day (us_split_fields1 a))) (to_rep4 (rec__dates__date__day (us_split_fields1 b)))) (= (to_rep3 (rec__dates__date__month (us_split_fields1 a))) (to_rep3 (rec__dates__date__month (us_split_fields1 b))))) (= (to_rep2 (rec__dates__date__year (us_split_fields1 a))) (to_rep2 (rec__dates__date__year (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const dates__date__day__first__bit Int)
(declare-const dates__date__day__last__bit Int)
(declare-const dates__date__day__position Int)
(assert (<= 0 dates__date__day__first__bit))
(assert (< dates__date__day__first__bit dates__date__day__last__bit))
(assert (<= 0 dates__date__day__position))
(declare-const dates__date__month__first__bit Int)
(declare-const dates__date__month__last__bit Int)
(declare-const dates__date__month__position Int)
(assert (<= 0 dates__date__month__first__bit))
(assert (< dates__date__month__first__bit dates__date__month__last__bit))
(assert (<= 0 dates__date__month__position))
(declare-const dates__date__year__first__bit Int)
(declare-const dates__date__year__last__bit Int)
(declare-const dates__date__year__position Int)
(assert (<= 0 dates__date__year__first__bit))
(assert (< dates__date__year__first__bit dates__date__year__last__bit))
(assert (<= 0 dates__date__year__position))
(declare-fun user_eq7 (us_rep us_rep) Bool)
(declare-const dummy7 us_rep)
(declare-datatypes () ((date__ref (mk_date__ref (date__content us_rep)))))
(define-fun date__ref___projection ((a date__ref)) us_rep (date__content a))
(declare-sort hour_type 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 23)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq8 (hour_type hour_type) Bool)
(declare-const dummy8 hour_type)
(declare-datatypes () ((hour_type__ref (mk_hour_type__ref (hour_type__content hour_type)))))
(define-fun hour_type__ref___projection ((a hour_type__ref)) hour_type (hour_type__content a))
(declare-fun to_rep5 (hour_type) Int)
(declare-fun of_rep5 (Int) hour_type)
(assert (forall ((x hour_type)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x hour_type)) (! (in_range7 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort minute_type 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 59)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq9 (minute_type minute_type) Bool)
(declare-const dummy9 minute_type)
(declare-datatypes () ((minute_type__ref (mk_minute_type__ref (minute_type__content minute_type)))))
(define-fun minute_type__ref___projection ((a minute_type__ref)) minute_type (minute_type__content a))
(declare-fun to_rep6 (minute_type) Int)
(declare-fun of_rep6 (Int) minute_type)
(assert (forall ((x minute_type)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x minute_type)) (! (in_range8 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-sort second_type 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 59)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq10 (second_type second_type) Bool)
(declare-const dummy10 second_type)
(declare-datatypes () ((second_type__ref (mk_second_type__ref (second_type__content second_type)))))
(define-fun second_type__ref___projection ((a second_type__ref)) second_type (second_type__content a))
(declare-fun to_rep7 (second_type) Int)
(declare-fun of_rep7 (Int) second_type)
(assert (forall ((x second_type)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x second_type)) (! (in_range9 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__dates__time__hour hour_type) (rec__dates__time__minute minute_type) (rec__dates__time__second second_type)))))
(define-fun us_split_fields_Hour__projection ((a us_split_fields2)) hour_type (rec__dates__time__hour a))
(define-fun us_split_fields_Minute__projection ((a us_split_fields2)) minute_type (rec__dates__time__minute a))
(define-fun us_split_fields_Second__projection ((a us_split_fields2)) second_type (rec__dates__time__second a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (= (to_rep5 (rec__dates__time__hour (us_split_fields3 a))) (to_rep5 (rec__dates__time__hour (us_split_fields3 b)))) (= (to_rep6 (rec__dates__time__minute (us_split_fields3 a))) (to_rep6 (rec__dates__time__minute (us_split_fields3 b))))) (= (to_rep7 (rec__dates__time__second (us_split_fields3 a))) (to_rep7 (rec__dates__time__second (us_split_fields3 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const dates__time__hour__first__bit Int)
(declare-const dates__time__hour__last__bit Int)
(declare-const dates__time__hour__position Int)
(assert (<= 0 dates__time__hour__first__bit))
(assert (< dates__time__hour__first__bit dates__time__hour__last__bit))
(assert (<= 0 dates__time__hour__position))
(declare-const dates__time__minute__first__bit Int)
(declare-const dates__time__minute__last__bit Int)
(declare-const dates__time__minute__position Int)
(assert (<= 0 dates__time__minute__first__bit))
(assert (< dates__time__minute__first__bit dates__time__minute__last__bit))
(assert (<= 0 dates__time__minute__position))
(declare-const dates__time__second__first__bit Int)
(declare-const dates__time__second__last__bit Int)
(declare-const dates__time__second__position Int)
(assert (<= 0 dates__time__second__first__bit))
(assert (< dates__time__second__first__bit dates__time__second__last__bit))
(assert (<= 0 dates__time__second__position))
(declare-fun user_eq11 (us_rep1 us_rep1) Bool)
(declare-const dummy11 us_rep1)
(declare-datatypes () ((time__ref (mk_time__ref (time__content us_rep1)))))
(define-fun time__ref___projection ((a time__ref)) us_rep1 (time__content a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__dates__datetime__date_part us_rep) (rec__dates__datetime__time_part us_rep1)))))
(define-fun us_split_fields_Date_Part__projection ((a us_split_fields4)) us_rep (rec__dates__datetime__date_part a))
(define-fun us_split_fields_Time_Part__projection ((a us_split_fields4)) us_rep1 (rec__dates__datetime__time_part a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___3__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (bool_eq2 (rec__dates__datetime__date_part (us_split_fields5 a)) (rec__dates__datetime__date_part (us_split_fields5 b))) true) (= (bool_eq3 (rec__dates__datetime__time_part (us_split_fields5 a)) (rec__dates__datetime__time_part (us_split_fields5 b))) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep2) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep2) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))
(declare-const dates__datetime__date_part__first__bit Int)
(declare-const dates__datetime__date_part__last__bit Int)
(declare-const dates__datetime__date_part__position Int)
(assert (<= 0 dates__datetime__date_part__first__bit))
(assert (< dates__datetime__date_part__first__bit dates__datetime__date_part__last__bit))
(assert (<= 0 dates__datetime__date_part__position))
(declare-const dates__datetime__time_part__first__bit Int)
(declare-const dates__datetime__time_part__last__bit Int)
(declare-const dates__datetime__time_part__position Int)
(assert (<= 0 dates__datetime__time_part__first__bit))
(assert (< dates__datetime__time_part__first__bit dates__datetime__time_part__last__bit))
(assert (<= 0 dates__datetime__time_part__position))
(declare-fun user_eq12 (us_rep2 us_rep2) Bool)
(declare-const dummy12 us_rep2)
(declare-datatypes () ((datetime__ref (mk_datetime__ref (datetime__content us_rep2)))))
(define-fun datetime__ref___projection ((a datetime__ref)) us_rep2 (datetime__content a))
(declare-sort status_type 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq13 (status_type status_type) Bool)
(declare-const dummy13 status_type)
(declare-datatypes () ((status_type__ref (mk_status_type__ref (status_type__content status_type)))))
(define-fun status_type__ref___projection ((a status_type__ref)) status_type (status_type__content a))
(define-fun dynamic_invariant ((temp___expr_222 Int) (temp___is_init_219 Bool) (temp___skip_constant_220 Bool) (temp___do_toplevel_221 Bool)) Bool (=> (or (= temp___is_init_219 true) (<= 0 3)) (in_range10 temp___expr_222)))
(declare-sort description_count_type 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq14 (description_count_type description_count_type) Bool)
(declare-const dummy14 description_count_type)
(declare-datatypes () ((description_count_type__ref (mk_description_count_type__ref (description_count_type__content description_count_type)))))
(define-fun description_count_type__ref___projection ((a description_count_type__ref)) description_count_type (description_count_type__content a))
(declare-fun to_rep8 (description_count_type) Int)
(declare-fun of_rep8 (Int) description_count_type)
(assert (forall ((x description_count_type)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x description_count_type)) (! (in_range11 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-const dummy15 (Array Int character))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int character)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq15 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__datebook__event_record__description_text (Array Int character)) (rec__datebook__event_record__description_size description_count_type) (rec__datebook__event_record__date us_rep2) (rec__datebook__event_record__is_used Bool)))))
(define-fun us_split_fields_Description_Text__projection ((a us_split_fields6)) (Array Int character) (rec__datebook__event_record__description_text a))
(define-fun us_split_fields_Description_Size__projection ((a us_split_fields6)) description_count_type (rec__datebook__event_record__description_size a))
(define-fun us_split_fields_Date__projection ((a us_split_fields6)) us_rep2 (rec__datebook__event_record__date a))
(define-fun us_split_fields_Is_Used__projection ((a us_split_fields6)) Bool (rec__datebook__event_record__is_used a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___4__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq5 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (and (= (bool_eq (rec__datebook__event_record__description_text (us_split_fields7 a)) 1 128 (rec__datebook__event_record__description_text (us_split_fields7 b)) 1 128) true) (= (to_rep8 (rec__datebook__event_record__description_size (us_split_fields7 a))) (to_rep8 (rec__datebook__event_record__description_size (us_split_fields7 b))))) (= (bool_eq4 (rec__datebook__event_record__date (us_split_fields7 a)) (rec__datebook__event_record__date (us_split_fields7 b))) true)) (= (rec__datebook__event_record__is_used (us_split_fields7 a)) (rec__datebook__event_record__is_used (us_split_fields7 b)))) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep3) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep3) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep3)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment5 a))))
(declare-const datebook__event_record__description_text__first__bit Int)
(declare-const datebook__event_record__description_text__last__bit Int)
(declare-const datebook__event_record__description_text__position Int)
(assert (<= 0 datebook__event_record__description_text__first__bit))
(assert (< datebook__event_record__description_text__first__bit datebook__event_record__description_text__last__bit))
(assert (<= 0 datebook__event_record__description_text__position))
(declare-const datebook__event_record__description_size__first__bit Int)
(declare-const datebook__event_record__description_size__last__bit Int)
(declare-const datebook__event_record__description_size__position Int)
(assert (<= 0 datebook__event_record__description_size__first__bit))
(assert (< datebook__event_record__description_size__first__bit datebook__event_record__description_size__last__bit))
(assert (<= 0 datebook__event_record__description_size__position))
(declare-const datebook__event_record__date__first__bit Int)
(declare-const datebook__event_record__date__last__bit Int)
(declare-const datebook__event_record__date__position Int)
(assert (<= 0 datebook__event_record__date__first__bit))
(assert (< datebook__event_record__date__first__bit datebook__event_record__date__last__bit))
(assert (<= 0 datebook__event_record__date__position))
(declare-const datebook__event_record__is_used__first__bit Int)
(declare-const datebook__event_record__is_used__last__bit Int)
(declare-const datebook__event_record__is_used__position Int)
(assert (<= 0 datebook__event_record__is_used__first__bit))
(assert (< datebook__event_record__is_used__first__bit datebook__event_record__is_used__last__bit))
(assert (<= 0 datebook__event_record__is_used__position))
(declare-fun user_eq16 (us_rep3 us_rep3) Bool)
(declare-const dummy16 us_rep3)
(declare-datatypes () ((event_record__ref (mk_event_record__ref (event_record__content us_rep3)))))
(define-fun event_record__ref___projection ((a event_record__ref)) us_rep3 (event_record__content a))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int us_rep3))))))
(declare-fun slide1 ((Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int us_rep3))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int us_rep3) Int Int (Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (us_rep3 Int) (Array Int us_rep3))
(assert (forall ((v us_rep3)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq6 ((a (Array Int us_rep3)) (a__first Int) (a__last Int) (b (Array Int us_rep3)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (bool_eq5 (select a temp___idx_132) (select b (+ (- b__first a__first) temp___idx_132))) true)))) true false))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (bool_eq5 (select a temp___idx_132) (select b (+ (- b__first a__first) temp___idx_132))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const date us_rep2)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const description__first integer)
(declare-const description__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_invariant1 ((temp___expr_257 Int) (temp___is_init_254 Bool) (temp___skip_constant_255 Bool) (temp___do_toplevel_256 Bool)) Bool (=> (or (= temp___is_init_254 true) (<= 0 128)) (in_range11 temp___expr_257)))
(declare-sort event_index_type 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 1 x) (<= x 64)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq17 (event_index_type event_index_type) Bool)
(declare-const dummy17 event_index_type)
(declare-datatypes () ((event_index_type__ref (mk_event_index_type__ref (event_index_type__content event_index_type)))))
(define-fun event_index_type__ref___projection ((a event_index_type__ref)) event_index_type (event_index_type__content a))
(define-fun dynamic_invariant2 ((temp___expr_293 Int) (temp___is_init_290 Bool) (temp___skip_constant_291 Bool) (temp___do_toplevel_292 Bool)) Bool (=> (or (= temp___is_init_290 true) (<= 1 64)) (in_range12 temp___expr_293)))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq18 (integer integer) Bool)
(declare-const dummy18 integer)
(declare-datatypes () ((t11b__ref (mk_t11b__ref (t11b__content integer)))))
(define-fun t11b__ref___projection ((a t11b__ref)) integer (t11b__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int character)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int character))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment6 a))))
(define-fun bool_eq7 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq19 (us_t1 us_t1) Bool)
(declare-const dummy19 us_t1)
(declare-datatypes () ((t12b__ref (mk_t12b__ref (t12b__content us_t1)))))
(define-fun t12b__ref___projection ((a t12b__ref)) us_t1 (t12b__content a))
(declare-const r13b Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq20 (integer integer) Bool)
(declare-const dummy20 integer)
(declare-datatypes () ((t14b__ref (mk_t14b__ref (t14b__content integer)))))
(define-fun t14b__ref___projection ((a t14b__ref)) integer (t14b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun temp___390 (Int Int Int) us_t1)
(assert (forall ((temp___392 Int) (temp___393 Int) (temp___394 Int)) (let ((temp___391 (temp___390 temp___392 temp___393 temp___394))) (and (=> (dynamic_property 1 2147483647 temp___393 temp___394) (and (= (first3 temp___391) temp___393) (= (last3 temp___391) temp___394))) (forall ((temp___395 Int)) (= (select (to_array1 temp___391) temp___395) (of_rep temp___392)))))))
(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant4 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant5 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant6 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant7 ((temp___expr_136 Int) (temp___is_init_133 Bool) (temp___skip_constant_134 Bool) (temp___do_toplevel_135 Bool)) Bool (=> (or (= temp___is_init_133 true) (<= 2000 2099)) (in_range4 temp___expr_136)))
(define-fun dynamic_invariant8 ((temp___expr_142 Int) (temp___is_init_139 Bool) (temp___skip_constant_140 Bool) (temp___do_toplevel_141 Bool)) Bool (=> (or (= temp___is_init_139 true) (<= 1 12)) (in_range5 temp___expr_142)))
(define-fun dynamic_invariant9 ((temp___expr_148 Int) (temp___is_init_145 Bool) (temp___skip_constant_146 Bool) (temp___do_toplevel_147 Bool)) Bool (=> (or (= temp___is_init_145 true) (<= 1 31)) (in_range6 temp___expr_148)))
(define-fun dynamic_invariant10 ((temp___expr_154 Int) (temp___is_init_151 Bool) (temp___skip_constant_152 Bool) (temp___do_toplevel_153 Bool)) Bool (=> (or (= temp___is_init_151 true) (<= 0 23)) (in_range7 temp___expr_154)))
(define-fun dynamic_invariant11 ((temp___expr_160 Int) (temp___is_init_157 Bool) (temp___skip_constant_158 Bool) (temp___do_toplevel_159 Bool)) Bool (=> (or (= temp___is_init_157 true) (<= 0 59)) (in_range8 temp___expr_160)))
(define-fun dynamic_invariant12 ((temp___expr_166 Int) (temp___is_init_163 Bool) (temp___skip_constant_164 Bool) (temp___do_toplevel_165 Bool)) Bool (=> (or (= temp___is_init_163 true) (<= 0 59)) (in_range9 temp___expr_166)))
(declare-const description (Array Int character))
(declare-const status Int)
(declare-const event_array (Array Int us_rep3))
(declare-const index Int)
(declare-const temp___397 (Array Int character))
(declare-const temp___3971 t1)
(declare-const temp___398 (Array Int character))
(declare-const temp___3981 t)
(declare-const temp___399 (Array Int character))
(declare-const temp___3991 t)
(declare-const o (Array Int character))
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Bool)
(declare-const temp___401 Int)
(declare-const o8 character)
(declare-const o9 Int)
(declare-const o10 (Array Int character))
(declare-const o11 Int)
(declare-const result Int)
(declare-const status1 Int)
(declare-const result1 (Array Int character))
(declare-const description1 (Array Int character))
(declare-const result2 Int)
(declare-const index1 Int)
(declare-const description2 (Array Int character))
(declare-const status2 Int)
(declare-const index2 Int)
(declare-const j Int)
(declare-const result3 Bool)
(declare-const result4 Int)
(declare-const j1 Int)
(declare-const description3 (Array Int character))
(declare-const j2 Int)
(declare-const result5 Bool)
(declare-const result6 (Array Int character))
(declare-const description4 (Array Int character))
(declare-const result7 Int)
(declare-const j3 Int)
(declare-const description5 (Array Int character))
(declare-const status3 Int)
(declare-const j4 Int)
(declare-const description6 (Array Int character))
(declare-const status4 Int)
(declare-const j5 Int)
(assert (dynamic_property 1 2147483647 (to_rep1 description__first) (to_rep1 description__last)))
(assert (=> (<= 0 3) (in_range10 status)))
(assert (=> (<= 1 64) (in_range12 index)))
(assert (= result status))
(assert (= status1 3))
(assert (= (to_rep1 (first2 (rt1 (temp___390 32 (to_rep1 description__first) (to_rep1 description__last))))) (to_rep1 description__first)))
(assert (= (to_rep1 (last2 (rt1 (temp___390 32 (to_rep1 description__first) (to_rep1 description__last))))) (to_rep1 description__last)))
(assert (= (mk___t1 temp___397 temp___3971) (temp___390 32 (to_rep1 description__first) (to_rep1 description__last))))
(assert (= temp___397 temp___398))
(assert (= (mk (to_rep1 (first2 temp___3971)) (to_rep1 (last2 temp___3971))) temp___3981))
(assert (= (ite (<= (to_rep1 (first temp___3981)) (to_rep1 (last temp___3981))) (+ (- (to_rep1 (last temp___3981)) (to_rep1 (first temp___3981))) 1) 0) (ite (<= (to_rep1 description__first) (to_rep1 description__last)) (+ (- (to_rep1 description__last) (to_rep1 description__first)) 1) 0)))
(assert (= (mk___t temp___399 temp___3991) (mk___t temp___398 temp___3981)))
(assert (= o (slide temp___399 (to_rep1 (first temp___3991)) (to_rep1 description__first))))
(assert (= result1 description))
(assert (= description1 o))
(assert (= result2 index))
(assert (= index1 1))
(assert (and (=> (<= 1 64) (in_range12 index2)) (=> (<= 0 3) (in_range10 status2))))
(assert (= (bool_eq4 (rec__datebook__event_record__date (us_split_fields7 (select event_array index2))) date) true))
(assert (=> (<= (to_rep1 description__first) (to_rep1 description__last)) (= o1 (+ (- (to_rep1 description__last) (to_rep1 description__first)) 1))))
(assert (=> (not (<= (to_rep1 description__first) (to_rep1 description__last))) (= o1 0)))
(assert (and (= o2 o1) (in_range1 o1)))
(assert (= result3 (ite (< o2 (to_rep8 (rec__datebook__event_record__description_size (us_split_fields7 (select event_array index2))))) true false)))
(assert (not (= result3 true)))
(assert (= (to_rep8 (rec__datebook__event_record__description_size (us_split_fields7 (select event_array index2)))) r13b))
(assert (in_range11 r13b))
(assert (= result4 j))
(assert (= j1 1))
(assert (<= 1 j1))
(assert (<= j1 r13b))
(assert (not (<= (to_rep8 (rec__datebook__event_record__description_size (us_split_fields7 (select event_array index2)))) (ite (<= (to_rep1 description__first) (to_rep1 description__last)) (+ (- (to_rep1 description__last) (to_rep1 description__first)) 1) 0))))
(check-sat)
(exit)
