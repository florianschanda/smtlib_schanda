(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort less_than_max 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (less_than_max less_than_max) Bool)
(declare-const dummy less_than_max)
(declare-datatypes () ((less_than_max__ref (mk_less_than_max__ref (less_than_max__content less_than_max)))))
(define-fun less_than_max__ref___projection ((a less_than_max__ref)) less_than_max (less_than_max__content a))
(declare-fun to_rep (less_than_max) Int)
(declare-fun of_rep (Int) less_than_max)
(assert (forall ((x less_than_max)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x less_than_max)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort element 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (element element) Bool)
(declare-const dummy1 element)
(declare-datatypes () ((element__ref (mk_element__ref (element__content element)))))
(define-fun element__ref___projection ((a element__ref)) element (element__content a))
(define-fun dynamic_invariant ((temp___expr_142 Int) (temp___is_init_139 Bool) (temp___skip_constant_140 Bool) (temp___do_toplevel_141 Bool)) Bool (=> (or (= temp___is_init_139 true) (<= 0 2147483647)) (in_range1 temp___expr_142)))
(declare-fun to_rep1 (element) Int)
(declare-fun of_rep1 (Int) element)
(assert (forall ((x element)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x element)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort telement_arrayD1 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (telement_arrayD1 telement_arrayD1) Bool)
(declare-const dummy2 telement_arrayD1)
(declare-datatypes () ((telement_arrayD1__ref (mk_telement_arrayD1__ref (telement_arrayD1__content telement_arrayD1)))))
(define-fun telement_arrayD1__ref___projection ((a telement_arrayD1__ref)) telement_arrayD1 (telement_arrayD1__content a))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int element))))))
(declare-fun slide ((Array Int element) Int Int) (Array Int element))
(assert (forall ((a (Array Int element))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int element))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int element) Int Int (Array Int element) Int Int) (Array Int element))
(assert (forall ((a (Array Int element)) (b (Array Int element))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (element Int) (Array Int element))
(assert (forall ((v element)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int element)) (a__first Int) (a__last Int) (b (Array Int element)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep1 (select a temp___idx_132)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int element)) (b (Array Int element))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep1 (select a temp___idx_132)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int element) Int Int (Array Int element) Int Int) Int)
(assert (forall ((a (Array Int element)) (b (Array Int element))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int element)) (b (Array Int element))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int element)) (b (Array Int element))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-const dummy3 (Array Int element))
(declare-const value__size Int)
(declare-fun object__size ((Array Int element)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int element)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int element)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int element))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment a))))
(declare-fun user_eq3 ((Array Int element) (Array Int element)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__stackp__stack_root__content (Array Int element)) (rec__stackp__stack_root__length less_than_max) (rec__ext__ us_private)))))
(define-fun us_split_fields_Content__projection ((a us_split_fields)) (Array Int element) (rec__stackp__stack_root__content a))
(define-fun us_split_fields_Length__projection ((a us_split_fields)) less_than_max (rec__stackp__stack_root__length a))
(define-fun us_split_fields___projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___2__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq1 ((a us_rep) (b us_rep)) Bool (ite (and (= (bool_eq (rec__stackp__stack_root__content (us_split_fields1 a)) 1 100 (rec__stackp__stack_root__content (us_split_fields1 b)) 1 100) true) (= (to_rep (rec__stackp__stack_root__length (us_split_fields1 a))) (to_rep (rec__stackp__stack_root__length (us_split_fields1 b))))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const stackp__stack_root__content__first__bit Int)
(declare-const stackp__stack_root__content__last__bit Int)
(declare-const stackp__stack_root__content__position Int)
(assert (<= 0 stackp__stack_root__content__first__bit))
(assert (< stackp__stack_root__content__first__bit stackp__stack_root__content__last__bit))
(assert (<= 0 stackp__stack_root__content__position))
(declare-const stackp__stack_root__length__first__bit Int)
(declare-const stackp__stack_root__length__last__bit Int)
(declare-const stackp__stack_root__length__position Int)
(assert (<= 0 stackp__stack_root__length__first__bit))
(assert (< stackp__stack_root__length__first__bit stackp__stack_root__length__last__bit))
(assert (<= 0 stackp__stack_root__length__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((stack_root__ref (mk_stack_root__ref (stack_root__content us_rep)))))
(define-fun stack_root__ref___projection ((a stack_root__ref)) us_rep (stack_root__content a))
(declare-sort integer 0)
(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq6 (positive positive) Bool)
(declare-const dummy6 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-fun to_rep2 (integer) Int)
(declare-fun of_rep2 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x integer)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (in_range4 low) (in_range4 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int element)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int element) (elts a))
(define-fun of_array ((a (Array Int element)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep2 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int element)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int element)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int element)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int element))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq2 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep2 (first (rt x))) (to_rep2 (last (rt x))) (elts y) (to_rep2 (first (rt y))) (to_rep2 (last (rt y)))))
(declare-fun user_eq7 (us_t us_t) Bool)
(declare-const dummy7 us_t)
(declare-datatypes () ((model____ref (mk_model____ref (model____content us_t)))))
(define-fun model____ref___projection ((a model____ref)) us_t (model____content a))
(declare-fun is_empty (us_rep) Bool)
(declare-fun is_empty__function_guard (Bool us_rep) Bool)
(declare-sort positive_less_than_max 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq8 (positive_less_than_max positive_less_than_max) Bool)
(declare-const dummy8 positive_less_than_max)
(declare-datatypes () ((positive_less_than_max__ref (mk_positive_less_than_max__ref (positive_less_than_max__content positive_less_than_max)))))
(define-fun positive_less_than_max__ref___projection ((a positive_less_than_max__ref)) positive_less_than_max (positive_less_than_max__content a))
(declare-fun to_rep3 (positive_less_than_max) Int)
(declare-fun of_rep3 (Int) positive_less_than_max)
(assert (forall ((x positive_less_than_max)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x positive_less_than_max)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__stackp__buffer__first positive_less_than_max) (rec__stackp__stack_root__content1 (Array Int element)) (rec__stackp__stack_root__length1 less_than_max) (rec__ext__1 us_private)))))
(define-fun us_split_fields_First__projection ((a us_split_fields2)) positive_less_than_max (rec__stackp__buffer__first a))
(define-fun us_split_fields_Content__2__projection ((a us_split_fields2)) (Array Int element) (rec__stackp__stack_root__content1 a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields2)) less_than_max (rec__stackp__stack_root__length1 a))
(define-fun us_split_fields___2__projection ((a us_split_fields2)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2) (attr__tag1 Int)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___4__projection ((a us_rep1)) Int (attr__tag1 a))
(declare-fun hide_ext__ (positive_less_than_max us_private) us_private)
(declare-fun extract__first (us_private) positive_less_than_max)
(assert (forall ((first2 positive_less_than_max)) (forall ((rec__ext__2 us_private)) (= (extract__first (hide_ext__ first2 rec__ext__2)) first2))))
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (mk___split_fields (rec__stackp__stack_root__content1 (us_split_fields3 a)) (rec__stackp__stack_root__length1 (us_split_fields3 a)) (hide_ext__ (rec__stackp__buffer__first (us_split_fields3 a)) (rec__ext__1 (us_split_fields3 a)))) (attr__tag1 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (mk___split_fields1 (extract__first (rec__ext__ (us_split_fields1 r))) (rec__stackp__stack_root__content (us_split_fields1 r)) (rec__stackp__stack_root__length (us_split_fields1 r)) (extract__ext__ (rec__ext__ (us_split_fields1 r)))) (attr__tag r)))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (= (to_rep3 (rec__stackp__buffer__first (us_split_fields3 a))) (to_rep3 (rec__stackp__buffer__first (us_split_fields3 b)))) (= (bool_eq (rec__stackp__stack_root__content1 (us_split_fields3 a)) 1 100 (rec__stackp__stack_root__content1 (us_split_fields3 b)) 1 100) true)) (= (to_rep (rec__stackp__stack_root__length1 (us_split_fields3 a))) (to_rep (rec__stackp__stack_root__length1 (us_split_fields3 b))))) true false))
(declare-const us_tag1 Int)
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const stackp__buffer__first__first__bit Int)
(declare-const stackp__buffer__first__last__bit Int)
(declare-const stackp__buffer__first__position Int)
(assert (<= 0 stackp__buffer__first__first__bit))
(assert (< stackp__buffer__first__first__bit stackp__buffer__first__last__bit))
(assert (<= 0 stackp__buffer__first__position))
(declare-const stackp__stack_root__content__first__bit1 Int)
(declare-const stackp__stack_root__content__last__bit1 Int)
(declare-const stackp__stack_root__content__position1 Int)
(assert (<= 0 stackp__stack_root__content__first__bit1))
(assert (< stackp__stack_root__content__first__bit1 stackp__stack_root__content__last__bit1))
(assert (<= 0 stackp__stack_root__content__position1))
(declare-const stackp__stack_root__length__first__bit1 Int)
(declare-const stackp__stack_root__length__last__bit1 Int)
(declare-const stackp__stack_root__length__position1 Int)
(assert (<= 0 stackp__stack_root__length__first__bit1))
(assert (< stackp__stack_root__length__first__bit1 stackp__stack_root__length__last__bit1))
(assert (<= 0 stackp__stack_root__length__position1))
(declare-fun user_eq9 (us_rep1 us_rep1) Bool)
(declare-const dummy9 us_rep1)
(declare-datatypes () ((buffer__ref (mk_buffer__ref (buffer__content us_rep1)))))
(define-fun buffer__ref___projection ((a buffer__ref)) us_rep1 (buffer__content a))
(declare-fun size (us_rep) Int)
(declare-fun size__function_guard (Int us_rep) Bool)
(define-fun default_initial_assumption ((temp___expr_361 us_rep1) (temp___skip_top_level_362 Bool)) Bool (and (and (= (attr__tag1 temp___expr_361) us_tag1) (and (= (to_rep3 (rec__stackp__buffer__first (us_split_fields3 temp___expr_361))) 1) (= (to_rep (rec__stackp__stack_root__length1 (us_split_fields3 temp___expr_361))) 0))) (=> (not (= temp___skip_top_level_362 true)) (= (size (to_base temp___expr_361)) 0))))
(declare-fun get_model__3 (us_rep1) us_t)
(declare-fun get_model__3__function_guard (us_t us_rep1) Bool)
(declare-fun get_model__31 (Int us_rep1) us_t)
(declare-fun get_model__3__function_guard1 (us_t Int us_rep1) Bool)
(declare-const s__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort t23s 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq10 (t23s t23s) Bool)
(declare-const dummy10 t23s)
(declare-datatypes () ((t23s__ref (mk_t23s__ref (t23s__content t23s)))))
(define-fun t23s__ref___projection ((a t23s__ref)) t23s (t23s__content a))
(define-fun dynamic_invariant1 ((temp___expr_136 Int) (temp___is_init_133 Bool) (temp___skip_constant_134 Bool) (temp___do_toplevel_135 Bool)) Bool (=> (or (= temp___is_init_133 true) (<= 0 100)) (in_range temp___expr_136)))
(declare-fun wraps_around (us_rep1) Bool)
(declare-fun wraps_around__function_guard (Bool us_rep1) Bool)
(declare-fun wraps_around1 (Int us_rep1) Bool)
(declare-fun wraps_around__function_guard1 (Bool Int us_rep1) Bool)
(declare-fun last2 (us_rep1) Int)
(declare-fun last__function_guard (Int us_rep1) Bool)
(declare-fun last3 (Int us_rep1) Int)
(declare-fun last__function_guard1 (Int Int us_rep1) Bool)
(assert (forall ((s us_rep1)) (! (dynamic_invariant1 (last2 s) true false true) :pattern ((last2 s)))))
(assert (forall ((attr__tag2 Int)) (forall ((s us_rep1)) (! (dynamic_invariant1 (last3 attr__tag2 s) true false true) :pattern ((last3 attr__tag2 s))))))
(assert (forall ((s us_rep1)) (! (= (last2 s) (last3 us_tag1 s)) :pattern ((last3 us_tag1 s)))))
(assert (forall ((s us_rep1)) (! (= (last2 s) (ite (not (= (wraps_around s) true)) (- (+ (to_rep3 (rec__stackp__buffer__first (us_split_fields3 s))) (to_rep (rec__stackp__stack_root__length1 (us_split_fields3 s)))) 1) (- (- (+ (to_rep3 (rec__stackp__buffer__first (us_split_fields3 s))) (to_rep (rec__stackp__stack_root__length1 (us_split_fields3 s)))) 1) 100))) :pattern ((last2 s)))))
(declare-fun temp___222 (Int) (Array Int element))
(assert (forall ((temp___224 Int)) (= (select (temp___222 temp___224) 1) (of_rep1 temp___224))))
(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range4 temp___expr_39)))
(define-fun dynamic_invariant3 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range3 temp___expr_15)))
(define-fun dynamic_invariant4 ((temp___expr_168 us_t) (temp___is_init_165 Bool) (temp___skip_constant_166 Bool) (temp___do_toplevel_167 Bool)) Bool (=> (not (= temp___skip_constant_166 true)) (dynamic_property 1 2147483647 (first1 temp___expr_168) (last1 temp___expr_168))))
(define-fun default_initial_assumption1 ((temp___expr_159 us_rep) (temp___skip_top_level_160 Bool)) Bool (and (and (= (attr__tag temp___expr_159) us_tag) (= (to_rep (rec__stackp__stack_root__length (us_split_fields1 temp___expr_159))) 0)) (=> (not (= temp___skip_top_level_160 true)) (= (size temp___expr_159) 0))))
(assert (forall ((s us_rep)) (! (dynamic_invariant1 (size s) true false true) :pattern ((size s)))))
(assert (forall ((s us_rep)) (! (= (size s) (to_rep (rec__stackp__stack_root__length (us_split_fields1 s)))) :pattern ((size s)))))
(assert true)
(assert (forall ((s us_rep)) (! (= (= (is_empty s) true) (= (size s) 0)) :pattern ((is_empty s)))))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last4 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep2 (first2 (mk1 f l))) f) (= (to_rep2 (last4 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int element)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int element) (elts1 a))
(define-fun of_array1 ((a (Array Int element)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep2 (first2 (rt1 a))))
(define-fun last5 ((a us_t1)) Int (to_rep2 (last4 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last5 a)) (+ (- (last5 a) (first3 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int element)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int element)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int element)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int element))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq4 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep2 (first2 (rt1 x))) (to_rep2 (last4 (rt1 x))) (elts1 y) (to_rep2 (first2 (rt1 y))) (to_rep2 (last4 (rt1 y)))))
(declare-fun user_eq11 (us_t1 us_t1) Bool)
(declare-const dummy11 us_t1)
(declare-datatypes () ((telement_arrayB__ref (mk_telement_arrayB__ref (telement_arrayB__content us_t1)))))
(define-fun telement_arrayB__ref___projection ((a telement_arrayB__ref)) us_t1 (telement_arrayB__content a))
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq12 (integer integer) Bool)
(declare-const dummy12 integer)
(declare-datatypes () ((t82s__ref (mk_t82s__ref (t82s__content integer)))))
(define-fun t82s__ref___projection ((a t82s__ref)) integer (t82s__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last6 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep2 (first4 (mk2 f l))) f) (= (to_rep2 (last6 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int element)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int element) (elts2 a))
(define-fun of_array2 ((a (Array Int element)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep2 (first4 (rt2 a))))
(define-fun last7 ((a us_t2)) Int (to_rep2 (last6 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last7 a)) (+ (- (last7 a) (first5 a)) 1) 0))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int element)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int element)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int element)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int element))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment5 a))))
(define-fun bool_eq5 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep2 (first4 (rt2 x))) (to_rep2 (last6 (rt2 x))) (elts2 y) (to_rep2 (first4 (rt2 y))) (to_rep2 (last6 (rt2 y)))))
(declare-fun user_eq13 (us_t2 us_t2) Bool)
(declare-const dummy13 us_t2)
(declare-datatypes () ((t83s__ref (mk_t83s__ref (t83s__content us_t2)))))
(define-fun t83s__ref___projection ((a t83s__ref)) us_t2 (t83s__content a))
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq14 (integer integer) Bool)
(declare-const dummy14 integer)
(declare-datatypes () ((t85s__ref (mk_t85s__ref (t85s__content integer)))))
(define-fun t85s__ref___projection ((a t85s__ref)) integer (t85s__content a))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last8 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep2 (first6 (mk3 f l))) f) (= (to_rep2 (last8 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (dynamic_property4 range_first range_last low) (dynamic_property4 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int element)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int element) (elts3 a))
(define-fun of_array3 ((a (Array Int element)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep2 (first6 (rt3 a))))
(define-fun last9 ((a us_t3)) Int (to_rep2 (last8 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last9 a)) (+ (- (last9 a) (first7 a)) 1) 0))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int element)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int element)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int element)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int element))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment6 a))))
(define-fun bool_eq6 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep2 (first6 (rt3 x))) (to_rep2 (last8 (rt3 x))) (elts3 y) (to_rep2 (first6 (rt3 y))) (to_rep2 (last8 (rt3 y)))))
(declare-fun user_eq15 (us_t3 us_t3) Bool)
(declare-const dummy15 us_t3)
(declare-datatypes () ((t86s__ref (mk_t86s__ref (t86s__content us_t3)))))
(define-fun t86s__ref___projection ((a t86s__ref)) us_t3 (t86s__content a))
(define-fun dynamic_property6 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq16 (integer integer) Bool)
(declare-const dummy16 integer)
(declare-datatypes () ((t88s__ref (mk_t88s__ref (t88s__content integer)))))
(define-fun t88s__ref___projection ((a t88s__ref)) integer (t88s__content a))
(declare-sort t4 0)
(declare-fun first8 (t4) integer)
(declare-fun last10 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep2 (first8 (mk4 f l))) f) (= (to_rep2 (last10 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (dynamic_property6 range_first range_last low) (dynamic_property6 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int element)) (rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int element) (elts4 a))
(define-fun of_array4 ((a (Array Int element)) (f Int) (l Int)) us_t4 (mk___t4 a (mk4 f l)))
(define-fun first9 ((a us_t4)) Int (to_rep2 (first8 (rt4 a))))
(define-fun last11 ((a us_t4)) Int (to_rep2 (last10 (rt4 a))))
(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last11 a)) (+ (- (last11 a) (first9 a)) 1) 0))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int element)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int element)) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int element)) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int element))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment7 a))))
(define-fun bool_eq7 ((x us_t4) (y us_t4)) Bool (bool_eq (elts4 x) (to_rep2 (first8 (rt4 x))) (to_rep2 (last10 (rt4 x))) (elts4 y) (to_rep2 (first8 (rt4 y))) (to_rep2 (last10 (rt4 y)))))
(declare-fun user_eq17 (us_t4 us_t4) Bool)
(declare-const dummy17 us_t4)
(declare-datatypes () ((t89s__ref (mk_t89s__ref (t89s__content us_t4)))))
(define-fun t89s__ref___projection ((a t89s__ref)) us_t4 (t89s__content a))
(assert (forall ((s us_rep1)) (! (let ((result (get_model__3 s))) (and (= (length result) (size (to_base s))) (dynamic_invariant4 result true false true))) :pattern ((get_model__3 s)))))
(assert (forall ((attr__tag2 Int)) (forall ((s us_rep1)) (! (let ((result (get_model__31 attr__tag2 s))) (and (= (length result) (size (to_base s))) (dynamic_invariant4 result true false true))) :pattern ((get_model__31 attr__tag2 s))))))
(assert (forall ((s us_rep1)) (! (= (get_model__3 s) (get_model__31 us_tag1 s)) :pattern ((get_model__31 us_tag1 s)))))
(assert (forall ((s us_rep1)) (! (= (get_model__3 s) (ite (= (wraps_around s) true) (let ((stackp__get_model__3__R84s (last2 s))) (let ((temp___394 (let ((temp___393 (let ((temp___390 1)) (let ((temp___391 (rec__stackp__stack_root__content1 (us_split_fields3 s)))) (of_array3 temp___391 temp___390 stackp__get_model__3__R84s))))) (let ((temp___392 (let ((temp___388 100)) (let ((temp___387 (to_rep3 (rec__stackp__buffer__first (us_split_fields3 s))))) (let ((temp___389 (rec__stackp__stack_root__content1 (us_split_fields3 s)))) (of_array2 temp___389 temp___387 temp___388)))))) (ite (= (length2 temp___392) 0) (of_array1 (to_array3 temp___393) (first7 temp___393) (last9 temp___393)) (of_array1 (slide (concat1 (to_array2 temp___392) (first5 temp___392) (last7 temp___392) (to_array3 temp___393) (first7 temp___393) (last9 temp___393)) (first5 temp___392) 1) 1 (- (+ 1 (+ (ite (<= (first5 temp___392) (last7 temp___392)) (+ (- (last7 temp___392) (first5 temp___392)) 1) 0) (ite (<= (first7 temp___393) (last9 temp___393)) (+ (- (last9 temp___393) (first7 temp___393)) 1) 0))) 1))))))) (of_array (to_array1 temp___394) (first3 temp___394) (last5 temp___394)))) (let ((stackp__get_model__3__R87s (last2 s))) (let ((temp___397 (let ((temp___395 (to_rep3 (rec__stackp__buffer__first (us_split_fields3 s))))) (let ((temp___396 (rec__stackp__stack_root__content1 (us_split_fields3 s)))) (of_array4 temp___396 temp___395 stackp__get_model__3__R87s))))) (of_array (to_array4 temp___397) (first9 temp___397) (last11 temp___397)))))) :pattern ((get_model__3 s)))))
(define-fun dynamic_invariant5 ((temp___expr_353 Int) (temp___is_init_350 Bool) (temp___skip_constant_351 Bool) (temp___do_toplevel_352 Bool)) Bool (=> (or (= temp___is_init_350 true) (<= 1 100)) (in_range5 temp___expr_353)))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range7 ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Bool)
(assert true)
(assert true)
(assert (forall ((s us_rep1)) (! (= (to_int1 (wraps_around s)) (to_int1 (wraps_around1 us_tag1 s))) :pattern ((wraps_around1 us_tag1 s)))))
(assert (forall ((s us_rep1)) (! (= (= (wraps_around s) true) (< 100 (- (+ (to_rep3 (rec__stackp__buffer__first (us_split_fields3 s))) (to_rep (rec__stackp__stack_root__length1 (us_split_fields3 s)))) 1))) :pattern ((wraps_around s)))))
(declare-const s__split_fields positive_less_than_max)
(declare-const s__split_fields1 (Array Int element))
(declare-const s__split_fields2 less_than_max)
(declare-const s__split_fields3 us_private)
(declare-const e Int)
(declare-const temp___575 Int)
(declare-const o Int)
(declare-const o1 element)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 less_than_max)
(declare-const o5 positive_less_than_max)
(declare-const o6 (Array Int element))
(declare-const o7 less_than_max)
(declare-const o8 us_private)
(declare-const temp___577 positive_less_than_max)
(declare-const temp___5771 (Array Int element))
(declare-const temp___5772 less_than_max)
(declare-const temp___5773 us_private)
(declare-const temp___5774 Int)
(declare-const result Int)
(declare-const e1 Int)
(declare-const result1 positive_less_than_max)
(declare-const result2 (Array Int element))
(declare-const result3 less_than_max)
(declare-const result4 us_private)
(declare-const s__split_fields4 positive_less_than_max)
(declare-const s__split_fields5 (Array Int element))
(declare-const s__split_fields6 less_than_max)
(declare-const s__split_fields7 us_private)
(declare-const s__split_fields8 positive_less_than_max)
(declare-const s__split_fields9 (Array Int element))
(declare-const s__split_fields10 less_than_max)
(declare-const s__split_fields11 us_private)
(declare-const e2 Int)
(declare-const s__split_fields12 positive_less_than_max)
(declare-const s__split_fields13 (Array Int element))
(declare-const s__split_fields14 less_than_max)
(declare-const s__split_fields15 us_private)
(declare-const e3 Int)
(assert (=> (<= 0 2147483647) (in_range1 e)))
(assert (not (= (is_empty (mk___rep (mk___split_fields s__split_fields1 s__split_fields2 (hide_ext__ s__split_fields s__split_fields3)) s__attr__tag)) true)))
(assert (and (= temp___575 (last2 (mk___rep1 (mk___split_fields1 s__split_fields s__split_fields1 s__split_fields2 s__split_fields3) s__attr__tag))) (and (in_range temp___575) (= temp___575 (ite (not (= (wraps_around (mk___rep1 (mk___split_fields1 s__split_fields s__split_fields1 s__split_fields2 s__split_fields3) s__attr__tag)) true)) (- (+ (to_rep3 s__split_fields) (to_rep s__split_fields2)) 1) (- (- (+ (to_rep3 s__split_fields) (to_rep s__split_fields2)) 1) 100))))))
(assert (not (<= 1 temp___575)))
(check-sat)
(exit)
