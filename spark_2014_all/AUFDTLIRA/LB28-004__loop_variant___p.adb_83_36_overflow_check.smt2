(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-const a Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const b Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a1 (Array Int integer))) (forall ((first Int)) (! (= (slide a1 first first) a1) :pattern ((slide a1 first first))))))
(assert (forall ((a1 (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a1 old_first new_first) i) (select a1 (- i (- new_first old_first)))) :pattern ((select (slide a1 old_first new_first) i))))))))
(define-fun bool_eq ((a1 (Array Int integer)) (a__first Int) (a__last Int) (b1 (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a1 temp___idx_154)) (to_rep (select b1 (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a1 (Array Int integer)) (b1 (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b1 b__first b__last a1 a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a1 temp___idx_154)) (to_rep (select b1 (+ (- b__first a__first) temp___idx_154)))))))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (integer integer) Bool)
(declare-const dummy1 integer)
(declare-datatypes () ((ttD1__ref (mk_ttD1__ref (ttD1__content integer)))))
(define-fun ttD1__ref___projection ((a1 ttD1__ref)) integer (ttD1__content a1))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a1 us_t)) (Array Int integer) (elts a1))
(define-fun of_array ((a1 (Array Int integer)) (f Int) (l Int)) us_t (mk___t a1 (mk f l)))
(define-fun first1 ((a1 us_t)) Int (to_rep (first (rt a1))))
(define-fun last1 ((a1 us_t)) Int (to_rep (last (rt a1))))
(define-fun length ((a1 us_t)) Int (ite (<= (first1 a1) (last1 a1)) (+ (- (last1 a1) (first1 a1)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__size a1))))
(assert (<= 0 value__component__size))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__component__size a1))))
(assert (<= 0 value__alignment))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__alignment a1))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_t)))))
(define-fun t__ref___projection ((a1 t__ref)) us_t (t__content a1))
(define-fun dynamic_invariant1 ((temp___expr_159 us_t) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (not (= temp___skip_constant_156 true)) (and (dynamic_property1 a b (first1 temp___expr_159) (last1 temp___expr_159)) (and (= (first1 temp___expr_159) a) (= (last1 temp___expr_159) b)))))
(declare-const tab__first integer)
(declare-const tab__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const rliteral integer)
(assert (= (integerqtint rliteral) 0))
(declare-const tab (Array Int integer))
(declare-const j Int)
(declare-const k Int)
(declare-const temp___170 Int)
(declare-const temp___168 (Array Int integer))
(declare-const temp___171 Int)
(declare-const o integer)
(declare-const o1 Int)
(declare-const o2 (Array Int integer))
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const temp___177 Int)
(declare-const temp___176 Int)
(declare-const temp___174 (Array Int integer))
(declare-const temp___179 Int)
(declare-const temp___178 Int)
(declare-const temp___172 Int)
(declare-const o5 Int)
(declare-const o6 (Array Int integer))
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Bool)
(declare-const temp___184 Int)
(declare-const temp___183 Int)
(declare-const temp___181 (Array Int integer))
(declare-const temp___186 Int)
(declare-const temp___185 Int)
(declare-const o11 integer)
(declare-const o12 Int)
(declare-const o13 (Array Int integer))
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const temp___190 Int)
(declare-const temp___188 (Array Int integer))
(declare-const temp___191 Int)
(declare-const o16 integer)
(declare-const o17 Int)
(declare-const o18 (Array Int integer))
(declare-const o19 Int)
(declare-const temp___195 Int)
(declare-const temp___193 (Array Int integer))
(declare-const temp___196 Int)
(declare-const o20 integer)
(declare-const o21 Int)
(declare-const o22 (Array Int integer))
(declare-const o23 Int)
(declare-const temp___201 Int)
(declare-const temp___200 Int)
(declare-const temp___198 (Array Int integer))
(declare-const temp___203 Int)
(declare-const temp___202 Int)
(declare-const o24 integer)
(declare-const o25 Int)
(declare-const o26 (Array Int integer))
(declare-const o27 Int)
(declare-const o28 Int)
(declare-const o29 integer)
(declare-const o30 Int)
(declare-const o31 (Array Int integer))
(declare-const o32 Int)
(declare-const o33 Int)
(declare-const tab1 (Array Int integer))
(declare-const result Int)
(declare-const j1 Int)
(declare-const result1 (Array Int integer))
(declare-const tab2 (Array Int integer))
(declare-const result2 Int)
(declare-const j2 Int)
(declare-const tab3 (Array Int integer))
(declare-const j3 Int)
(declare-const temp___1711 Int)
(declare-const result3 Int)
(declare-const temp___1712 Int)
(declare-const tab4 map__ref)
(declare-const j4 int__ref)
(declare-const tab5 (Array Int integer))
(declare-const j5 Int)
(declare-const tab6 map__ref)
(declare-const j6 int__ref)
(declare-const tab7 (Array Int integer))
(declare-const j7 Int)
(declare-const result4 int__ref)
(declare-const j8 Int)
(declare-const result5 int__ref)
(declare-const k1 Int)
(declare-const result6 Bool)
(declare-const result7 map__ref)
(declare-const tab8 (Array Int integer))
(declare-const result8 int__ref)
(declare-const j9 Int)
(declare-const result9 int__ref)
(declare-const k2 Int)
(declare-const j10 int__ref)
(declare-const k3 int__ref)
(declare-const j11 Int)
(declare-const k4 Int)
(declare-const tab9 (Array Int integer))
(declare-const j12 Int)
(declare-const k5 Int)
(declare-const temp___1791 Int)
(declare-const temp___1781 Int)
(declare-const result10 int__ref)
(declare-const temp___1792 Int)
(declare-const result11 int__ref)
(declare-const temp___1782 Int)
(declare-const result12 Bool)
(declare-const tab10 map__ref)
(declare-const j13 int__ref)
(declare-const k6 int__ref)
(declare-const tab11 (Array Int integer))
(declare-const j14 Int)
(declare-const k7 Int)
(declare-const tab12 map__ref)
(declare-const j15 int__ref)
(declare-const k8 int__ref)
(declare-const tab13 (Array Int integer))
(declare-const j16 Int)
(declare-const k9 Int)
(declare-const result13 int__ref)
(declare-const j17 Int)
(declare-const result14 int__ref)
(declare-const k10 Int)
(declare-const result15 map__ref)
(declare-const tab14 (Array Int integer))
(declare-const result16 int__ref)
(declare-const j18 Int)
(declare-const result17 int__ref)
(declare-const k11 Int)
(declare-const tab15 (Array Int integer))
(declare-const j19 Int)
(declare-const k12 Int)
(declare-const temp___1861 Int)
(declare-const temp___1851 Int)
(declare-const result18 int__ref)
(declare-const temp___1852 Int)
(declare-const result19 int__ref)
(declare-const temp___1862 Int)
(declare-const tab16 map__ref)
(declare-const j20 int__ref)
(declare-const k13 int__ref)
(declare-const tab17 (Array Int integer))
(declare-const j21 Int)
(declare-const k14 Int)
(declare-const tab18 map__ref)
(declare-const j22 int__ref)
(declare-const k15 int__ref)
(declare-const tab19 (Array Int integer))
(declare-const j23 Int)
(declare-const k16 Int)
(declare-const result20 int__ref)
(declare-const j24 Int)
(declare-const result21 map__ref)
(declare-const tab20 (Array Int integer))
(declare-const result22 int__ref)
(declare-const j25 Int)
(declare-const tab21 (Array Int integer))
(declare-const j26 Int)
(declare-const temp___1911 Int)
(declare-const result23 int__ref)
(declare-const temp___1912 Int)
(declare-const tab22 map__ref)
(declare-const j27 int__ref)
(declare-const tab23 (Array Int integer))
(declare-const j28 Int)
(declare-const tab24 map__ref)
(declare-const j29 int__ref)
(declare-const tab25 (Array Int integer))
(declare-const j30 Int)
(declare-const result24 int__ref)
(declare-const j31 Int)
(declare-const result25 map__ref)
(declare-const tab26 (Array Int integer))
(declare-const result26 int__ref)
(declare-const j32 Int)
(declare-const tab27 (Array Int integer))
(declare-const j33 Int)
(declare-const temp___1961 Int)
(declare-const result27 int__ref)
(declare-const temp___1962 Int)
(declare-const tab28 map__ref)
(declare-const j34 int__ref)
(declare-const tab29 (Array Int integer))
(declare-const j35 Int)
(declare-const tab30 map__ref)
(declare-const j36 int__ref)
(declare-const tab31 (Array Int integer))
(declare-const j37 Int)
(declare-const result28 int__ref)
(declare-const j38 Int)
(declare-const result29 int__ref)
(declare-const k17 Int)
(declare-const result30 map__ref)
(declare-const tab32 (Array Int integer))
(declare-const result31 int__ref)
(declare-const j39 Int)
(declare-const result32 int__ref)
(declare-const k18 Int)
(declare-const tab33 (Array Int integer))
(declare-const j40 Int)
(declare-const k19 Int)
(declare-const temp___2031 Int)
(declare-const temp___2021 Int)
(declare-const result33 int__ref)
(declare-const temp___2022 Int)
(declare-const result34 int__ref)
(declare-const temp___2032 Int)
(declare-const tab34 map__ref)
(declare-const j41 int__ref)
(declare-const k20 int__ref)
(declare-const tab35 (Array Int integer))
(declare-const j42 Int)
(declare-const k21 Int)
(declare-const tab36 map__ref)
(declare-const j43 int__ref)
(declare-const k22 int__ref)
(declare-const tab37 (Array Int integer))
(declare-const j44 Int)
(declare-const k23 Int)
(declare-const result35 int__ref)
(declare-const j45 Int)
(declare-const result36 int__ref)
(declare-const k24 Int)
(declare-const result37 map__ref)
(declare-const tab38 (Array Int integer))
(declare-const result38 int__ref)
(declare-const j46 Int)
(declare-const result39 int__ref)
(declare-const k25 Int)
(declare-const tab39 (Array Int integer))
(declare-const j47 Int)
(declare-const k26 Int)
(define-fun tab40 () map__ref (mk_map__ref tab))
(assert (in_range1 a))
(assert (in_range1 b))
(assert (and (dynamic_property1 a b (to_rep tab__first) (to_rep tab__last)) (and (= (to_rep tab__first) a) (= (to_rep tab__last) b))))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 j)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 k)))
(assert (= result j))
(assert (= j1 a))
(assert (=> (<= j1 b) (= temp___170 j1)))
(assert (=> (<= j1 b) (= temp___168 tab)))
(assert (=> (<= j1 b) (= 0 temp___171)))
(assert (=> (<= j1 b) (= (to_rep o) j1)))
(assert (=> (<= j1 b) (and (<= (to_rep tab__first) j1) (<= j1 (to_rep tab__last)))))
(assert (=> (<= j1 b) (= o1 j1)))
(assert (=> (<= j1 b) (= o2 (store tab o1 o))))
(assert (=> (<= j1 b) (= (mk_map__ref result1) tab40)))
(assert (=> (<= j1 b) (= tab2 o2)))
(assert (=> (<= j1 b) (and (= o3 (+ j1 1)) (in_range1 (+ j1 1)))))
(assert (=> (<= j1 b) (= j1 result2)))
(assert (=> (<= j1 b) (= j2 o3)))
(assert (=> (<= j1 b) (=> (<= (- 2147483648) 2147483647) (in_range1 j3))))
(assert (=> (<= j1 b) (= temp___1711 result3)))
(assert (=> (<= j1 b) (= temp___1712 j3)))
(assert (=> (<= j1 b) (not (<= j3 b))))
(assert (=> (<= j1 b) (= j4 (mk_int__ref j3))))
(assert (=> (<= j1 b) (= tab4 (mk_map__ref tab3))))
(assert (=> (<= j1 b) (= j5 j3)))
(assert (=> (<= j1 b) (= tab5 tab3)))
(assert (=> (<= j1 b) (= j6 j4)))
(assert (=> (<= j1 b) (= tab6 tab4)))
(assert (=> (<= j1 b) (= j7 j5)))
(assert (=> (<= j1 b) (= tab7 tab5)))
(assert (=> (not (<= j1 b)) (= j6 (mk_int__ref j1))))
(assert (=> (not (<= j1 b)) (= tab6 tab40)))
(assert (=> (not (<= j1 b)) (= j7 j1)))
(assert (=> (not (<= j1 b)) (= tab7 tab1)))
(assert (= result4 j6))
(assert (= j8 a))
(assert (= result5 (mk_int__ref k)))
(assert (= k1 0))
(assert (and (= o4 (+ j8 k1)) (in_range1 (+ j8 k1))))
(assert (= result6 (ite (<= o4 b) true false)))
(assert (=> (= result6 true) (= temp___177 k1)))
(assert (=> (= result6 true) (= temp___176 j8)))
(assert (=> (= result6 true) (= temp___174 (map__content tab6))))
(assert (=> (= result6 true) (= 0 temp___179)))
(assert (=> (= result6 true) (= 0 temp___178)))
(assert (=> (= result6 true) (and (= temp___172 (+ j8 k1)) (in_range1 (+ j8 k1)))))
(assert (=> (= result6 true) (and (<= (to_rep tab__first) temp___172) (<= temp___172 (to_rep tab__last)))))
(assert (=> (= result6 true) (= o5 temp___172)))
(assert (=> (= result6 true) (= o6 (store (map__content tab6) o5 rliteral))))
(assert (=> (= result6 true) (= result7 tab6)))
(assert (=> (= result6 true) (= tab8 o6)))
(assert (=> (= result6 true) (=> (< j8 100) (and (= o7 (+ j8 1)) (in_range1 (+ j8 1))))))
(assert (=> (= result6 true) (=> (< j8 100) (= result8 (mk_int__ref j8)))))
(assert (=> (= result6 true) (=> (< j8 100) (= j9 o7))))
(assert (=> (= result6 true) (=> (< j8 100) (= k3 (mk_int__ref k1)))))
(assert (=> (= result6 true) (=> (< j8 100) (= j10 (mk_int__ref j9)))))
(assert (=> (= result6 true) (=> (< j8 100) (= k4 k1))))
(assert (=> (= result6 true) (=> (< j8 100) (= j11 j9))))
(assert (=> (= result6 true) (=> (not (< j8 100)) (and (= o8 (+ k1 1)) (in_range1 (+ k1 1))))))
(assert (=> (= result6 true) (=> (not (< j8 100)) (= result9 (mk_int__ref k1)))))
(assert (=> (= result6 true) (=> (not (< j8 100)) (= k2 o8))))
(assert (=> (= result6 true) (=> (not (< j8 100)) (= k3 (mk_int__ref k2)))))
(assert (=> (= result6 true) (=> (not (< j8 100)) (= j10 (mk_int__ref j8)))))
(assert (=> (= result6 true) (=> (not (< j8 100)) (= k4 k2))))
(assert (=> (= result6 true) (=> (not (< j8 100)) (= j11 j8))))
(assert (=> (= result6 true) (and (=> (<= (- 2147483648) 2147483647) (in_range1 j12)) (=> (<= (- 2147483648) 2147483647) (in_range1 k5)))))
(assert (=> (= result6 true) (= result10 (mk_int__ref temp___1791))))
(assert (=> (= result6 true) (= temp___1792 j12)))
(assert (=> (= result6 true) (= result11 (mk_int__ref temp___1781))))
(assert (=> (= result6 true) (= temp___1782 k5)))
(assert (=> (= result6 true) (and (= o9 (+ j12 k5)) (in_range1 (+ j12 k5)))))
(assert (=> (= result6 true) (= o10 (ite (<= o9 b) true false))))
(assert (=> (= result6 true) (= result12 (ite (not (= o10 true)) true false))))
(assert (=> (= result6 true) (= result12 true)))
(assert (=> (= result6 true) (= k6 (mk_int__ref k5))))
(assert (=> (= result6 true) (= j13 (mk_int__ref j12))))
(assert (=> (= result6 true) (= tab10 (mk_map__ref tab9))))
(assert (=> (= result6 true) (= k7 k5)))
(assert (=> (= result6 true) (= j14 j12)))
(assert (=> (= result6 true) (= tab11 tab9)))
(assert (=> (= result6 true) (= k8 k6)))
(assert (=> (= result6 true) (= j15 j13)))
(assert (=> (= result6 true) (= tab12 tab10)))
(assert (=> (= result6 true) (= k9 k7)))
(assert (=> (= result6 true) (= j16 j14)))
(assert (=> (= result6 true) (= tab13 tab11)))
(assert (=> (not (= result6 true)) (= k8 (mk_int__ref k1))))
(assert (=> (not (= result6 true)) (= j15 (mk_int__ref j8))))
(assert (=> (not (= result6 true)) (= tab12 tab6)))
(assert (=> (not (= result6 true)) (= k9 k1)))
(assert (=> (not (= result6 true)) (= j16 j8)))
(assert (=> (not (= result6 true)) (= tab13 tab7)))
(assert (= result13 j15))
(assert (= j17 a))
(assert (= result14 k8))
(assert (= k10 0))
(assert (=> (<= j17 b) (= temp___184 k10)))
(assert (=> (<= j17 b) (= temp___183 j17)))
(assert (=> (<= j17 b) (= temp___181 (map__content tab12))))
(assert (=> (<= j17 b) (= 0 temp___186)))
(assert (=> (<= j17 b) (= 0 temp___185)))
(assert (=> (<= j17 b) (= (to_rep o11) j17)))
(assert (=> (<= j17 b) (and (<= (to_rep tab__first) j17) (<= j17 (to_rep tab__last)))))
(assert (=> (<= j17 b) (= o12 j17)))
(assert (=> (<= j17 b) (= o13 (store (map__content tab12) o12 o11))))
(assert (=> (<= j17 b) (= result15 tab12)))
(assert (=> (<= j17 b) (= tab14 o13)))
(assert (=> (<= j17 b) (and (= o14 (+ j17 1)) (in_range1 (+ j17 1)))))
(assert (=> (<= j17 b) (= result16 (mk_int__ref j17))))
(assert (=> (<= j17 b) (= j18 o14)))
(assert (=> (<= j17 b) (and (= o15 (+ k10 1)) (in_range1 (+ k10 1)))))
(assert (=> (<= j17 b) (= result17 (mk_int__ref k10))))
(assert (=> (<= j17 b) (= k11 o15)))
(assert (=> (<= j17 b) (and (=> (<= (- 2147483648) 2147483647) (in_range1 j19)) (=> (<= (- 2147483648) 2147483647) (in_range1 k12)))))
(assert (=> (<= j17 b) (= result18 (mk_int__ref temp___1851))))
(assert (=> (<= j17 b) (= temp___1852 j19)))
(assert (=> (<= j17 b) (= result19 (mk_int__ref temp___1861))))
(assert (=> (<= j17 b) (= temp___1862 k12)))
(assert (=> (<= j17 b) (not (<= j19 b))))
(assert (=> (<= j17 b) (= k13 (mk_int__ref k12))))
(assert (=> (<= j17 b) (= j20 (mk_int__ref j19))))
(assert (=> (<= j17 b) (= tab16 (mk_map__ref tab15))))
(assert (=> (<= j17 b) (= k14 k12)))
(assert (=> (<= j17 b) (= j21 j19)))
(assert (=> (<= j17 b) (= tab17 tab15)))
(assert (=> (<= j17 b) (= k15 k13)))
(assert (=> (<= j17 b) (= j22 j20)))
(assert (=> (<= j17 b) (= tab18 tab16)))
(assert (=> (<= j17 b) (= k16 k14)))
(assert (=> (<= j17 b) (= j23 j21)))
(assert (=> (<= j17 b) (= tab19 tab17)))
(assert (=> (not (<= j17 b)) (= k15 (mk_int__ref k10))))
(assert (=> (not (<= j17 b)) (= j22 (mk_int__ref j17))))
(assert (=> (not (<= j17 b)) (= tab18 tab12)))
(assert (=> (not (<= j17 b)) (= k16 k10)))
(assert (=> (not (<= j17 b)) (= j23 j17)))
(assert (=> (not (<= j17 b)) (= tab19 tab13)))
(assert (= result20 j22))
(assert (= j24 a))
(assert (=> (<= j24 b) (= temp___190 j24)))
(assert (=> (<= j24 b) (= temp___188 (map__content tab18))))
(assert (=> (<= j24 b) (= 0 temp___191)))
(assert (=> (<= j24 b) (= (to_rep o16) j24)))
(assert (=> (<= j24 b) (and (<= (to_rep tab__first) j24) (<= j24 (to_rep tab__last)))))
(assert (=> (<= j24 b) (= o17 j24)))
(assert (=> (<= j24 b) (= o18 (store (map__content tab18) o17 o16))))
(assert (=> (<= j24 b) (= result21 tab18)))
(assert (=> (<= j24 b) (= tab20 o18)))
(assert (=> (<= j24 b) (and (= o19 (+ j24 1)) (in_range1 (+ j24 1)))))
(assert (=> (<= j24 b) (= result22 (mk_int__ref j24))))
(assert (=> (<= j24 b) (= j25 o19)))
(assert (=> (<= j24 b) (forall ((l Int)) (=> (and (<= a l) (<= l (- j26 1))) (= (to_rep (select tab21 l)) l)))))
(assert (=> (<= j24 b) (=> (<= (- 2147483648) 2147483647) (in_range1 j26))))
(assert (=> (<= j24 b) (= result23 (mk_int__ref temp___1911))))
(assert (=> (<= j24 b) (= temp___1912 j26)))
(assert (=> (<= j24 b) (not (<= j26 b))))
(assert (=> (<= j24 b) (= j27 (mk_int__ref j26))))
(assert (=> (<= j24 b) (= tab22 (mk_map__ref tab21))))
(assert (=> (<= j24 b) (= j28 j26)))
(assert (=> (<= j24 b) (= tab23 tab21)))
(assert (=> (<= j24 b) (= j29 j27)))
(assert (=> (<= j24 b) (= tab24 tab22)))
(assert (=> (<= j24 b) (= j30 j28)))
(assert (=> (<= j24 b) (= tab25 tab23)))
(assert (=> (not (<= j24 b)) (= j29 (mk_int__ref j24))))
(assert (=> (not (<= j24 b)) (= tab24 tab18)))
(assert (=> (not (<= j24 b)) (= j30 j24)))
(assert (=> (not (<= j24 b)) (= tab25 tab19)))
(assert (= result24 j29))
(assert (= j31 a))
(assert (=> (<= j31 b) (= temp___195 j31)))
(assert (=> (<= j31 b) (= temp___193 (map__content tab24))))
(assert (=> (<= j31 b) (= 0 temp___196)))
(assert (=> (<= j31 b) (= (to_rep o20) j31)))
(assert (=> (<= j31 b) (and (<= (to_rep tab__first) j31) (<= j31 (to_rep tab__last)))))
(assert (=> (<= j31 b) (= o21 j31)))
(assert (=> (<= j31 b) (= o22 (store (map__content tab24) o21 o20))))
(assert (=> (<= j31 b) (= result25 tab24)))
(assert (=> (<= j31 b) (= tab26 o22)))
(assert (=> (<= j31 b) (and (= o23 (+ j31 1)) (in_range1 (+ j31 1)))))
(assert (=> (<= j31 b) (= result26 (mk_int__ref j31))))
(assert (=> (<= j31 b) (= j32 o23)))
(assert (=> (<= j31 b) (forall ((l Int)) (=> (and (<= a l) (<= l (- j33 1))) (= (to_rep (select tab27 l)) l)))))
(assert (=> (<= j31 b) (=> (<= (- 2147483648) 2147483647) (in_range1 j33))))
(assert (=> (<= j31 b) (= result27 (mk_int__ref temp___1961))))
(assert (=> (<= j31 b) (= temp___1962 j33)))
(assert (=> (<= j31 b) (not (<= j33 b))))
(assert (=> (<= j31 b) (= j34 (mk_int__ref j33))))
(assert (=> (<= j31 b) (= tab28 (mk_map__ref tab27))))
(assert (=> (<= j31 b) (= j35 j33)))
(assert (=> (<= j31 b) (= tab29 tab27)))
(assert (=> (<= j31 b) (= j36 j34)))
(assert (=> (<= j31 b) (= tab30 tab28)))
(assert (=> (<= j31 b) (= j37 j35)))
(assert (=> (<= j31 b) (= tab31 tab29)))
(assert (=> (not (<= j31 b)) (= j36 (mk_int__ref j31))))
(assert (=> (not (<= j31 b)) (= tab30 tab24)))
(assert (=> (not (<= j31 b)) (= j37 j31)))
(assert (=> (not (<= j31 b)) (= tab31 tab25)))
(assert (= result28 j36))
(assert (= j38 a))
(assert (= result29 k15))
(assert (= k17 0))
(assert (=> (<= j38 b) (= temp___201 k17)))
(assert (=> (<= j38 b) (= temp___200 j38)))
(assert (=> (<= j38 b) (= temp___198 (map__content tab30))))
(assert (=> (<= j38 b) (= 0 temp___203)))
(assert (=> (<= j38 b) (= 0 temp___202)))
(assert (=> (<= j38 b) (= (to_rep o24) j38)))
(assert (=> (<= j38 b) (and (<= (to_rep tab__first) j38) (<= j38 (to_rep tab__last)))))
(assert (=> (<= j38 b) (= o25 j38)))
(assert (=> (<= j38 b) (= o26 (store (map__content tab30) o25 o24))))
(assert (=> (<= j38 b) (= result30 tab30)))
(assert (=> (<= j38 b) (= tab32 o26)))
(assert (=> (<= j38 b) (and (= o27 (+ j38 1)) (in_range1 (+ j38 1)))))
(assert (=> (<= j38 b) (= result31 (mk_int__ref j38))))
(assert (=> (<= j38 b) (= j39 o27)))
(assert (=> (<= j38 b) (and (= o28 (+ k17 1)) (in_range1 (+ k17 1)))))
(assert (=> (<= j38 b) (= result32 (mk_int__ref k17))))
(assert (=> (<= j38 b) (= k18 o28)))
(assert (=> (<= j38 b) (= j40 (+ a k19))))
(assert (=> (<= j38 b) (forall ((l Int)) (=> (and (<= a l) (<= l (- j40 1))) (= (to_rep (select tab33 l)) l)))))
(assert (=> (<= j38 b) (forall ((l Int)) (=> (and (<= a l) (<= l (- (+ a k19) 1))) (= (to_rep (select tab33 l)) l)))))
(assert (=> (<= j38 b) (and (=> (<= (- 2147483648) 2147483647) (in_range1 j40)) (=> (<= (- 2147483648) 2147483647) (in_range1 k19)))))
(assert (=> (<= j38 b) (= result33 (mk_int__ref temp___2021))))
(assert (=> (<= j38 b) (= temp___2022 j40)))
(assert (=> (<= j38 b) (= result34 (mk_int__ref temp___2031))))
(assert (=> (<= j38 b) (= temp___2032 k19)))
(assert (=> (<= j38 b) (not (<= j40 b))))
(assert (=> (<= j38 b) (= k20 (mk_int__ref k19))))
(assert (=> (<= j38 b) (= j41 (mk_int__ref j40))))
(assert (=> (<= j38 b) (= tab34 (mk_map__ref tab33))))
(assert (=> (<= j38 b) (= k21 k19)))
(assert (=> (<= j38 b) (= j42 j40)))
(assert (=> (<= j38 b) (= tab35 tab33)))
(assert (=> (<= j38 b) (= k22 k20)))
(assert (=> (<= j38 b) (= j43 j41)))
(assert (=> (<= j38 b) (= tab36 tab34)))
(assert (=> (<= j38 b) (= k23 k21)))
(assert (=> (<= j38 b) (= j44 j42)))
(assert (=> (<= j38 b) (= tab37 tab35)))
(assert (=> (not (<= j38 b)) (= k22 (mk_int__ref k17))))
(assert (=> (not (<= j38 b)) (= j43 (mk_int__ref j38))))
(assert (=> (not (<= j38 b)) (= tab36 tab30)))
(assert (=> (not (<= j38 b)) (= k23 k17)))
(assert (=> (not (<= j38 b)) (= j44 j38)))
(assert (=> (not (<= j38 b)) (= tab37 tab31)))
(assert (= result35 j43))
(assert (= j45 a))
(assert (= result36 k22))
(assert (= k24 0))
(assert (<= j45 b))
(assert (= (to_rep o29) j45))
(assert (and (<= (to_rep tab__first) j45) (<= j45 (to_rep tab__last))))
(assert (= o30 j45))
(assert (= o31 (store (map__content tab36) o30 o29)))
(assert (= result37 tab36))
(assert (= tab38 o31))
(assert (and (= o32 (+ j45 1)) (in_range1 (+ j45 1))))
(assert (= result38 (mk_int__ref j45)))
(assert (= j46 o32))
(assert (and (= o33 (+ k24 1)) (in_range1 (+ k24 1))))
(assert (= result39 (mk_int__ref k24)))
(assert (= k25 o33))
(assert (= j47 (+ a k26)))
(assert (forall ((l Int)) (=> (and (<= a l) (<= l (- j47 1))) (= (to_rep (select tab39 l)) l))))
(assert (forall ((l Int)) (=> (and (<= a l) (<= l (- (+ a k26) 1))) (= (to_rep (select tab39 l)) l))))
(assert (and (=> (<= (- 2147483648) 2147483647) (in_range1 j47)) (=> (<= (- 2147483648) 2147483647) (in_range1 k26))))
(assert (not (in_range1 (+ a k26))))
(check-sat)
(exit)
