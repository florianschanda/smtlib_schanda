(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

type filesizet

predicate in_range4(x: int) = ((0 <= x) and (x <= 4194304))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : filesizet, filesizet -> bool

logic dummy5 : filesizet

type filesizet__ref = { filesizet__content : filesizet
}

function filesizet__ref___projection(a: filesizet__ref) : filesizet =
  (a).filesizet__content

logic to_rep2 : filesizet -> int

logic of_rep2 : int -> filesizet

axiom inversion_axiom2 :
  (forall x:filesizet [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:filesizet [to_rep2(x)]. in_range4(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range4(x) ->
  (to_rep2(of_rep2(x)) = x)))

type durationt

predicate in_range5(x: int) = ((0 <= x) and (x <= 864000))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : durationt, durationt -> bool

logic dummy6 : durationt

type durationt__ref = { durationt__content : durationt
}

function durationt__ref___projection(a: durationt__ref) : durationt =
  (a).durationt__content

logic to_rep3 : durationt -> int

logic of_rep3 : int -> durationt

axiom inversion_axiom3 :
  (forall x:durationt [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 : (forall x:durationt [to_rep3(x)]. in_range5(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range5(x) ->
  (to_rep3(of_rep3(x)) = x)))

type durationtexti

predicate in_range6(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : durationtexti, durationtexti -> bool

logic dummy7 : durationtexti

type durationtexti__ref = { durationtexti__content : durationtexti
}

function durationtexti__ref___projection(a: durationtexti__ref) : durationtexti =
  (a).durationtexti__content

logic printduration : int -> (int,character) farray

logic printduration__function_guard : (int,character) farray, int -> prop

axiom printduration__post_axiom : true

type fart

predicate in_range7(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq7 : fart, fart -> bool

logic dummy8 : fart

type fart__ref = { fart__content : fart
}

function fart__ref___projection(a: fart__ref) : fart = (a).fart__content

logic to_rep4 : fart -> int

logic of_rep4 : int -> fart

axiom inversion_axiom4 :
  (forall x:fart [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 : (forall x:fart [to_rep4(x)]. in_range7(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range7(x) ->
  (to_rep4(of_rep4(x)) = x)))

type classt

predicate in_range8(x: int) = ((0 <= x) and (x <= 5))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq8 : classt, classt -> bool

logic dummy9 : classt

type classt__ref = { classt__content : classt
}

function classt__ref___projection(a: classt__ref) : classt =
  (a).classt__content

logic to_rep5 : classt -> int

logic of_rep5 : int -> classt

axiom inversion_axiom5 :
  (forall x:classt [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom range_axiom5 : (forall x:classt [to_rep5(x)]. in_range8(to_rep5(x)))

axiom coerce_axiom5 :
  (forall x:int [to_rep5(of_rep5(x))]. (in_range8(x) ->
  (to_rep5(of_rep5(x)) = x)))

type durationt1

predicate in_range9(x: int) = ((0 <= x) and (x <= 2000))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq9 : durationt1, durationt1 -> bool

logic dummy10 : durationt1

type durationt__ref1 = { durationt__content1 : durationt1
}

function durationt__ref___2__projection(a: durationt__ref1) : durationt1 =
  (a).durationt__content1

type accesspolicyt

predicate in_range10(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq10 : accesspolicyt, accesspolicyt -> bool

logic dummy11 : accesspolicyt

type accesspolicyt__ref = { accesspolicyt__content : accesspolicyt
}

function accesspolicyt__ref___projection(a: accesspolicyt__ref) : accesspolicyt =
  (a).accesspolicyt__content

logic to_rep6 : accesspolicyt -> int

logic of_rep6 : int -> accesspolicyt

axiom inversion_axiom6 :
  (forall x:accesspolicyt [to_rep6(x)]. (of_rep6(to_rep6(x)) = x))

axiom range_axiom6 :
  (forall x:accesspolicyt [to_rep6(x)]. in_range10(to_rep6(x)))

axiom coerce_axiom6 :
  (forall x:int [to_rep6(of_rep6(x))]. (in_range10(x) ->
  (to_rep6(of_rep6(x)) = x)))

type us_split_fields = { rec__screen__displayedconfigt__latchunlock :
durationt; rec__screen__displayedconfigt__alarmsilent : durationt;
rec__screen__displayedconfigt__fingerwait : durationt;
rec__screen__displayedconfigt__tokenremove : durationt;
rec__screen__displayedconfigt__workstart : durationt;
rec__screen__displayedconfigt__workend : durationt;
rec__screen__displayedconfigt__authduration : durationt;
rec__screen__displayedconfigt__policy : accesspolicyt;
rec__screen__displayedconfigt__minpreservedlog : filesizet;
rec__screen__displayedconfigt__alarmthreshold : filesizet;
rec__screen__displayedconfigt__minentry : classt;
rec__screen__displayedconfigt__clearance : classt;
rec__screen__displayedconfigt__maxfar : fart
}

function us_split_fields_LatchUnlock__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__latchunlock

function us_split_fields_AlarmSilent__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__alarmsilent

function us_split_fields_FingerWait__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__fingerwait

function us_split_fields_TokenRemove__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__tokenremove

function us_split_fields_WorkStart__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__workstart

function us_split_fields_WorkEnd__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__workend

function us_split_fields_AuthDuration__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__authduration

function us_split_fields_Policy__projection(a: us_split_fields) : accesspolicyt =
  (a).rec__screen__displayedconfigt__policy

function us_split_fields_MinPreservedLog__projection(a: us_split_fields) : filesizet =
  (a).rec__screen__displayedconfigt__minpreservedlog

function us_split_fields_AlarmThreshold__projection(a: us_split_fields) : filesizet =
  (a).rec__screen__displayedconfigt__alarmthreshold

function us_split_fields_MinEntry__projection(a: us_split_fields) : classt =
  (a).rec__screen__displayedconfigt__minentry

function us_split_fields_Clearance__projection(a: us_split_fields) : classt =
  (a).rec__screen__displayedconfigt__clearance

function us_split_fields_MaxFAR__projection(a: us_split_fields) : fart =
  (a).rec__screen__displayedconfigt__maxfar

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___14__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___15__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq14 : us_rep, us_rep -> bool

axiom bool_eq_def12 :
  (forall a:us_rep. forall b:us_rep [bool_eq14(a, b)].
  (((((((((((((((to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__latchunlock) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__latchunlock)) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__alarmsilent) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__alarmsilent))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__fingerwait) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__fingerwait))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__tokenremove) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__tokenremove))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__workstart) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__workstart))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__workend) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__workend))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__authduration) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__authduration))) and
  (to_rep6(((a).us_split_fields1).rec__screen__displayedconfigt__policy) = to_rep6(((b).us_split_fields1).rec__screen__displayedconfigt__policy))) and
  (to_rep2(((a).us_split_fields1).rec__screen__displayedconfigt__minpreservedlog) = to_rep2(((b).us_split_fields1).rec__screen__displayedconfigt__minpreservedlog))) and
  (to_rep2(((a).us_split_fields1).rec__screen__displayedconfigt__alarmthreshold) = to_rep2(((b).us_split_fields1).rec__screen__displayedconfigt__alarmthreshold))) and
  (to_rep5(((a).us_split_fields1).rec__screen__displayedconfigt__minentry) = to_rep5(((b).us_split_fields1).rec__screen__displayedconfigt__minentry))) and
  (to_rep5(((a).us_split_fields1).rec__screen__displayedconfigt__clearance) = to_rep5(((b).us_split_fields1).rec__screen__displayedconfigt__clearance))) and
  (to_rep4(((a).us_split_fields1).rec__screen__displayedconfigt__maxfar) = to_rep4(((b).us_split_fields1).rec__screen__displayedconfigt__maxfar))) ->
  (bool_eq14(a, b) = true)) and
  ((not (((((((((((((to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__latchunlock) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__latchunlock)) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__alarmsilent) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__alarmsilent))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__fingerwait) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__fingerwait))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__tokenremove) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__tokenremove))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__workstart) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__workstart))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__workend) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__workend))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__authduration) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__authduration))) and
  (to_rep6(((a).us_split_fields1).rec__screen__displayedconfigt__policy) = to_rep6(((b).us_split_fields1).rec__screen__displayedconfigt__policy))) and
  (to_rep2(((a).us_split_fields1).rec__screen__displayedconfigt__minpreservedlog) = to_rep2(((b).us_split_fields1).rec__screen__displayedconfigt__minpreservedlog))) and
  (to_rep2(((a).us_split_fields1).rec__screen__displayedconfigt__alarmthreshold) = to_rep2(((b).us_split_fields1).rec__screen__displayedconfigt__alarmthreshold))) and
  (to_rep5(((a).us_split_fields1).rec__screen__displayedconfigt__minentry) = to_rep5(((b).us_split_fields1).rec__screen__displayedconfigt__minentry))) and
  (to_rep5(((a).us_split_fields1).rec__screen__displayedconfigt__clearance) = to_rep5(((b).us_split_fields1).rec__screen__displayedconfigt__clearance))) and
  (to_rep4(((a).us_split_fields1).rec__screen__displayedconfigt__maxfar) = to_rep4(((b).us_split_fields1).rec__screen__displayedconfigt__maxfar)))) ->
  (bool_eq14(a, b) = false))))

logic value__size1 : int

logic object__size1 : us_rep -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:durationt. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:accesspolicyt. forall a8:filesizet.
  forall a9:filesizet. forall a10:classt. forall a11:classt. forall a12:fart.
  (0 <= object__size1({ us_split_fields1 = {
  rec__screen__displayedconfigt__latchunlock = a;
  rec__screen__displayedconfigt__alarmsilent = a1;
  rec__screen__displayedconfigt__fingerwait = a2;
  rec__screen__displayedconfigt__tokenremove = a3;
  rec__screen__displayedconfigt__workstart = a4;
  rec__screen__displayedconfigt__workend = a5;
  rec__screen__displayedconfigt__authduration = a6;
  rec__screen__displayedconfigt__policy = a7;
  rec__screen__displayedconfigt__minpreservedlog = a8;
  rec__screen__displayedconfigt__alarmthreshold = a9;
  rec__screen__displayedconfigt__minentry = a10;
  rec__screen__displayedconfigt__clearance = a11;
  rec__screen__displayedconfigt__maxfar = a12 } })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:durationt. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:accesspolicyt. forall a8:filesizet.
  forall a9:filesizet. forall a10:classt. forall a11:classt. forall a12:fart.
  (0 <= object__alignment1({ us_split_fields1 = {
  rec__screen__displayedconfigt__latchunlock = a;
  rec__screen__displayedconfigt__alarmsilent = a1;
  rec__screen__displayedconfigt__fingerwait = a2;
  rec__screen__displayedconfigt__tokenremove = a3;
  rec__screen__displayedconfigt__workstart = a4;
  rec__screen__displayedconfigt__workend = a5;
  rec__screen__displayedconfigt__authduration = a6;
  rec__screen__displayedconfigt__policy = a7;
  rec__screen__displayedconfigt__minpreservedlog = a8;
  rec__screen__displayedconfigt__alarmthreshold = a9;
  rec__screen__displayedconfigt__minentry = a10;
  rec__screen__displayedconfigt__clearance = a11;
  rec__screen__displayedconfigt__maxfar = a12 } })))

logic screen__displayedconfigt__latchunlock__first__bit : int

logic screen__displayedconfigt__latchunlock__last__bit : int

logic screen__displayedconfigt__latchunlock__position : int

axiom screen__displayedconfigt__latchunlock__first__bit_axiom :
  (0 <= screen__displayedconfigt__latchunlock__first__bit)

axiom screen__displayedconfigt__latchunlock__last__bit_axiom :
  (screen__displayedconfigt__latchunlock__first__bit <  screen__displayedconfigt__latchunlock__last__bit)

axiom screen__displayedconfigt__latchunlock__position_axiom :
  (0 <= screen__displayedconfigt__latchunlock__position)

logic screen__displayedconfigt__alarmsilent__first__bit : int

logic screen__displayedconfigt__alarmsilent__last__bit : int

logic screen__displayedconfigt__alarmsilent__position : int

axiom screen__displayedconfigt__alarmsilent__first__bit_axiom :
  (0 <= screen__displayedconfigt__alarmsilent__first__bit)

axiom screen__displayedconfigt__alarmsilent__last__bit_axiom :
  (screen__displayedconfigt__alarmsilent__first__bit <  screen__displayedconfigt__alarmsilent__last__bit)

axiom screen__displayedconfigt__alarmsilent__position_axiom :
  (0 <= screen__displayedconfigt__alarmsilent__position)

logic screen__displayedconfigt__fingerwait__first__bit : int

logic screen__displayedconfigt__fingerwait__last__bit : int

logic screen__displayedconfigt__fingerwait__position : int

axiom screen__displayedconfigt__fingerwait__first__bit_axiom :
  (0 <= screen__displayedconfigt__fingerwait__first__bit)

axiom screen__displayedconfigt__fingerwait__last__bit_axiom :
  (screen__displayedconfigt__fingerwait__first__bit <  screen__displayedconfigt__fingerwait__last__bit)

axiom screen__displayedconfigt__fingerwait__position_axiom :
  (0 <= screen__displayedconfigt__fingerwait__position)

logic screen__displayedconfigt__tokenremove__first__bit : int

logic screen__displayedconfigt__tokenremove__last__bit : int

logic screen__displayedconfigt__tokenremove__position : int

axiom screen__displayedconfigt__tokenremove__first__bit_axiom :
  (0 <= screen__displayedconfigt__tokenremove__first__bit)

axiom screen__displayedconfigt__tokenremove__last__bit_axiom :
  (screen__displayedconfigt__tokenremove__first__bit <  screen__displayedconfigt__tokenremove__last__bit)

axiom screen__displayedconfigt__tokenremove__position_axiom :
  (0 <= screen__displayedconfigt__tokenremove__position)

logic screen__displayedconfigt__workstart__first__bit : int

logic screen__displayedconfigt__workstart__last__bit : int

logic screen__displayedconfigt__workstart__position : int

axiom screen__displayedconfigt__workstart__first__bit_axiom :
  (0 <= screen__displayedconfigt__workstart__first__bit)

axiom screen__displayedconfigt__workstart__last__bit_axiom :
  (screen__displayedconfigt__workstart__first__bit <  screen__displayedconfigt__workstart__last__bit)

axiom screen__displayedconfigt__workstart__position_axiom :
  (0 <= screen__displayedconfigt__workstart__position)

logic screen__displayedconfigt__workend__first__bit : int

logic screen__displayedconfigt__workend__last__bit : int

logic screen__displayedconfigt__workend__position : int

axiom screen__displayedconfigt__workend__first__bit_axiom :
  (0 <= screen__displayedconfigt__workend__first__bit)

axiom screen__displayedconfigt__workend__last__bit_axiom :
  (screen__displayedconfigt__workend__first__bit <  screen__displayedconfigt__workend__last__bit)

axiom screen__displayedconfigt__workend__position_axiom :
  (0 <= screen__displayedconfigt__workend__position)

logic screen__displayedconfigt__authduration__first__bit : int

logic screen__displayedconfigt__authduration__last__bit : int

logic screen__displayedconfigt__authduration__position : int

axiom screen__displayedconfigt__authduration__first__bit_axiom :
  (0 <= screen__displayedconfigt__authduration__first__bit)

axiom screen__displayedconfigt__authduration__last__bit_axiom :
  (screen__displayedconfigt__authduration__first__bit <  screen__displayedconfigt__authduration__last__bit)

axiom screen__displayedconfigt__authduration__position_axiom :
  (0 <= screen__displayedconfigt__authduration__position)

logic screen__displayedconfigt__policy__first__bit : int

logic screen__displayedconfigt__policy__last__bit : int

logic screen__displayedconfigt__policy__position : int

axiom screen__displayedconfigt__policy__first__bit_axiom :
  (0 <= screen__displayedconfigt__policy__first__bit)

axiom screen__displayedconfigt__policy__last__bit_axiom :
  (screen__displayedconfigt__policy__first__bit <  screen__displayedconfigt__policy__last__bit)

axiom screen__displayedconfigt__policy__position_axiom :
  (0 <= screen__displayedconfigt__policy__position)

logic screen__displayedconfigt__minpreservedlog__first__bit : int

logic screen__displayedconfigt__minpreservedlog__last__bit : int

logic screen__displayedconfigt__minpreservedlog__position : int

axiom screen__displayedconfigt__minpreservedlog__first__bit_axiom :
  (0 <= screen__displayedconfigt__minpreservedlog__first__bit)

axiom screen__displayedconfigt__minpreservedlog__last__bit_axiom :
  (screen__displayedconfigt__minpreservedlog__first__bit <  screen__displayedconfigt__minpreservedlog__last__bit)

axiom screen__displayedconfigt__minpreservedlog__position_axiom :
  (0 <= screen__displayedconfigt__minpreservedlog__position)

logic screen__displayedconfigt__alarmthreshold__first__bit : int

logic screen__displayedconfigt__alarmthreshold__last__bit : int

logic screen__displayedconfigt__alarmthreshold__position : int

axiom screen__displayedconfigt__alarmthreshold__first__bit_axiom :
  (0 <= screen__displayedconfigt__alarmthreshold__first__bit)

axiom screen__displayedconfigt__alarmthreshold__last__bit_axiom :
  (screen__displayedconfigt__alarmthreshold__first__bit <  screen__displayedconfigt__alarmthreshold__last__bit)

axiom screen__displayedconfigt__alarmthreshold__position_axiom :
  (0 <= screen__displayedconfigt__alarmthreshold__position)

logic screen__displayedconfigt__minentry__first__bit : int

logic screen__displayedconfigt__minentry__last__bit : int

logic screen__displayedconfigt__minentry__position : int

axiom screen__displayedconfigt__minentry__first__bit_axiom :
  (0 <= screen__displayedconfigt__minentry__first__bit)

axiom screen__displayedconfigt__minentry__last__bit_axiom :
  (screen__displayedconfigt__minentry__first__bit <  screen__displayedconfigt__minentry__last__bit)

axiom screen__displayedconfigt__minentry__position_axiom :
  (0 <= screen__displayedconfigt__minentry__position)

logic screen__displayedconfigt__clearance__first__bit : int

logic screen__displayedconfigt__clearance__last__bit : int

logic screen__displayedconfigt__clearance__position : int

axiom screen__displayedconfigt__clearance__first__bit_axiom :
  (0 <= screen__displayedconfigt__clearance__first__bit)

axiom screen__displayedconfigt__clearance__last__bit_axiom :
  (screen__displayedconfigt__clearance__first__bit <  screen__displayedconfigt__clearance__last__bit)

axiom screen__displayedconfigt__clearance__position_axiom :
  (0 <= screen__displayedconfigt__clearance__position)

logic screen__displayedconfigt__maxfar__first__bit : int

logic screen__displayedconfigt__maxfar__last__bit : int

logic screen__displayedconfigt__maxfar__position : int

axiom screen__displayedconfigt__maxfar__first__bit_axiom :
  (0 <= screen__displayedconfigt__maxfar__first__bit)

axiom screen__displayedconfigt__maxfar__last__bit_axiom :
  (screen__displayedconfigt__maxfar__first__bit <  screen__displayedconfigt__maxfar__last__bit)

axiom screen__displayedconfigt__maxfar__position_axiom :
  (0 <= screen__displayedconfigt__maxfar__position)

logic user_eq11 : us_rep, us_rep -> bool

logic dummy12 : durationt

logic dummy13 : durationt

logic dummy14 : durationt

logic dummy15 : durationt

logic dummy16 : durationt

logic dummy17 : durationt

logic dummy18 : durationt

logic dummy19 : accesspolicyt

logic dummy20 : filesizet

logic dummy21 : filesizet

logic dummy22 : classt

logic dummy23 : classt

logic dummy24 : fart

type displayedconfigt__ref = { displayedconfigt__content : us_rep
}

function displayedconfigt__ref___projection(a: displayedconfigt__ref) : us_rep =
  (a).displayedconfigt__content

type us_split_fields2 = { rec__screen__screenconfigt__isdisplayed : bool;
rec__screen__screenconfigt__data : us_rep
}

function us_split_fields_IsDisplayed__2__projection(a: us_split_fields2) : bool =
  (a).rec__screen__screenconfigt__isdisplayed

function us_split_fields_Data__2__projection(a: us_split_fields2) : us_rep =
  (a).rec__screen__screenconfigt__data

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___15__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___16__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq15 : us_rep1, us_rep1 -> bool

axiom bool_eq_def13 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq15(a, b)].
  ((((((a).us_split_fields3).rec__screen__screenconfigt__isdisplayed = ((b).us_split_fields3).rec__screen__screenconfigt__isdisplayed) and
  (bool_eq14(((a).us_split_fields3).rec__screen__screenconfigt__data,
  ((b).us_split_fields3).rec__screen__screenconfigt__data) = true)) ->
  (bool_eq15(a, b) = true)) and
  ((not ((((a).us_split_fields3).rec__screen__screenconfigt__isdisplayed = ((b).us_split_fields3).rec__screen__screenconfigt__isdisplayed) and
  (bool_eq14(((a).us_split_fields3).rec__screen__screenconfigt__data,
  ((b).us_split_fields3).rec__screen__screenconfigt__data) = true))) ->
  (bool_eq15(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep1 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep1 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:bool. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:durationt. forall a8:accesspolicyt.
  forall a9:filesizet. forall a10:filesizet. forall a11:classt.
  forall a12:classt. forall a13:fart. (0 <= object__size2({
  us_split_fields3 = { rec__screen__screenconfigt__isdisplayed = a;
  rec__screen__screenconfigt__data = { us_split_fields1 = {
  rec__screen__displayedconfigt__latchunlock = a1;
  rec__screen__displayedconfigt__alarmsilent = a2;
  rec__screen__displayedconfigt__fingerwait = a3;
  rec__screen__displayedconfigt__tokenremove = a4;
  rec__screen__displayedconfigt__workstart = a5;
  rec__screen__displayedconfigt__workend = a6;
  rec__screen__displayedconfigt__authduration = a7;
  rec__screen__displayedconfigt__policy = a8;
  rec__screen__displayedconfigt__minpreservedlog = a9;
  rec__screen__displayedconfigt__alarmthreshold = a10;
  rec__screen__displayedconfigt__minentry = a11;
  rec__screen__displayedconfigt__clearance = a12;
  rec__screen__displayedconfigt__maxfar = a13 } } } })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:bool. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:durationt. forall a8:accesspolicyt.
  forall a9:filesizet. forall a10:filesizet. forall a11:classt.
  forall a12:classt. forall a13:fart. (0 <= object__alignment2({
  us_split_fields3 = { rec__screen__screenconfigt__isdisplayed = a;
  rec__screen__screenconfigt__data = { us_split_fields1 = {
  rec__screen__displayedconfigt__latchunlock = a1;
  rec__screen__displayedconfigt__alarmsilent = a2;
  rec__screen__displayedconfigt__fingerwait = a3;
  rec__screen__displayedconfigt__tokenremove = a4;
  rec__screen__displayedconfigt__workstart = a5;
  rec__screen__displayedconfigt__workend = a6;
  rec__screen__displayedconfigt__authduration = a7;
  rec__screen__displayedconfigt__policy = a8;
  rec__screen__displayedconfigt__minpreservedlog = a9;
  rec__screen__displayedconfigt__alarmthreshold = a10;
  rec__screen__displayedconfigt__minentry = a11;
  rec__screen__displayedconfigt__clearance = a12;
  rec__screen__displayedconfigt__maxfar = a13 } } } })))

logic screen__screenconfigt__isdisplayed__first__bit : int

logic screen__screenconfigt__isdisplayed__last__bit : int

logic screen__screenconfigt__isdisplayed__position : int

axiom screen__screenconfigt__isdisplayed__first__bit_axiom :
  (0 <= screen__screenconfigt__isdisplayed__first__bit)

axiom screen__screenconfigt__isdisplayed__last__bit_axiom :
  (screen__screenconfigt__isdisplayed__first__bit <  screen__screenconfigt__isdisplayed__last__bit)

axiom screen__screenconfigt__isdisplayed__position_axiom :
  (0 <= screen__screenconfigt__isdisplayed__position)

logic screen__screenconfigt__data__first__bit : int

logic screen__screenconfigt__data__last__bit : int

logic screen__screenconfigt__data__position : int

axiom screen__screenconfigt__data__first__bit_axiom :
  (0 <= screen__screenconfigt__data__first__bit)

axiom screen__screenconfigt__data__last__bit_axiom :
  (screen__screenconfigt__data__first__bit <  screen__screenconfigt__data__last__bit)

axiom screen__screenconfigt__data__position_axiom :
  (0 <= screen__screenconfigt__data__position)

logic user_eq12 : us_rep1, us_rep1 -> bool

logic dummy25 : bool

logic dummy26 : durationt

logic dummy27 : durationt

logic dummy28 : durationt

logic dummy29 : durationt

logic dummy30 : durationt

logic dummy31 : durationt

logic dummy32 : durationt

logic dummy33 : accesspolicyt

logic dummy34 : filesizet

logic dummy35 : filesizet

logic dummy36 : classt

logic dummy37 : classt

logic dummy38 : fart

type screenconfigt__ref = { screenconfigt__content : us_rep1
}

function screenconfigt__ref___projection(a: screenconfigt__ref) : us_rep1 =
  (a).screenconfigt__content

logic attr__ATTRIBUTE_ADDRESS : int

type screenxcoordt

predicate in_range11(x: int) = ((0 <= x) and (x <= 79))

logic bool_eq16 : int, int -> bool

axiom bool_eq_def14 :
  (forall x:int. forall y:int [bool_eq16(x, y)]. (((x = y) -> (bool_eq16(x,
  y) = true)) and ((not (x = y)) -> (bool_eq16(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq13 : screenxcoordt, screenxcoordt -> bool

logic dummy39 : screenxcoordt

type screenxcoordt__ref = { screenxcoordt__content : screenxcoordt
}

function screenxcoordt__ref___projection(a: screenxcoordt__ref) : screenxcoordt =
  (a).screenxcoordt__content

logic to_rep7 : screenxcoordt -> int

logic of_rep7 : int -> screenxcoordt

axiom inversion_axiom7 :
  (forall x:screenxcoordt [to_rep7(x)]. (of_rep7(to_rep7(x)) = x))

axiom range_axiom7 :
  (forall x:screenxcoordt [to_rep7(x)]. in_range11(to_rep7(x)))

axiom coerce_axiom7 :
  (forall x:int [to_rep7(of_rep7(x))]. (in_range11(x) ->
  (to_rep7(of_rep7(x)) = x)))

type screenycoordt

predicate in_range12(x: int) = ((0 <= x) and (x <= 29))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def15 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq14 : screenycoordt, screenycoordt -> bool

logic dummy40 : screenycoordt

type screenycoordt__ref = { screenycoordt__content : screenycoordt
}

function screenycoordt__ref___projection(a: screenycoordt__ref) : screenycoordt =
  (a).screenycoordt__content

logic to_rep8 : screenycoordt -> int

logic of_rep8 : int -> screenycoordt

axiom inversion_axiom8 :
  (forall x:screenycoordt [to_rep8(x)]. (of_rep8(to_rep8(x)) = x))

axiom range_axiom8 :
  (forall x:screenycoordt [to_rep8(x)]. in_range12(to_rep8(x)))

axiom coerce_axiom8 :
  (forall x:int [to_rep8(of_rep8(x))]. (in_range12(x) ->
  (to_rep8(of_rep8(x)) = x)))

type us_split_fields4 = { rec__screen__interfac__xycoordt__x : screenxcoordt;
rec__screen__interfac__xycoordt__y : screenycoordt
}

function us_split_fields_X__projection(a: us_split_fields4) : screenxcoordt =
  (a).rec__screen__interfac__xycoordt__x

function us_split_fields_Y__projection(a: us_split_fields4) : screenycoordt =
  (a).rec__screen__interfac__xycoordt__y

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___12__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_fields5 : us_split_fields4
}

function us_rep___13__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq18 : us_rep2, us_rep2 -> bool

axiom bool_eq_def16 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq18(a, b)].
  ((((to_rep7(((a).us_split_fields5).rec__screen__interfac__xycoordt__x) = to_rep7(((b).us_split_fields5).rec__screen__interfac__xycoordt__x)) and
  (to_rep8(((a).us_split_fields5).rec__screen__interfac__xycoordt__y) = to_rep8(((b).us_split_fields5).rec__screen__interfac__xycoordt__y))) ->
  (bool_eq18(a, b) = true)) and
  ((not ((to_rep7(((a).us_split_fields5).rec__screen__interfac__xycoordt__x) = to_rep7(((b).us_split_fields5).rec__screen__interfac__xycoordt__x)) and
  (to_rep8(((a).us_split_fields5).rec__screen__interfac__xycoordt__y) = to_rep8(((b).us_split_fields5).rec__screen__interfac__xycoordt__y)))) ->
  (bool_eq18(a, b) = false))))

logic value__size3 : int

logic object__size3 : us_rep2 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep2 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:screenxcoordt. forall a1:screenycoordt. (0 <= object__size3({
  us_split_fields5 = { rec__screen__interfac__xycoordt__x = a;
  rec__screen__interfac__xycoordt__y = a1 } })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:screenxcoordt. forall a1:screenycoordt.
  (0 <= object__alignment3({ us_split_fields5 = {
  rec__screen__interfac__xycoordt__x = a;
  rec__screen__interfac__xycoordt__y = a1 } })))

logic screen__interfac__xycoordt__x__first__bit : int

logic screen__interfac__xycoordt__x__last__bit : int

logic screen__interfac__xycoordt__x__position : int

axiom screen__interfac__xycoordt__x__first__bit_axiom :
  (0 <= screen__interfac__xycoordt__x__first__bit)

axiom screen__interfac__xycoordt__x__last__bit_axiom :
  (screen__interfac__xycoordt__x__first__bit <  screen__interfac__xycoordt__x__last__bit)

axiom screen__interfac__xycoordt__x__position_axiom :
  (0 <= screen__interfac__xycoordt__x__position)

logic screen__interfac__xycoordt__y__first__bit : int

logic screen__interfac__xycoordt__y__last__bit : int

logic screen__interfac__xycoordt__y__position : int

axiom screen__interfac__xycoordt__y__first__bit_axiom :
  (0 <= screen__interfac__xycoordt__y__first__bit)

axiom screen__interfac__xycoordt__y__last__bit_axiom :
  (screen__interfac__xycoordt__y__first__bit <  screen__interfac__xycoordt__y__last__bit)

axiom screen__interfac__xycoordt__y__position_axiom :
  (0 <= screen__interfac__xycoordt__y__position)

logic user_eq15 : us_rep2, us_rep2 -> bool

logic dummy41 : screenxcoordt

logic dummy42 : screenycoordt

type xycoordt__ref = { xycoordt__content : us_rep2
}

function xycoordt__ref___projection(a: xycoordt__ref) : us_rep2 =
  (a).xycoordt__content

type secondsstringi

predicate in_range13(x: int) = ((1 <= x) and (x <= 7))

logic bool_eq19 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq19(x, y)]. (((x = y) -> (bool_eq19(x,
  y) = true)) and ((not (x = y)) -> (bool_eq19(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq16 : secondsstringi, secondsstringi -> bool

logic dummy43 : secondsstringi

type secondsstringi__ref = { secondsstringi__content : secondsstringi
}

function secondsstringi__ref___projection(a: secondsstringi__ref) : secondsstringi =
  (a).secondsstringi__content

type hrsminsstringi

predicate in_range14(x: int) = ((1 <= x) and (x <= 5))

logic bool_eq20 : int, int -> bool

axiom bool_eq_def18 :
  (forall x:int. forall y:int [bool_eq20(x, y)]. (((x = y) -> (bool_eq20(x,
  y) = true)) and ((not (x = y)) -> (bool_eq20(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE14 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check14 : us_image -> prop

logic attr__ATTRIBUTE_VALUE14 : us_image -> int

logic user_eq17 : hrsminsstringi, hrsminsstringi -> bool

logic dummy44 : hrsminsstringi

type hrsminsstringi__ref = { hrsminsstringi__content : hrsminsstringi
}

function hrsminsstringi__ref___projection(a: hrsminsstringi__ref) : hrsminsstringi =
  (a).hrsminsstringi__content

type classstringi

predicate in_range15(x: int) = ((1 <= x) and (x <= 12))

logic bool_eq21 : int, int -> bool

axiom bool_eq_def19 :
  (forall x:int. forall y:int [bool_eq21(x, y)]. (((x = y) -> (bool_eq21(x,
  y) = true)) and ((not (x = y)) -> (bool_eq21(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE15 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check15 : us_image -> prop

logic attr__ATTRIBUTE_VALUE15 : us_image -> int

logic user_eq18 : classstringi, classstringi -> bool

logic dummy45 : classstringi

type classstringi__ref = { classstringi__content : classstringi
}

function classstringi__ref___projection(a: classstringi__ref) : classstringi =
  (a).classstringi__content

type filesizestringi

predicate in_range16(x: int) = ((1 <= x) and (x <= 15))

logic bool_eq22 : int, int -> bool

axiom bool_eq_def20 :
  (forall x:int. forall y:int [bool_eq22(x, y)]. (((x = y) -> (bool_eq22(x,
  y) = true)) and ((not (x = y)) -> (bool_eq22(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE16 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check16 : us_image -> prop

logic attr__ATTRIBUTE_VALUE16 : us_image -> int

logic user_eq19 : filesizestringi, filesizestringi -> bool

logic dummy46 : filesizestringi

type filesizestringi__ref = { filesizestringi__content : filesizestringi
}

function filesizestringi__ref___projection(a: filesizestringi__ref) : filesizestringi =
  (a).filesizestringi__content

type accesspolicystringi

predicate in_range17(x: int) = ((1 <= x) and (x <= 12))

logic bool_eq23 : int, int -> bool

axiom bool_eq_def21 :
  (forall x:int. forall y:int [bool_eq23(x, y)]. (((x = y) -> (bool_eq23(x,
  y) = true)) and ((not (x = y)) -> (bool_eq23(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE17 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check17 : us_image -> prop

logic attr__ATTRIBUTE_VALUE17 : us_image -> int

logic user_eq20 : accesspolicystringi, accesspolicystringi -> bool

logic dummy47 : accesspolicystringi

type accesspolicystringi__ref = { accesspolicystringi__content :
accesspolicystringi
}

function accesspolicystringi__ref___projection(a: accesspolicystringi__ref) : accesspolicystringi =
  (a).accesspolicystringi__content

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic attr__ATTRIBUTE_ADDRESS16 : int

logic column1 : int

logic attr__ATTRIBUTE_ADDRESS17 : int

logic column2 : int

logic attr__ATTRIBUTE_ADDRESS18 : int

logic row1 : int

logic attr__ATTRIBUTE_ADDRESS19 : int

logic row2 : int

logic attr__ATTRIBUTE_ADDRESS20 : int

logic row3 : int

logic attr__ATTRIBUTE_ADDRESS21 : int

logic row4 : int

logic attr__ATTRIBUTE_ADDRESS22 : int

logic row5 : int

logic attr__ATTRIBUTE_ADDRESS23 : int

logic row6 : int

logic attr__ATTRIBUTE_ADDRESS24 : int

logic row7 : int

logic attr__ATTRIBUTE_ADDRESS25 : int

logic secondsstring : int -> (int,character) farray

logic secondsstring__function_guard : (int,character) farray, int -> prop

axiom secondsstring__post_axiom : true

logic filesizestring : int -> (int,character) farray

logic filesizestring__function_guard : (int,character) farray, int -> prop

axiom filesizestring__post_axiom : true

logic accesspolicystring : int -> (int,character) farray

logic accesspolicystring__function_guard : (int,character) farray,
  int -> prop

axiom accesspolicystring__post_axiom : true

logic classstring : int -> (int,character) farray

logic classstring__function_guard : (int,character) farray, int -> prop

axiom classstring__post_axiom : true

logic farstring : int -> (int,character) farray

logic farstring__function_guard : (int,character) farray, int -> prop

axiom farstring__post_axiom : true

logic c111b : int

logic attr__ATTRIBUTE_ADDRESS26 : int

logic attr__ATTRIBUTE_ADDRESS27 : int

logic c117b : int

logic attr__ATTRIBUTE_ADDRESS28 : int

logic attr__ATTRIBUTE_ADDRESS29 : int

logic c123b : int

logic attr__ATTRIBUTE_ADDRESS30 : int

logic attr__ATTRIBUTE_ADDRESS31 : int

axiom column1__def_axiom : (column1 = 25)

axiom column2__def_axiom : (column2 = 63)

axiom row1__def_axiom : (row1 = 9)

axiom row2__def_axiom : (row2 = 10)

axiom row3__def_axiom : (row3 = 12)

axiom row4__def_axiom : (row4 = 13)

axiom row5__def_axiom : (row5 = 15)

axiom row6__def_axiom : (row6 = 16)

axiom row7__def_axiom : (row7 = 18)

logic currentconfig__split_fields : bool

logic currentconfig__split_fields1 : durationt

logic currentconfig__split_fields2 : durationt

logic currentconfig__split_fields3 : durationt

logic currentconfig__split_fields4 : durationt

logic currentconfig__split_fields5 : durationt

logic currentconfig__split_fields6 : durationt

logic currentconfig__split_fields7 : durationt

logic currentconfig__split_fields8 : accesspolicyt

logic currentconfig__split_fields9 : filesizet

logic currentconfig__split_fields10 : filesizet

logic currentconfig__split_fields11 : classt

logic currentconfig__split_fields12 : classt

logic currentconfig__split_fields13 : fart

logic latchunlock : int

logic alarmsilent : int

logic fingerwait : int

logic tokenremove : int

logic workstart : int

logic workend : int

logic authduration : int

logic policy : int

logic minpreservedlog : int

logic alarmthreshold : int

logic minentry : int

logic clearance : int

logic maxfar : int

logic newconfig__split_fields : durationt

logic newconfig__split_fields1 : durationt

logic newconfig__split_fields2 : durationt

logic newconfig__split_fields3 : durationt

logic newconfig__split_fields4 : durationt

logic newconfig__split_fields5 : durationt

logic newconfig__split_fields6 : durationt

logic newconfig__split_fields7 : accesspolicyt

logic newconfig__split_fields8 : filesizet

logic newconfig__split_fields9 : filesizet

logic newconfig__split_fields10 : classt

logic newconfig__split_fields11 : classt

logic newconfig__split_fields12 : fart

logic c112b : (int,character) farray

logic c118b : (int,character) farray

logic o : fart

logic o1 : classt

logic o2 : classt

logic o3 : filesizet

logic o4 : filesizet

logic o5 : accesspolicyt

logic o6 : durationt

logic o7 : durationt

logic o8 : durationt

logic o9 : durationt

logic o10 : durationt

logic o11 : durationt

logic o12 : durationt

logic o13 : durationt

logic o14 : durationt

logic o15 : durationt

logic o16 : durationt

logic o17 : durationt

logic o18 : durationt

logic o19 : durationt

logic o20 : accesspolicyt

logic o21 : filesizet

logic o22 : filesizet

logic o23 : classt

logic o24 : classt

logic o25 : fart

logic temp___1777 : durationt

logic temp___17771 : durationt

logic temp___17772 : durationt

logic temp___17773 : durationt

logic temp___17774 : durationt

logic temp___17775 : durationt

logic temp___17776 : durationt

logic temp___17777 : accesspolicyt

logic temp___17778 : filesizet

logic temp___17779 : filesizet

logic temp___177710 : classt

logic temp___177711 : classt

logic temp___177712 : fart

logic o26 : int

logic o27 : (int,character) farray

logic o28 : (int,character) farray

logic o29 : t

logic o30 : screenycoordt

logic o31 : screenxcoordt

logic o32 : screenxcoordt

logic o33 : screenycoordt

logic o34 : screenxcoordt

logic o35 : screenycoordt

logic o36 : int

logic o37 : (int,character) farray

logic o38 : (int,character) farray

logic o39 : t

logic o40 : screenycoordt

logic o41 : screenxcoordt

logic o42 : screenxcoordt

logic o43 : screenycoordt

logic o44 : screenxcoordt

logic o45 : screenycoordt

logic o46 : int

logic o47 : (int,character) farray

logic o48 : (int,character) farray

logic o49 : t

logic o50 : screenycoordt

logic o51 : screenxcoordt

logic o52 : screenxcoordt

logic o53 : screenycoordt

logic o54 : screenxcoordt

logic o55 : screenycoordt

logic o56 : int

logic o57 : (int,character) farray

logic o58 : (int,character) farray

logic o59 : t

logic o60 : screenycoordt

logic o61 : screenxcoordt

logic o62 : screenxcoordt

logic o63 : screenycoordt

logic o64 : screenxcoordt

logic o65 : screenycoordt

logic o66 : (int,character) farray

logic o67 : (int,character) farray

logic o68 : t

logic o69 : screenycoordt

logic o70 : screenxcoordt

logic o71 : screenxcoordt

logic o72 : screenycoordt

logic o73 : screenxcoordt

logic o74 : screenycoordt

logic temp___1780 : (int,character) farray

logic o75 : (int,character) farray

logic o76 : screenycoordt

logic o77 : screenxcoordt

logic o78 : screenxcoordt

logic o79 : screenycoordt

logic o80 : screenxcoordt

logic o81 : screenycoordt

logic temp___1783 : (int,character) farray

logic o82 : (int,character) farray

logic o83 : screenycoordt

logic o84 : screenxcoordt

logic o85 : screenxcoordt

logic o86 : screenycoordt

logic o87 : screenxcoordt

logic o88 : screenycoordt

logic temp___1786 : (int,character) farray

logic workstart1 : int

logic workend1 : int

logic authduration1 : int

logic policy1 : int

logic minpreservedlog1 : int

logic alarmthreshold1 : int

logic minentry1 : int

logic clearance1 : int

logic maxfar1 : int

logic configdata__thedisplayfields__thetokenremovalduration : int

logic configdata__thedisplayfields__thefingerwaitduration : int

logic configdata__thedisplayfields__thealarmsilentduration : int

logic configdata__thedisplayfields__thelatchunlockduration : int

logic result : int

logic latchunlock1 : int

logic result1 : int

logic alarmsilent1 : int

logic result2 : int

logic fingerwait1 : int

logic result3 : int

logic tokenremove1 : int

logic result4 : durationt

logic result5 : durationt

logic result6 : durationt

logic result7 : durationt

logic result8 : durationt

logic result9 : durationt

logic result10 : durationt

logic result11 : accesspolicyt

logic result12 : filesizet

logic result13 : filesizet

logic result14 : classt

logic result15 : classt

logic result16 : fart

logic newconfig__split_fields13 : durationt

logic newconfig__split_fields14 : durationt

logic newconfig__split_fields15 : durationt

logic newconfig__split_fields16 : durationt

logic newconfig__split_fields17 : durationt

logic newconfig__split_fields18 : durationt

logic newconfig__split_fields19 : durationt

logic newconfig__split_fields20 : accesspolicyt

logic newconfig__split_fields21 : filesizet

logic newconfig__split_fields22 : filesizet

logic newconfig__split_fields23 : classt

logic newconfig__split_fields24 : classt

logic newconfig__split_fields25 : fart

logic ok : bool

logic consoleok : bool

logic result17 : bool

logic ok1 : bool

logic consoleok1 : bool

logic result18 : bool

logic ok2 : bool

logic consoleok2 : bool

logic result19 : bool

logic ok3 : bool

logic consoleok3 : bool

logic result20 : bool

logic ok4 : bool

logic consoleok4 : bool

logic result21 : bool

logic ok5 : bool

logic consoleok5 : bool

logic result22 : bool

logic ok6 : bool

logic result23 : (int,character) farray

logic c112b1 : (int,character) farray

logic consoleok6 : bool

logic result24 : bool

logic ok7 : bool

logic result25 : (int,character) farray

logic c118b1 : (int,character) farray

logic consoleok7 : bool

logic result26 : bool

logic ok8 : bool

axiom H : ((0 <= 864000) -> in_range5(latchunlock))

axiom H1 : ((0 <= 864000) -> in_range5(alarmsilent))

axiom H2 : ((0 <= 864000) -> in_range5(fingerwait))

axiom H3 : ((0 <= 864000) -> in_range5(tokenremove))

axiom H4 : ((0 <= 864000) -> in_range5(workstart))

axiom H5 : ((0 <= 864000) -> in_range5(workend))

axiom H6 : ((0 <= 864000) -> in_range5(authduration))

axiom H7 : ((0 <= 1) -> in_range10(policy))

axiom H8 : ((0 <= 4194304) -> in_range4(minpreservedlog))

axiom H9 : ((0 <= 4194304) -> in_range4(alarmthreshold))

axiom H10 : ((0 <= 5) -> in_range8(minentry))

axiom H11 : ((0 <= 5) -> in_range8(clearance))

axiom H12 : ((0 <= 2147483647) -> in_range7(maxfar))

axiom H13 : in_range11(column1)

axiom H14 : in_range11(column2)

axiom H15 : in_range12(row1)

axiom H16 : in_range12(row2)

axiom H17 : in_range12(row3)

axiom H18 : in_range12(row4)

axiom H19 : in_range12(row5)

axiom H20 : in_range12(row6)

axiom H21 : in_range12(row7)

axiom H22 :
  ((((((((((((in_range9(configdata__thedisplayfields__thelatchunlockduration) and
  in_range9(configdata__thedisplayfields__thealarmsilentduration)) and
  in_range9(configdata__thedisplayfields__thefingerwaitduration)) and
  in_range9(configdata__thedisplayfields__thetokenremovalduration)) and
  in_range8(clearance1)) and in_range5(workstart1)) and
  in_range5(workend1)) and in_range5(authduration1)) and
  in_range10(policy1)) and in_range8(minentry1)) and
  in_range4(minpreservedlog1)) and in_range4(alarmthreshold1)) and
  in_range7(maxfar1))

axiom H23 : (result = latchunlock)

axiom H24 :
  (latchunlock1 = configdata__thedisplayfields__thelatchunlockduration)

axiom H25 : (result1 = alarmsilent)

axiom H26 :
  (alarmsilent1 = configdata__thedisplayfields__thealarmsilentduration)

axiom H27 : (result2 = fingerwait)

axiom H28 :
  (fingerwait1 = configdata__thedisplayfields__thefingerwaitduration)

axiom H29 : (result3 = tokenremove)

axiom H30 :
  (tokenremove1 = configdata__thedisplayfields__thetokenremovalduration)

axiom H31 : (to_rep4(o) = maxfar1)

axiom H32 : (to_rep5(o1) = clearance1)

axiom H33 : (to_rep5(o2) = minentry1)

axiom H34 : (to_rep2(o3) = alarmthreshold1)

axiom H35 : (to_rep2(o4) = minpreservedlog1)

axiom H36 : (to_rep6(o5) = policy1)

axiom H37 : (to_rep3(o6) = authduration1)

axiom H38 : (to_rep3(o7) = workend1)

axiom H39 : (to_rep3(o8) = workstart1)

axiom H40 : (to_rep3(o9) = tokenremove1)

axiom H41 : (to_rep3(o10) = fingerwait1)

axiom H42 : (to_rep3(o11) = alarmsilent1)

axiom H43 : (to_rep3(o12) = latchunlock1)

axiom H44 : ((o13 = o12) and ((o14 = o11) and ((o15 = o10) and
  ((o16 = o9) and ((o17 = o8) and ((o18 = o7) and ((o19 = o6) and
  ((o20 = o5) and ((o21 = o4) and ((o22 = o3) and ((o23 = o2) and
  ((o24 = o1) and (o25 = o)))))))))))))

axiom H45 : ((temp___1777 = o13) and ((temp___17771 = o14) and
  ((temp___17772 = o15) and ((temp___17773 = o16) and
  ((temp___17774 = o17) and ((temp___17775 = o18) and
  ((temp___17776 = o19) and ((temp___17777 = o20) and
  ((temp___17778 = o21) and ((temp___17779 = o22) and
  ((temp___177710 = o23) and ((temp___177711 = o24) and
  (temp___177712 = o25)))))))))))))

axiom H46 : ((result4 = newconfig__split_fields) and
  ((result5 = newconfig__split_fields1) and
  ((result6 = newconfig__split_fields2) and
  ((result7 = newconfig__split_fields3) and
  ((result8 = newconfig__split_fields4) and
  ((result9 = newconfig__split_fields5) and
  ((result10 = newconfig__split_fields6) and
  ((result11 = newconfig__split_fields7) and
  ((result12 = newconfig__split_fields8) and
  ((result13 = newconfig__split_fields9) and
  ((result14 = newconfig__split_fields10) and
  ((result15 = newconfig__split_fields11) and
  (result16 = newconfig__split_fields12)))))))))))))

axiom H47 : ((newconfig__split_fields13 = temp___1777) and
  ((newconfig__split_fields14 = temp___17771) and
  ((newconfig__split_fields15 = temp___17772) and
  ((newconfig__split_fields16 = temp___17773) and
  ((newconfig__split_fields17 = temp___17774) and
  ((newconfig__split_fields18 = temp___17775) and
  ((newconfig__split_fields19 = temp___17776) and
  ((newconfig__split_fields20 = temp___17777) and
  ((newconfig__split_fields21 = temp___17778) and
  ((newconfig__split_fields22 = temp___17779) and
  ((newconfig__split_fields23 = temp___177710) and
  ((newconfig__split_fields24 = temp___177711) and
  (newconfig__split_fields25 = temp___177712)))))))))))))

axiom H48 : ((currentconfig__split_fields = true) -> (not (bool_eq14({
  us_split_fields1 = { rec__screen__displayedconfigt__latchunlock =
  currentconfig__split_fields1; rec__screen__displayedconfigt__alarmsilent =
  currentconfig__split_fields2; rec__screen__displayedconfigt__fingerwait =
  currentconfig__split_fields3; rec__screen__displayedconfigt__tokenremove =
  currentconfig__split_fields4; rec__screen__displayedconfigt__workstart =
  currentconfig__split_fields5; rec__screen__displayedconfigt__workend =
  currentconfig__split_fields6; rec__screen__displayedconfigt__authduration =
  currentconfig__split_fields7; rec__screen__displayedconfigt__policy =
  currentconfig__split_fields8;
  rec__screen__displayedconfigt__minpreservedlog =
  currentconfig__split_fields9;
  rec__screen__displayedconfigt__alarmthreshold =
  currentconfig__split_fields10; rec__screen__displayedconfigt__minentry =
  currentconfig__split_fields11; rec__screen__displayedconfigt__clearance =
  currentconfig__split_fields12; rec__screen__displayedconfigt__maxfar =
  currentconfig__split_fields13 } }, { us_split_fields1 = {
  rec__screen__displayedconfigt__latchunlock = newconfig__split_fields13;
  rec__screen__displayedconfigt__alarmsilent = newconfig__split_fields14;
  rec__screen__displayedconfigt__fingerwait = newconfig__split_fields15;
  rec__screen__displayedconfigt__tokenremove = newconfig__split_fields16;
  rec__screen__displayedconfigt__workstart = newconfig__split_fields17;
  rec__screen__displayedconfigt__workend = newconfig__split_fields18;
  rec__screen__displayedconfigt__authduration = newconfig__split_fields19;
  rec__screen__displayedconfigt__policy = newconfig__split_fields20;
  rec__screen__displayedconfigt__minpreservedlog = newconfig__split_fields21;
  rec__screen__displayedconfigt__alarmthreshold = newconfig__split_fields22;
  rec__screen__displayedconfigt__minentry = newconfig__split_fields23;
  rec__screen__displayedconfigt__clearance = newconfig__split_fields24;
  rec__screen__displayedconfigt__maxfar = newconfig__split_fields25 }
  }) = true)))

axiom H49 : (result17 = ok)

axiom H50 : (ok1 = match_bool(ok, consoleok, false))

axiom H51 : (to_rep8(o30) = 9)

axiom H52 : (to_rep7(o31) = 25)

axiom H53 : ((o32 = o31) and (o33 = o30))

axiom H54 : ((o34 = o32) and (o35 = o33))

axiom H55 : ((o26 = latchunlock1) and in_range9(latchunlock1))

axiom H56 : (o27 = secondsstring(o26))

axiom H57 : ((o28 = o27) and (o29 = mk(1, 7)))

axiom H58 : (result18 = ok1)

axiom H59 : (ok2 = match_bool(ok1, consoleok1, false))

axiom H60 : (to_rep8(o40) = 10)

axiom H61 : (to_rep7(o41) = 25)

axiom H62 : ((o42 = o41) and (o43 = o40))

axiom H63 : ((o44 = o42) and (o45 = o43))

axiom H64 : ((o36 = alarmsilent1) and in_range9(alarmsilent1))

axiom H65 : (o37 = secondsstring(o36))

axiom H66 : ((o38 = o37) and (o39 = mk(1, 7)))

axiom H67 : (result19 = ok2)

axiom H68 : (ok3 = match_bool(ok2, consoleok2, false))

axiom H69 : (to_rep8(o50) = 9)

axiom H70 : (to_rep7(o51) = 63)

axiom H71 : ((o52 = o51) and (o53 = o50))

axiom H72 : ((o54 = o52) and (o55 = o53))

axiom H73 : ((o46 = fingerwait1) and in_range9(fingerwait1))

axiom H74 : (o47 = secondsstring(o46))

axiom H75 : ((o48 = o47) and (o49 = mk(1, 7)))

axiom H76 : (result20 = ok3)

axiom H77 : (ok4 = match_bool(ok3, consoleok3, false))

axiom H78 : (to_rep8(o60) = 10)

axiom H79 : (to_rep7(o61) = 63)

axiom H80 : ((o62 = o61) and (o63 = o60))

axiom H81 : ((o64 = o62) and (o65 = o63))

axiom H82 : ((o56 = tokenremove1) and in_range9(tokenremove1))

axiom H83 : (o57 = secondsstring(o56))

axiom H84 : ((o58 = o57) and (o59 = mk(1, 7)))

axiom H85 : (result21 = ok4)

axiom H86 : (ok5 = match_bool(ok4, consoleok4, false))

axiom H87 : (to_rep8(o69) = 12)

axiom H88 : (to_rep7(o70) = 25)

axiom H89 : ((o71 = o70) and (o72 = o69))

axiom H90 : ((o73 = o71) and (o74 = o72))

axiom H91 : (o66 = accesspolicystring(policy1))

axiom H92 : ((o67 = o66) and (o68 = mk(1, 12)))

axiom H93 : (result22 = ok5)

axiom H94 : (ok6 = match_bool(ok5, consoleok5, false))

axiom H95 : (workstart1 = c111b)

axiom H96 : in_range5(c111b)

axiom H97 : (temp___1780 = printduration(c111b))

axiom H98 : ((1 <= 5) -> (((1 <= 1) and (1 <= 10)) and ((1 <= 5) and
  (5 <= 10))))

axiom H99 : (o75 = temp___1780)

axiom H100 : (result23 = c112b)

axiom H101 : (c112b1 = o75)

axiom H102 : (to_rep8(o76) = 12)

axiom H103 : (to_rep7(o77) = 63)

axiom H104 : ((o78 = o77) and (o79 = o76))

axiom H105 : ((o80 = o78) and (o81 = o79))

axiom H106 : (result24 = ok6)

axiom H107 : (ok7 = match_bool(ok6, consoleok6, false))

axiom H108 : (workend1 = c117b)

axiom H109 : in_range5(c117b)

axiom H110 : (temp___1783 = printduration(c117b))

axiom H111 : (1 <= 5)

 (* File "screen.adb", line 280, characters 0-0 *)
goal WP_parameter_def : (1 <= 1)
