(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(declare-const x Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const y Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort ta1C 0)
(declare-fun ta1Cqtint (ta1C) Int)
(assert (forall ((i ta1C)) (and (<= 1 (ta1Cqtint i)) (<= (ta1Cqtint i) 10))))
(define-fun in_range1 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 10)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (ta1C ta1C) Bool)
(declare-const dummy1 ta1C)
(declare-datatypes () ((ta1C__ref (mk_ta1C__ref (ta1C__content ta1C)))))
(define-fun ta1C__ref___projection ((a ta1C__ref)) ta1C (ta1C__content a))
(define-fun to_rep ((x1 ta1C)) Int (ta1Cqtint x1))
(declare-fun of_rep (Int) ta1C)
(assert (forall ((x1 ta1C)) (! (= (of_rep (to_rep x1)) x1) :pattern ((to_rep x1)))))
(assert (forall ((x1 ta1C)) (! (in_range1 (to_rep x1)) :pattern ((to_rep x1)))))
(assert (forall ((x1 Int)) (! (=> (in_range1 x1) (= (to_rep (of_rep x1)) x1)) :pattern ((to_rep (of_rep x1))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int ta1C))))))
(declare-fun slide ((Array Int ta1C) Int Int) (Array Int ta1C))
(assert (forall ((a (Array Int ta1C))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int ta1C))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int ta1C)) (a__first Int) (a__last Int) (b (Array Int ta1C)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int ta1C)) (b (Array Int ta1C))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort ttmp3C 0)
(declare-fun ttmp3Cqtint (ttmp3C) Int)
(assert (forall ((i ttmp3C)) (and (<= 1 (ttmp3Cqtint i)) (<= (ttmp3Cqtint i) 5))))
(define-fun in_range2 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 5)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (ttmp3C ttmp3C) Bool)
(declare-const dummy2 ttmp3C)
(declare-datatypes () ((ttmp3C__ref (mk_ttmp3C__ref (ttmp3C__content ttmp3C)))))
(define-fun ttmp3C__ref___projection ((a ttmp3C__ref)) ttmp3C (ttmp3C__content a))
(define-fun to_rep1 ((x1 ttmp3C)) Int (ttmp3Cqtint x1))
(declare-fun of_rep1 (Int) ttmp3C)
(assert (forall ((x1 ttmp3C)) (! (= (of_rep1 (to_rep1 x1)) x1) :pattern ((to_rep1 x1)))))
(assert (forall ((x1 ttmp3C)) (! (in_range2 (to_rep1 x1)) :pattern ((to_rep1 x1)))))
(assert (forall ((x1 Int)) (! (=> (in_range2 x1) (= (to_rep1 (of_rep1 x1)) x1)) :pattern ((to_rep1 (of_rep1 x1))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int ttmp3C))))))
(declare-fun slide1 ((Array Int ttmp3C) Int Int) (Array Int ttmp3C))
(assert (forall ((a (Array Int ttmp3C))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int ttmp3C))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int ttmp3C)) (a__first Int) (a__last Int) (b (Array Int ttmp3C)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep1 (select a temp___idx_155)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_155))))))) true false))
(assert (forall ((a (Array Int ttmp3C)) (b (Array Int ttmp3C))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep1 (select a temp___idx_155)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_155)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-sort ttmp4C 0)
(declare-fun ttmp4Cqtint (ttmp4C) Int)
(assert (forall ((i ttmp4C)) (and (<= 1 (ttmp4Cqtint i)) (<= (ttmp4Cqtint i) 5))))
(define-fun in_range3 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 5)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (ttmp4C ttmp4C) Bool)
(declare-const dummy3 ttmp4C)
(declare-datatypes () ((ttmp4C__ref (mk_ttmp4C__ref (ttmp4C__content ttmp4C)))))
(define-fun ttmp4C__ref___projection ((a ttmp4C__ref)) ttmp4C (ttmp4C__content a))
(define-fun to_rep2 ((x1 ttmp4C)) Int (ttmp4Cqtint x1))
(declare-fun of_rep2 (Int) ttmp4C)
(assert (forall ((x1 ttmp4C)) (! (= (of_rep2 (to_rep2 x1)) x1) :pattern ((to_rep2 x1)))))
(assert (forall ((x1 ttmp4C)) (! (in_range3 (to_rep2 x1)) :pattern ((to_rep2 x1)))))
(assert (forall ((x1 Int)) (! (=> (in_range3 x1) (= (to_rep2 (of_rep2 x1)) x1)) :pattern ((to_rep2 (of_rep2 x1))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int ttmp4C))))))
(declare-fun slide2 ((Array Int ttmp4C) Int Int) (Array Int ttmp4C))
(assert (forall ((a (Array Int ttmp4C))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int ttmp4C))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int ttmp4C)) (a__first Int) (a__last Int) (b (Array Int ttmp4C)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (to_rep2 (select a temp___idx_156)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_156))))))) true false))
(assert (forall ((a (Array Int ttmp4C)) (b (Array Int ttmp4C))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (to_rep2 (select a temp___idx_156)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_156)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort ttmp5C 0)
(declare-fun ttmp5Cqtint (ttmp5C) Int)
(assert (forall ((i ttmp5C)) (and (<= 1 (ttmp5Cqtint i)) (<= (ttmp5Cqtint i) 5))))
(define-fun in_range4 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 5)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (ttmp5C ttmp5C) Bool)
(declare-const dummy4 ttmp5C)
(declare-datatypes () ((ttmp5C__ref (mk_ttmp5C__ref (ttmp5C__content ttmp5C)))))
(define-fun ttmp5C__ref___projection ((a ttmp5C__ref)) ttmp5C (ttmp5C__content a))
(define-fun to_rep3 ((x1 ttmp5C)) Int (ttmp5Cqtint x1))
(declare-fun of_rep3 (Int) ttmp5C)
(assert (forall ((x1 ttmp5C)) (! (= (of_rep3 (to_rep3 x1)) x1) :pattern ((to_rep3 x1)))))
(assert (forall ((x1 ttmp5C)) (! (in_range4 (to_rep3 x1)) :pattern ((to_rep3 x1)))))
(assert (forall ((x1 Int)) (! (=> (in_range4 x1) (= (to_rep3 (of_rep3 x1)) x1)) :pattern ((to_rep3 (of_rep3 x1))))))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int ttmp5C))))))
(declare-fun slide3 ((Array Int ttmp5C) Int Int) (Array Int ttmp5C))
(assert (forall ((a (Array Int ttmp5C))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int ttmp5C))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq3 ((a (Array Int ttmp5C)) (a__first Int) (a__last Int) (b (Array Int ttmp5C)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_157 Int)) (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last)) (= (to_rep3 (select a temp___idx_157)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_157))))))) true false))
(assert (forall ((a (Array Int ttmp5C)) (b (Array Int ttmp5C))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_157 Int)) (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last)) (= (to_rep3 (select a temp___idx_157)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_157)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(assert (in_range x))
(assert (in_range y))
(assert (not (in_range1 x)))
(check-sat)
(exit)
