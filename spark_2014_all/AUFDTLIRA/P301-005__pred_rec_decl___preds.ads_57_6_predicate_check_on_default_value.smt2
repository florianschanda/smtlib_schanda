(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort int_ok 0)
(declare-fun int_okqtint (int_ok) Int)
(assert (forall ((i int_ok)) (and (<= (- 2147483648) (int_okqtint i)) (<= (int_okqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (int_ok int_ok) Bool)
(declare-const dummy int_ok)
(declare-datatypes () ((int_ok__ref (mk_int_ok__ref (int_ok__content int_ok)))))
(define-fun int_ok__ref___projection ((a int_ok__ref)) int_ok (int_ok__content a))
(define-fun dynamic_invariant ((temp___expr_159 Int) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (and (=> (or (= temp___is_init_155 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_159)) (=> (= temp___do_toplevel_157 true) (=> (= temp___is_init_155 true) (or (and (<= (- 2147483648) temp___expr_159) (<= temp___expr_159 (- 1))) (and (<= 1 temp___expr_159) (<= temp___expr_159 2147483647)))))))
(define-fun dynamic_predicate ((temp___163 Int)) Bool (or (and (<= (- 2147483648) temp___163) (<= temp___163 (- 1))) (and (<= 1 temp___163) (<= temp___163 2147483647))))
(define-fun to_rep ((x int_ok)) Int (int_okqtint x))
(declare-fun of_rep (Int) int_ok)
(assert (forall ((x int_ok)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x int_ok)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-const i7s Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort tarr_okD1 0)
(declare-fun tarr_okD1qtint (tarr_okD1) Int)
(assert (forall ((i tarr_okD1)) (and (<= 1 (tarr_okD1qtint i)) (<= (tarr_okD1qtint i) 10))))
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (tarr_okD1 tarr_okD1) Bool)
(declare-const dummy1 tarr_okD1)
(declare-datatypes () ((tarr_okD1__ref (mk_tarr_okD1__ref (tarr_okD1__content tarr_okD1)))))
(define-fun tarr_okD1__ref___projection ((a tarr_okD1__ref)) tarr_okD1 (tarr_okD1__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (integer integer) Bool)
(declare-const dummy2 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(define-fun dynamic_invariant1 ((temp___expr_243 (Array Int integer)) (temp___is_init_239 Bool) (temp___skip_constant_240 Bool) (temp___do_toplevel_241 Bool) (temp___do_typ_inv_242 Bool)) Bool (=> (= temp___do_toplevel_241 true) (=> (= temp___is_init_239 true) (forall ((k Int)) (=> (and (<= 1 k) (<= k 10)) (not (= (to_rep1 (select temp___expr_243 k)) 0)))))))
(define-fun default_initial_assumption ((temp___expr_246 (Array Int integer)) (temp___skip_top_level_247 Bool)) Bool (forall ((temp___248 Int)) (=> (and (<= 1 temp___248) (<= temp___248 10)) (= (to_rep1 (select temp___expr_246 temp___248)) 1))))
(define-fun dynamic_predicate1 ((temp___249 (Array Int integer))) Bool (forall ((k Int)) (=> (and (<= 1 k) (<= k 10)) (not (= (to_rep1 (select temp___249 k)) 0)))))
(declare-const i19s (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const dummy3 (Array Int integer))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(declare-fun user_eq3 ((Array Int integer) (Array Int integer)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__preds__rec_ok__i integer) (rec__preds__rec_ok__x int_ok) (rec__preds__rec_ok__a (Array Int integer))))))
(define-fun us_split_fields_I__projection ((a us_split_fields)) integer (rec__preds__rec_ok__i a))
(define-fun us_split_fields_X__projection ((a us_split_fields)) int_ok (rec__preds__rec_ok__x a))
(define-fun us_split_fields_A__projection ((a us_split_fields)) (Array Int integer) (rec__preds__rec_ok__a a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq1 ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep1 (rec__preds__rec_ok__i (us_split_fields1 a))) (to_rep1 (rec__preds__rec_ok__i (us_split_fields1 b)))) (= (to_rep (rec__preds__rec_ok__x (us_split_fields1 a))) (to_rep (rec__preds__rec_ok__x (us_split_fields1 b))))) (= (bool_eq (rec__preds__rec_ok__a (us_split_fields1 a)) 1 10 (rec__preds__rec_ok__a (us_split_fields1 b)) 1 10) true)) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const preds__rec_ok__i__first__bit Int)
(declare-const preds__rec_ok__i__last__bit Int)
(declare-const preds__rec_ok__i__position Int)
(assert (<= 0 preds__rec_ok__i__first__bit))
(assert (< preds__rec_ok__i__first__bit preds__rec_ok__i__last__bit))
(assert (<= 0 preds__rec_ok__i__position))
(declare-const preds__rec_ok__x__first__bit Int)
(declare-const preds__rec_ok__x__last__bit Int)
(declare-const preds__rec_ok__x__position Int)
(assert (<= 0 preds__rec_ok__x__first__bit))
(assert (< preds__rec_ok__x__first__bit preds__rec_ok__x__last__bit))
(assert (<= 0 preds__rec_ok__x__position))
(declare-const preds__rec_ok__a__first__bit Int)
(declare-const preds__rec_ok__a__last__bit Int)
(declare-const preds__rec_ok__a__position Int)
(assert (<= 0 preds__rec_ok__a__first__bit))
(assert (< preds__rec_ok__a__first__bit preds__rec_ok__a__last__bit))
(assert (<= 0 preds__rec_ok__a__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((rec_ok__ref (mk_rec_ok__ref (rec_ok__content us_rep)))))
(define-fun rec_ok__ref___projection ((a rec_ok__ref)) us_rep (rec_ok__content a))
(define-fun dynamic_invariant2 ((temp___expr_273 us_rep) (temp___is_init_269 Bool) (temp___skip_constant_270 Bool) (temp___do_toplevel_271 Bool) (temp___do_typ_inv_272 Bool)) Bool (and (=> (= temp___do_toplevel_271 true) (=> (= temp___is_init_269 true) (and (and (not (= (to_rep1 (rec__preds__rec_ok__i (us_split_fields1 temp___expr_273))) 0)) (not (= (to_rep (rec__preds__rec_ok__x (us_split_fields1 temp___expr_273))) 0))) (forall ((k Int)) (=> (and (<= 1 k) (<= k 10)) (not (= (to_rep1 (let ((temp___275 (rec__preds__rec_ok__a (us_split_fields1 temp___expr_273)))) (select temp___275 k))) 0))))))) (and (=> (= temp___is_init_269 true) (let ((temp___277 (to_rep (rec__preds__rec_ok__x (us_split_fields1 temp___expr_273))))) (or (and (<= (- 2147483648) temp___277) (<= temp___277 (- 1))) (and (<= 1 temp___277) (<= temp___277 2147483647))))) (=> (= temp___is_init_269 true) (forall ((k Int)) (=> (and (<= 1 k) (<= k 10)) (not (= (to_rep1 (select (rec__preds__rec_ok__a (us_split_fields1 temp___expr_273)) k)) 0))))))))
(define-fun default_initial_assumption1 ((temp___expr_280 us_rep) (temp___skip_top_level_281 Bool)) Bool (and (and (= (to_rep1 (rec__preds__rec_ok__i (us_split_fields1 temp___expr_280))) 1) (= (to_rep (rec__preds__rec_ok__x (us_split_fields1 temp___expr_280))) 1)) (forall ((temp___284 Int)) (=> (and (<= 1 temp___284) (<= temp___284 10)) (= (to_rep1 (select (rec__preds__rec_ok__a (us_split_fields1 temp___expr_280)) temp___284)) 1)))))
(define-fun dynamic_predicate2 ((temp___285 us_rep)) Bool (and (and (not (= (to_rep1 (rec__preds__rec_ok__i (us_split_fields1 temp___285))) 0)) (not (= (to_rep (rec__preds__rec_ok__x (us_split_fields1 temp___285))) 0))) (forall ((k Int)) (=> (and (<= 1 k) (<= k 10)) (not (= (to_rep1 (let ((temp___287 (rec__preds__rec_ok__a (us_split_fields1 temp___285)))) (select temp___287 k))) 0))))))
(declare-const i31s us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_18)))
(declare-const x__split_fields integer)
(declare-const x__split_fields1 int_ok)
(declare-const x__split_fields2 (Array Int integer))
(declare-const temp___402 integer)
(declare-const temp___4021 int_ok)
(declare-const temp___4022 (Array Int integer))
(define-fun temp___4023 () us_rep (mk___rep (mk___split_fields temp___402 temp___4021 temp___4022)))
(assert (dynamic_invariant i7s true false true true))
(assert (dynamic_invariant1 i19s true false true true))
(assert (dynamic_invariant2 i31s true false true true))
(assert (dynamic_invariant2 (mk___rep (mk___split_fields x__split_fields x__split_fields1 x__split_fields2)) false false true true))
(assert (default_initial_assumption1 temp___4023 false))
(assert (not (dynamic_predicate2 temp___4023)))
(check-sat)
(exit)
