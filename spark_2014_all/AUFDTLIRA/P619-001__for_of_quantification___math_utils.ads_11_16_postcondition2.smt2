(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort tindexB 0)
(declare-fun tindexBqtint (tindexB) Int)
(assert (forall ((i tindexB)) (and (<= (- 32768) (tindexBqtint i)) (<= (tindexBqtint i) 32767))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 32768) x) (<= x 32767)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (tindexB tindexB) Bool)
(declare-const dummy1 tindexB)
(declare-datatypes () ((tindexB__ref (mk_tindexB__ref (tindexB__content tindexB)))))
(define-fun tindexB__ref___projection ((a tindexB__ref)) tindexB (tindexB__content a))
(define-fun to_rep1 ((x tindexB)) Int (tindexBqtint x))
(declare-fun of_rep1 (Int) tindexB)
(assert (forall ((x tindexB)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x tindexB)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort index 0)
(declare-fun indexqtint (index) Int)
(assert (forall ((i index)) (and (<= 1 (indexqtint i)) (<= (indexqtint i) 1000))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (index index) Bool)
(declare-const dummy2 index)
(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))
(declare-sort t 0)
(declare-fun first (t) tindexB)
(declare-fun last (t) tindexB)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (in_range3 low) (in_range3 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((vector__ref (mk_vector__ref (vector__content us_t)))))
(define-fun vector__ref___projection ((a vector__ref)) us_t (vector__content a))
(define-fun dynamic_invariant1 ((temp___expr_166 us_t) (temp___is_init_162 Bool) (temp___skip_constant_163 Bool) (temp___do_toplevel_164 Bool) (temp___do_typ_inv_165 Bool)) Bool (=> (not (= temp___skip_constant_163 true)) (dynamic_property 1 1000 (first1 temp___expr_166) (last1 temp___expr_166))))
(declare-const v us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (tindexB tindexB) Bool)
(declare-const dummy4 tindexB)
(declare-datatypes () ((t2b__ref (mk_t2b__ref (t2b__content tindexB)))))
(define-fun t2b__ref___projection ((a t2b__ref)) tindexB (t2b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_invariant2 ((temp___expr_159 Int) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (or (= temp___is_init_155 true) (<= 1 1000)) (in_range3 temp___expr_159)))
(declare-const result__ Int)
(declare-const i Int)
(declare-const math_utils__max__result Int)
(declare-const temp___187 Int)
(declare-const temp___186 Int)
(declare-const temp___188 Int)
(declare-const result Int)
(declare-const result__1 Int)
(declare-const result1 Int)
(declare-const i1 Int)
(declare-const result2 Int)
(declare-const result__2 Int)
(declare-const result__3 Int)
(declare-const i2 Int)
(declare-const temp___1881 Int)
(declare-const result3 Int)
(declare-const temp___1882 Int)
(declare-const result__4 Int)
(declare-const i3 Int)
(declare-const result__5 Int)
(declare-const i4 Int)
(declare-const result__6 Int)
(declare-const i5 Int)
(declare-const result__7 Int)
(declare-const i6 Int)
(declare-const result4 Int)
(declare-const math_utils__max__result1 Int)
(declare-const math_utils__max__result2 Int)
(declare-const math_utils__max__result3 Int)
(declare-const result__8 Int)
(declare-const i7 Int)
(declare-const math_utils__max__result4 int__ref)
(declare-const result__9 Int)
(declare-const i8 Int)
(declare-const math_utils__max__result5 Int)
(define-fun i9 () int__ref (mk_int__ref i5))
(define-fun result__10 () int__ref (mk_int__ref result__6))
(declare-const result5 Int)
(assert (dynamic_invariant1 v true false true true))
(assert (< 0 (length v)))
(assert (= (mk_int__ref result) (mk_int__ref result__)))
(assert (= result__1 (- 2147483648)))
(assert (in_range1 result__1))
(assert (< 0 (length v)))
(assert (= (mk_int__ref result1) (mk_int__ref i)))
(assert (= i1 (to_rep1 (first (rt v)))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= temp___187 i1)))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= temp___186 result__1)))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= 0 temp___188)))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (=> (< result__1 (to_rep (select (elts v) i1))) (= result__1 result2))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (=> (< result__1 (to_rep (select (elts v) i1))) (= result__2 (to_rep (select (elts v) i1))))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (=> (not (< result__1 (to_rep (select (elts v) i1)))) (= result__2 result__1))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v)))))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (forall ((k Int)) (=> (and (<= (to_rep1 (first (rt v))) k) (<= k i2)) (<= (to_rep (select (elts v) k)) result__3)))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (exists ((k Int)) (and (and (<= (to_rep1 (first (rt v))) k) (<= k i2)) (= result__3 (to_rep (select (elts v) k)))))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (and (and (=> (<= (- 2147483648) 2147483647) (in_range1 result__3)) (=> (<= (to_rep1 (first (rt v))) (to_rep1 (last (rt v)))) (dynamic_property1 (to_rep1 (first (rt v))) (to_rep1 (last (rt v))) i2))) (and (<= (to_rep1 (first (rt v))) i2) (<= i2 (to_rep1 (last (rt v))))))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= temp___1881 result3)))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= temp___1882 i2)))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= i2 (to_rep1 (last (rt v))))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= i2 i3)))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= result__3 result__4)))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= i4 i2)))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= result__5 result__3)))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= i9 (mk_int__ref i3))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= result__10 (mk_int__ref result__4))))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= i6 i4)))
(assert (=> (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v))))) (= result__7 result__5)))
(assert (=> (not (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v)))))) (= i1 i5)))
(assert (=> (not (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v)))))) (= result__1 result__6)))
(assert (=> (not (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v)))))) (= i6 i1)))
(assert (=> (not (and (<= (to_rep1 (first (rt v))) i1) (<= i1 (to_rep1 (last (rt v)))))) (= result__7 result__1)))
(assert (exists ((temp___191 Int)) (and (and (<= (to_rep1 (first (rt v))) temp___191) (<= temp___191 (to_rep1 (last (rt v))))) (= result__6 (to_rep (select (elts v) temp___191))))))
(assert (= math_utils__max__result1 math_utils__max__result2))
(assert (= math_utils__max__result3 math_utils__max__result1))
(assert (= result4 math_utils__max__result))
(assert (= math_utils__max__result1 result__6))
(assert (= math_utils__max__result4 (mk_int__ref math_utils__max__result2)))
(assert (= (mk_int__ref i7) i9))
(assert (= (mk_int__ref result__8) result__10))
(assert (= math_utils__max__result5 math_utils__max__result3))
(assert (= i8 i6))
(assert (= result__9 result__7))
(assert (= result5 (int__content math_utils__max__result4)))
(declare-const temp___197 Int)
(assert (<= (to_rep1 (first (rt v))) temp___197))
(assert (<= temp___197 (to_rep1 (last (rt v)))))
(assert (not (<= (to_rep (select (elts v) temp___197)) (int__content math_utils__max__result4))))
(check-sat)
(exit)
