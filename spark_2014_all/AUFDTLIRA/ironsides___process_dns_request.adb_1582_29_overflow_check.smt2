(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range2 temp___expr_39)))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-sort qname_ptr_range 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 16383)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (qname_ptr_range qname_ptr_range) Bool)
(declare-const dummy3 qname_ptr_range)
(declare-datatypes () ((qname_ptr_range__ref (mk_qname_ptr_range__ref (qname_ptr_range__content qname_ptr_range)))))
(define-fun qname_ptr_range__ref___projection ((a qname_ptr_range__ref)) qname_ptr_range (qname_ptr_range__content a))
(define-fun dynamic_invariant1 ((temp___expr_782 Int) (temp___is_init_778 Bool) (temp___skip_constant_779 Bool) (temp___do_toplevel_780 Bool) (temp___do_typ_inv_781 Bool)) Bool (=> (or (= temp___is_init_778 true) (<= 0 16383)) (in_range4 temp___expr_782)))
(declare-sort wirestringtypeindex 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 129)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (wirestringtypeindex wirestringtypeindex) Bool)
(declare-const dummy4 wirestringtypeindex)
(declare-datatypes () ((wirestringtypeindex__ref (mk_wirestringtypeindex__ref (wirestringtypeindex__content wirestringtypeindex)))))
(define-fun wirestringtypeindex__ref___projection ((a wirestringtypeindex__ref)) wirestringtypeindex (wirestringtypeindex__content a))
(declare-const domainname (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const qname_location Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t53b__ref (mk_t53b__ref (t53b__content integer)))))
(define-fun t53b__ref___projection ((a t53b__ref)) integer (t53b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-fun temp___8027 (Int) (Array Int character))
(define-fun dynamic_invariant2 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(assert (forall ((temp___8029 Int)) (=> (dynamic_invariant2 temp___8029 true true true true) (forall ((temp___8030 Int)) (= (to_rep (select (temp___8027 temp___8029) temp___8030)) temp___8029)))))
(define-fun dynamic_invariant4 ((temp___expr_1018 Int) (temp___is_init_1014 Bool) (temp___skip_constant_1015 Bool) (temp___do_toplevel_1016 Bool) (temp___do_typ_inv_1017 Bool)) Bool (=> (or (= temp___is_init_1014 true) (<= 1 129)) (in_range5 temp___expr_1018)))
(declare-const trimmed_name (Array Int character))
(declare-const new_qname_location Int)
(declare-const zone_length Int)
(declare-const i Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const temp___8036 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const result Int)
(declare-const zone_length1 Int)
(declare-const result1 (Array Int character))
(declare-const trimmed_name1 (Array Int character))
(declare-const result2 Int)
(declare-const new_qname_location1 Int)
(declare-const result3 Int)
(declare-const new_qname_location2 Int)
(declare-const result4 Int)
(declare-const i1 Int)
(declare-const trimmed_name2 (Array Int character))
(declare-const i2 Int)
(assert (in_range4 qname_location))
(assert (=> (<= 0 16383) (in_range4 new_qname_location)))
(assert (<= qname_location 8192))
(assert (=> (<= 0 2147483647) (in_range2 zone_length)))
(assert (and (= o (+ (to_rep (select domainname 1)) 1)) (in_range2 (+ (to_rep (select domainname 1)) 1))))
(assert (= result zone_length))
(assert (= zone_length1 o))
(assert (= result1 trimmed_name))
(assert (= trimmed_name1 (temp___8027 32)))
(assert (= result2 new_qname_location))
(assert (= new_qname_location1 qname_location))
(assert (< 0 zone_length1))
(assert (< zone_length1 129))
(assert (and (= o1 zone_length1) (in_range4 zone_length1)))
(assert (= o2 (+ new_qname_location1 o1)))
(assert (and (= o3 o2) (in_range4 o2)))
(assert (= result3 new_qname_location1))
(assert (= new_qname_location2 o3))
(assert (and (= o4 (+ (to_rep (select domainname 1)) 1)) (in_range2 (+ (to_rep (select domainname 1)) 1))))
(assert (= temp___8036 (- 129 o4)))
(assert (= result4 i))
(assert (= i1 1))
(assert (<= 1 i1))
(assert (<= i1 temp___8036))
(assert (and (and (<= (+ i2 zone_length1) 129) (<= 1 i2)) (= zone_length1 (+ (to_rep (select domainname 1)) 1))))
(assert (and (and (=> (<= 1 (- 129 (+ (to_rep (select domainname 1)) 1))) (dynamic_property 1 (- 129 (+ (to_rep (select domainname 1)) 1)) i2)) (forall ((temp___8034 Int)) (=> (and (<= 1 temp___8034) (<= temp___8034 129)) (=> (<= i2 temp___8034) (= (select trimmed_name2 temp___8034) (select trimmed_name1 temp___8034)))))) (and (<= 1 i2) (<= i2 (- 129 (+ (to_rep (select domainname 1)) 1))))))
(assert (and (= o5 (+ (to_rep (select domainname 1)) 1)) (in_range2 (+ (to_rep (select domainname 1)) 1))))
(assert (= o6 (+ i2 o5)))
(assert (not (in_range1 o6)))
(check-sat)
(exit)
