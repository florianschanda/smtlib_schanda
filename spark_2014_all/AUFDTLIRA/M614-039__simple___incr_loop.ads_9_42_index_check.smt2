(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (integer Int) (Array Int integer))
(assert (forall ((v integer)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int Int) Int)
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq1 (us_t us_t) Bool)
(declare-const dummy1 us_t)
(declare-datatypes () ((arr_type__ref (mk_arr_type__ref (arr_type__content us_t)))))
(define-fun arr_type__ref___projection ((a arr_type__ref)) us_t (arr_type__content a))
(declare-const a__first integer)
(declare-const a__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (integer integer) Bool)
(declare-const dummy2 integer)
(declare-datatypes () ((t2b__ref (mk_t2b__ref (t2b__content integer)))))
(define-fun t2b__ref___projection ((a t2b__ref)) integer (t2b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant1 ((temp___expr_136 us_t) (temp___is_init_133 Bool) (temp___skip_constant_134 Bool) (temp___do_toplevel_135 Bool)) Bool (=> (not (= temp___skip_constant_134 true)) (dynamic_property (- 2147483648) 2147483647 (first1 temp___expr_136) (last1 temp___expr_136))))
(declare-const a (Array Int integer))
(declare-const i Int)
(declare-const i1 Int)
(declare-const temp___155 (Array Int integer))
(declare-const temp___153 (Array Int integer))
(declare-const temp___156 (Array Int integer))
(declare-const temp___151 Int)
(declare-const k Int)
(declare-const o Int)
(declare-const o1 Bool)
(declare-const o2 Int)
(declare-const o3 integer)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const k1 Int)
(declare-const o7 Int)
(declare-const o8 integer)
(declare-const o9 Int)
(declare-const o10 Bool)
(declare-const o11 Int)
(declare-const o12 integer)
(declare-const o13 (Array Int integer))
(declare-const i2 Int)
(declare-const o14 Int)
(declare-const o15 integer)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const o18 Int)
(declare-const a1 (Array Int integer))
(declare-const result Int)
(declare-const i3 Int)
(declare-const a2 (Array Int integer))
(declare-const i4 Int)
(declare-const result1 Bool)
(declare-const result2 (Array Int integer))
(declare-const a3 (Array Int integer))
(declare-const result3 Int)
(declare-const i5 Int)
(declare-const a4 (Array Int integer))
(declare-const i6 Int)
(declare-const a5 (Array Int integer))
(declare-const i7 Int)
(declare-const a6 (Array Int integer))
(declare-const i8 Int)
(declare-const a7 (Array Int integer))
(declare-const i9 Int)
(declare-const a8 (Array Int integer))
(declare-const i10 Int)
(declare-const a9 (Array Int integer))
(declare-const i11 Int)
(declare-const a10 (Array Int integer))
(declare-const i12 Int)
(declare-const a11 (Array Int integer))
(declare-const i13 Int)
(assert (dynamic_property (- 2147483648) 2147483647 (to_rep a__first) (to_rep a__last)))
(assert (forall ((i14 Int)) (=> (and (<= (to_rep a__first) i14) (<= i14 (to_rep a__last))) (< (to_rep (select a i14)) 2147483647))))
(assert (= (mk_int__ref result) (mk_int__ref i)))
(assert (= i3 (to_rep a__first)))
(assert (=> (and (<= (to_rep a__first) i3) (<= i3 (to_rep a__last))) (and (and (= temp___155 a) (and (= temp___153 a) (and (= temp___156 a) (and (= temp___151 i3) (and (and (forall ((k2 Int)) (=> (and (<= (to_rep a__first) k2) (<= k2 (- i4 1))) (= (to_rep (select a2 k2)) (+ (to_rep (select temp___155 k2)) 1)))) (forall ((k2 Int)) (=> (and (<= i4 k2) (<= k2 (to_rep a__last))) (= (to_rep (select a2 k2)) (to_rep (select temp___156 k2)))))) (and (and (and (=> (<= (to_rep a__first) (to_rep a__last)) (dynamic_property1 (to_rep a__first) (to_rep a__last) i4)) (forall ((temp___154 Int)) (=> (and (<= (to_rep a__first) temp___154) (<= temp___154 (to_rep a__last))) (=> (<= i4 temp___154) (= (select a2 temp___154) (select temp___153 temp___154)))))) (and (<= (to_rep a__first) i4) (<= i4 (to_rep a__last)))) (and (and (and (and (and (= o11 (+ (to_rep (select a2 i4)) 1)) (in_range1 (+ (to_rep (select a2 i4)) 1))) (= (to_rep o12) o11)) (= o13 (store a2 i4 o12))) (and (= a2 result2) (= a3 o13))) (= i4 (to_rep a__last))))))))) (and (and (= i4 i8) (= a3 a6)) (and (= i9 i4) (= a7 a3))))))
(assert (=> (and (<= (to_rep a__first) i3) (<= i3 (to_rep a__last))) (= (mk_int__ref i10) (mk_int__ref i8))))
(assert (=> (and (<= (to_rep a__first) i3) (<= i3 (to_rep a__last))) (= (mk_map__ref a8) (mk_map__ref a6))))
(assert (=> (and (<= (to_rep a__first) i3) (<= i3 (to_rep a__last))) (= i11 i9)))
(assert (=> (and (<= (to_rep a__first) i3) (<= i3 (to_rep a__last))) (= a9 a7)))
(assert (=> (not (and (<= (to_rep a__first) i3) (<= i3 (to_rep a__last)))) (= i3 i10)))
(assert (=> (not (and (<= (to_rep a__first) i3) (<= i3 (to_rep a__last)))) (= (mk_map__ref a8) (mk_map__ref a))))
(assert (=> (not (and (<= (to_rep a__first) i3) (<= i3 (to_rep a__last)))) (= i11 i3)))
(assert (=> (not (and (<= (to_rep a__first) i3) (<= i3 (to_rep a__last)))) (= a9 a1)))
(assert (= (mk_int__ref i12) (mk_int__ref i10)))
(assert (= (mk_map__ref a10) (mk_map__ref a8)))
(assert (= i13 i11))
(assert (= a11 a9))
(assert (<= (to_rep a__first) i2))
(assert (<= i2 (to_rep a__last)))
(assert (and (<= (to_rep a__first) i2) (<= i2 (to_rep a__last))))
(assert (= o14 i2))
(assert (= o15 (select a o14)))
(assert (= o16 (to_rep o15)))
(assert (= o17 (+ o16 1)))
(assert (and (= o18 o17) (in_range1 o17)))
(assert (not (<= (to_rep a__first) i2)))
(check-sat)
(exit)
