(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-const x Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun dynamic_property ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (integer integer) Bool)
(declare-const dummy1 integer)
(declare-datatypes () ((tarray1D1__ref (mk_tarray1D1__ref (tarray1D1__content integer)))))
(define-fun tarray1D1__ref___projection ((a tarray1D1__ref)) integer (tarray1D1__content a))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (to_rep (select a temp___idx_156)) (to_rep (select b (+ (- b__first a__first) temp___idx_156))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (to_rep (select a temp___idx_156)) (to_rep (select b (+ (- b__first a__first) temp___idx_156)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x1 us_t) (y us_t)) Bool (bool_eq (elts x1) (to_rep (first (rt x1))) (to_rep (last (rt x1))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((array1__ref (mk_array1__ref (array1__content us_t)))))
(define-fun array1__ref___projection ((a array1__ref)) us_t (array1__content a))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int us_t))))))
(declare-fun slide1 ((Array Int us_t) Int Int) (Array Int us_t))
(assert (forall ((a (Array Int us_t))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int us_t))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int us_t)) (a__first Int) (a__last Int) (b (Array Int us_t)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_157 Int)) (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last)) (= (bool_eq1 (select a temp___idx_157) (select b (+ (- b__first a__first) temp___idx_157))) true)))) true false))
(assert (forall ((a (Array Int us_t)) (b (Array Int us_t))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_157 Int)) (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last)) (= (bool_eq1 (select a temp___idx_157) (select b (+ (- b__first a__first) temp___idx_157))) true))))))))
(declare-const dummy3 (Array Int us_t))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int us_t)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int us_t)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int us_t)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int us_t))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int us_t))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int us_t))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq3 ((Array Int us_t) (Array Int us_t)) Bool)
(declare-sort tarray2D1 0)
(define-fun in_range1 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 1)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq4 (tarray2D1 tarray2D1) Bool)
(declare-const dummy4 tarray2D1)
(declare-datatypes () ((tarray2D1__ref (mk_tarray2D1__ref (tarray2D1__content tarray2D1)))))
(define-fun tarray2D1__ref___projection ((a tarray2D1__ref)) tarray2D1 (tarray2D1__content a))
(define-fun dynamic_invariant1 ((temp___expr_259 (Array Int us_t)) (temp___is_init_255 Bool) (temp___skip_constant_256 Bool) (temp___do_toplevel_257 Bool) (temp___do_typ_inv_258 Bool)) Bool (forall ((temp___260 Int)) (=> (and (<= 1 temp___260) (<= temp___260 1)) (and (dynamic_property1 1 x (first1 (select temp___expr_259 temp___260)) (last1 (select temp___expr_259 temp___260))) (and (= (first1 (select temp___expr_259 temp___260)) 1) (= (last1 (select temp___expr_259 temp___260)) x))))))
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t22b__ref (mk_t22b__ref (t22b__content integer)))))
(define-fun t22b__ref___projection ((a t22b__ref)) integer (t22b__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int integer)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int integer) (elts1 a))
(define-fun of_array1 ((a (Array Int integer)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int integer)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int integer)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int integer)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x1 us_t1) (y us_t1)) Bool (bool_eq (elts1 x1) (to_rep (first2 (rt1 x1))) (to_rep (last2 (rt1 x1))) (elts1 y) (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))
(declare-fun user_eq6 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((t23b__ref (mk_t23b__ref (t23b__content us_t1)))))
(define-fun t23b__ref___projection ((a t23b__ref)) us_t1 (t23b__content a))
(declare-const a1__first integer)
(declare-const a1__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun alignment_attribute__q__a1__aggregate_def (Int Int Int) us_t1)
(declare-fun alignment_attribute__q__a2__aggregate_def (us_t) (Array Int us_t))
(define-fun dynamic_invariant2 ((temp___expr_249 us_t) (temp___is_init_245 Bool) (temp___skip_constant_246 Bool) (temp___do_toplevel_247 Bool) (temp___do_typ_inv_248 Bool)) Bool (=> (not (= temp___skip_constant_246 true)) (and (dynamic_property1 1 x (first1 temp___expr_249) (last1 temp___expr_249)) (and (= (first1 temp___expr_249) 1) (= (last1 temp___expr_249) x)))))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int integer)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int integer) (elts2 a))
(define-fun of_array2 ((a (Array Int integer)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int integer)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int integer)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int integer)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x1 us_t2) (y us_t2)) Bool (bool_eq (elts2 x1) (to_rep (first4 (rt2 x1))) (to_rep (last4 (rt2 x1))) (elts2 y) (to_rep (first4 (rt2 y))) (to_rep (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((tarray1B__ref (mk_tarray1B__ref (tarray1B__content us_t2)))))
(define-fun tarray1B__ref___projection ((a tarray1B__ref)) us_t2 (tarray1B__content a))
(assert (forall ((temp___293 Int) (temp___294 Int) (temp___295 Int)) (let ((temp___292 (alignment_attribute__q__a1__aggregate_def temp___293 temp___294 temp___295))) (=> (dynamic_invariant temp___293 true true true true) (and (=> (dynamic_property4 1 x temp___294 temp___295) (and (= (first3 temp___292) temp___294) (= (last3 temp___292) temp___295))) (forall ((temp___296 Int)) (= (to_rep (select (to_array1 temp___292) temp___296)) temp___293)))))))
(assert (forall ((temp___301 us_t)) (=> (dynamic_invariant2 temp___301 true true true true) (forall ((temp___302 Int)) (= (select (alignment_attribute__q__a2__aggregate_def temp___301) temp___302) temp___301)))))
(declare-const a1 (Array Int integer))
(declare-const a2 (Array Int us_t))
(declare-const temp___298 (Array Int integer))
(declare-const temp___2981 t1)
(declare-const alignment_attribute__q__a1__assume (Array Int integer))
(declare-const alignment_attribute__q__a1__assume1 t)
(declare-const result (Array Int integer))
(declare-const a11 (Array Int integer))
(declare-const result1 (Array Int us_t))
(declare-const a21 (Array Int us_t))
(assert (in_range x))
(assert (= (to_rep (first2 (rt1 (alignment_attribute__q__a1__aggregate_def 1 1 x)))) 1))
(assert (= (to_rep (last2 (rt1 (alignment_attribute__q__a1__aggregate_def 1 1 x)))) x))
(assert (= (mk___t1 temp___298 temp___2981) (alignment_attribute__q__a1__aggregate_def 1 1 x)))
(assert (= (ite (<= (to_rep (first2 temp___2981)) (to_rep (last2 temp___2981))) (+ (- (to_rep (last2 temp___2981)) (to_rep (first2 temp___2981))) 1) 0) (ite (<= 1 x) (+ (- x 1) 1) 0)))
(assert (= temp___298 alignment_attribute__q__a1__assume))
(assert (= (mk (to_rep (first2 temp___2981)) (to_rep (last2 temp___2981))) alignment_attribute__q__a1__assume1))
(assert (= result a1))
(assert (= a11 alignment_attribute__q__a1__assume))
(assert (= (to_rep a1__first) (to_rep (first alignment_attribute__q__a1__assume1))))
(assert (= (to_rep a1__last) (to_rep (last alignment_attribute__q__a1__assume1))))
(assert (and (dynamic_property1 1 x (to_rep a1__first) (to_rep a1__last)) (and (= (to_rep a1__first) 1) (= (to_rep a1__last) x))))
(assert (= result1 a2))
(assert (= a21 (alignment_attribute__q__a2__aggregate_def (mk___t a11 (mk (to_rep a1__first) (to_rep a1__last))))))
(assert (dynamic_invariant1 a21 true false true true))
(assert (not (<= 0 (object__alignment1 a21))))
(check-sat)
(exit)
