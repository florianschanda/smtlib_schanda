(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort dollar_amount 0)
(declare-fun dollar_amountqtint (dollar_amount) Int)
(assert (forall ((i dollar_amount)) (and (<= (- 30000) (dollar_amountqtint i)) (<= (dollar_amountqtint i) 30000))))
(define-fun in_range4 ((x Int)) Bool (and (<= (- 30000) x) (<= x 30000)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (dollar_amount dollar_amount) Bool)
(declare-const dummy4 dollar_amount)
(declare-datatypes () ((dollar_amount__ref (mk_dollar_amount__ref (dollar_amount__content dollar_amount)))))
(define-fun dollar_amount__ref___projection ((a dollar_amount__ref)) dollar_amount (dollar_amount__content a))
(define-fun to_rep2 ((x dollar_amount)) Int (dollar_amountqtint x))
(declare-fun of_rep2 (Int) dollar_amount)
(assert (forall ((x dollar_amount)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x dollar_amount)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__c392008_0__account__current_balance dollar_amount) (rec__ext__ us_private)))))
(define-fun us_split_fields_Current_Balance__projection ((a us_split_fields)) dollar_amount (rec__c392008_0__account__current_balance a))
(define-fun us_split_fields___projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___2__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (= (to_rep2 (rec__c392008_0__account__current_balance (us_split_fields1 a))) (to_rep2 (rec__c392008_0__account__current_balance (us_split_fields1 b)))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const c392008_0__account__current_balance__first__bit Int)
(declare-const c392008_0__account__current_balance__last__bit Int)
(declare-const c392008_0__account__current_balance__position Int)
(assert (<= 0 c392008_0__account__current_balance__first__bit))
(assert (< c392008_0__account__current_balance__first__bit c392008_0__account__current_balance__last__bit))
(assert (<= 0 c392008_0__account__current_balance__position))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((account__ref (mk_account__ref (account__content us_rep)))))
(define-fun account__ref___projection ((a account__ref)) us_rep (account__content a))
(define-fun default_initial_assumption ((temp___expr_166 us_rep) (temp___skip_top_level_167 Bool)) Bool (= (attr__tag temp___expr_166) us_tag))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__c392008_1__account__overdraft_fee dollar_amount) (rec__c392008_0__account__current_balance1 dollar_amount) (rec__ext__1 us_private)))))
(define-fun us_split_fields_Overdraft_Fee__projection ((a us_split_fields2)) dollar_amount (rec__c392008_1__account__overdraft_fee a))
(define-fun us_split_fields_Current_Balance__2__projection ((a us_split_fields2)) dollar_amount (rec__c392008_0__account__current_balance1 a))
(define-fun us_split_fields___2__projection ((a us_split_fields2)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2) (attr__tag1 Int)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___4__projection ((a us_rep1)) Int (attr__tag1 a))
(declare-fun hide_ext__ (dollar_amount us_private) us_private)
(declare-fun extract__overdraft_fee (us_private) dollar_amount)
(assert (forall ((overdraft_fee dollar_amount)) (forall ((rec__ext__2 us_private)) (= (extract__overdraft_fee (hide_ext__ overdraft_fee rec__ext__2)) overdraft_fee))))
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (mk___split_fields (rec__c392008_0__account__current_balance1 (us_split_fields3 a)) (hide_ext__ (rec__c392008_1__account__overdraft_fee (us_split_fields3 a)) (rec__ext__1 (us_split_fields3 a)))) (attr__tag1 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (mk___split_fields1 (extract__overdraft_fee (rec__ext__ (us_split_fields1 r))) (rec__c392008_0__account__current_balance (us_split_fields1 r)) (extract__ext__ (rec__ext__ (us_split_fields1 r)))) (attr__tag r)))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep2 (rec__c392008_1__account__overdraft_fee (us_split_fields3 a))) (to_rep2 (rec__c392008_1__account__overdraft_fee (us_split_fields3 b)))) (= (to_rep2 (rec__c392008_0__account__current_balance1 (us_split_fields3 a))) (to_rep2 (rec__c392008_0__account__current_balance1 (us_split_fields3 b))))) true false))
(declare-const us_tag1 Int)
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const c392008_1__account__overdraft_fee__first__bit Int)
(declare-const c392008_1__account__overdraft_fee__last__bit Int)
(declare-const c392008_1__account__overdraft_fee__position Int)
(assert (<= 0 c392008_1__account__overdraft_fee__first__bit))
(assert (< c392008_1__account__overdraft_fee__first__bit c392008_1__account__overdraft_fee__last__bit))
(assert (<= 0 c392008_1__account__overdraft_fee__position))
(declare-const c392008_0__account__current_balance__first__bit1 Int)
(declare-const c392008_0__account__current_balance__last__bit1 Int)
(declare-const c392008_0__account__current_balance__position1 Int)
(assert (<= 0 c392008_0__account__current_balance__first__bit1))
(assert (< c392008_0__account__current_balance__first__bit1 c392008_0__account__current_balance__last__bit1))
(assert (<= 0 c392008_0__account__current_balance__position1))
(declare-fun user_eq6 (us_rep1 us_rep1) Bool)
(declare-const dummy6 us_rep1)
(declare-datatypes () ((account__ref1 (mk_account__ref1 (account__content1 us_rep1)))))
(define-fun account__ref___2__projection ((a account__ref1)) us_rep1 (account__content1 a))
(define-fun default_initial_assumption1 ((temp___expr_181 us_rep1) (temp___skip_top_level_182 Bool)) Bool (= (attr__tag1 temp___expr_181) us_tag1))
(declare-sort interest_rate 0)
(declare-fun interest_rateqtint (interest_rate) Int)
(assert (forall ((i interest_rate)) (and (<= 0 (interest_rateqtint i)) (<= (interest_rateqtint i) 100))))
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq7 (interest_rate interest_rate) Bool)
(declare-const dummy7 interest_rate)
(declare-datatypes () ((interest_rate__ref (mk_interest_rate__ref (interest_rate__content interest_rate)))))
(define-fun interest_rate__ref___projection ((a interest_rate__ref)) interest_rate (interest_rate__content a))
(define-fun to_rep3 ((x interest_rate)) Int (interest_rateqtint x))
(declare-fun of_rep3 (Int) interest_rate)
(assert (forall ((x interest_rate)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x interest_rate)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__c392008_2__account__rate interest_rate) (rec__c392008_0__account__current_balance2 dollar_amount) (rec__c392008_1__account__overdraft_fee1 dollar_amount) (rec__ext__2 us_private)))))
(define-fun us_split_fields_Rate__projection ((a us_split_fields4)) interest_rate (rec__c392008_2__account__rate a))
(define-fun us_split_fields_Current_Balance__3__projection ((a us_split_fields4)) dollar_amount (rec__c392008_0__account__current_balance2 a))
(define-fun us_split_fields_Overdraft_Fee__2__projection ((a us_split_fields4)) dollar_amount (rec__c392008_1__account__overdraft_fee1 a))
(define-fun us_split_fields___3__projection ((a us_split_fields4)) us_private (rec__ext__2 a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4) (attr__tag2 Int)))))
(define-fun us_rep___5__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun us_rep___6__projection ((a us_rep2)) Int (attr__tag2 a))
(declare-fun hide_ext__1 (interest_rate dollar_amount us_private) us_private)
(declare-fun extract__rate (us_private) interest_rate)
(assert (forall ((rate interest_rate)) (forall ((overdraft_fee dollar_amount)) (forall ((rec__ext__3 us_private)) (= (extract__rate (hide_ext__1 rate overdraft_fee rec__ext__3)) rate)))))
(assert (forall ((rate interest_rate)) (forall ((overdraft_fee dollar_amount)) (forall ((rec__ext__3 us_private)) (= (extract__overdraft_fee (hide_ext__1 rate overdraft_fee rec__ext__3)) overdraft_fee)))))
(declare-fun extract__ext__1 (us_private) us_private)
(define-fun to_base1 ((a us_rep2)) us_rep (mk___rep (mk___split_fields (rec__c392008_0__account__current_balance2 (us_split_fields5 a)) (hide_ext__1 (rec__c392008_2__account__rate (us_split_fields5 a)) (rec__c392008_1__account__overdraft_fee1 (us_split_fields5 a)) (rec__ext__2 (us_split_fields5 a)))) (attr__tag2 a)))
(define-fun of_base1 ((r us_rep)) us_rep2 (mk___rep2 (mk___split_fields2 (extract__rate (rec__ext__ (us_split_fields1 r))) (rec__c392008_0__account__current_balance (us_split_fields1 r)) (extract__overdraft_fee (rec__ext__ (us_split_fields1 r))) (extract__ext__1 (rec__ext__ (us_split_fields1 r)))) (attr__tag r)))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (= (to_rep3 (rec__c392008_2__account__rate (us_split_fields5 a))) (to_rep3 (rec__c392008_2__account__rate (us_split_fields5 b)))) (= (to_rep2 (rec__c392008_0__account__current_balance2 (us_split_fields5 a))) (to_rep2 (rec__c392008_0__account__current_balance2 (us_split_fields5 b))))) (= (to_rep2 (rec__c392008_1__account__overdraft_fee1 (us_split_fields5 a))) (to_rep2 (rec__c392008_1__account__overdraft_fee1 (us_split_fields5 b))))) true false))
(declare-const us_tag2 Int)
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep2) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep2) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))
(declare-const c392008_2__account__rate__first__bit Int)
(declare-const c392008_2__account__rate__last__bit Int)
(declare-const c392008_2__account__rate__position Int)
(assert (<= 0 c392008_2__account__rate__first__bit))
(assert (< c392008_2__account__rate__first__bit c392008_2__account__rate__last__bit))
(assert (<= 0 c392008_2__account__rate__position))
(declare-const c392008_0__account__current_balance__first__bit2 Int)
(declare-const c392008_0__account__current_balance__last__bit2 Int)
(declare-const c392008_0__account__current_balance__position2 Int)
(assert (<= 0 c392008_0__account__current_balance__first__bit2))
(assert (< c392008_0__account__current_balance__first__bit2 c392008_0__account__current_balance__last__bit2))
(assert (<= 0 c392008_0__account__current_balance__position2))
(declare-const c392008_1__account__overdraft_fee__first__bit1 Int)
(declare-const c392008_1__account__overdraft_fee__last__bit1 Int)
(declare-const c392008_1__account__overdraft_fee__position1 Int)
(assert (<= 0 c392008_1__account__overdraft_fee__first__bit1))
(assert (< c392008_1__account__overdraft_fee__first__bit1 c392008_1__account__overdraft_fee__last__bit1))
(assert (<= 0 c392008_1__account__overdraft_fee__position1))
(declare-fun user_eq8 (us_rep2 us_rep2) Bool)
(declare-const dummy8 us_rep2)
(declare-datatypes () ((account__ref2 (mk_account__ref2 (account__content2 us_rep2)))))
(define-fun account__ref___3__projection ((a account__ref2)) us_rep2 (account__content2 a))
(define-fun default_initial_assumption2 ((temp___expr_198 us_rep2) (temp___skip_top_level_199 Bool)) Bool (= (attr__tag2 temp___expr_198) us_tag2))
(declare-const b_acct__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const c_acct__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const ic_acct__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun temp___String_Literal_285 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_285 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_285 us_void_param) 2)) 51)) (= (to_rep (select (temp___String_Literal_285 us_void_param) 3)) 57)) (= (to_rep (select (temp___String_Literal_285 us_void_param) 4)) 50)) (= (to_rep (select (temp___String_Literal_285 us_void_param) 5)) 48)) (= (to_rep (select (temp___String_Literal_285 us_void_param) 6)) 48)) (= (to_rep (select (temp___String_Literal_285 us_void_param) 7)) 56)) :pattern ((temp___String_Literal_285 us_void_param)))))
(declare-fun temp___String_Literal_286 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_286 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_286 us_void_param) 2)) 104)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 3)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 4)) 99)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 5)) 107)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 6)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 7)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 8)) 104)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 9)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 10)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 12)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 13)) 104)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 14)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 16)) 117)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 17)) 115)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 18)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 20)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 21)) 102)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 23)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 25)) 99)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 26)) 108)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 27)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 28)) 115)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 29)) 115)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 30)) 45)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 31)) 119)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 32)) 105)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 33)) 100)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 34)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 36)) 102)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 37)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 38)) 114)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 39)) 109)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 40)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 41)) 108)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 43)) 112)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 44)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 45)) 114)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 46)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 47)) 109)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 48)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 49)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 50)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 51)) 114)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 52)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 53)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 54)) 108)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 55)) 108)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 56)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 57)) 119)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 58)) 115)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 59)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 60)) 102)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 61)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 62)) 114)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 63)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 64)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 65)) 104)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 66)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 67)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 68)) 112)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 69)) 114)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 70)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 71)) 112)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 72)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 73)) 114)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 74)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 75)) 100)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 76)) 105)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 77)) 115)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 78)) 112)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 79)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 80)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 81)) 99)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 82)) 104)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 83)) 105)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 84)) 110)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 85)) 103)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 86)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 87)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 88)) 102)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 89)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 90)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 91)) 98)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 92)) 106)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 93)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 94)) 99)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 95)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 96)) 115)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 97)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 98)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 99)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 100)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 101)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 102)) 104)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 103)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 104)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 105)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 106)) 112)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 107)) 112)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 108)) 114)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 109)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 110)) 112)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 111)) 114)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 112)) 105)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 113)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 114)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 115)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 116)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 117)) 105)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 118)) 109)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 119)) 112)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 120)) 108)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 121)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 122)) 109)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 123)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 124)) 110)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 125)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 126)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 127)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 128)) 105)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 129)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 130)) 110)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 131)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 132)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 133)) 102)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 134)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 135)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 136)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 137)) 112)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 138)) 114)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 139)) 105)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 140)) 109)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 141)) 105)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 142)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 143)) 105)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 144)) 118)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 145)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 146)) 32)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 147)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 148)) 112)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 149)) 101)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 150)) 114)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 151)) 97)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 152)) 116)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 153)) 105)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 154)) 111)) (= (to_rep (select (temp___String_Literal_286 us_void_param) 155)) 110)) :pattern ((temp___String_Literal_286 us_void_param)))))
(declare-fun temp___String_Literal_289 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_289 us_void_param) 1)) 70) (= (to_rep (select (temp___String_Literal_289 us_void_param) 2)) 97)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 3)) 105)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 4)) 108)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 6)) 100)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 8)) 100)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 9)) 105)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 10)) 115)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 11)) 112)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 12)) 97)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 14)) 99)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 15)) 104)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 17)) 116)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 18)) 111)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 20)) 109)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 21)) 117)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 22)) 108)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 23)) 116)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 24)) 105)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 25)) 112)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 26)) 108)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 27)) 121)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 29)) 111)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 30)) 118)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 31)) 101)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 32)) 114)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 33)) 114)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 34)) 105)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 35)) 100)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 36)) 100)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 37)) 101)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 38)) 110)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 40)) 112)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 41)) 114)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 42)) 105)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 43)) 109)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 44)) 46)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 46)) 111)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 47)) 112)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 48)) 101)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 49)) 114)) (= (to_rep (select (temp___String_Literal_289 us_void_param) 50)) 46)) :pattern ((temp___String_Literal_289 us_void_param)))))
(declare-fun temp___String_Literal_292 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_292 us_void_param) 1)) 70) (= (to_rep (select (temp___String_Literal_292 us_void_param) 2)) 97)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 3)) 105)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 4)) 108)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 6)) 100)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 8)) 100)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 9)) 105)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 10)) 115)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 11)) 112)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 12)) 97)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 14)) 99)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 15)) 104)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 17)) 116)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 18)) 111)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 20)) 111)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 21)) 118)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 22)) 101)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 23)) 114)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 24)) 114)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 25)) 105)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 26)) 100)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 27)) 100)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 28)) 101)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 29)) 110)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 31)) 112)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 32)) 114)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 33)) 105)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 34)) 109)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 35)) 105)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 36)) 116)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 37)) 105)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 38)) 118)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 39)) 101)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 41)) 111)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 42)) 112)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 43)) 101)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 44)) 114)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 45)) 97)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 46)) 116)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 47)) 105)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 48)) 111)) (= (to_rep (select (temp___String_Literal_292 us_void_param) 49)) 110)) :pattern ((temp___String_Literal_292 us_void_param)))))
(declare-fun temp___String_Literal_295 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_295 us_void_param) 1)) 70) (= (to_rep (select (temp___String_Literal_295 us_void_param) 2)) 97)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 3)) 105)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 4)) 108)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 6)) 100)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 8)) 100)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 9)) 105)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 10)) 115)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 11)) 112)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 12)) 97)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 14)) 99)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 15)) 104)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 17)) 116)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 18)) 111)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 20)) 65)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 21)) 112)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 22)) 112)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 23)) 108)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 24)) 121)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 25)) 95)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 26)) 83)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 27)) 101)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 28)) 114)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 29)) 118)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 30)) 105)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 31)) 99)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 32)) 101)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 33)) 95)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 34)) 67)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 35)) 104)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 36)) 97)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 37)) 114)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 38)) 103)) (= (to_rep (select (temp___String_Literal_295 us_void_param) 39)) 101)) :pattern ((temp___String_Literal_295 us_void_param)))))
(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant1 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant2 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant4 ((temp___expr_158 Int) (temp___is_init_154 Bool) (temp___skip_constant_155 Bool) (temp___do_toplevel_156 Bool) (temp___do_typ_inv_157 Bool)) Bool (=> (or (= temp___is_init_154 true) (<= (- 30000) 30000)) (in_range4 temp___expr_158)))
(define-fun dynamic_invariant5 ((temp___expr_190 Int) (temp___is_init_186 Bool) (temp___skip_constant_187 Bool) (temp___do_toplevel_188 Bool) (temp___do_typ_inv_189 Bool)) Bool (=> (or (= temp___is_init_186 true) (<= 0 100)) (in_range5 temp___expr_190)))
(declare-const c_acct__split_fields dollar_amount)
(declare-const c_acct__split_fields1 dollar_amount)
(declare-const c_acct__split_fields2 us_private)
(declare-const ic_acct__split_fields interest_rate)
(declare-const ic_acct__split_fields1 dollar_amount)
(declare-const ic_acct__split_fields2 dollar_amount)
(declare-const ic_acct__split_fields3 us_private)
(declare-const c392008__new_account__acct__fields dollar_amount)
(declare-const c392008__new_account__acct__fields1 us_private)
(declare-const result dollar_amount)
(declare-const result1 dollar_amount)
(declare-const result2 us_private)
(declare-const c_acct__split_fields3 dollar_amount)
(declare-const c_acct__split_fields4 dollar_amount)
(declare-const c_acct__split_fields5 us_private)
(declare-const c392008__new_account__acct__fields2 dollar_amount)
(declare-const c392008__new_account__acct__fields3 us_private)
(declare-const result3 interest_rate)
(declare-const result4 dollar_amount)
(declare-const result5 dollar_amount)
(declare-const result6 us_private)
(declare-const ic_acct__split_fields4 interest_rate)
(declare-const ic_acct__split_fields5 dollar_amount)
(declare-const ic_acct__split_fields6 dollar_amount)
(declare-const ic_acct__split_fields7 us_private)
(declare-const b_acct__split_fields dollar_amount)
(declare-const c392008__annual_interest__acct__fields dollar_amount)
(declare-const c392008__annual_interest__acct__fields1 us_private)
(declare-const result7 dollar_amount)
(declare-const result8 dollar_amount)
(declare-const result9 us_private)
(declare-const c_acct__split_fields6 dollar_amount)
(declare-const c_acct__split_fields7 dollar_amount)
(declare-const c_acct__split_fields8 us_private)
(declare-const c392008__annual_interest__acct__fields2 dollar_amount)
(declare-const c392008__annual_interest__acct__fields3 us_private)
(declare-const result10 us_split_fields__ref2)
(declare-const ic_acct__split_fields8 us_split_fields4)
(define-fun ic_acct__split_fields9 () us_split_fields4 (mk___split_fields2 ic_acct__split_fields4 ic_acct__split_fields5 ic_acct__split_fields6 ic_acct__split_fields7))
(assert (= b_acct__attr__tag us_tag))
(assert (= c_acct__attr__tag us_tag1))
(assert (= ic_acct__attr__tag us_tag2))
(assert (= result c_acct__split_fields))
(assert (= result1 c_acct__split_fields1))
(assert (= result2 c_acct__split_fields2))
(assert (= (mk___split_fields1 c_acct__split_fields3 c_acct__split_fields4 c_acct__split_fields5) (us_split_fields3 (of_base (mk___rep (mk___split_fields c392008__new_account__acct__fields c392008__new_account__acct__fields1) c_acct__attr__tag)))))
(assert (= result3 ic_acct__split_fields))
(assert (= result4 ic_acct__split_fields1))
(assert (= result5 ic_acct__split_fields2))
(assert (= result6 ic_acct__split_fields3))
(assert (= ic_acct__split_fields9 (us_split_fields5 (of_base1 (mk___rep (mk___split_fields c392008__new_account__acct__fields2 c392008__new_account__acct__fields3) ic_acct__attr__tag)))))
(assert (= result7 c_acct__split_fields3))
(assert (= result8 c_acct__split_fields4))
(assert (= result9 c_acct__split_fields5))
(assert (= (mk___split_fields1 c_acct__split_fields6 c_acct__split_fields7 c_acct__split_fields8) (us_split_fields3 (of_base (mk___rep (mk___split_fields c392008__annual_interest__acct__fields c392008__annual_interest__acct__fields1) c_acct__attr__tag)))))
(assert (= result10 (mk___split_fields__ref2 ic_acct__split_fields9)))
(assert (= ic_acct__split_fields8 (us_split_fields5 (of_base1 (mk___rep (mk___split_fields c392008__annual_interest__acct__fields2 c392008__annual_interest__acct__fields3) ic_acct__attr__tag)))))
(assert (not (not (=> (= (to_rep2 b_acct__split_fields) 1000) (=> (= (to_rep2 c_acct__split_fields7) 2000) (not (= (to_rep2 (rec__c392008_0__account__current_balance2 ic_acct__split_fields8)) 9000)))))))
(check-sat)
(exit)
