(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range2 temp___expr_39)))
(declare-sort tintarrayD1 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (tintarrayD1 tintarrayD1) Bool)
(declare-const dummy2 tintarrayD1)
(declare-datatypes () ((tintarrayD1__ref (mk_tintarrayD1__ref (tintarrayD1__content tintarrayD1)))))
(define-fun tintarrayD1__ref___projection ((a tintarrayD1__ref)) tintarrayD1 (tintarrayD1__content a))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const b1 (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const b2 (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const c1 (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const c2 (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const k Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-const a1 (Array Int integer))
(declare-const a2 (Array Int integer))
(declare-const i Int)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const i3 Int)
(declare-const temp___244 (Array Int integer))
(declare-const o Int)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const o3 integer)
(declare-const o4 Int)
(declare-const o5 (Array Int integer))
(declare-const temp___251 Int)
(declare-const temp___249 (Array Int integer))
(declare-const temp___248 Int)
(declare-const o6 Int)
(declare-const o7 integer)
(declare-const o8 Int)
(declare-const o9 integer)
(declare-const o10 Int)
(declare-const o11 (Array Int integer))
(declare-const temp___253 (Array Int integer))
(declare-const o12 Int)
(declare-const o13 integer)
(declare-const o14 Int)
(declare-const o15 integer)
(declare-const o16 Int)
(declare-const o17 (Array Int integer))
(declare-const temp___260 Int)
(declare-const temp___258 (Array Int integer))
(declare-const temp___257 Int)
(declare-const o18 Int)
(declare-const o19 integer)
(declare-const o20 Int)
(declare-const o21 integer)
(declare-const o22 Int)
(declare-const o23 (Array Int integer))
(declare-const a11 (Array Int integer))
(declare-const a21 (Array Int integer))
(declare-const result Int)
(declare-const i4 Int)
(declare-const a12 (Array Int integer))
(declare-const i5 Int)
(declare-const result1 (Array Int integer))
(declare-const a13 (Array Int integer))
(declare-const a14 (Array Int integer))
(declare-const i6 Int)
(declare-const a15 (Array Int integer))
(declare-const i7 Int)
(declare-const a16 (Array Int integer))
(declare-const i8 Int)
(declare-const a17 (Array Int integer))
(declare-const i9 Int)
(declare-const result2 Int)
(declare-const i10 Int)
(declare-const a18 (Array Int integer))
(declare-const i11 Int)
(declare-const result3 (Array Int integer))
(declare-const a19 (Array Int integer))
(declare-const a110 (Array Int integer))
(declare-const i12 Int)
(declare-const a111 (Array Int integer))
(declare-const i13 Int)
(declare-const a112 (Array Int integer))
(declare-const i14 int__ref)
(declare-const a113 (Array Int integer))
(declare-const i15 Int)
(declare-const result4 int__ref)
(declare-const i16 Int)
(declare-const a22 (Array Int integer))
(declare-const i17 Int)
(declare-const result5 map__ref)
(declare-const a23 (Array Int integer))
(declare-const a24 map__ref)
(declare-const i18 int__ref)
(declare-const a25 (Array Int integer))
(declare-const i19 Int)
(declare-const a26 map__ref)
(declare-const i20 int__ref)
(declare-const a27 (Array Int integer))
(declare-const i21 Int)
(declare-const result6 int__ref)
(declare-const i22 Int)
(declare-const a28 (Array Int integer))
(declare-const i23 Int)
(declare-const result7 map__ref)
(declare-const a29 (Array Int integer))
(declare-const a210 map__ref)
(declare-const i24 int__ref)
(declare-const a211 (Array Int integer))
(declare-const i25 Int)
(declare-const a212 map__ref)
(declare-const i26 int__ref)
(declare-const a213 (Array Int integer))
(declare-const i27 Int)
(declare-const a114 map__ref)
(declare-const a214 map__ref)
(declare-const i28 int__ref)
(declare-const i29 int__ref)
(declare-const i30 int__ref)
(declare-const i31 int__ref)
(declare-const a115 (Array Int integer))
(declare-const a215 (Array Int integer))
(declare-const i32 Int)
(declare-const i33 Int)
(declare-const i34 Int)
(declare-const i35 Int)
(define-fun a116 () map__ref (mk_map__ref a112))
(define-fun i36 () int__ref (mk_int__ref i8))
(define-fun a117 () map__ref (mk_map__ref a16))
(assert (in_range2 k))
(assert (and (<= 0 k) (and (<= k 100) (and (forall ((i37 Int)) (=> (and (<= 0 i37) (<= i37 k)) (= (to_rep (select b1 i37)) (to_rep (select b2 i37))))) (forall ((i37 Int)) (=> (and (<= (+ k 1) i37) (<= i37 100)) (= (to_rep (select c1 (- i37 k))) (to_rep (select c2 (- i37 k))))))))))
(assert (= (mk_int__ref result) (mk_int__ref i)))
(assert (= i4 0))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= temp___244 a1)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (and (forall ((temp___245 Int)) (=> (and (<= 0 temp___245) (<= temp___245 100)) (=> (<= i5 temp___245) (= (select a12 temp___245) (select temp___244 temp___245))))) (and (<= 0 i5) (<= i5 k)))))
(assert (=> (and (<= 0 i4) (<= i4 k)) (and (<= 0 i5) (<= i5 100))))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= o i5)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= o1 (select b1 o))))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= o2 (to_rep o1))))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= (to_rep o3) o2)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (and (<= 0 i5) (<= i5 100))))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= o4 i5)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= o5 (store a12 o4 o3))))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= a12 result1)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= a13 o5)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= i5 k)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= i5 i6)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= a13 a14)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= i7 i5)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= a15 a13)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= i36 (mk_int__ref i6))))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= a117 (mk_map__ref a14))))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= i9 i7)))
(assert (=> (and (<= 0 i4) (<= i4 k)) (= a17 a15)))
(assert (=> (not (and (<= 0 i4) (<= i4 k))) (= i4 i8)))
(assert (=> (not (and (<= 0 i4) (<= i4 k))) (= a117 (mk_map__ref a1))))
(assert (=> (not (and (<= 0 i4) (<= i4 k))) (= i9 i4)))
(assert (=> (not (and (<= 0 i4) (<= i4 k))) (= a17 a11)))
(assert (and (= temp___251 (+ k 1)) (in_range1 (+ k 1))))
(assert (= (mk_int__ref result2) (mk_int__ref i1)))
(assert (= i10 temp___251))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= temp___249 a16)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (and (forall ((temp___250 Int)) (=> (and (<= 0 temp___250) (<= temp___250 100)) (=> (<= i11 temp___250) (= (select a18 temp___250) (select temp___249 temp___250))))) (and (<= (+ k 1) i11) (<= i11 100)))))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (and (= temp___248 (- i11 k)) (in_range1 (- i11 k)))))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (and (<= 0 temp___248) (<= temp___248 100))))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= o6 temp___248)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= o7 (select c1 o6))))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= o8 (to_rep o7))))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= (to_rep o9) o8)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (and (<= 0 i11) (<= i11 100))))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= o10 i11)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= o11 (store a18 o10 o9))))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= a18 result3)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= a19 o11)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= i11 100)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= i11 i12)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= a19 a110)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= i13 i11)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= a111 a19)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= i14 (mk_int__ref i12))))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= a116 (mk_map__ref a110))))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= i15 i13)))
(assert (=> (and (<= temp___251 i10) (<= i10 100)) (= a113 a111)))
(assert (=> (not (and (<= temp___251 i10) (<= i10 100))) (= i14 (mk_int__ref i10))))
(assert (=> (not (and (<= temp___251 i10) (<= i10 100))) (= a116 a117)))
(assert (=> (not (and (<= temp___251 i10) (<= i10 100))) (= i15 i10)))
(assert (=> (not (and (<= temp___251 i10) (<= i10 100))) (= a113 a17)))
(assert (= result4 (mk_int__ref i2)))
(assert (= i16 0))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= temp___253 a2)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (and (forall ((temp___254 Int)) (=> (and (<= 0 temp___254) (<= temp___254 100)) (=> (<= i17 temp___254) (= (select a22 temp___254) (select temp___253 temp___254))))) (and (<= 0 i17) (<= i17 k)))))
(assert (=> (and (<= 0 i16) (<= i16 k)) (and (<= 0 i17) (<= i17 100))))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= o12 i17)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= o13 (select b2 o12))))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= o14 (to_rep o13))))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= (to_rep o15) o14)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (and (<= 0 i17) (<= i17 100))))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= o16 i17)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= o17 (store a22 o16 o15))))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= result5 (mk_map__ref a22))))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= a23 o17)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= i17 k)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= i18 (mk_int__ref i17))))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= a24 (mk_map__ref a23))))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= i19 i17)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= a25 a23)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= i20 i18)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= a26 a24)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= i21 i19)))
(assert (=> (and (<= 0 i16) (<= i16 k)) (= a27 a25)))
(assert (=> (not (and (<= 0 i16) (<= i16 k))) (= i20 (mk_int__ref i16))))
(assert (=> (not (and (<= 0 i16) (<= i16 k))) (= a26 (mk_map__ref a2))))
(assert (=> (not (and (<= 0 i16) (<= i16 k))) (= i21 i16)))
(assert (=> (not (and (<= 0 i16) (<= i16 k))) (= a27 a21)))
(assert (and (= temp___260 (+ k 1)) (in_range1 (+ k 1))))
(assert (= result6 (mk_int__ref i3)))
(assert (= i22 temp___260))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= temp___258 (map__content a26))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (and (forall ((temp___259 Int)) (=> (and (<= 0 temp___259) (<= temp___259 100)) (=> (<= i23 temp___259) (= (select a28 temp___259) (select temp___258 temp___259))))) (and (<= (+ k 1) i23) (<= i23 100)))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (and (= temp___257 (- i23 k)) (in_range1 (- i23 k)))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (and (<= 0 temp___257) (<= temp___257 100))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= o18 temp___257)))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= o19 (select c2 o18))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= o20 (to_rep o19))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= (to_rep o21) o20)))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (and (<= 0 i23) (<= i23 100))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= o22 i23)))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= o23 (store a28 o22 o21))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= result7 (mk_map__ref a28))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= a29 o23)))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= i23 100)))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= i24 (mk_int__ref i23))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= a210 (mk_map__ref a29))))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= i25 i23)))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= a211 a29)))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= i26 i24)))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= a212 a210)))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= i27 i25)))
(assert (=> (and (<= temp___260 i22) (<= i22 100)) (= a213 a211)))
(assert (=> (not (and (<= temp___260 i22) (<= i22 100))) (= i26 (mk_int__ref i22))))
(assert (=> (not (and (<= temp___260 i22) (<= i22 100))) (= a212 a26)))
(assert (=> (not (and (<= temp___260 i22) (<= i22 100))) (= i27 i22)))
(assert (=> (not (and (<= temp___260 i22) (<= i22 100))) (= a213 a27)))
(assert (= i31 i26))
(assert (= i30 i20))
(assert (= i29 i14))
(assert (= i28 i36))
(assert (= a214 a212))
(assert (= a114 a116))
(assert (= i35 i27))
(assert (= i34 i21))
(assert (= i33 i15))
(assert (= i32 i9))
(assert (= a215 a213))
(assert (= a115 a113))
(declare-const i37 Int)
(assert (<= 0 i37))
(assert (<= i37 100))
(assert (not (= (to_rep (select (map__content a114) i37)) (to_rep (select (map__content a214) i37)))))
(check-sat)
(exit)
