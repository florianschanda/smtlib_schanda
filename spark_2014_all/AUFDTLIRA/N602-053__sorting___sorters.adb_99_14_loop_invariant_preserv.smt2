(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((array_type__ref (mk_array_type__ref (array_type__content us_t)))))
(define-fun array_type__ref___projection ((a array_type__ref)) us_t (array_type__content a))
(declare-fun index_of_minimum (us_t) Int)
(declare-fun index_of_minimum__function_guard (Int us_t) Bool)
(define-fun dynamic_invariant1 ((temp___expr_159 us_t) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (not (= temp___skip_constant_156 true)) (dynamic_property 1 2147483647 (first1 temp___expr_159) (last1 temp___expr_159))))
(assert (forall ((unsorted us_t)) (! (=> (and (dynamic_invariant1 unsorted true true true true) (<= (first1 unsorted) (last1 unsorted))) (let ((result (index_of_minimum unsorted))) (and (and (and (<= (first1 unsorted) result) (<= result (last1 unsorted))) (forall ((j Int)) (=> (and (<= (first1 unsorted) j) (<= j (last1 unsorted))) (<= (to_rep (select (to_array unsorted) result)) (to_rep (select (to_array unsorted) j)))))) (dynamic_invariant result true false true true)))) :pattern ((index_of_minimum unsorted)))))
(declare-const values__first integer)
(declare-const values__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((t23b__ref (mk_t23b__ref (t23b__content integer)))))
(define-fun t23b__ref___projection ((a t23b__ref)) integer (t23b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t24b__ref (mk_t24b__ref (t24b__content integer)))))
(define-fun t24b__ref___projection ((a t24b__ref)) integer (t24b__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int integer)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int integer) (elts1 a))
(define-fun of_array1 ((a (Array Int integer)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int integer)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int integer)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int integer)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep (first2 (rt1 x))) (to_rep (last2 (rt1 x))) (elts1 y) (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((t25b__ref (mk_t25b__ref (t25b__content us_t1)))))
(define-fun t25b__ref___projection ((a t25b__ref)) us_t1 (t25b__content a))
(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-const values (Array Int integer))
(declare-const smallest Int)
(declare-const current Int)
(declare-const temp___199 Int)
(declare-const o (Array Int integer))
(declare-const temp___201 (Array Int integer))
(declare-const temp___2011 t1)
(declare-const o1 (Array Int integer))
(declare-const o2 t)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 (Array Int integer))
(declare-const temp___2012 (Array Int integer))
(declare-const temp___2013 t1)
(declare-const o6 (Array Int integer))
(declare-const o7 t)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const values1 (Array Int integer))
(declare-const result Int)
(declare-const current1 Int)
(declare-const result1 Int)
(declare-const smallest1 Int)
(declare-const o10 (Array Int integer))
(declare-const values2 (Array Int integer))
(declare-const smallest2 Int)
(declare-const current2 Int)
(declare-const result2 Int)
(declare-const current3 Int)
(declare-const result3 Int)
(declare-const smallest3 Int)
(declare-const o11 (Array Int integer))
(assert (dynamic_property 1 2147483647 (to_rep values__first) (to_rep values__last)))
(assert (and (<= 1 (ite (<= (to_rep values__first) (to_rep values__last)) (+ (- (to_rep values__last) (to_rep values__first)) 1) 0)) (<= (to_rep values__last) 2147483647)))
(assert (=> (<= 1 2147483647) (in_range2 smallest)))
(assert (and (= temp___199 (- (to_rep values__last) 1)) (in_range1 (- (to_rep values__last) 1))))
(assert (= result current))
(assert (= current1 (to_rep values__first)))
(assert (<= (to_rep values__first) current1))
(assert (<= current1 temp___199))
(assert (=> (<= current1 (to_rep values__last)) (and (and (<= (to_rep values__first) current1) (<= current1 (to_rep values__last))) (and (<= (to_rep values__first) (to_rep values__last)) (<= (to_rep values__last) (to_rep values__last))))))
(assert (= o values))
(assert (= o temp___201))
(assert (= (mk1 current1 (to_rep values__last)) temp___2011))
(assert (= temp___201 o1))
(assert (= (mk (to_rep (first2 temp___2011)) (to_rep (last2 temp___2011))) o2))
(assert (and (= o3 (index_of_minimum (mk___t o1 o2))) (and (in_range2 o3) (and (and (<= (to_rep (first o2)) o3) (<= o3 (to_rep (last o2)))) (forall ((j Int)) (=> (and (<= (to_rep (first o2)) j) (<= j (to_rep (last o2)))) (<= (to_rep (select o1 o3)) (to_rep (select o1 j)))))))))
(assert (= result1 smallest))
(assert (= smallest1 o3))
(assert (=> (not (= smallest1 current1)) (and (= o4 current1) (in_range2 current1))))
(assert (=> (not (= smallest1 current1)) (and (= (to_rep (select o10 o4)) (to_rep (select values smallest1))) (and (= (to_rep (select o10 smallest1)) (to_rep (select values o4))) (forall ((j Int)) (=> (and (<= (to_rep values__first) j) (<= j (to_rep values__last))) (=> (and (not (= j o4)) (not (= j smallest1))) (= (to_rep (select o10 j)) (to_rep (select values j))))))))))
(assert (=> (not (not (= smallest1 current1))) (= o10 values)))
(assert (=> (not (not (= smallest1 current1))) (= o10 values1)))
(assert (forall ((j Int)) (=> (and (<= current2 j) (<= j (to_rep values__last))) (<= (to_rep (select values2 current2)) (to_rep (select values2 j))))))
(assert (forall ((j Int)) (=> (and (<= (to_rep values__first) j) (<= j (- current2 1))) (<= (to_rep (select values2 j)) (to_rep (select values2 (+ j 1)))))))
(assert (and (and (=> (<= 1 2147483647) (in_range2 smallest2)) (=> (<= (to_rep values__first) (- (to_rep values__last) 1)) (dynamic_property1 (to_rep values__first) (- (to_rep values__last) 1) current2))) (and (<= (to_rep values__first) current2) (<= current2 (- (to_rep values__last) 1)))))
(assert (not (= current2 temp___199)))
(assert (= current2 result2))
(assert (= current3 (+ current2 1)))
(assert (=> (<= current3 (to_rep values__last)) (and (and (<= (to_rep values__first) current3) (<= current3 (to_rep values__last))) (and (<= (to_rep values__first) (to_rep values__last)) (<= (to_rep values__last) (to_rep values__last))))))
(assert (= o5 values2))
(assert (= o5 temp___2012))
(assert (= (mk1 current3 (to_rep values__last)) temp___2013))
(assert (= temp___2012 o6))
(assert (= (mk (to_rep (first2 temp___2013)) (to_rep (last2 temp___2013))) o7))
(assert (and (= o8 (index_of_minimum (mk___t o6 o7))) (and (in_range2 o8) (and (and (<= (to_rep (first o7)) o8) (<= o8 (to_rep (last o7)))) (forall ((j Int)) (=> (and (<= (to_rep (first o7)) j) (<= j (to_rep (last o7)))) (<= (to_rep (select o6 o8)) (to_rep (select o6 j)))))))))
(assert (= smallest2 result3))
(assert (= smallest3 o8))
(assert (=> (not (= smallest3 current3)) (and (= o9 current3) (in_range2 current3))))
(assert (=> (not (= smallest3 current3)) (and (= (to_rep (select o11 o9)) (to_rep (select values2 smallest3))) (and (= (to_rep (select o11 smallest3)) (to_rep (select values2 o9))) (forall ((j Int)) (=> (and (<= (to_rep values__first) j) (<= j (to_rep values__last))) (=> (and (not (= j o9)) (not (= j smallest3))) (= (to_rep (select o11 j)) (to_rep (select values2 j))))))))))
(assert (=> (not (not (= smallest3 current3))) (= o11 values2)))
(declare-const j Int)
(assert (<= (to_rep values__first) j))
(assert (<= j (- current3 1)))
(assert (not (<= (to_rep (select o11 j)) (to_rep (select o11 (+ j 1))))))
(check-sat)
(exit)
