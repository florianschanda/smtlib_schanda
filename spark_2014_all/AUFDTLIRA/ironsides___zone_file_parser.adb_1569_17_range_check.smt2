(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort rritemtype 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (rritemtype rritemtype) Bool)
(declare-const dummy2 rritemtype)
(declare-datatypes () ((rritemtype__ref (mk_rritemtype__ref (rritemtype__content rritemtype)))))
(define-fun rritemtype__ref___projection ((a rritemtype__ref)) rritemtype (rritemtype__content a))
(define-fun dynamic_invariant1 ((temp___expr_298 Int) (temp___is_init_294 Bool) (temp___skip_constant_295 Bool) (temp___do_toplevel_296 Bool) (temp___do_typ_inv_297 Bool)) Bool (=> (or (= temp___is_init_294 true) (<= 0 10)) (in_range3 temp___expr_298)))
(declare-sort linelengthindex 0)
(declare-fun linelengthindexqtint (linelengthindex) Int)
(assert (forall ((i linelengthindex)) (and (<= 1 (linelengthindexqtint i)) (<= (linelengthindexqtint i) 256))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 256)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (linelengthindex linelengthindex) Bool)
(declare-const dummy3 linelengthindex)
(declare-datatypes () ((linelengthindex__ref (mk_linelengthindex__ref (linelengthindex__content linelengthindex)))))
(define-fun linelengthindex__ref___projection ((a linelengthindex__ref)) linelengthindex (linelengthindex__content a))
(define-fun dynamic_invariant2 ((temp___expr_305 Int) (temp___is_init_301 Bool) (temp___skip_constant_302 Bool) (temp___do_toplevel_303 Bool) (temp___do_typ_inv_304 Bool)) Bool (=> (or (= temp___is_init_301 true) (<= 1 256)) (in_range4 temp___expr_305)))
(declare-sort domainnamestringtypeindex 0)
(declare-fun domainnamestringtypeindexqtint (domainnamestringtypeindex) Int)
(assert (forall ((i domainnamestringtypeindex)) (and (<= 1 (domainnamestringtypeindexqtint i)) (<= (domainnamestringtypeindexqtint i) 128))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (domainnamestringtypeindex domainnamestringtypeindex) Bool)
(declare-const dummy4 domainnamestringtypeindex)
(declare-datatypes () ((domainnamestringtypeindex__ref (mk_domainnamestringtypeindex__ref (domainnamestringtypeindex__content domainnamestringtypeindex)))))
(define-fun domainnamestringtypeindex__ref___projection ((a domainnamestringtypeindex__ref)) domainnamestringtypeindex (domainnamestringtypeindex__content a))
(declare-const blankdomainname (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun rr_type__blankdomainname__aggregate_def (Int) (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const zonefileline (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const zlength Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const r97b Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const r98b Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t99b__ref (mk_t99b__ref (t99b__content integer)))))
(define-fun t99b__ref___projection ((a t99b__ref)) integer (t99b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const r100b Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t101b__ref (mk_t101b__ref (t101b__content integer)))))
(define-fun t101b__ref___projection ((a t101b__ref)) integer (t101b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const r102b Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const r103b Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((t104b__ref (mk_t104b__ref (t104b__content integer)))))
(define-fun t104b__ref___projection ((a t104b__ref)) integer (t104b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const r105b Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t106b__ref (mk_t106b__ref (t106b__content integer)))))
(define-fun t106b__ref___projection ((a t106b__ref)) integer (t106b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(define-fun dynamic_invariant4 ((temp___expr_322 Int) (temp___is_init_318 Bool) (temp___skip_constant_319 Bool) (temp___do_toplevel_320 Bool) (temp___do_typ_inv_321 Bool)) Bool (=> (or (= temp___is_init_318 true) (<= 1 128)) (in_range5 temp___expr_322)))
(assert (= blankdomainname (rr_type__blankdomainname__aggregate_def 32)))
(assert (forall ((temp___158 Int)) (=> (dynamic_invariant3 temp___158 true true true true) (forall ((temp___159 Int)) (= (to_rep (select (rr_type__blankdomainname__aggregate_def temp___158) temp___159)) temp___158)))))
(declare-const newnameserver (Array Int character))
(declare-const newemail (Array Int character))
(declare-const success Bool)
(declare-const begidx Int)
(declare-const endidx Int)
(declare-const foundtype Int)
(declare-const lengthoftoken Int)
(declare-const i Int)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const temp___1790 Int)
(declare-const temp___1789 Int)
(declare-const temp___1788 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const temp___1797 Int)
(declare-const temp___1795 (Array Int character))
(declare-const temp___1794 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const temp___1793 Int)
(declare-const o5 character)
(declare-const o6 Int)
(declare-const o7 (Array Int character))
(declare-const temp___1801 (Array Int character))
(declare-const temp___1800 Int)
(declare-const o8 character)
(declare-const o9 (Array Int character))
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const temp___1808 Int)
(declare-const temp___1809 Int)
(declare-const temp___1806 (Array Int character))
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const temp___1805 Int)
(declare-const o14 character)
(declare-const o15 Int)
(declare-const o16 (Array Int character))
(declare-const success1 Bool)
(declare-const lengthoftoken1 Int)
(declare-const i3 Int)
(declare-const i4 Int)
(declare-const result Int)
(declare-const begidx1 Int)
(declare-const result1 (Array Int character))
(declare-const newnameserver1 (Array Int character))
(declare-const result2 (Array Int character))
(declare-const newemail1 (Array Int character))
(declare-const begidx2 Int)
(declare-const endidx1 Int)
(declare-const foundtype1 Int)
(declare-const begidx3 Int)
(declare-const endidx2 Int)
(declare-const foundtype2 Int)
(declare-const result3 Int)
(declare-const begidx4 Int)
(declare-const begidx5 Int)
(declare-const endidx3 Int)
(declare-const foundtype3 Int)
(declare-const begidx6 Int)
(declare-const endidx4 Int)
(declare-const foundtype4 Int)
(declare-const begidx7 Int)
(declare-const endidx5 Int)
(declare-const foundtype5 Int)
(declare-const begidx8 int__ref)
(declare-const endidx6 int__ref)
(declare-const foundtype6 int__ref)
(declare-const begidx9 Int)
(declare-const endidx7 Int)
(declare-const foundtype7 Int)
(declare-const result4 bool__ref)
(declare-const success2 Bool)
(declare-const result5 int__ref)
(declare-const begidx10 Int)
(declare-const begidx11 Int)
(declare-const endidx8 Int)
(declare-const foundtype8 Int)
(declare-const result6 int__ref)
(declare-const lengthoftoken2 Int)
(declare-const result7 bool__ref)
(declare-const success3 Bool)
(declare-const result8 bool__ref)
(declare-const success4 Bool)
(declare-const result9 int__ref)
(declare-const i5 Int)
(declare-const newnameserver2 (Array Int character))
(declare-const i6 Int)
(declare-const result10 map__ref)
(declare-const newnameserver3 (Array Int character))
(declare-const newnameserver4 map__ref)
(declare-const i7 int__ref)
(declare-const newnameserver5 (Array Int character))
(declare-const i8 Int)
(declare-const newnameserver6 map__ref)
(declare-const i9 int__ref)
(declare-const newnameserver7 (Array Int character))
(declare-const i10 Int)
(declare-const result11 int__ref)
(declare-const i11 Int)
(declare-const newnameserver8 (Array Int character))
(declare-const i12 Int)
(declare-const result12 map__ref)
(declare-const newnameserver9 (Array Int character))
(declare-const newnameserver10 map__ref)
(declare-const i13 int__ref)
(declare-const newnameserver11 (Array Int character))
(declare-const i14 Int)
(declare-const newnameserver12 map__ref)
(declare-const i15 int__ref)
(declare-const newnameserver13 (Array Int character))
(declare-const i16 Int)
(declare-const newnameserver14 map__ref)
(declare-const success5 bool__ref)
(declare-const i17 int__ref)
(declare-const i18 int__ref)
(declare-const newnameserver15 (Array Int character))
(declare-const success6 Bool)
(declare-const i19 Int)
(declare-const i20 Int)
(declare-const newnameserver16 map__ref)
(declare-const success7 bool__ref)
(declare-const i21 int__ref)
(declare-const i22 int__ref)
(declare-const newnameserver17 (Array Int character))
(declare-const success8 Bool)
(declare-const i23 Int)
(declare-const i24 Int)
(declare-const newnameserver18 map__ref)
(declare-const success9 bool__ref)
(declare-const begidx12 int__ref)
(declare-const endidx9 int__ref)
(declare-const foundtype9 int__ref)
(declare-const lengthoftoken3 int__ref)
(declare-const i25 int__ref)
(declare-const i26 int__ref)
(declare-const newnameserver19 (Array Int character))
(declare-const success10 Bool)
(declare-const begidx13 Int)
(declare-const endidx10 Int)
(declare-const foundtype10 Int)
(declare-const lengthoftoken4 Int)
(declare-const i27 Int)
(declare-const i28 Int)
(declare-const result13 int__ref)
(declare-const begidx14 Int)
(declare-const begidx15 Int)
(declare-const endidx11 Int)
(declare-const foundtype11 Int)
(declare-const result14 int__ref)
(declare-const lengthoftoken5 Int)
(declare-const result15 int__ref)
(declare-const i29 Int)
(declare-const newemail2 (Array Int character))
(declare-const i30 Int)
(declare-const result16 map__ref)
(declare-const newemail3 (Array Int character))
(declare-const newemail4 map__ref)
(declare-const i31 int__ref)
(declare-const newemail5 (Array Int character))
(declare-const i32 Int)
(declare-const newemail6 map__ref)
(declare-const i33 int__ref)
(declare-const newemail7 (Array Int character))
(declare-const i34 Int)
(define-fun i35 () int__ref (mk_int__ref i1))
(define-fun i36 () int__ref (mk_int__ref i))
(define-fun lengthoftoken6 () int__ref (mk_int__ref lengthoftoken))
(define-fun success11 () bool__ref (mk_bool__ref success))
(assert (= (rr_type__blankdomainname__aggregate_def 32) blankdomainname))
(assert (in_range4 zlength))
(assert (= result begidx))
(assert (= begidx1 1))
(assert (in_range4 begidx1))
(assert (=> (<= 1 256) (in_range4 endidx)))
(assert (=> (<= 0 10) (in_range3 foundtype)))
(assert (=> (<= 1 256) (in_range4 lengthoftoken)))
(assert (= result1 newnameserver))
(assert (= newnameserver1 blankdomainname))
(assert (= result2 newemail))
(assert (= newemail1 blankdomainname))
(assert (and (and (and (and (<= begidx2 endidx1) (<= begidx2 zlength)) (<= endidx1 zlength)) (=> (= foundtype1 1) (forall ((i37 Int)) (=> (and (<= begidx2 i37) (<= i37 endidx1)) (and (<= 48 (to_rep (select zonefileline i37))) (<= (to_rep (select zonefileline i37)) 57)))))) (and (and (in_range4 begidx2) (in_range4 endidx1)) (in_range3 foundtype1))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= temp___1790 foundtype1)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= temp___1789 endidx1)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= temp___1788 begidx2)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (< endidx2 zlength)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (and (and (and (=> (<= 1 256) (in_range4 begidx3)) (=> (<= 1 256) (in_range4 endidx2))) (=> (<= 0 10) (in_range3 foundtype2))) (and (not (= foundtype2 3)) (< endidx2 zlength)))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (and (= o (+ endidx2 1)) (in_range4 (+ endidx2 1)))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx3 result3)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx4 o)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (and (and (and (and (<= begidx5 endidx3) (<= begidx5 zlength)) (<= endidx3 zlength)) (=> (= foundtype3 1) (forall ((i37 Int)) (=> (and (<= begidx5 i37) (<= i37 endidx3)) (and (<= 48 (to_rep (select zonefileline i37))) (<= (to_rep (select zonefileline i37)) 57)))))) (and (and (in_range4 begidx5) (in_range4 endidx3)) (in_range3 foundtype3)))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (not (and (not (= foundtype3 3)) (< endidx3 zlength)))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype3 foundtype4)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx3 endidx4)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx5 begidx6)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype5 foundtype3)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx5 endidx3)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx7 begidx5)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype6 (mk_int__ref foundtype4))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx6 (mk_int__ref endidx4))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx8 (mk_int__ref begidx6))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype7 foundtype5)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx7 endidx5)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx9 begidx7)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= foundtype6 (mk_int__ref foundtype1))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= endidx6 (mk_int__ref endidx1))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= begidx8 (mk_int__ref begidx2))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= foundtype7 foundtype1)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= endidx7 endidx1)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= begidx9 begidx2)))
(assert (=> (<= zlength (int__content endidx6)) (= result4 success11)))
(assert (=> (<= zlength (int__content endidx6)) (= success2 (distinct 0 0))))
(assert (=> (<= zlength (int__content endidx6)) (= i26 i35)))
(assert (=> (<= zlength (int__content endidx6)) (= i25 i36)))
(assert (=> (<= zlength (int__content endidx6)) (= lengthoftoken3 lengthoftoken6)))
(assert (=> (<= zlength (int__content endidx6)) (= foundtype9 foundtype6)))
(assert (=> (<= zlength (int__content endidx6)) (= endidx9 endidx6)))
(assert (=> (<= zlength (int__content endidx6)) (= begidx12 begidx8)))
(assert (=> (<= zlength (int__content endidx6)) (= success9 (mk_bool__ref success2))))
(assert (=> (<= zlength (int__content endidx6)) (= newnameserver18 (mk_map__ref newnameserver1))))
(assert (=> (<= zlength (int__content endidx6)) (= i28 i4)))
(assert (=> (<= zlength (int__content endidx6)) (= i27 i3)))
(assert (=> (<= zlength (int__content endidx6)) (= lengthoftoken4 lengthoftoken1)))
(assert (=> (<= zlength (int__content endidx6)) (= foundtype10 foundtype7)))
(assert (=> (<= zlength (int__content endidx6)) (= endidx10 endidx7)))
(assert (=> (<= zlength (int__content endidx6)) (= begidx13 begidx9)))
(assert (=> (<= zlength (int__content endidx6)) (= success10 success2)))
(assert (=> (<= zlength (int__content endidx6)) (= newnameserver19 newnameserver1)))
(assert (=> (not (<= zlength (int__content endidx6))) (and (= o1 (+ (int__content endidx6) 1)) (in_range4 (+ (int__content endidx6) 1)))))
(assert (=> (not (<= zlength (int__content endidx6))) (= result5 begidx8)))
(assert (=> (not (<= zlength (int__content endidx6))) (= begidx10 o1)))
(assert (=> (not (<= zlength (int__content endidx6))) (and (and (and (and (<= begidx11 endidx8) (<= begidx11 zlength)) (<= endidx8 zlength)) (=> (= foundtype8 1) (forall ((i37 Int)) (=> (and (<= begidx11 i37) (<= i37 endidx8)) (and (<= 48 (to_rep (select zonefileline i37))) (<= (to_rep (select zonefileline i37)) 57)))))) (and (and (in_range4 begidx11) (in_range4 endidx8)) (in_range3 foundtype8)))))
(assert (=> (not (<= zlength (int__content endidx6))) (and (= o2 (+ (- endidx8 begidx11) 1)) (in_range4 (+ (- endidx8 begidx11) 1)))))
(assert (=> (not (<= zlength (int__content endidx6))) (= result6 lengthoftoken6)))
(assert (=> (not (<= zlength (int__content endidx6))) (= lengthoftoken2 o2)))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (= foundtype8 0)) (= result7 success11))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (= foundtype8 0)) (= success3 (distinct 0 0)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (= foundtype8 0)) (= i22 i35))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (= foundtype8 0)) (= i21 i36))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (= foundtype8 0)) (= success7 (mk_bool__ref success3)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (= foundtype8 0)) (= newnameserver16 (mk_map__ref newnameserver1)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (= foundtype8 0)) (= i24 i4))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (= foundtype8 0)) (= i23 i3))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (= foundtype8 0)) (= success8 success3))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (= foundtype8 0)) (= newnameserver17 newnameserver1))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (< 128 lengthoftoken2) (= result8 success11)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (< 128 lengthoftoken2) (= success4 (distinct 0 0))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (< 128 lengthoftoken2) (= i18 i35)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (< 128 lengthoftoken2) (= i17 i36)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (< 128 lengthoftoken2) (= success5 (mk_bool__ref success4))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (< 128 lengthoftoken2) (= newnameserver14 (mk_map__ref newnameserver1))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (< 128 lengthoftoken2) (= i20 i4)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (< 128 lengthoftoken2) (= i19 i3)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (< 128 lengthoftoken2) (= success6 success4)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (< 128 lengthoftoken2) (= newnameserver15 newnameserver1)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= begidx11 r97b)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (in_range4 r97b)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= endidx8 r98b)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (in_range4 r98b)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= result9 i36)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= i5 r97b)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= temp___1797 endidx8))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= temp___1795 newnameserver1))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= temp___1794 i5))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (and (and (<= 1 begidx11) (<= (+ (- endidx8 begidx11) 1) 128)) (= endidx8 temp___1797)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (and (=> (<= r97b r98b) (dynamic_property r97b r98b i6)) (and (<= r97b i6) (<= i6 r98b))))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= (to_rep o5) (to_rep (select zonefileline i6))))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (and (= o3 (+ i6 1)) (in_range1 (+ i6 1))))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= o4 (- o3 begidx11)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (and (= temp___1793 o4) (in_range1 o4)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (and (<= 1 temp___1793) (<= temp___1793 128)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= o6 temp___1793))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= o7 (store newnameserver2 o6 o5)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= result10 (mk_map__ref newnameserver2)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= newnameserver3 o7))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= i6 r98b))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= i7 (mk_int__ref i6)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= newnameserver4 (mk_map__ref newnameserver3)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= i8 i6))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= newnameserver5 newnameserver3))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= i9 i7))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= newnameserver6 newnameserver4))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= i10 i8))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i5) (<= i5 r98b)) (= newnameserver7 newnameserver5))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r97b i5) (<= i5 r98b))) (= i9 (mk_int__ref i5)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r97b i5) (<= i5 r98b))) (= newnameserver6 (mk_map__ref newnameserver1)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r97b i5) (<= i5 r98b))) (= i10 i5))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r97b i5) (<= i5 r98b))) (= newnameserver7 newnameserver1))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= (+ endidx8 1) r100b)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (in_range1 r100b)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= result11 i35)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= i11 r100b)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= temp___1801 (map__content newnameserver6)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= temp___1800 i11))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (<= 1 endidx8))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (and (and (=> (<= r100b 128) (dynamic_property1 r100b 128 i12)) (forall ((temp___1802 Int)) (=> (and (<= 1 temp___1802) (<= temp___1802 128)) (=> (or (< 128 temp___1802) (or (< temp___1802 r100b) (<= i12 temp___1802))) (= (select newnameserver8 temp___1802) (select temp___1801 temp___1802)))))) (and (<= r100b i12) (<= i12 128))))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= (to_rep o8) 32))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= o9 (store newnameserver8 i12 o8)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= result12 (mk_map__ref newnameserver8)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= newnameserver9 o9))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= i12 128))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= i13 (mk_int__ref i12)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= newnameserver10 (mk_map__ref newnameserver9)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= i14 i12))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= newnameserver11 newnameserver9))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= i15 i13))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= newnameserver12 newnameserver10))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= i16 i14))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i11) (<= i11 128)) (= newnameserver13 newnameserver11))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r100b i11) (<= i11 128))) (= i15 (mk_int__ref i11)))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r100b i11) (<= i11 128))) (= newnameserver12 newnameserver6))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r100b i11) (<= i11 128))) (= i16 i11))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r100b i11) (<= i11 128))) (= newnameserver13 newnameserver7))))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= i18 i15)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= i17 i9)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= success5 success11)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= newnameserver14 newnameserver12)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= i20 i16)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= i19 i10)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= success6 success1)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (=> (not (< 128 lengthoftoken2)) (= newnameserver15 newnameserver13)))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (= i22 i18))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (= i21 i17))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (= success7 success5))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (= newnameserver16 newnameserver14))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (= i24 i20))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (= i23 i19))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (= success8 success6))))
(assert (=> (not (<= zlength (int__content endidx6))) (=> (not (not (= foundtype8 0))) (= newnameserver17 newnameserver15))))
(assert (=> (not (<= zlength (int__content endidx6))) (= i26 i22)))
(assert (=> (not (<= zlength (int__content endidx6))) (= i25 i21)))
(assert (=> (not (<= zlength (int__content endidx6))) (= lengthoftoken3 (mk_int__ref lengthoftoken2))))
(assert (=> (not (<= zlength (int__content endidx6))) (= foundtype9 (mk_int__ref foundtype8))))
(assert (=> (not (<= zlength (int__content endidx6))) (= endidx9 (mk_int__ref endidx8))))
(assert (=> (not (<= zlength (int__content endidx6))) (= begidx12 (mk_int__ref begidx11))))
(assert (=> (not (<= zlength (int__content endidx6))) (= success9 success7)))
(assert (=> (not (<= zlength (int__content endidx6))) (= newnameserver18 newnameserver16)))
(assert (=> (not (<= zlength (int__content endidx6))) (= i28 i24)))
(assert (=> (not (<= zlength (int__content endidx6))) (= i27 i23)))
(assert (=> (not (<= zlength (int__content endidx6))) (= lengthoftoken4 lengthoftoken2)))
(assert (=> (not (<= zlength (int__content endidx6))) (= foundtype10 foundtype8)))
(assert (=> (not (<= zlength (int__content endidx6))) (= endidx10 endidx8)))
(assert (=> (not (<= zlength (int__content endidx6))) (= begidx13 begidx11)))
(assert (=> (not (<= zlength (int__content endidx6))) (= success10 success8)))
(assert (=> (not (<= zlength (int__content endidx6))) (= newnameserver19 newnameserver17)))
(assert (not (<= zlength (int__content endidx9))))
(assert (and (= o10 (+ (int__content endidx9) 1)) (in_range4 (+ (int__content endidx9) 1))))
(assert (= result13 begidx12))
(assert (= begidx14 o10))
(assert (and (and (and (and (<= begidx15 endidx11) (<= begidx15 zlength)) (<= endidx11 zlength)) (=> (= foundtype11 1) (forall ((i37 Int)) (=> (and (<= begidx15 i37) (<= i37 endidx11)) (and (<= 48 (to_rep (select zonefileline i37))) (<= (to_rep (select zonefileline i37)) 57)))))) (and (and (in_range4 begidx15) (in_range4 endidx11)) (in_range3 foundtype11))))
(assert (and (= o11 (+ (- endidx11 begidx15) 1)) (in_range4 (+ (- endidx11 begidx15) 1))))
(assert (= result14 lengthoftoken3))
(assert (= lengthoftoken5 o11))
(assert (= foundtype11 0))
(assert (not (< 128 lengthoftoken5)))
(assert (= begidx15 r102b))
(assert (in_range4 r102b))
(assert (= endidx11 r103b))
(assert (in_range4 r103b))
(assert (= result15 (mk_int__ref i2)))
(assert (= i29 r102b))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= temp___1808 i29)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= temp___1809 endidx11)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= temp___1806 newemail1)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (and (and (<= 1 begidx15) (<= (+ (- endidx11 begidx15) 1) 128)) (= endidx11 temp___1809))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (and (=> (<= r102b r103b) (dynamic_property2 r102b r103b i30)) (and (<= r102b i30) (<= i30 r103b)))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= (to_rep o14) (to_rep (select zonefileline i30)))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (and (= o12 (+ i30 1)) (in_range1 (+ i30 1)))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= o13 (- o12 begidx15))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (and (= temp___1805 o13) (in_range1 o13))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (and (<= 1 temp___1805) (<= temp___1805 128))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= o15 temp___1805)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= o16 (store newemail2 o15 o14))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= result16 (mk_map__ref newemail2))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= newemail3 o16)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= i30 r103b)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= i31 (mk_int__ref i30))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= newemail4 (mk_map__ref newemail3))))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= i32 i30)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= newemail5 newemail3)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= i33 i31)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= newemail6 newemail4)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= i34 i32)))
(assert (=> (and (<= r102b i29) (<= i29 r103b)) (= newemail7 newemail5)))
(assert (=> (not (and (<= r102b i29) (<= i29 r103b))) (= i33 (mk_int__ref i29))))
(assert (=> (not (and (<= r102b i29) (<= i29 r103b))) (= newemail6 (mk_map__ref newemail1))))
(assert (=> (not (and (<= r102b i29) (<= i29 r103b))) (= i34 i29)))
(assert (=> (not (and (<= r102b i29) (<= i29 r103b))) (= newemail7 newemail1)))
(assert (= (+ endidx11 1) r105b))
(assert (in_range1 r105b))
(assert (<= r105b 128))
(assert (not (<= 128 2147483647)))
(check-sat)
(exit)
