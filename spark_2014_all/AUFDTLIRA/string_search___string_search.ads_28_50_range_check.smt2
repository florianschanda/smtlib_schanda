(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-sort positive 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (positive positive) Bool)
(declare-const dummy2 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (character character) Bool)
(declare-const dummy3 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range4 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range3 low) (in_range3 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq4 (us_t us_t) Bool)
(declare-const dummy4 us_t)
(declare-datatypes () ((text__ref (mk_text__ref (text__content us_t)))))
(define-fun text__ref___projection ((a text__ref)) us_t (text__content a))
(define-fun dynamic_invariant ((temp___expr_136 us_t) (temp___is_init_133 Bool) (temp___skip_constant_134 Bool) (temp___do_toplevel_135 Bool)) Bool (and (=> (not (= temp___skip_constant_134 true)) (dynamic_property 1 2147483647 (first1 temp___expr_136) (last1 temp___expr_136))) (=> (= temp___do_toplevel_135 true) (=> (= temp___is_init_133 true) (= (first1 temp___expr_136) 1)))))
(define-fun dynamic_predicate ((temp___139 us_t)) Bool (= (first1 temp___139) 1))
(declare-fun partial_match_at (us_t us_t Int Int) Bool)
(declare-fun partial_match_at__function_guard (Bool us_t us_t Int Int) Bool)
(define-fun dynamic_invariant1 ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range2 temp___expr_33)))
(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range3 temp___expr_39)))
(assert true)
(assert (forall ((needle us_t) (haystack us_t)) (forall ((loc Int) (len Int)) (! (= (= (partial_match_at needle haystack loc len) true) (forall ((i Int)) (=> (and (<= 1 i) (<= i len)) (= (to_rep (select (to_array needle) i)) (to_rep (select (to_array haystack) (+ loc (- i 1)))))))) :pattern ((partial_match_at needle haystack loc len))))))
(declare-fun match_at (us_t us_t Int) Bool)
(declare-fun match_at__function_guard (Bool us_t us_t Int) Bool)
(assert true)
(assert (forall ((needle us_t) (haystack us_t)) (forall ((loc Int)) (! (= (= (match_at needle haystack loc) true) (and (<= (- loc 1) (- (length haystack) (length needle))) (= (partial_match_at needle haystack loc (length needle)) true))) :pattern ((match_at needle haystack loc))))))
(declare-const needle us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const haystack us_t)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content integer)))))
(define-fun t3b__ref___projection ((a t3b__ref)) integer (t3b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t4b__ref (mk_t4b__ref (t4b__content integer)))))
(define-fun t4b__ref___projection ((a t4b__ref)) integer (t4b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_invariant3 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range4 temp___expr_63)))
(define-fun dynamic_invariant4 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-const diff Bool)
(declare-const i Int)
(declare-const j Int)
(declare-const string_search__brute_force__result Int)
(declare-const temp___272 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const temp___273 Int)
(declare-const temp___271 Int)
(declare-const temp___270 Bool)
(declare-const temp___266 Int)
(declare-const temp___265 Bool)
(declare-const temp___264 Int)
(declare-const o5 Int)
(declare-const o6 character)
(declare-const o7 Int)
(declare-const o8 Bool)
(declare-const o9 Bool)
(declare-const o10 Int)
(declare-const us Bool)
(declare-const temp___267 Int)
(declare-const o11 Int)
(declare-const o12 character)
(declare-const o13 Int)
(declare-const temp___2641 Int)
(declare-const o14 Int)
(declare-const o15 character)
(declare-const o16 Int)
(declare-const o17 Bool)
(declare-const o18 Bool)
(declare-const temp___2661 Int)
(declare-const temp___2651 Bool)
(declare-const temp___2642 Int)
(declare-const o19 Int)
(declare-const o20 character)
(declare-const o21 Int)
(declare-const o22 Bool)
(declare-const o23 Bool)
(declare-const o24 Int)
(declare-const us1 Bool)
(declare-const temp___2671 Int)
(declare-const o25 Int)
(declare-const o26 character)
(declare-const o27 Int)
(declare-const temp___2643 Int)
(declare-const o28 Int)
(declare-const o29 character)
(declare-const o30 Int)
(declare-const o31 Bool)
(declare-const o32 Bool)
(declare-const o33 Int)
(declare-const k Int)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const o40 Int)
(declare-const o41 Bool)
(declare-const diff1 Bool)
(declare-const j1 Int)
(declare-const string_search__brute_force__result1 Int)
(declare-const result Int)
(declare-const i1 Int)
(declare-const result1 Bool)
(declare-const diff2 Bool)
(declare-const result2 Int)
(declare-const j2 Int)
(declare-const result3 Bool)
(declare-const diff3 Bool)
(declare-const diff4 Bool)
(declare-const j3 Int)
(declare-const result4 Int)
(declare-const j4 Int)
(declare-const result5 Bool)
(declare-const diff5 Bool)
(declare-const diff6 Bool)
(declare-const j5 Int)
(declare-const diff7 Bool)
(declare-const j6 Int)
(declare-const diff8 Bool)
(declare-const j7 Int)
(declare-const diff9 Bool)
(declare-const j8 Int)
(declare-const diff10 Bool)
(declare-const j9 Int)
(declare-const diff11 Bool)
(declare-const j10 Int)
(declare-const diff12 Bool)
(declare-const j11 Int)
(declare-const diff13 Bool)
(declare-const j12 Int)
(declare-const result6 Int)
(declare-const string_search__brute_force__result2 Int)
(declare-const string_search__brute_force__result3 int__ref)
(declare-const string_search__brute_force__result4 Int)
(declare-const diff14 Bool)
(declare-const i2 Int)
(declare-const j13 Int)
(declare-const string_search__brute_force__result5 Int)
(declare-const result7 int__ref)
(declare-const i3 Int)
(declare-const result8 bool__ref)
(declare-const diff15 Bool)
(declare-const result9 int__ref)
(declare-const j14 Int)
(declare-const result10 bool__ref)
(declare-const diff16 Bool)
(declare-const diff17 Bool)
(declare-const j15 Int)
(declare-const result11 int__ref)
(declare-const j16 Int)
(declare-const result12 bool__ref)
(declare-const diff18 Bool)
(declare-const diff19 bool__ref)
(declare-const j17 int__ref)
(declare-const diff20 Bool)
(declare-const j18 Int)
(declare-const diff21 bool__ref)
(declare-const j19 int__ref)
(declare-const diff22 Bool)
(declare-const j20 Int)
(declare-const diff23 bool__ref)
(declare-const j21 int__ref)
(declare-const diff24 Bool)
(declare-const j22 Int)
(declare-const diff25 bool__ref)
(declare-const j23 int__ref)
(declare-const diff26 Bool)
(declare-const j24 Int)
(declare-const diff27 bool__ref)
(declare-const j25 int__ref)
(declare-const diff28 Bool)
(declare-const j26 Int)
(declare-const result13 int__ref)
(declare-const string_search__brute_force__result6 Int)
(declare-const string_search__brute_force__result7 int__ref)
(declare-const string_search__brute_force__result8 Int)
(declare-const diff29 bool__ref)
(declare-const i4 int__ref)
(declare-const j27 int__ref)
(declare-const string_search__brute_force__result9 int__ref)
(declare-const diff30 Bool)
(declare-const i5 Int)
(declare-const j28 Int)
(declare-const string_search__brute_force__result10 Int)
(declare-const diff31 bool__ref)
(declare-const i6 int__ref)
(declare-const j29 int__ref)
(declare-const string_search__brute_force__result11 int__ref)
(declare-const diff32 Bool)
(declare-const i7 Int)
(declare-const j30 Int)
(declare-const string_search__brute_force__result12 Int)
(declare-const diff33 bool__ref)
(declare-const i8 int__ref)
(declare-const j31 int__ref)
(declare-const string_search__brute_force__result13 int__ref)
(declare-const diff34 Bool)
(declare-const i9 Int)
(declare-const j32 Int)
(declare-const string_search__brute_force__result14 Int)
(declare-const diff35 bool__ref)
(declare-const i10 int__ref)
(declare-const j33 int__ref)
(declare-const string_search__brute_force__result15 int__ref)
(declare-const diff36 Bool)
(declare-const i11 Int)
(declare-const j34 Int)
(declare-const string_search__brute_force__result16 Int)
(declare-const diff37 bool__ref)
(declare-const i12 int__ref)
(declare-const j35 int__ref)
(declare-const string_search__brute_force__result17 int__ref)
(declare-const diff38 Bool)
(declare-const i13 Int)
(declare-const j36 Int)
(declare-const string_search__brute_force__result18 Int)
(declare-const result14 int__ref)
(declare-const string_search__brute_force__result19 Int)
(declare-const string_search__brute_force__result20 int__ref)
(declare-const string_search__brute_force__result21 Int)
(declare-const diff39 bool__ref)
(declare-const i14 int__ref)
(declare-const j37 int__ref)
(declare-const string_search__brute_force__result22 int__ref)
(declare-const diff40 Bool)
(declare-const i15 Int)
(declare-const j38 Int)
(declare-const string_search__brute_force__result23 Int)
(declare-const diff41 bool__ref)
(declare-const i16 int__ref)
(declare-const j39 int__ref)
(declare-const string_search__brute_force__result24 int__ref)
(declare-const diff42 Bool)
(declare-const i17 Int)
(declare-const j40 Int)
(declare-const string_search__brute_force__result25 Int)
(declare-const result15 Bool)
(assert (dynamic_invariant needle true false true))
(assert (dynamic_invariant haystack true false true))
(assert (and (<= 1 (length needle)) (<= (length needle) (length haystack))))
(assert (or (and (and (and (= string_search__brute_force__result22 string_search__brute_force__result13) (and (= j37 j31) (and (= i14 i8) (= diff39 diff33)))) (and (= string_search__brute_force__result23 string_search__brute_force__result14) (and (= j38 j32) (and (= i15 i9) (= diff40 diff34))))) (and (= temp___272 1) (and (and (and (and (and (and (= o (length needle)) (in_range1 (length needle))) (and (and (= o1 (length haystack)) (in_range1 (length haystack))) (= o2 (- o1 o)))) (and (= o3 o2) (in_range1 o2))) (= o4 (+ o3 1))) (and (= temp___273 o4) (in_range1 o4))) (and (and (= (mk_int__ref result) (mk_int__ref i)) (= i1 temp___272)) (and (and (<= temp___272 i1) (<= i1 temp___273)) (and (= temp___271 i1) (and (= temp___270 diff) (and (and (= (mk_bool__ref result1) (mk_bool__ref diff)) (= diff2 (of_int 0))) (and (and (and (= (mk_int__ref result2) (mk_int__ref j)) (= j2 (to_rep1 (first (rt needle))))) (ite (and (<= (to_rep1 (first (rt needle))) j2) (<= j2 (to_rep1 (last (rt needle))))) (and (and (and (= temp___266 j2) (and (= temp___265 diff2) (and (and (and (and (and (and (and (and (= temp___264 (+ j2 (- i1 1))) (in_range1 (+ j2 (- i1 1)))) (and (and (<= (to_rep1 (first (rt haystack))) temp___264) (<= temp___264 (to_rep1 (last (rt haystack))))) (= o5 temp___264))) (= o6 (select (elts haystack) o5))) (= o7 (to_rep o6))) (= o8 (ite (= (to_rep (select (elts needle) j2)) o7) true false))) (= o9 (ite (not (= o8 true)) true false))) (and (= diff2 result3) (= diff3 o9))) (or (and (and (and (= j2 j7) (= diff3 diff8)) (and (= j8 j2) (= diff9 diff3))) (= diff3 true)) (and (not (= diff3 true)) (and (and (and (= (mk_int__ref j7) (mk_int__ref j5)) (= (mk_bool__ref diff8) (mk_bool__ref diff6))) (and (= j8 j6) (= diff9 diff7))) (and (and (= (partial_match_at needle haystack i1 j3) true) (= (= diff4 true) (not (= (to_rep (select (elts needle) j3)) (to_rep (select (elts haystack) (+ j3 (- i1 1)))))))) (and (and (=> (<= (to_rep1 (first (rt needle))) (to_rep1 (last (rt needle)))) (dynamic_property2 (to_rep1 (first (rt needle))) (to_rep1 (last (rt needle))) j3)) (and (<= (to_rep1 (first (rt needle))) j3) (<= j3 (to_rep1 (last (rt needle)))))) (or (and (and (and (= j3 j5) (= diff4 diff6)) (and (= j6 j3) (= diff7 diff4))) (= j3 (to_rep1 (last (rt needle))))) (and (not (= j3 (to_rep1 (last (rt needle))))) (and (and (and (= j4 j5) (= diff5 diff6)) (and (= j6 j4) (= diff7 diff5))) (and (and (= j3 result4) (= j4 (+ j3 1))) (and (and (and (and (and (and (and (and (= temp___2641 (+ j4 (- i1 1))) (in_range1 (+ j4 (- i1 1)))) (and (and (<= (to_rep1 (first (rt haystack))) temp___2641) (<= temp___2641 (to_rep1 (last (rt haystack))))) (= o14 temp___2641))) (= o15 (select (elts haystack) o14))) (= o16 (to_rep o15))) (= o17 (ite (= (to_rep (select (elts needle) j4)) o16) true false))) (= o18 (ite (not (= o17 true)) true false))) (and (= diff4 result5) (= diff5 o18))) (= diff5 true)))))))))))))) (and (and (= (mk_int__ref j9) (mk_int__ref j7)) (= (mk_bool__ref diff10) (mk_bool__ref diff8))) (and (= j10 j8) (= diff11 diff9)))) (and (and (= (mk_int__ref j11) (mk_int__ref j9)) (= (mk_bool__ref diff12) (mk_bool__ref diff10))) (and (= j12 j10) (= diff13 diff11)))) (and (and (= j2 j11) (= diff2 diff12)) (and (= j12 j2) (= diff13 diff2))))) (or (and (and (and (= string_search__brute_force__result13 (mk_int__ref string_search__brute_force__result2)) (and (= j31 (mk_int__ref j11)) (and (= i8 (mk_int__ref i1)) (= diff33 (mk_bool__ref diff12))))) (and (= string_search__brute_force__result14 string_search__brute_force__result2) (and (= j32 j12) (and (= i9 i1) (= diff34 diff13))))) (and (not (= diff12 true)) (and (= (mk_int__ref result6) (mk_int__ref string_search__brute_force__result)) (= string_search__brute_force__result2 i1)))) (and (and (= diff12 true) (and (= string_search__brute_force__result3 (mk_int__ref string_search__brute_force__result)) (= string_search__brute_force__result4 string_search__brute_force__result1))) (and (and (and (= string_search__brute_force__result13 (mk_int__ref string_search__brute_force__result6)) (and (= j31 j25) (and (= i8 (mk_int__ref i3)) (= diff33 diff27)))) (and (= string_search__brute_force__result14 string_search__brute_force__result6) (and (= j32 j26) (and (= i9 i3) (= diff34 diff28))))) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 i2)) (not (= (match_at needle haystack k1) true)))) (and (and (=> (<= 1 (+ (- (length haystack) (length needle)) 1)) (dynamic_property1 1 (+ (- (length haystack) (length needle)) 1) i2)) (and (<= 1 i2) (<= i2 (+ (- (length haystack) (length needle)) 1)))) (and (not (= i2 temp___273)) (and (and (= result7 (mk_int__ref i2)) (= i3 (+ i2 1))) (and (and (= result8 (mk_bool__ref diff14)) (= diff15 (of_int 0))) (and (and (and (= result9 (mk_int__ref j13)) (= j14 (to_rep1 (first (rt needle))))) (ite (and (<= (to_rep1 (first (rt needle))) j14) (<= j14 (to_rep1 (last (rt needle))))) (and (and (and (= temp___2661 j14) (and (= temp___2651 diff15) (and (and (and (and (and (and (and (and (= temp___2642 (+ j14 (- i3 1))) (in_range1 (+ j14 (- i3 1)))) (and (and (<= (to_rep1 (first (rt haystack))) temp___2642) (<= temp___2642 (to_rep1 (last (rt haystack))))) (= o19 temp___2642))) (= o20 (select (elts haystack) o19))) (= o21 (to_rep o20))) (= o22 (ite (= (to_rep (select (elts needle) j14)) o21) true false))) (= o23 (ite (not (= o22 true)) true false))) (and (= result10 (mk_bool__ref diff15)) (= diff16 o23))) (or (and (and (and (= j21 (mk_int__ref j14)) (= diff23 (mk_bool__ref diff16))) (and (= j22 j14) (= diff24 diff16))) (= diff16 true)) (and (not (= diff16 true)) (and (and (and (= j21 j17) (= diff23 diff19)) (and (= j22 j18) (= diff24 diff20))) (and (and (= (partial_match_at needle haystack i3 j15) true) (= (= diff17 true) (not (= (to_rep (select (elts needle) j15)) (to_rep (select (elts haystack) (+ j15 (- i3 1)))))))) (and (and (=> (<= (to_rep1 (first (rt needle))) (to_rep1 (last (rt needle)))) (dynamic_property2 (to_rep1 (first (rt needle))) (to_rep1 (last (rt needle))) j15)) (and (<= (to_rep1 (first (rt needle))) j15) (<= j15 (to_rep1 (last (rt needle)))))) (or (and (and (and (= j17 (mk_int__ref j15)) (= diff19 (mk_bool__ref diff17))) (and (= j18 j15) (= diff20 diff17))) (= j15 (to_rep1 (last (rt needle))))) (and (not (= j15 (to_rep1 (last (rt needle))))) (and (and (and (= j17 (mk_int__ref j16)) (= diff19 (mk_bool__ref diff18))) (and (= j18 j16) (= diff20 diff18))) (and (and (= result11 (mk_int__ref j15)) (= j16 (+ j15 1))) (and (and (and (and (and (and (and (and (= temp___2643 (+ j16 (- i3 1))) (in_range1 (+ j16 (- i3 1)))) (and (and (<= (to_rep1 (first (rt haystack))) temp___2643) (<= temp___2643 (to_rep1 (last (rt haystack))))) (= o28 temp___2643))) (= o29 (select (elts haystack) o28))) (= o30 (to_rep o29))) (= o31 (ite (= (to_rep (select (elts needle) j16)) o30) true false))) (= o32 (ite (not (= o31 true)) true false))) (and (= result12 (mk_bool__ref diff17)) (= diff18 o32))) (= diff18 true)))))))))))))) (and (and (= j23 j21) (= diff25 diff23)) (and (= j24 j22) (= diff26 diff24)))) (and (and (= j25 j23) (= diff27 diff25)) (and (= j26 j24) (= diff28 diff26)))) (and (and (= j25 (mk_int__ref j14)) (= diff27 (mk_bool__ref diff15))) (and (= j26 j14) (= diff28 diff15))))) (and (not (= (bool__content diff27) true)) (and (= result13 (mk_int__ref string_search__brute_force__result5)) (= string_search__brute_force__result6 i3))))))))))))))))))))) (and (and (and (and (and (and (and (= o (length needle)) (in_range1 (length needle))) (and (and (= o1 (length haystack)) (in_range1 (length haystack))) (= o2 (- o1 o)))) (and (= o3 o2) (in_range1 o2))) (= o4 (+ o3 1))) (and (= temp___273 o4) (in_range1 o4))) (and (and (= (mk_int__ref result) (mk_int__ref i)) (= i1 1)) (ite (and (<= 1 i1) (<= i1 temp___273)) (and (and (and (= temp___271 i1) (and (= temp___270 diff) (and (and (= (mk_bool__ref result1) (mk_bool__ref diff)) (= diff2 (of_int 0))) (and (and (and (= (mk_int__ref result2) (mk_int__ref j)) (= j2 (to_rep1 (first (rt needle))))) (ite (and (<= (to_rep1 (first (rt needle))) j2) (<= j2 (to_rep1 (last (rt needle))))) (and (and (and (= temp___266 j2) (and (= temp___265 diff2) (and (and (and (and (and (and (and (and (= temp___264 (+ j2 (- i1 1))) (in_range1 (+ j2 (- i1 1)))) (and (and (<= (to_rep1 (first (rt haystack))) temp___264) (<= temp___264 (to_rep1 (last (rt haystack))))) (= o5 temp___264))) (= o6 (select (elts haystack) o5))) (= o7 (to_rep o6))) (= o8 (ite (= (to_rep (select (elts needle) j2)) o7) true false))) (= o9 (ite (not (= o8 true)) true false))) (and (= diff2 result3) (= diff3 o9))) (or (and (and (and (= j2 j7) (= diff3 diff8)) (and (= j8 j2) (= diff9 diff3))) (= diff3 true)) (and (not (= diff3 true)) (and (and (and (= (mk_int__ref j7) (mk_int__ref j5)) (= (mk_bool__ref diff8) (mk_bool__ref diff6))) (and (= j8 j6) (= diff9 diff7))) (and (and (= (partial_match_at needle haystack i1 j3) true) (= (= diff4 true) (not (= (to_rep (select (elts needle) j3)) (to_rep (select (elts haystack) (+ j3 (- i1 1)))))))) (and (and (=> (<= (to_rep1 (first (rt needle))) (to_rep1 (last (rt needle)))) (dynamic_property2 (to_rep1 (first (rt needle))) (to_rep1 (last (rt needle))) j3)) (and (<= (to_rep1 (first (rt needle))) j3) (<= j3 (to_rep1 (last (rt needle)))))) (or (and (and (and (= j3 j5) (= diff4 diff6)) (and (= j6 j3) (= diff7 diff4))) (= j3 (to_rep1 (last (rt needle))))) (and (not (= j3 (to_rep1 (last (rt needle))))) (and (and (and (= j4 j5) (= diff5 diff6)) (and (= j6 j4) (= diff7 diff5))) (and (and (= j3 result4) (= j4 (+ j3 1))) (and (and (and (and (and (and (and (and (= temp___2641 (+ j4 (- i1 1))) (in_range1 (+ j4 (- i1 1)))) (and (and (<= (to_rep1 (first (rt haystack))) temp___2641) (<= temp___2641 (to_rep1 (last (rt haystack))))) (= o14 temp___2641))) (= o15 (select (elts haystack) o14))) (= o16 (to_rep o15))) (= o17 (ite (= (to_rep (select (elts needle) j4)) o16) true false))) (= o18 (ite (not (= o17 true)) true false))) (and (= diff4 result5) (= diff5 o18))) (= diff5 true)))))))))))))) (and (and (= (mk_int__ref j9) (mk_int__ref j7)) (= (mk_bool__ref diff10) (mk_bool__ref diff8))) (and (= j10 j8) (= diff11 diff9)))) (and (and (= (mk_int__ref j11) (mk_int__ref j9)) (= (mk_bool__ref diff12) (mk_bool__ref diff10))) (and (= j12 j10) (= diff13 diff11)))) (and (and (= j2 j11) (= diff2 diff12)) (and (= j12 j2) (= diff13 diff2))))) (and (and (= diff12 true) (and (= string_search__brute_force__result3 (mk_int__ref string_search__brute_force__result)) (= string_search__brute_force__result4 string_search__brute_force__result1))) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 i2)) (not (= (match_at needle haystack k1) true)))) (and (and (=> (<= 1 (+ (- (length haystack) (length needle)) 1)) (dynamic_property1 1 (+ (- (length haystack) (length needle)) 1) i2)) (and (<= 1 i2) (<= i2 (+ (- (length haystack) (length needle)) 1)))) (= i2 temp___273)))))))) (and (and (= string_search__brute_force__result15 (mk_int__ref string_search__brute_force__result5)) (and (= j33 (mk_int__ref j13)) (and (= i10 (mk_int__ref i2)) (= diff35 (mk_bool__ref diff14))))) (and (= string_search__brute_force__result16 string_search__brute_force__result5) (and (= j34 j13) (and (= i11 i2) (= diff36 diff14)))))) (and (and (= string_search__brute_force__result17 string_search__brute_force__result15) (and (= j35 j33) (and (= i12 i10) (= diff37 diff35)))) (and (= string_search__brute_force__result18 string_search__brute_force__result16) (and (= j36 j34) (and (= i13 i11) (= diff38 diff36)))))) (and (and (= string_search__brute_force__result17 (mk_int__ref string_search__brute_force__result)) (and (= j35 (mk_int__ref j)) (and (= i12 (mk_int__ref i1)) (= diff37 (mk_bool__ref diff))))) (and (= string_search__brute_force__result18 string_search__brute_force__result1) (and (= j36 j1) (and (= i13 i1) (= diff38 diff1)))))))) (and (and (and (= string_search__brute_force__result22 string_search__brute_force__result20) (and (= j37 j35) (and (= i14 i12) (= diff39 diff37)))) (and (= string_search__brute_force__result23 string_search__brute_force__result21) (and (= j38 j36) (and (= i15 i13) (= diff40 diff38))))) (and (and (= string_search__brute_force__result20 (mk_int__ref string_search__brute_force__result19)) (= string_search__brute_force__result21 string_search__brute_force__result19)) (and (= result14 string_search__brute_force__result17) (= string_search__brute_force__result19 0)))))))
(assert (= string_search__brute_force__result24 string_search__brute_force__result22))
(assert (= j39 j37))
(assert (= i16 i14))
(assert (= diff41 diff39))
(assert (= string_search__brute_force__result25 string_search__brute_force__result23))
(assert (= j40 j38))
(assert (= i17 i15))
(assert (= diff42 diff40))
(assert (and (= o35 (length needle)) (in_range1 (length needle))))
(assert (and (= o36 (length haystack)) (in_range1 (length haystack))))
(assert (= o37 (- o36 o35)))
(assert (and (= o38 o37) (in_range1 o37)))
(assert (= o39 (+ o38 1)))
(assert (and (= o40 o39) (in_range1 o39)))
(assert (= o41 (ite (<= (int__content string_search__brute_force__result24) o40) true false)))
(assert (= result15 (ite (<= 0 (int__content string_search__brute_force__result24)) o41 false)))
(assert (= result15 true))
(assert (< 0 (int__content string_search__brute_force__result24)))
(assert (not (in_range3 (int__content string_search__brute_force__result24))))
(check-sat)
(exit)
