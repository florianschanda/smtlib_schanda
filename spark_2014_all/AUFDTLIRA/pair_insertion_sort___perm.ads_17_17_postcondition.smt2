(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort index 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483646)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (index index) Bool)
(declare-const dummy1 index)
(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((arr__ref (mk_arr__ref (arr__content us_t)))))
(define-fun arr__ref___projection ((a arr__ref)) us_t (arr__content a))
(define-fun dynamic_invariant1 ((temp___expr_166 us_t) (temp___is_init_162 Bool) (temp___skip_constant_163 Bool) (temp___do_toplevel_164 Bool) (temp___do_typ_inv_165 Bool)) Bool (and (=> (not (= temp___skip_constant_163 true)) (dynamic_property 0 2147483646 (first1 temp___expr_166) (last1 temp___expr_166))) (=> (= temp___do_toplevel_164 true) (=> (= temp___is_init_162 true) (= (first1 temp___expr_166) 0)))))
(define-fun dynamic_predicate ((temp___169 us_t)) Bool (= (first1 temp___169) 0))
(declare-fun remove_last (us_t) us_t)
(declare-fun remove_last__function_guard (us_t us_t) Bool)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((t17s__ref (mk_t17s__ref (t17s__content integer)))))
(define-fun t17s__ref___projection ((a t17s__ref)) integer (t17s__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int integer)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int integer) (elts1 a))
(define-fun of_array1 ((a (Array Int integer)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int integer)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int integer)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int integer)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep (first2 (rt1 x))) (to_rep (last2 (rt1 x))) (elts1 y) (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))
(declare-fun user_eq4 (us_t1 us_t1) Bool)
(declare-const dummy4 us_t1)
(declare-datatypes () ((t18s__ref (mk_t18s__ref (t18s__content us_t1)))))
(define-fun t18s__ref___projection ((a t18s__ref)) us_t1 (t18s__content a))
(assert (forall ((a us_t)) (! (=> (and (dynamic_invariant1 a true true true true) (< 0 (length a))) (dynamic_invariant1 (remove_last a) true false true true)) :pattern ((remove_last a)))))
(assert (forall ((a us_t)) (! (=> (dynamic_invariant1 a true true true true) (= (remove_last a) (let ((temp___189 (let ((temp___188 (- (last1 a) 1))) (let ((temp___187 (first1 a))) (of_array1 (to_array a) temp___187 temp___188))))) (of_array (to_array1 temp___189) (first3 temp___189) (last3 temp___189))))) :pattern ((remove_last a)))))
(declare-const a us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const e Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort nb_occ 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq5 (nb_occ nb_occ) Bool)
(declare-const dummy5 nb_occ)
(declare-datatypes () ((nb_occ__ref (mk_nb_occ__ref (nb_occ__content nb_occ)))))
(define-fun nb_occ__ref___projection ((a1 nb_occ__ref)) nb_occ (nb_occ__content a1))
(define-fun dynamic_invariant2 ((temp___expr_177 Int) (temp___is_init_173 Bool) (temp___skip_constant_174 Bool) (temp___do_toplevel_175 Bool) (temp___do_typ_inv_176 Bool)) Bool (=> (or (= temp___is_init_173 true) (<= 0 2147483647)) (in_range2 temp___expr_177)))
(declare-fun occ_def (us_t Int) Int)
(declare-fun occ_def__function_guard (Int us_t Int) Bool)
(assert (forall ((a1 us_t)) (forall ((e1 Int)) (! (=> (and (dynamic_invariant1 a1 true true true true) (dynamic_invariant e1 true true true true)) (= (occ_def a1 e1) (ite (= (length a1) 0) 0 (ite (= (to_rep (select (to_array a1) (last1 a1))) e1) (+ (occ_def (remove_last a1) e1) 1) (occ_def (remove_last a1) e1))))) :pattern ((occ_def a1 e1))))))
(define-fun dynamic_invariant3 ((temp___expr_159 Int) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (or (= temp___is_init_155 true) (<= 0 2147483646)) (in_range1 temp___expr_159)))
(declare-const perm__occ_def__result Int)
(declare-const o Int)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const o3 (Array Int integer))
(declare-const o4 t)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 (Array Int integer))
(declare-const o8 t)
(declare-const o9 Int)
(declare-const result Bool)
(declare-const result1 Int)
(declare-const perm__occ_def__result1 Int)
(declare-const perm__occ_def__result2 Int)
(declare-const perm__occ_def__result3 Int)
(declare-const perm__occ_def__result4 Int)
(declare-const perm__occ_def__result5 Int)
(define-fun o10 () us_t (mk___t o7 o8))
(define-fun o11 () us_t (mk___t o3 o4))
(declare-const result2 Int)
(assert (dynamic_invariant1 a true false true true))
(assert (in_range e))
(assert (= perm__occ_def__result1 perm__occ_def__result2))
(assert (= perm__occ_def__result3 perm__occ_def__result1))
(assert (=> (= (length a) 0) (= o9 0)))
(assert (=> (not (= (length a) 0)) (and (<= (to_rep (first (rt a))) (to_rep (last (rt a)))) (<= (to_rep (last (rt a))) (to_rep (last (rt a)))))))
(assert (=> (not (= (length a) 0)) (= o (to_rep (last (rt a))))))
(assert (=> (not (= (length a) 0)) (= o1 (select (elts a) o))))
(assert (=> (not (= (length a) 0)) (= o2 (to_rep o1))))
(assert (=> (not (= (length a) 0)) (= result (ite (= o2 e) true false))))
(assert (=> (not (= (length a) 0)) (=> (= result true) (and (= o11 (remove_last a)) (and (dynamic_invariant1 o11 true false true true) (and (= (elts a) o3) (= (mk (to_rep (first2 (mk1 (to_rep (first (rt a))) (- (to_rep (last (rt a))) 1)))) (to_rep (last2 (mk1 (to_rep (first (rt a))) (- (to_rep (last (rt a))) 1))))) o4)))))))
(assert (=> (not (= (length a) 0)) (=> (= result true) (and (= o5 (occ_def o11 e)) (and (in_range2 o5) (and (= o5 (ite (= (length o11) 0) 0 (ite (= (to_rep (select o3 (to_rep (last o4)))) e) (+ (occ_def (remove_last o11) e) 1) (occ_def (remove_last o11) e)))) (<= o5 (length o11))))))))
(assert (=> (not (= (length a) 0)) (=> (= result true) (= o6 (+ o5 1)))))
(assert (=> (not (= (length a) 0)) (=> (= result true) (and (= o9 o6) (in_range o6)))))
(assert (=> (not (= (length a) 0)) (=> (not (= result true)) (and (= o10 (remove_last a)) (and (dynamic_invariant1 o10 true false true true) (and (= (elts a) o7) (= (mk (to_rep (first2 (mk1 (to_rep (first (rt a))) (- (to_rep (last (rt a))) 1)))) (to_rep (last2 (mk1 (to_rep (first (rt a))) (- (to_rep (last (rt a))) 1))))) o8)))))))
(assert (=> (not (= (length a) 0)) (=> (not (= result true)) (and (= o9 (occ_def o10 e)) (and (in_range2 o9) (and (= o9 (ite (= (length o10) 0) 0 (ite (= (to_rep (select o7 (to_rep (last o8)))) e) (+ (occ_def (remove_last o10) e) 1) (occ_def (remove_last o10) e)))) (<= o9 (length o10))))))))
(assert (= (mk_int__ref result1) (mk_int__ref perm__occ_def__result)))
(assert (= perm__occ_def__result1 o9))
(assert (= (mk_int__ref perm__occ_def__result4) (mk_int__ref perm__occ_def__result2)))
(assert (= perm__occ_def__result5 perm__occ_def__result3))
(assert (= result2 perm__occ_def__result4))
(assert (not (<= perm__occ_def__result4 (length a))))
(check-sat)
(exit)
