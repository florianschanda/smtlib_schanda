(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort natural 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (natural natural) Bool)
(declare-const dummy4 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range4 temp___expr_33)))
(declare-sort classt 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (classt classt) Bool)
(declare-const dummy5 classt)
(declare-datatypes () ((classt__ref (mk_classt__ref (classt__content classt)))))
(define-fun classt__ref___projection ((a classt__ref)) classt (classt__content a))
(define-fun dynamic_invariant1 ((temp___expr_479 Int) (temp___is_init_476 Bool) (temp___skip_constant_477 Bool) (temp___do_toplevel_478 Bool)) Bool (=> (or (= temp___is_init_476 true) (<= 0 5)) (in_range5 temp___expr_479)))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq2 (us_rep us_rep) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort classtexti 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (classtexti classtexti) Bool)
(declare-const dummy7 classtexti)
(declare-datatypes () ((classtexti__ref (mk_classtexti__ref (classtexti__content classtexti)))))
(define-fun classtexti__ref___projection ((a classtexti__ref)) classtexti (classtexti__content a))
(declare-fun to_rep2 (classtexti) Int)
(declare-fun of_rep2 (Int) classtexti)
(assert (forall ((x classtexti)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x classtexti)) (! (in_range6 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-const dummy8 (Array Int character))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq8 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__configdata__classstringt__text (Array Int character)) (rec__configdata__classstringt__length classtexti)))))
(define-fun us_split_fields_Text__projection ((a us_split_fields)) (Array Int character) (rec__configdata__classstringt__text a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields)) classtexti (rec__configdata__classstringt__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep1 (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep1)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (bool_eq (rec__configdata__classstringt__text (us_split_fields1 a)) 1 12 (rec__configdata__classstringt__text (us_split_fields1 b)) 1 12) true) (= (to_rep2 (rec__configdata__classstringt__length (us_split_fields1 a))) (to_rep2 (rec__configdata__classstringt__length (us_split_fields1 b))))) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const configdata__classstringt__text__first__bit Int)
(declare-const configdata__classstringt__text__last__bit Int)
(declare-const configdata__classstringt__text__position Int)
(assert (<= 0 configdata__classstringt__text__first__bit))
(assert (< configdata__classstringt__text__first__bit configdata__classstringt__text__last__bit))
(assert (<= 0 configdata__classstringt__text__position))
(declare-const configdata__classstringt__length__first__bit Int)
(declare-const configdata__classstringt__length__last__bit Int)
(declare-const configdata__classstringt__length__position Int)
(assert (<= 0 configdata__classstringt__length__first__bit))
(assert (< configdata__classstringt__length__first__bit configdata__classstringt__length__last__bit))
(assert (<= 0 configdata__classstringt__length__position))
(declare-fun user_eq9 (us_rep1 us_rep1) Bool)
(declare-const dummy9 us_rep1)
(declare-datatypes () ((classstringt__ref (mk_classstringt__ref (classstringt__content us_rep1)))))
(define-fun classstringt__ref___projection ((a classstringt__ref)) us_rep1 (classstringt__content a))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int us_rep1))))))
(declare-fun slide1 ((Array Int us_rep1) Int Int) (Array Int us_rep1))
(assert (forall ((a (Array Int us_rep1))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int us_rep1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int us_rep1) Int Int (Array Int us_rep1) Int Int) (Array Int us_rep1))
(assert (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (us_rep1 Int) (Array Int us_rep1))
(assert (forall ((v us_rep1)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq4 ((a (Array Int us_rep1)) (a__first Int) (a__last Int) (b (Array Int us_rep1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_163 Int)) (=> (and (<= a__first temp___idx_163) (<= temp___idx_163 a__last)) (= (bool_eq3 (select a temp___idx_163) (select b (+ (- b__first a__first) temp___idx_163))) true)))) true false))
(assert (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_163 Int)) (=> (and (<= a__first temp___idx_163) (<= temp___idx_163 a__last)) (= (bool_eq3 (select a temp___idx_163) (select b (+ (- b__first a__first) temp___idx_163))) true))))))))
(declare-const classstringlookup (Array Int us_rep1))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun configdata__classstringlookup__aggregate_def (us_rep1 us_rep1 us_rep1 us_rep1 us_rep1 us_rep1) (Array Int us_rep1))
(assert (forall ((temp___165 us_rep1) (temp___166 us_rep1) (temp___167 us_rep1) (temp___168 us_rep1) (temp___169 us_rep1) (temp___170 us_rep1)) (let ((temp___164 (configdata__classstringlookup__aggregate_def temp___165 temp___166 temp___167 temp___168 temp___169 temp___170))) (and (and (and (and (and (= (select temp___164 0) temp___165) (= (select temp___164 1) temp___166)) (= (select temp___164 2) temp___167)) (= (select temp___164 3) temp___168)) (= (select temp___164 4) temp___169)) (= (select temp___164 5) temp___170)))))
(declare-fun temp___String_Literal_172 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_172 us_void_param) 1)) 117) (= (to_rep (select (temp___String_Literal_172 us_void_param) 2)) 110)) (= (to_rep (select (temp___String_Literal_172 us_void_param) 3)) 109)) (= (to_rep (select (temp___String_Literal_172 us_void_param) 4)) 97)) (= (to_rep (select (temp___String_Literal_172 us_void_param) 5)) 114)) (= (to_rep (select (temp___String_Literal_172 us_void_param) 6)) 107)) (= (to_rep (select (temp___String_Literal_172 us_void_param) 7)) 101)) (= (to_rep (select (temp___String_Literal_172 us_void_param) 8)) 100)) (= (to_rep (select (temp___String_Literal_172 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_172 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_172 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_172 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_172 us_void_param)))))
(declare-fun temp___String_Literal_173 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_173 us_void_param) 1)) 117) (= (to_rep (select (temp___String_Literal_173 us_void_param) 2)) 110)) (= (to_rep (select (temp___String_Literal_173 us_void_param) 3)) 99)) (= (to_rep (select (temp___String_Literal_173 us_void_param) 4)) 108)) (= (to_rep (select (temp___String_Literal_173 us_void_param) 5)) 97)) (= (to_rep (select (temp___String_Literal_173 us_void_param) 6)) 115)) (= (to_rep (select (temp___String_Literal_173 us_void_param) 7)) 115)) (= (to_rep (select (temp___String_Literal_173 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_173 us_void_param) 9)) 102)) (= (to_rep (select (temp___String_Literal_173 us_void_param) 10)) 105)) (= (to_rep (select (temp___String_Literal_173 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_173 us_void_param) 12)) 100)) :pattern ((temp___String_Literal_173 us_void_param)))))
(declare-fun temp___String_Literal_174 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_174 us_void_param) 1)) 114) (= (to_rep (select (temp___String_Literal_174 us_void_param) 2)) 101)) (= (to_rep (select (temp___String_Literal_174 us_void_param) 3)) 115)) (= (to_rep (select (temp___String_Literal_174 us_void_param) 4)) 116)) (= (to_rep (select (temp___String_Literal_174 us_void_param) 5)) 114)) (= (to_rep (select (temp___String_Literal_174 us_void_param) 6)) 105)) (= (to_rep (select (temp___String_Literal_174 us_void_param) 7)) 99)) (= (to_rep (select (temp___String_Literal_174 us_void_param) 8)) 116)) (= (to_rep (select (temp___String_Literal_174 us_void_param) 9)) 101)) (= (to_rep (select (temp___String_Literal_174 us_void_param) 10)) 100)) (= (to_rep (select (temp___String_Literal_174 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_174 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_174 us_void_param)))))
(declare-fun temp___String_Literal_175 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_175 us_void_param) 1)) 99) (= (to_rep (select (temp___String_Literal_175 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_175 us_void_param) 3)) 110)) (= (to_rep (select (temp___String_Literal_175 us_void_param) 4)) 102)) (= (to_rep (select (temp___String_Literal_175 us_void_param) 5)) 105)) (= (to_rep (select (temp___String_Literal_175 us_void_param) 6)) 100)) (= (to_rep (select (temp___String_Literal_175 us_void_param) 7)) 101)) (= (to_rep (select (temp___String_Literal_175 us_void_param) 8)) 110)) (= (to_rep (select (temp___String_Literal_175 us_void_param) 9)) 116)) (= (to_rep (select (temp___String_Literal_175 us_void_param) 10)) 105)) (= (to_rep (select (temp___String_Literal_175 us_void_param) 11)) 97)) (= (to_rep (select (temp___String_Literal_175 us_void_param) 12)) 108)) :pattern ((temp___String_Literal_175 us_void_param)))))
(declare-fun temp___String_Literal_176 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_176 us_void_param) 1)) 115) (= (to_rep (select (temp___String_Literal_176 us_void_param) 2)) 101)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 3)) 99)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 4)) 114)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 6)) 116)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_176 us_void_param)))))
(declare-fun temp___String_Literal_177 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_177 us_void_param) 1)) 116) (= (to_rep (select (temp___String_Literal_177 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 3)) 112)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 6)) 99)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 7)) 114)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 8)) 101)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 9)) 116)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_177 us_void_param)))))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t31b__ref (mk_t31b__ref (t31b__content integer)))))
(define-fun t31b__ref___projection ((a t31b__ref)) integer (t31b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant3 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant4 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant5 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant6 ((temp___expr_1245 Int) (temp___is_init_1242 Bool) (temp___skip_constant_1243 Bool) (temp___do_toplevel_1244 Bool)) Bool (=> (or (= temp___is_init_1242 true) (<= 1 12)) (in_range6 temp___expr_1245)))
(assert (= classstringlookup (configdata__classstringlookup__aggregate_def (mk___rep (mk___split_fields (temp___String_Literal_172 Tuple0) (of_rep2 8))) (mk___rep (mk___split_fields (temp___String_Literal_173 Tuple0) (of_rep2 12))) (mk___rep (mk___split_fields (temp___String_Literal_174 Tuple0) (of_rep2 10))) (mk___rep (mk___split_fields (temp___String_Literal_175 Tuple0) (of_rep2 12))) (mk___rep (mk___split_fields (temp___String_Literal_176 Tuple0) (of_rep2 6))) (mk___rep (mk___split_fields (temp___String_Literal_177 Tuple0) (of_rep2 9))))))
(declare-const value Int)
(declare-const rawclass (Array Int character))
(declare-const stop Int)
(declare-const matched Bool)
(declare-const c Int)
(declare-const r30b Int)
(declare-const i Int)
(declare-const o classtexti)
(declare-const o1 (Array Int character))
(declare-const o2 classtexti)
(declare-const o3 classtexti)
(declare-const o4 (Array Int character))
(declare-const o5 classtexti)
(declare-const o6 classtexti)
(declare-const o7 (Array Int character))
(declare-const o8 classtexti)
(declare-const o9 classtexti)
(declare-const o10 (Array Int character))
(declare-const o11 classtexti)
(declare-const o12 classtexti)
(declare-const o13 (Array Int character))
(declare-const o14 classtexti)
(declare-const o15 classtexti)
(declare-const o16 (Array Int character))
(declare-const o17 classtexti)
(declare-const o18 (Array Int character))
(declare-const o19 classtexti)
(declare-const o20 (Array Int character))
(declare-const o21 classtexti)
(declare-const o22 (Array Int character))
(declare-const o23 classtexti)
(declare-const o24 (Array Int character))
(declare-const o25 classtexti)
(declare-const o26 us_rep1)
(declare-const o27 us_rep1)
(declare-const temp___1385 (Array Int us_rep1))
(declare-const o28 integer)
(declare-const o29 integer)
(declare-const temp___1378 Int)
(declare-const temp___1377 Int)
(declare-const temp___1376 Bool)
(declare-const o30 Int)
(declare-const o31 character)
(declare-const o32 Int)
(declare-const o33 character)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const o36 Bool)
(declare-const temp___13781 Int)
(declare-const temp___13771 Int)
(declare-const temp___13761 Bool)
(declare-const o37 Int)
(declare-const o38 character)
(declare-const o39 Int)
(declare-const o40 character)
(declare-const o41 Int)
(declare-const o42 Int)
(declare-const o43 Bool)
(declare-const temp___13782 Int)
(declare-const temp___13772 Int)
(declare-const temp___13762 Bool)
(declare-const o44 Int)
(declare-const o45 character)
(declare-const o46 Int)
(declare-const o47 character)
(declare-const o48 Int)
(declare-const o49 Int)
(declare-const o50 Bool)
(declare-const temp___13783 Int)
(declare-const temp___13773 Int)
(declare-const temp___13763 Bool)
(declare-const o51 Int)
(declare-const o52 character)
(declare-const o53 Int)
(declare-const o54 character)
(declare-const o55 Int)
(declare-const o56 Int)
(declare-const o57 Bool)
(declare-const temp___13784 Int)
(declare-const temp___13774 Int)
(declare-const temp___13764 Bool)
(declare-const o58 Int)
(declare-const o59 character)
(declare-const o60 Int)
(declare-const o61 character)
(declare-const o62 Int)
(declare-const o63 Int)
(declare-const o64 Bool)
(declare-const o65 Int)
(declare-const o66 character)
(declare-const o67 Int)
(declare-const o68 character)
(declare-const o69 Int)
(declare-const o70 Int)
(declare-const o71 Bool)
(declare-const r30b1 Int)
(declare-const i1 Int)
(declare-const result bool__ref)
(declare-const matched1 Bool)
(declare-const result1 int__ref)
(declare-const value1 Int)
(declare-const stop1 Int)
(declare-const file__getline__item (Array Int character))
(declare-const result2 map__ref)
(declare-const rawclass1 (Array Int character))
(declare-const result3 int__ref)
(declare-const c1 Int)
(declare-const result4 bool__ref)
(declare-const matched2 Bool)
(declare-const result5 int__ref)
(declare-const r30b2 Int)
(declare-const result6 int__ref)
(declare-const i2 Int)
(declare-const matched3 Bool)
(declare-const i3 Int)
(declare-const result7 Bool)
(declare-const result8 bool__ref)
(declare-const matched4 Bool)
(declare-const result9 int__ref)
(declare-const i4 Int)
(declare-const matched5 bool__ref)
(declare-const matched6 Bool)
(declare-const matched7 bool__ref)
(declare-const i5 int__ref)
(declare-const matched8 Bool)
(declare-const i6 Int)
(declare-const matched9 bool__ref)
(declare-const i7 int__ref)
(declare-const matched10 Bool)
(declare-const i8 Int)
(declare-const matched11 bool__ref)
(declare-const i9 int__ref)
(declare-const matched12 Bool)
(declare-const i10 Int)
(declare-const matched13 bool__ref)
(declare-const r30b3 int__ref)
(declare-const i11 int__ref)
(declare-const matched14 Bool)
(declare-const r30b4 Int)
(declare-const i12 Int)
(declare-const value2 int__ref)
(declare-const value3 Int)
(declare-const result10 int__ref)
(declare-const c2 Int)
(declare-const result11 bool__ref)
(declare-const matched15 Bool)
(declare-const result12 int__ref)
(declare-const r30b5 Int)
(declare-const result13 int__ref)
(declare-const i13 Int)
(declare-const matched16 Bool)
(declare-const i14 Int)
(declare-const result14 Bool)
(declare-const result15 bool__ref)
(declare-const matched17 Bool)
(declare-const matched18 bool__ref)
(declare-const matched19 Bool)
(declare-const result16 int__ref)
(declare-const i15 Int)
(declare-const matched20 bool__ref)
(declare-const matched21 Bool)
(declare-const matched22 bool__ref)
(declare-const i16 int__ref)
(declare-const matched23 Bool)
(declare-const i17 Int)
(declare-const matched24 bool__ref)
(declare-const i18 int__ref)
(declare-const matched25 Bool)
(declare-const i19 Int)
(declare-const matched26 bool__ref)
(declare-const i20 int__ref)
(declare-const matched27 Bool)
(declare-const i21 Int)
(declare-const matched28 bool__ref)
(declare-const i22 int__ref)
(declare-const matched29 Bool)
(declare-const i23 Int)
(declare-const matched30 bool__ref)
(declare-const r30b6 int__ref)
(declare-const i24 int__ref)
(declare-const matched31 Bool)
(declare-const r30b7 Int)
(declare-const i25 Int)
(declare-const value4 int__ref)
(declare-const value5 Int)
(declare-const result17 int__ref)
(declare-const c3 Int)
(declare-const result18 bool__ref)
(declare-const matched32 Bool)
(declare-const result19 int__ref)
(declare-const r30b8 Int)
(declare-const result20 int__ref)
(declare-const i26 Int)
(declare-const matched33 Bool)
(declare-const i27 Int)
(declare-const result21 Bool)
(declare-const result22 bool__ref)
(declare-const matched34 Bool)
(declare-const matched35 bool__ref)
(declare-const matched36 Bool)
(declare-const result23 int__ref)
(declare-const i28 Int)
(declare-const matched37 bool__ref)
(declare-const matched38 Bool)
(declare-const matched39 bool__ref)
(declare-const i29 int__ref)
(declare-const matched40 Bool)
(declare-const i30 Int)
(declare-const matched41 bool__ref)
(declare-const i31 int__ref)
(declare-const matched42 Bool)
(declare-const i32 Int)
(declare-const matched43 bool__ref)
(declare-const i33 int__ref)
(declare-const matched44 Bool)
(declare-const i34 Int)
(declare-const matched45 bool__ref)
(declare-const i35 int__ref)
(declare-const matched46 Bool)
(declare-const i36 Int)
(declare-const matched47 bool__ref)
(declare-const r30b9 int__ref)
(declare-const i37 int__ref)
(declare-const matched48 Bool)
(declare-const r30b10 Int)
(declare-const i38 Int)
(declare-const value6 int__ref)
(declare-const value7 Int)
(declare-const result24 int__ref)
(declare-const c4 Int)
(declare-const result25 bool__ref)
(declare-const matched49 Bool)
(declare-const result26 int__ref)
(declare-const r30b11 Int)
(declare-const result27 int__ref)
(declare-const i39 Int)
(declare-const matched50 Bool)
(declare-const i40 Int)
(declare-const result28 Bool)
(declare-const result29 bool__ref)
(declare-const matched51 Bool)
(declare-const matched52 bool__ref)
(declare-const matched53 Bool)
(declare-const result30 int__ref)
(declare-const i41 Int)
(declare-const matched54 bool__ref)
(declare-const matched55 Bool)
(declare-const matched56 bool__ref)
(declare-const i42 int__ref)
(declare-const matched57 Bool)
(declare-const i43 Int)
(declare-const matched58 bool__ref)
(declare-const i44 int__ref)
(declare-const matched59 Bool)
(declare-const i45 Int)
(declare-const matched60 bool__ref)
(declare-const i46 int__ref)
(declare-const matched61 Bool)
(declare-const i47 Int)
(declare-const matched62 bool__ref)
(declare-const i48 int__ref)
(declare-const matched63 Bool)
(declare-const i49 Int)
(declare-const matched64 bool__ref)
(declare-const r30b12 int__ref)
(declare-const i50 int__ref)
(declare-const matched65 Bool)
(declare-const r30b13 Int)
(declare-const i51 Int)
(declare-const value8 int__ref)
(declare-const value9 Int)
(declare-const result31 int__ref)
(declare-const c5 Int)
(declare-const result32 bool__ref)
(declare-const matched66 Bool)
(declare-const result33 int__ref)
(declare-const r30b14 Int)
(declare-const result34 int__ref)
(declare-const i52 Int)
(declare-const matched67 Bool)
(declare-const i53 Int)
(declare-const result35 Bool)
(declare-const result36 bool__ref)
(declare-const matched68 Bool)
(declare-const matched69 bool__ref)
(declare-const matched70 Bool)
(declare-const result37 int__ref)
(declare-const i54 Int)
(declare-const matched71 bool__ref)
(declare-const matched72 Bool)
(declare-const matched73 bool__ref)
(declare-const i55 int__ref)
(declare-const matched74 Bool)
(declare-const i56 Int)
(declare-const matched75 bool__ref)
(declare-const i57 int__ref)
(declare-const matched76 Bool)
(declare-const i58 Int)
(declare-const matched77 bool__ref)
(declare-const i59 int__ref)
(declare-const matched78 Bool)
(declare-const i60 Int)
(declare-const matched79 bool__ref)
(declare-const i61 int__ref)
(declare-const matched80 Bool)
(declare-const i62 Int)
(declare-const matched81 bool__ref)
(declare-const r30b15 int__ref)
(declare-const i63 int__ref)
(declare-const matched82 Bool)
(declare-const r30b16 Int)
(declare-const i64 Int)
(declare-const value10 int__ref)
(declare-const value11 Int)
(declare-const result38 int__ref)
(declare-const c6 Int)
(declare-const result39 bool__ref)
(declare-const matched83 Bool)
(declare-const result40 int__ref)
(declare-const r30b17 Int)
(declare-const result41 int__ref)
(declare-const i65 Int)
(declare-const matched84 Bool)
(declare-const i66 Int)
(declare-const result42 Bool)
(declare-const matched85 bool__ref)
(declare-const matched86 Bool)
(declare-const result43 int__ref)
(declare-const i67 Int)
(declare-const matched87 bool__ref)
(declare-const i68 int__ref)
(declare-const matched88 Bool)
(declare-const i69 Int)
(assert (= (to_rep2 o15) 9))
(assert (= (temp___String_Literal_177 Tuple0) o16))
(assert (= o15 o17))
(assert (= o18 o16))
(assert (= o19 o17))
(assert (= (to_rep2 o12) 6))
(assert (= (temp___String_Literal_176 Tuple0) o13))
(assert (= o12 o14))
(assert (= o20 o13))
(assert (= o21 o14))
(assert (= (to_rep2 o9) 12))
(assert (= (temp___String_Literal_175 Tuple0) o10))
(assert (= o9 o11))
(assert (= o22 o10))
(assert (= o23 o11))
(assert (= (to_rep2 o6) 10))
(assert (= (temp___String_Literal_174 Tuple0) o7))
(assert (= o6 o8))
(assert (= o24 o7))
(assert (= o25 o8))
(assert (= (to_rep2 o3) 12))
(assert (= (temp___String_Literal_173 Tuple0) o4))
(assert (= o3 o5))
(assert (= o26 (mk___rep (mk___split_fields o4 o5))))
(assert (= (to_rep2 o) 8))
(assert (= (temp___String_Literal_172 Tuple0) o1))
(assert (= o o2))
(assert (= o27 (mk___rep (mk___split_fields o1 o2))))
(assert (= temp___1385 (configdata__classstringlookup__aggregate_def o27 o26 (mk___rep (mk___split_fields o24 o25)) (mk___rep (mk___split_fields o22 o23)) (mk___rep (mk___split_fields o20 o21)) (mk___rep (mk___split_fields o18 o19)))))
(assert (= temp___1385 classstringlookup))
(assert (=> (<= 0 5) (in_range5 value)))
(assert (=> (<= 0 2147483647) (in_range4 stop)))
(assert (= result (mk_bool__ref matched)))
(assert (= matched1 (of_int 0)))
(assert (= result1 (mk_int__ref value)))
(assert (= value1 0))
(assert (= (to_rep1 o29) 12))
(assert (= (to_rep1 o28) 1))
(assert (in_range4 stop1))
(assert (= result2 (mk_map__ref rawclass)))
(assert (= rawclass1 (slide file__getline__item (to_rep1 (first (mk 1 12))) 1)))
(assert (= result3 (mk_int__ref c)))
(assert (= c1 0))
(assert (= stop1 (to_rep2 (rec__configdata__classstringt__length (us_split_fields1 (select classstringlookup c1))))))
(assert (= result4 (mk_bool__ref matched1)))
(assert (= matched2 (of_int 1)))
(assert (= result5 (mk_int__ref r30b)))
(assert (= r30b2 stop1))
(assert (in_range4 r30b2))
(assert (<= 1 r30b2))
(assert (not (<= 1 1)))
(check-sat)
(exit)
