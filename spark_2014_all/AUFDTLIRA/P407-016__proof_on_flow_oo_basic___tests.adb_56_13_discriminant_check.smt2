(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__tests__test_14__record_with_mutable_discrs__present Bool)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs)) Bool (rec__tests__test_14__record_with_mutable_discrs__present a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__tests__test_14__record_with_mutable_discrs__field natural)))))
(define-fun us_split_fields_Field__2__projection ((a us_split_fields)) natural (rec__tests__test_14__record_with_mutable_discrs__field a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields) (attr__constrained Bool)))))
(define-fun us_rep___12__projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___13__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___14__projection ((a us_rep)) Bool (attr__constrained a))
(define-fun tests__test_14__record_with_mutable_discrs__field__pred ((a us_rep)) Bool (= (to_int1 (rec__tests__test_14__record_with_mutable_discrs__present (us_split_discrs1 a))) 1))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (rec__tests__test_14__record_with_mutable_discrs__present (us_split_discrs1 a)) (rec__tests__test_14__record_with_mutable_discrs__present (us_split_discrs1 b))) (=> (tests__test_14__record_with_mutable_discrs__field__pred a) (= (to_rep (rec__tests__test_14__record_with_mutable_discrs__field (us_split_fields1 a))) (to_rep (rec__tests__test_14__record_with_mutable_discrs__field (us_split_fields1 b)))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const tests__test_14__record_with_mutable_discrs__present__first__bit Int)
(declare-const tests__test_14__record_with_mutable_discrs__present__last__bit Int)
(declare-const tests__test_14__record_with_mutable_discrs__present__position Int)
(assert (<= 0 tests__test_14__record_with_mutable_discrs__present__first__bit))
(assert (< tests__test_14__record_with_mutable_discrs__present__first__bit tests__test_14__record_with_mutable_discrs__present__last__bit))
(assert (<= 0 tests__test_14__record_with_mutable_discrs__present__position))
(declare-const tests__test_14__record_with_mutable_discrs__field__first__bit Int)
(declare-const tests__test_14__record_with_mutable_discrs__field__last__bit Int)
(declare-const tests__test_14__record_with_mutable_discrs__field__position Int)
(assert (<= 0 tests__test_14__record_with_mutable_discrs__field__first__bit))
(assert (< tests__test_14__record_with_mutable_discrs__field__first__bit tests__test_14__record_with_mutable_discrs__field__last__bit))
(assert (<= 0 tests__test_14__record_with_mutable_discrs__field__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((record_with_mutable_discrs__ref (mk_record_with_mutable_discrs__ref (record_with_mutable_discrs__content us_rep)))))
(define-fun record_with_mutable_discrs__ref___projection ((a record_with_mutable_discrs__ref)) us_rep (record_with_mutable_discrs__content a))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int us_rep))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int us_rep) Int Int (Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (us_rep Int) (Array Int us_rep))
(assert (forall ((v us_rep)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int) (b (Array Int us_rep)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (bool_eq (select a temp___idx_132) (select b (+ (- b__first a__first) temp___idx_132))) true)))) true false))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (bool_eq (select a temp___idx_132) (select b (+ (- b__first a__first) temp___idx_132))) true))))))))
(declare-sort tTaSP1 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (tTaSP1 tTaSP1) Bool)
(declare-const dummy2 tTaSP1)
(declare-datatypes () ((tTaSP1__ref (mk_tTaSP1__ref (tTaSP1__content tTaSP1)))))
(define-fun tTaSP1__ref___projection ((a tTaSP1__ref)) tTaSP1 (tTaSP1__content a))
(define-fun dynamic_invariant ((temp___expr_224 (Array Int us_rep)) (temp___is_init_221 Bool) (temp___skip_constant_222 Bool) (temp___do_toplevel_223 Bool)) Bool (forall ((temp___225 Int)) (=> (and (<= 1 temp___225) (<= temp___225 1)) (= (attr__constrained (select temp___expr_224 temp___225)) false))))
(define-fun default_initial_assumption ((temp___expr_227 (Array Int us_rep)) (temp___skip_top_level_228 Bool)) Bool (forall ((temp___229 Int)) (=> (and (<= 1 temp___229) (<= temp___229 1)) (and (= (attr__constrained (select temp___expr_227 temp___229)) false) (= (rec__tests__test_14__record_with_mutable_discrs__present (us_split_discrs1 (select temp___expr_227 temp___229))) (of_int 0))))))
(define-fun in_range3 ((rec__tests__test_14__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__tests__test_14__record_with_mutable_discrs__present1 (rec__tests__test_14__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const tests__test_14__record_with_mutable_discrs__present__first__bit1 Int)
(declare-const tests__test_14__record_with_mutable_discrs__present__last__bit1 Int)
(declare-const tests__test_14__record_with_mutable_discrs__present__position1 Int)
(assert (<= 0 tests__test_14__record_with_mutable_discrs__present__first__bit1))
(assert (< tests__test_14__record_with_mutable_discrs__present__first__bit1 tests__test_14__record_with_mutable_discrs__present__last__bit1))
(assert (<= 0 tests__test_14__record_with_mutable_discrs__present__position1))
(declare-const tests__test_14__record_with_mutable_discrs__field__first__bit1 Int)
(declare-const tests__test_14__record_with_mutable_discrs__field__last__bit1 Int)
(declare-const tests__test_14__record_with_mutable_discrs__field__position1 Int)
(assert (<= 0 tests__test_14__record_with_mutable_discrs__field__first__bit1))
(assert (< tests__test_14__record_with_mutable_discrs__field__first__bit1 tests__test_14__record_with_mutable_discrs__field__last__bit1))
(assert (<= 0 tests__test_14__record_with_mutable_discrs__field__position1))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content us_rep)))))
(define-fun t5b__ref___projection ((a t5b__ref)) us_rep (t5b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun in_range4 ((rec__tests__test_14__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__tests__test_14__record_with_mutable_discrs__present1 (rec__tests__test_14__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const tests__test_14__record_with_mutable_discrs__present__first__bit2 Int)
(declare-const tests__test_14__record_with_mutable_discrs__present__last__bit2 Int)
(declare-const tests__test_14__record_with_mutable_discrs__present__position2 Int)
(assert (<= 0 tests__test_14__record_with_mutable_discrs__present__first__bit2))
(assert (< tests__test_14__record_with_mutable_discrs__present__first__bit2 tests__test_14__record_with_mutable_discrs__present__last__bit2))
(assert (<= 0 tests__test_14__record_with_mutable_discrs__present__position2))
(declare-const tests__test_14__record_with_mutable_discrs__field__first__bit2 Int)
(declare-const tests__test_14__record_with_mutable_discrs__field__last__bit2 Int)
(declare-const tests__test_14__record_with_mutable_discrs__field__position2 Int)
(assert (<= 0 tests__test_14__record_with_mutable_discrs__field__first__bit2))
(assert (< tests__test_14__record_with_mutable_discrs__field__first__bit2 tests__test_14__record_with_mutable_discrs__field__last__bit2))
(assert (<= 0 tests__test_14__record_with_mutable_discrs__field__position2))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content us_rep)))))
(define-fun t8b__ref___projection ((a t8b__ref)) us_rep (t8b__content a))
(declare-fun tests__test_14__a__aggregate_def (us_rep) (Array Int us_rep))
(assert (forall ((temp___251 us_rep)) (= (select (tests__test_14__a__aggregate_def temp___251) 1) temp___251)))
(define-fun dynamic_invariant1 ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range1 temp___expr_33)))
(define-fun default_initial_assumption1 ((temp___expr_211 us_rep) (temp___skip_top_level_212 Bool)) Bool (and (= (attr__constrained temp___expr_211) false) (= (rec__tests__test_14__record_with_mutable_discrs__present (us_split_discrs1 temp___expr_211)) (of_int 0))))
(declare-const a (Array Int us_rep))
(declare-const result (Array Int us_rep))
(declare-const a1 (Array Int us_rep))
(assert (= result a))
(assert (= a1 (tests__test_14__a__aggregate_def (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) false))))
(assert (dynamic_invariant a1 true false true))
(assert (= (attr__constrained (select a1 1)) true))
(assert (not (= (of_int 0) (rec__tests__test_14__record_with_mutable_discrs__present (us_split_discrs1 (select a1 1))))))
(check-sat)
(exit)
