(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-fun nth1 ((_ BitVec 16) Int) Bool)
(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort bits_1 0)
(define-fun in_range1 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x01)))
(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 8))
(declare-fun user_eq (bits_1 bits_1) Bool)
(declare-const dummy bits_1)
(declare-datatypes () ((bits_1__ref (mk_bits_1__ref (bits_1__content bits_1)))))
(define-fun bits_1__ref___projection ((a bits_1__ref)) bits_1 (bits_1__content a))
(declare-fun to_rep (bits_1) (_ BitVec 8))
(declare-fun of_rep ((_ BitVec 8)) bits_1)
(assert (forall ((x bits_1)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x bits_1)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x02))) (=> (in_range1 y) (= (to_rep (of_rep x)) y))) :pattern ((to_rep (of_rep x))))))
(define-fun to_int3 ((x bits_1)) Int (bv2nat (to_rep x)))
(assert (forall ((x bits_1)) (! (in_range_int (to_int3 x)) :pattern ((to_int3 x)))))
(declare-sort bits_2 0)
(define-fun in_range2 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x03)))
(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 8))
(declare-fun user_eq1 (bits_2 bits_2) Bool)
(declare-const dummy1 bits_2)
(declare-datatypes () ((bits_2__ref (mk_bits_2__ref (bits_2__content bits_2)))))
(define-fun bits_2__ref___projection ((a bits_2__ref)) bits_2 (bits_2__content a))
(declare-fun to_rep1 (bits_2) (_ BitVec 8))
(declare-fun of_rep1 ((_ BitVec 8)) bits_2)
(assert (forall ((x bits_2)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x bits_2)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x04))) (=> (in_range2 y) (= (to_rep1 (of_rep1 x)) y))) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun to_int4 ((x bits_2)) Int (bv2nat (to_rep1 x)))
(assert (forall ((x bits_2)) (! (in_range_int1 (to_int4 x)) :pattern ((to_int4 x)))))
(declare-sort bits_7 0)
(define-fun in_range3 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x7F)))
(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x) (<= x 127)))
(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))
(declare-fun user_eq2 (bits_7 bits_7) Bool)
(declare-const dummy2 bits_7)
(declare-datatypes () ((bits_7__ref (mk_bits_7__ref (bits_7__content bits_7)))))
(define-fun bits_7__ref___projection ((a bits_7__ref)) bits_7 (bits_7__content a))
(declare-fun to_rep2 (bits_7) (_ BitVec 8))
(declare-fun of_rep2 ((_ BitVec 8)) bits_7)
(assert (forall ((x bits_7)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x bits_7)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x80))) (=> (in_range3 y) (= (to_rep2 (of_rep2 x)) y))) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_int5 ((x bits_7)) Int (bv2nat (to_rep2 x)))
(assert (forall ((x bits_7)) (! (in_range_int2 (to_int5 x)) :pattern ((to_int5 x)))))
(declare-sort bits_14 0)
(define-fun in_range4 ((x (_ BitVec 16))) Bool (and (bvule #x0000 x) (bvule x #x3FFF)))
(define-fun in_range_int3 ((x Int)) Bool (and (<= 0 x) (<= x 16383)))
(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 16))
(declare-fun user_eq3 (bits_14 bits_14) Bool)
(declare-const dummy3 bits_14)
(declare-datatypes () ((bits_14__ref (mk_bits_14__ref (bits_14__content bits_14)))))
(define-fun bits_14__ref___projection ((a bits_14__ref)) bits_14 (bits_14__content a))
(declare-fun to_rep3 (bits_14) (_ BitVec 16))
(declare-fun of_rep3 ((_ BitVec 16)) bits_14)
(assert (forall ((x bits_14)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x bits_14)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x (_ BitVec 16))) (! (let ((y (bvurem x #x4000))) (=> (in_range4 y) (= (to_rep3 (of_rep3 x)) y))) :pattern ((to_rep3 (of_rep3 x))))))
(define-fun to_int6 ((x bits_14)) Int (bv2nat (to_rep3 x)))
(assert (forall ((x bits_14)) (! (in_range_int3 (to_int6 x)) :pattern ((to_int6 x)))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__dw1000__register_types__sys_ctrl_type__sfcst bits_1) (rec__dw1000__register_types__sys_ctrl_type__txstrt bits_1) (rec__dw1000__register_types__sys_ctrl_type__txdlys bits_1) (rec__dw1000__register_types__sys_ctrl_type__cansfcs bits_1) (rec__dw1000__register_types__sys_ctrl_type__trxoff bits_1) (rec__dw1000__register_types__sys_ctrl_type__wait4resp bits_1) (rec__dw1000__register_types__sys_ctrl_type__rxenab bits_1) (rec__dw1000__register_types__sys_ctrl_type__rxdlye bits_1) (rec__dw1000__register_types__sys_ctrl_type__hrbpt bits_1) (rec__dw1000__register_types__sys_ctrl_type__reserved_1 bits_2) (rec__dw1000__register_types__sys_ctrl_type__reserved_2 bits_14) (rec__dw1000__register_types__sys_ctrl_type__reserved_3 bits_7)))))
(define-fun us_split_fields_SFCST__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_ctrl_type__sfcst a))
(define-fun us_split_fields_TXSTRT__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_ctrl_type__txstrt a))
(define-fun us_split_fields_TXDLYS__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_ctrl_type__txdlys a))
(define-fun us_split_fields_CANSFCS__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_ctrl_type__cansfcs a))
(define-fun us_split_fields_TRXOFF__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_ctrl_type__trxoff a))
(define-fun us_split_fields_WAIT4RESP__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_ctrl_type__wait4resp a))
(define-fun us_split_fields_RXENAB__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_ctrl_type__rxenab a))
(define-fun us_split_fields_RXDLYE__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_ctrl_type__rxdlye a))
(define-fun us_split_fields_HRBPT__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_ctrl_type__hrbpt a))
(define-fun us_split_fields_Reserved_1__2__projection ((a us_split_fields)) bits_2 (rec__dw1000__register_types__sys_ctrl_type__reserved_1 a))
(define-fun us_split_fields_Reserved_2__2__projection ((a us_split_fields)) bits_14 (rec__dw1000__register_types__sys_ctrl_type__reserved_2 a))
(define-fun us_split_fields_Reserved_3__projection ((a us_split_fields)) bits_7 (rec__dw1000__register_types__sys_ctrl_type__reserved_3 a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___10__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___10__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (rec__dw1000__register_types__sys_ctrl_type__sfcst (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_ctrl_type__sfcst (us_split_fields1 b)))) (= (to_rep (rec__dw1000__register_types__sys_ctrl_type__txstrt (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_ctrl_type__txstrt (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_ctrl_type__txdlys (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_ctrl_type__txdlys (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_ctrl_type__cansfcs (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_ctrl_type__cansfcs (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_ctrl_type__trxoff (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_ctrl_type__trxoff (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_ctrl_type__wait4resp (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_ctrl_type__wait4resp (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_ctrl_type__rxenab (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_ctrl_type__rxenab (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_ctrl_type__rxdlye (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_ctrl_type__rxdlye (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_ctrl_type__hrbpt (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_ctrl_type__hrbpt (us_split_fields1 b))))) (= (to_rep1 (rec__dw1000__register_types__sys_ctrl_type__reserved_1 (us_split_fields1 a))) (to_rep1 (rec__dw1000__register_types__sys_ctrl_type__reserved_1 (us_split_fields1 b))))) (= (to_rep3 (rec__dw1000__register_types__sys_ctrl_type__reserved_2 (us_split_fields1 a))) (to_rep3 (rec__dw1000__register_types__sys_ctrl_type__reserved_2 (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_ctrl_type__reserved_3 (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_ctrl_type__reserved_3 (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const dw1000__register_types__sys_ctrl_type__sfcst__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__sfcst__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__sfcst__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__sfcst__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__sfcst__first__bit dw1000__register_types__sys_ctrl_type__sfcst__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__sfcst__position))
(declare-const dw1000__register_types__sys_ctrl_type__txstrt__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__txstrt__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__txstrt__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__txstrt__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__txstrt__first__bit dw1000__register_types__sys_ctrl_type__txstrt__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__txstrt__position))
(declare-const dw1000__register_types__sys_ctrl_type__txdlys__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__txdlys__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__txdlys__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__txdlys__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__txdlys__first__bit dw1000__register_types__sys_ctrl_type__txdlys__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__txdlys__position))
(declare-const dw1000__register_types__sys_ctrl_type__cansfcs__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__cansfcs__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__cansfcs__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__cansfcs__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__cansfcs__first__bit dw1000__register_types__sys_ctrl_type__cansfcs__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__cansfcs__position))
(declare-const dw1000__register_types__sys_ctrl_type__trxoff__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__trxoff__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__trxoff__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__trxoff__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__trxoff__first__bit dw1000__register_types__sys_ctrl_type__trxoff__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__trxoff__position))
(declare-const dw1000__register_types__sys_ctrl_type__wait4resp__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__wait4resp__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__wait4resp__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__wait4resp__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__wait4resp__first__bit dw1000__register_types__sys_ctrl_type__wait4resp__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__wait4resp__position))
(declare-const dw1000__register_types__sys_ctrl_type__rxenab__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__rxenab__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__rxenab__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__rxenab__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__rxenab__first__bit dw1000__register_types__sys_ctrl_type__rxenab__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__rxenab__position))
(declare-const dw1000__register_types__sys_ctrl_type__rxdlye__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__rxdlye__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__rxdlye__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__rxdlye__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__rxdlye__first__bit dw1000__register_types__sys_ctrl_type__rxdlye__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__rxdlye__position))
(declare-const dw1000__register_types__sys_ctrl_type__hrbpt__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__hrbpt__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__hrbpt__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__hrbpt__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__hrbpt__first__bit dw1000__register_types__sys_ctrl_type__hrbpt__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__hrbpt__position))
(declare-const dw1000__register_types__sys_ctrl_type__reserved_1__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__reserved_1__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__reserved_1__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__reserved_1__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__reserved_1__first__bit dw1000__register_types__sys_ctrl_type__reserved_1__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__reserved_1__position))
(declare-const dw1000__register_types__sys_ctrl_type__reserved_2__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__reserved_2__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__reserved_2__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__reserved_2__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__reserved_2__first__bit dw1000__register_types__sys_ctrl_type__reserved_2__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__reserved_2__position))
(declare-const dw1000__register_types__sys_ctrl_type__reserved_3__first__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__reserved_3__last__bit Int)
(declare-const dw1000__register_types__sys_ctrl_type__reserved_3__position Int)
(assert (<= 0 dw1000__register_types__sys_ctrl_type__reserved_3__first__bit))
(assert (< dw1000__register_types__sys_ctrl_type__reserved_3__first__bit dw1000__register_types__sys_ctrl_type__reserved_3__last__bit))
(assert (<= 0 dw1000__register_types__sys_ctrl_type__reserved_3__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((sys_ctrl_type__ref (mk_sys_ctrl_type__ref (sys_ctrl_type__content us_rep)))))
(define-fun sys_ctrl_type__ref___projection ((a sys_ctrl_type__ref)) us_rep (sys_ctrl_type__content a))
(declare-datatypes () ((register_type__ref (mk_register_type__ref (register_type__content us_rep)))))
(define-fun register_type__ref___10__projection ((a register_type__ref)) us_rep (register_type__content a))
(declare-sort bits_5 0)
(define-fun in_range5 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x1F)))
(define-fun in_range_int4 ((x Int)) Bool (and (<= 0 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 8))
(declare-fun user_eq5 (bits_5 bits_5) Bool)
(declare-const dummy5 bits_5)
(declare-datatypes () ((bits_5__ref (mk_bits_5__ref (bits_5__content bits_5)))))
(define-fun bits_5__ref___projection ((a bits_5__ref)) bits_5 (bits_5__content a))
(declare-fun to_rep4 (bits_5) (_ BitVec 8))
(declare-fun of_rep4 ((_ BitVec 8)) bits_5)
(assert (forall ((x bits_5)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x bits_5)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x20))) (=> (in_range5 y) (= (to_rep4 (of_rep4 x)) y))) :pattern ((to_rep4 (of_rep4 x))))))
(define-fun to_int7 ((x bits_5)) Int (bv2nat (to_rep4 x)))
(assert (forall ((x bits_5)) (! (in_range_int4 (to_int7 x)) :pattern ((to_int7 x)))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__dw1000__register_types__sys_status_type__irqs bits_1) (rec__dw1000__register_types__sys_status_type__cplock bits_1) (rec__dw1000__register_types__sys_status_type__esyncr bits_1) (rec__dw1000__register_types__sys_status_type__aat bits_1) (rec__dw1000__register_types__sys_status_type__txfrb bits_1) (rec__dw1000__register_types__sys_status_type__txprs bits_1) (rec__dw1000__register_types__sys_status_type__txphs bits_1) (rec__dw1000__register_types__sys_status_type__txfrs bits_1) (rec__dw1000__register_types__sys_status_type__rxprd bits_1) (rec__dw1000__register_types__sys_status_type__rxsfdd bits_1) (rec__dw1000__register_types__sys_status_type__ldedone bits_1) (rec__dw1000__register_types__sys_status_type__rxphd bits_1) (rec__dw1000__register_types__sys_status_type__rxphe bits_1) (rec__dw1000__register_types__sys_status_type__rxdfr bits_1) (rec__dw1000__register_types__sys_status_type__rxfcg bits_1) (rec__dw1000__register_types__sys_status_type__rxfce bits_1) (rec__dw1000__register_types__sys_status_type__rxrfsl bits_1) (rec__dw1000__register_types__sys_status_type__rxrfto bits_1) (rec__dw1000__register_types__sys_status_type__ldeerr bits_1) (rec__dw1000__register_types__sys_status_type__rxovrr bits_1) (rec__dw1000__register_types__sys_status_type__rxpto bits_1) (rec__dw1000__register_types__sys_status_type__gpioirq bits_1) (rec__dw1000__register_types__sys_status_type__slp2init bits_1) (rec__dw1000__register_types__sys_status_type__rfpll_ll bits_1) (rec__dw1000__register_types__sys_status_type__clkpll_ll bits_1) (rec__dw1000__register_types__sys_status_type__rxsfdto bits_1) (rec__dw1000__register_types__sys_status_type__hpdwarn bits_1) (rec__dw1000__register_types__sys_status_type__txberr bits_1) (rec__dw1000__register_types__sys_status_type__affrej bits_1) (rec__dw1000__register_types__sys_status_type__hsrbp bits_1) (rec__dw1000__register_types__sys_status_type__icrbp bits_1) (rec__dw1000__register_types__sys_status_type__rxrscs bits_1) (rec__dw1000__register_types__sys_status_type__rxprej bits_1) (rec__dw1000__register_types__sys_status_type__txpute bits_1) (rec__dw1000__register_types__sys_status_type__reserved_1 bits_1) (rec__dw1000__register_types__sys_status_type__reserved_2 bits_5)))))
(define-fun us_split_fields_IRQS__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__irqs a))
(define-fun us_split_fields_CPLOCK__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__cplock a))
(define-fun us_split_fields_ESYNCR__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__esyncr a))
(define-fun us_split_fields_AAT__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__aat a))
(define-fun us_split_fields_TXFRB__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__txfrb a))
(define-fun us_split_fields_TXPRS__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__txprs a))
(define-fun us_split_fields_TXPHS__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__txphs a))
(define-fun us_split_fields_TXFRS__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__txfrs a))
(define-fun us_split_fields_RXPRD__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxprd a))
(define-fun us_split_fields_RXSFDD__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxsfdd a))
(define-fun us_split_fields_LDEDONE__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__ldedone a))
(define-fun us_split_fields_RXPHD__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxphd a))
(define-fun us_split_fields_RXPHE__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxphe a))
(define-fun us_split_fields_RXDFR__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxdfr a))
(define-fun us_split_fields_RXFCG__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxfcg a))
(define-fun us_split_fields_RXFCE__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxfce a))
(define-fun us_split_fields_RXRFSL__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxrfsl a))
(define-fun us_split_fields_RXRFTO__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxrfto a))
(define-fun us_split_fields_LDEERR__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__ldeerr a))
(define-fun us_split_fields_RXOVRR__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxovrr a))
(define-fun us_split_fields_RXPTO__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxpto a))
(define-fun us_split_fields_GPIOIRQ__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__gpioirq a))
(define-fun us_split_fields_SLP2INIT__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__slp2init a))
(define-fun us_split_fields_RFPLL_LL__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rfpll_ll a))
(define-fun us_split_fields_CLKPLL_LL__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__clkpll_ll a))
(define-fun us_split_fields_RXSFDTO__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxsfdto a))
(define-fun us_split_fields_HPDWARN__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__hpdwarn a))
(define-fun us_split_fields_TXBERR__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__txberr a))
(define-fun us_split_fields_AFFREJ__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__affrej a))
(define-fun us_split_fields_HSRBP__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__hsrbp a))
(define-fun us_split_fields_ICRBP__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__icrbp a))
(define-fun us_split_fields_RXRSCS__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxrscs a))
(define-fun us_split_fields_RXPREJ__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__rxprej a))
(define-fun us_split_fields_TXPUTE__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__txpute a))
(define-fun us_split_fields_Reserved_1__4__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__sys_status_type__reserved_1 a))
(define-fun us_split_fields_Reserved_2__4__projection ((a us_split_fields2)) bits_5 (rec__dw1000__register_types__sys_status_type__reserved_2 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___12__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___12__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (rec__dw1000__register_types__sys_status_type__irqs (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__irqs (us_split_fields3 b)))) (= (to_rep (rec__dw1000__register_types__sys_status_type__cplock (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__cplock (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__esyncr (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__esyncr (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__aat (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__aat (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__txfrb (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__txfrb (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__txprs (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__txprs (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__txphs (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__txphs (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__txfrs (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__txfrs (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxprd (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxprd (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxsfdd (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxsfdd (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__ldedone (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__ldedone (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxphd (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxphd (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxphe (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxphe (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxdfr (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxdfr (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxfcg (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxfcg (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxfce (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxfce (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxrfsl (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxrfsl (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxrfto (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxrfto (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__ldeerr (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__ldeerr (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxovrr (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxovrr (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxpto (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxpto (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__gpioirq (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__gpioirq (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__slp2init (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__slp2init (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rfpll_ll (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rfpll_ll (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__clkpll_ll (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__clkpll_ll (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxsfdto (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxsfdto (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__hpdwarn (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__hpdwarn (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__txberr (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__txberr (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__affrej (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__affrej (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__hsrbp (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__hsrbp (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__icrbp (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__icrbp (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxrscs (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxrscs (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__rxprej (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__rxprej (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__txpute (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__txpute (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__sys_status_type__reserved_1 (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__sys_status_type__reserved_1 (us_split_fields3 b))))) (= (to_rep4 (rec__dw1000__register_types__sys_status_type__reserved_2 (us_split_fields3 a))) (to_rep4 (rec__dw1000__register_types__sys_status_type__reserved_2 (us_split_fields3 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const dw1000__register_types__sys_status_type__irqs__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__irqs__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__irqs__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__irqs__first__bit))
(assert (< dw1000__register_types__sys_status_type__irqs__first__bit dw1000__register_types__sys_status_type__irqs__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__irqs__position))
(declare-const dw1000__register_types__sys_status_type__cplock__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__cplock__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__cplock__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__cplock__first__bit))
(assert (< dw1000__register_types__sys_status_type__cplock__first__bit dw1000__register_types__sys_status_type__cplock__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__cplock__position))
(declare-const dw1000__register_types__sys_status_type__esyncr__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__esyncr__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__esyncr__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__esyncr__first__bit))
(assert (< dw1000__register_types__sys_status_type__esyncr__first__bit dw1000__register_types__sys_status_type__esyncr__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__esyncr__position))
(declare-const dw1000__register_types__sys_status_type__aat__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__aat__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__aat__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__aat__first__bit))
(assert (< dw1000__register_types__sys_status_type__aat__first__bit dw1000__register_types__sys_status_type__aat__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__aat__position))
(declare-const dw1000__register_types__sys_status_type__txfrb__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txfrb__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txfrb__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txfrb__first__bit))
(assert (< dw1000__register_types__sys_status_type__txfrb__first__bit dw1000__register_types__sys_status_type__txfrb__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txfrb__position))
(declare-const dw1000__register_types__sys_status_type__txprs__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txprs__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txprs__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txprs__first__bit))
(assert (< dw1000__register_types__sys_status_type__txprs__first__bit dw1000__register_types__sys_status_type__txprs__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txprs__position))
(declare-const dw1000__register_types__sys_status_type__txphs__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txphs__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txphs__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txphs__first__bit))
(assert (< dw1000__register_types__sys_status_type__txphs__first__bit dw1000__register_types__sys_status_type__txphs__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txphs__position))
(declare-const dw1000__register_types__sys_status_type__txfrs__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txfrs__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txfrs__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txfrs__first__bit))
(assert (< dw1000__register_types__sys_status_type__txfrs__first__bit dw1000__register_types__sys_status_type__txfrs__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txfrs__position))
(declare-const dw1000__register_types__sys_status_type__rxprd__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxprd__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxprd__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxprd__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxprd__first__bit dw1000__register_types__sys_status_type__rxprd__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxprd__position))
(declare-const dw1000__register_types__sys_status_type__rxsfdd__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxsfdd__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxsfdd__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxsfdd__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxsfdd__first__bit dw1000__register_types__sys_status_type__rxsfdd__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxsfdd__position))
(declare-const dw1000__register_types__sys_status_type__ldedone__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__ldedone__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__ldedone__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__ldedone__first__bit))
(assert (< dw1000__register_types__sys_status_type__ldedone__first__bit dw1000__register_types__sys_status_type__ldedone__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__ldedone__position))
(declare-const dw1000__register_types__sys_status_type__rxphd__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxphd__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxphd__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxphd__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxphd__first__bit dw1000__register_types__sys_status_type__rxphd__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxphd__position))
(declare-const dw1000__register_types__sys_status_type__rxphe__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxphe__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxphe__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxphe__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxphe__first__bit dw1000__register_types__sys_status_type__rxphe__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxphe__position))
(declare-const dw1000__register_types__sys_status_type__rxdfr__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxdfr__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxdfr__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxdfr__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxdfr__first__bit dw1000__register_types__sys_status_type__rxdfr__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxdfr__position))
(declare-const dw1000__register_types__sys_status_type__rxfcg__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxfcg__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxfcg__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxfcg__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxfcg__first__bit dw1000__register_types__sys_status_type__rxfcg__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxfcg__position))
(declare-const dw1000__register_types__sys_status_type__rxfce__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxfce__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxfce__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxfce__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxfce__first__bit dw1000__register_types__sys_status_type__rxfce__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxfce__position))
(declare-const dw1000__register_types__sys_status_type__rxrfsl__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrfsl__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrfsl__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxrfsl__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxrfsl__first__bit dw1000__register_types__sys_status_type__rxrfsl__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxrfsl__position))
(declare-const dw1000__register_types__sys_status_type__rxrfto__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrfto__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrfto__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxrfto__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxrfto__first__bit dw1000__register_types__sys_status_type__rxrfto__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxrfto__position))
(declare-const dw1000__register_types__sys_status_type__ldeerr__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__ldeerr__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__ldeerr__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__ldeerr__first__bit))
(assert (< dw1000__register_types__sys_status_type__ldeerr__first__bit dw1000__register_types__sys_status_type__ldeerr__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__ldeerr__position))
(declare-const dw1000__register_types__sys_status_type__rxovrr__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxovrr__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxovrr__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxovrr__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxovrr__first__bit dw1000__register_types__sys_status_type__rxovrr__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxovrr__position))
(declare-const dw1000__register_types__sys_status_type__rxpto__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxpto__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxpto__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxpto__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxpto__first__bit dw1000__register_types__sys_status_type__rxpto__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxpto__position))
(declare-const dw1000__register_types__sys_status_type__gpioirq__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__gpioirq__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__gpioirq__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__gpioirq__first__bit))
(assert (< dw1000__register_types__sys_status_type__gpioirq__first__bit dw1000__register_types__sys_status_type__gpioirq__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__gpioirq__position))
(declare-const dw1000__register_types__sys_status_type__slp2init__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__slp2init__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__slp2init__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__slp2init__first__bit))
(assert (< dw1000__register_types__sys_status_type__slp2init__first__bit dw1000__register_types__sys_status_type__slp2init__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__slp2init__position))
(declare-const dw1000__register_types__sys_status_type__rfpll_ll__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rfpll_ll__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rfpll_ll__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rfpll_ll__first__bit))
(assert (< dw1000__register_types__sys_status_type__rfpll_ll__first__bit dw1000__register_types__sys_status_type__rfpll_ll__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rfpll_ll__position))
(declare-const dw1000__register_types__sys_status_type__clkpll_ll__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__clkpll_ll__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__clkpll_ll__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__clkpll_ll__first__bit))
(assert (< dw1000__register_types__sys_status_type__clkpll_ll__first__bit dw1000__register_types__sys_status_type__clkpll_ll__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__clkpll_ll__position))
(declare-const dw1000__register_types__sys_status_type__rxsfdto__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxsfdto__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxsfdto__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxsfdto__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxsfdto__first__bit dw1000__register_types__sys_status_type__rxsfdto__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxsfdto__position))
(declare-const dw1000__register_types__sys_status_type__hpdwarn__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__hpdwarn__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__hpdwarn__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__hpdwarn__first__bit))
(assert (< dw1000__register_types__sys_status_type__hpdwarn__first__bit dw1000__register_types__sys_status_type__hpdwarn__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__hpdwarn__position))
(declare-const dw1000__register_types__sys_status_type__txberr__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txberr__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txberr__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txberr__first__bit))
(assert (< dw1000__register_types__sys_status_type__txberr__first__bit dw1000__register_types__sys_status_type__txberr__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txberr__position))
(declare-const dw1000__register_types__sys_status_type__affrej__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__affrej__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__affrej__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__affrej__first__bit))
(assert (< dw1000__register_types__sys_status_type__affrej__first__bit dw1000__register_types__sys_status_type__affrej__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__affrej__position))
(declare-const dw1000__register_types__sys_status_type__hsrbp__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__hsrbp__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__hsrbp__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__hsrbp__first__bit))
(assert (< dw1000__register_types__sys_status_type__hsrbp__first__bit dw1000__register_types__sys_status_type__hsrbp__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__hsrbp__position))
(declare-const dw1000__register_types__sys_status_type__icrbp__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__icrbp__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__icrbp__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__icrbp__first__bit))
(assert (< dw1000__register_types__sys_status_type__icrbp__first__bit dw1000__register_types__sys_status_type__icrbp__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__icrbp__position))
(declare-const dw1000__register_types__sys_status_type__rxrscs__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrscs__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrscs__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxrscs__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxrscs__first__bit dw1000__register_types__sys_status_type__rxrscs__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxrscs__position))
(declare-const dw1000__register_types__sys_status_type__rxprej__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxprej__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxprej__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxprej__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxprej__first__bit dw1000__register_types__sys_status_type__rxprej__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxprej__position))
(declare-const dw1000__register_types__sys_status_type__txpute__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txpute__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txpute__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txpute__first__bit))
(assert (< dw1000__register_types__sys_status_type__txpute__first__bit dw1000__register_types__sys_status_type__txpute__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txpute__position))
(declare-const dw1000__register_types__sys_status_type__reserved_1__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__reserved_1__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__reserved_1__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__reserved_1__first__bit))
(assert (< dw1000__register_types__sys_status_type__reserved_1__first__bit dw1000__register_types__sys_status_type__reserved_1__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__reserved_1__position))
(declare-const dw1000__register_types__sys_status_type__reserved_2__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__reserved_2__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__reserved_2__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__reserved_2__first__bit))
(assert (< dw1000__register_types__sys_status_type__reserved_2__first__bit dw1000__register_types__sys_status_type__reserved_2__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__reserved_2__position))
(declare-fun user_eq6 (us_rep1 us_rep1) Bool)
(declare-const dummy6 us_rep1)
(declare-datatypes () ((sys_status_type__ref (mk_sys_status_type__ref (sys_status_type__content us_rep1)))))
(define-fun sys_status_type__ref___projection ((a sys_status_type__ref)) us_rep1 (sys_status_type__content a))
(declare-datatypes () ((register_type__ref1 (mk_register_type__ref1 (register_type__content1 us_rep1)))))
(define-fun register_type__ref___12__projection ((a register_type__ref1)) us_rep1 (register_type__content1 a))
(declare-sort result_type 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (result_type result_type) Bool)
(declare-const dummy7 result_type)
(declare-datatypes () ((result_type__ref (mk_result_type__ref (result_type__content result_type)))))
(define-fun result_type__ref___projection ((a result_type__ref)) result_type (result_type__content a))
(define-fun dynamic_invariant ((temp___expr_3330 Int) (temp___is_init_3326 Bool) (temp___skip_constant_3327 Bool) (temp___do_toplevel_3328 Bool) (temp___do_typ_inv_3329 Bool)) Bool (=> (or (= temp___is_init_3326 true) (<= 0 1)) (in_range6 temp___expr_3330)))
(declare-const delayed Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_invariant1 ((temp___expr_308 (_ BitVec 8)) (temp___is_init_304 Bool) (temp___skip_constant_305 Bool) (temp___do_toplevel_306 Bool) (temp___do_typ_inv_307 Bool)) Bool (=> (or (= temp___is_init_304 true) (bvule #x00 #x01)) (in_range1 temp___expr_308)))
(define-fun dynamic_invariant2 ((temp___expr_315 (_ BitVec 8)) (temp___is_init_311 Bool) (temp___skip_constant_312 Bool) (temp___do_toplevel_313 Bool) (temp___do_typ_inv_314 Bool)) Bool (=> (or (= temp___is_init_311 true) (bvule #x00 #x03)) (in_range2 temp___expr_315)))
(define-fun dynamic_invariant3 ((temp___expr_336 (_ BitVec 8)) (temp___is_init_332 Bool) (temp___skip_constant_333 Bool) (temp___do_toplevel_334 Bool) (temp___do_typ_inv_335 Bool)) Bool (=> (or (= temp___is_init_332 true) (bvule #x00 #x1F)) (in_range5 temp___expr_336)))
(define-fun dynamic_invariant4 ((temp___expr_350 (_ BitVec 8)) (temp___is_init_346 Bool) (temp___skip_constant_347 Bool) (temp___do_toplevel_348 Bool) (temp___do_typ_inv_349 Bool)) Bool (=> (or (= temp___is_init_346 true) (bvule #x00 #x7F)) (in_range3 temp___expr_350)))
(define-fun dynamic_invariant5 ((temp___expr_399 (_ BitVec 16)) (temp___is_init_395 Bool) (temp___skip_constant_396 Bool) (temp___do_toplevel_397 Bool) (temp___do_typ_inv_398 Bool)) Bool (=> (or (= temp___is_init_395 true) (bvule #x0000 #x3FFF)) (in_range4 temp___expr_399)))
(assert (not true))
(check-sat)
(exit)
