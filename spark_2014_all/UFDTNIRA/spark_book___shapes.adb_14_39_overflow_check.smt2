(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort coordinate_type 0)
(declare-fun coordinate_typeqtint (coordinate_type) Int)
(assert (forall ((i coordinate_type)) (and (<= (- 100) (coordinate_typeqtint i)) (<= (coordinate_typeqtint i) 100))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 100) x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (coordinate_type coordinate_type) Bool)
(declare-const dummy1 coordinate_type)
(declare-datatypes () ((coordinate_type__ref (mk_coordinate_type__ref (coordinate_type__content coordinate_type)))))
(define-fun coordinate_type__ref___projection ((a coordinate_type__ref)) coordinate_type (coordinate_type__content a))
(define-fun dynamic_invariant ((temp___expr_158 Int) (temp___is_init_154 Bool) (temp___skip_constant_155 Bool) (temp___do_toplevel_156 Bool) (temp___do_typ_inv_157 Bool)) Bool (=> (or (= temp___is_init_154 true) (<= (- 100) 100)) (in_range2 temp___expr_158)))
(define-fun to_rep ((x coordinate_type)) Int (coordinate_typeqtint x))
(declare-fun of_rep (Int) coordinate_type)
(assert (forall ((x coordinate_type)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x coordinate_type)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort radius_type 0)
(declare-fun radius_typeqtint (radius_type) Int)
(assert (forall ((i radius_type)) (and (<= 0 (radius_typeqtint i)) (<= (radius_typeqtint i) 10))))
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (radius_type radius_type) Bool)
(declare-const dummy2 radius_type)
(declare-datatypes () ((radius_type__ref (mk_radius_type__ref (radius_type__content radius_type)))))
(define-fun radius_type__ref___projection ((a radius_type__ref)) radius_type (radius_type__content a))
(define-fun to_rep1 ((x radius_type)) Int (radius_typeqtint x))
(declare-fun of_rep1 (Int) radius_type)
(assert (forall ((x radius_type)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x radius_type)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__shapes__circle__center_x coordinate_type) (rec__shapes__circle__center_y coordinate_type) (rec__shapes__circle__radius radius_type)))))
(define-fun us_split_fields_Center_X__projection ((a us_split_fields)) coordinate_type (rec__shapes__circle__center_x a))
(define-fun us_split_fields_Center_Y__projection ((a us_split_fields)) coordinate_type (rec__shapes__circle__center_y a))
(define-fun us_split_fields_Radius__projection ((a us_split_fields)) radius_type (rec__shapes__circle__radius a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep (rec__shapes__circle__center_x (us_split_fields1 a))) (to_rep (rec__shapes__circle__center_x (us_split_fields1 b)))) (= (to_rep (rec__shapes__circle__center_y (us_split_fields1 a))) (to_rep (rec__shapes__circle__center_y (us_split_fields1 b))))) (= (to_rep1 (rec__shapes__circle__radius (us_split_fields1 a))) (to_rep1 (rec__shapes__circle__radius (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const shapes__circle__center_x__first__bit Int)
(declare-const shapes__circle__center_x__last__bit Int)
(declare-const shapes__circle__center_x__position Int)
(assert (<= 0 shapes__circle__center_x__first__bit))
(assert (< shapes__circle__center_x__first__bit shapes__circle__center_x__last__bit))
(assert (<= 0 shapes__circle__center_x__position))
(declare-const shapes__circle__center_y__first__bit Int)
(declare-const shapes__circle__center_y__last__bit Int)
(declare-const shapes__circle__center_y__position Int)
(assert (<= 0 shapes__circle__center_y__first__bit))
(assert (< shapes__circle__center_y__first__bit shapes__circle__center_y__last__bit))
(assert (<= 0 shapes__circle__center_y__position))
(declare-const shapes__circle__radius__first__bit Int)
(declare-const shapes__circle__radius__last__bit Int)
(declare-const shapes__circle__radius__position Int)
(assert (<= 0 shapes__circle__radius__first__bit))
(assert (< shapes__circle__radius__first__bit shapes__circle__radius__last__bit))
(assert (<= 0 shapes__circle__radius__position))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((circle__ref (mk_circle__ref (circle__content us_rep)))))
(define-fun circle__ref___projection ((a circle__ref)) us_rep (circle__content a))
(declare-const x Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const y Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const c us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort full_width_type 0)
(declare-fun full_width_typeqtint (full_width_type) Int)
(assert (forall ((i full_width_type)) (and (<= 0 (full_width_typeqtint i)) (<= (full_width_typeqtint i) 200))))
(define-fun in_range4 ((x1 Int)) Bool (and (<= 0 x1) (<= x1 200)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (full_width_type full_width_type) Bool)
(declare-const dummy4 full_width_type)
(declare-datatypes () ((full_width_type__ref (mk_full_width_type__ref (full_width_type__content full_width_type)))))
(define-fun full_width_type__ref___projection ((a full_width_type__ref)) full_width_type (full_width_type__content a))
(define-fun dynamic_invariant1 ((temp___expr_182 Int) (temp___is_init_178 Bool) (temp___skip_constant_179 Bool) (temp___do_toplevel_180 Bool) (temp___do_typ_inv_181 Bool)) Bool (=> (or (= temp___is_init_178 true) (<= 0 200)) (in_range4 temp___expr_182)))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant3 ((temp___expr_165 Int) (temp___is_init_161 Bool) (temp___skip_constant_162 Bool) (temp___do_toplevel_163 Bool) (temp___do_typ_inv_164 Bool)) Bool (=> (or (= temp___is_init_161 true) (<= 0 10)) (in_range3 temp___expr_165)))
(declare-const delta_x Int)
(declare-const delta_y Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const result Int)
(declare-const delta_x1 Int)
(declare-const result1 Int)
(declare-const delta_y1 Int)
(assert (in_range2 x))
(assert (in_range2 y))
(assert (and (and (and (in_range2 (+ (to_rep (rec__shapes__circle__center_x (us_split_fields1 c))) (to_rep1 (rec__shapes__circle__radius (us_split_fields1 c))))) (in_range2 (- (to_rep (rec__shapes__circle__center_x (us_split_fields1 c))) (to_rep1 (rec__shapes__circle__radius (us_split_fields1 c)))))) (in_range2 (+ (to_rep (rec__shapes__circle__center_y (us_split_fields1 c))) (to_rep1 (rec__shapes__circle__radius (us_split_fields1 c)))))) (in_range2 (- (to_rep (rec__shapes__circle__center_y (us_split_fields1 c))) (to_rep1 (rec__shapes__circle__radius (us_split_fields1 c)))))))
(assert (=> (<= 0 200) (in_range4 delta_x)))
(assert (=> (<= 0 200) (in_range4 delta_y)))
(assert (and (= o (abs (- x (to_rep (rec__shapes__circle__center_x (us_split_fields1 c)))))) (in_range1 (abs (- x (to_rep (rec__shapes__circle__center_x (us_split_fields1 c))))))))
(assert (and (= o1 o) (in_range4 o)))
(assert (= result delta_x))
(assert (= delta_x1 o1))
(assert (and (= o2 (abs (- y (to_rep (rec__shapes__circle__center_y (us_split_fields1 c)))))) (in_range1 (abs (- y (to_rep (rec__shapes__circle__center_y (us_split_fields1 c))))))))
(assert (and (= o3 o2) (in_range4 o2)))
(assert (= result1 delta_y))
(assert (= delta_y1 o3))
(assert (and (= o4 (* (to_rep1 (rec__shapes__circle__radius (us_split_fields1 c))) (to_rep1 (rec__shapes__circle__radius (us_split_fields1 c))))) (in_range1 (* (to_rep1 (rec__shapes__circle__radius (us_split_fields1 c))) (to_rep1 (rec__shapes__circle__radius (us_split_fields1 c)))))))
(assert (and (= o5 o4) (in_range4 o4)))
(assert (not (in_range1 (* delta_y1 delta_y1))))
(check-sat)
(exit)
