(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-fun nth1 ((_ BitVec 16) Int) Bool)
(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort digit_index_type 0)
(declare-fun digit_index_typeqtint (digit_index_type) Int)
(assert (forall ((i digit_index_type)) (and (<= 1 (digit_index_typeqtint i)) (<= (digit_index_typeqtint i) 65536))))
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 65536)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (digit_index_type digit_index_type) Bool)
(declare-const dummy digit_index_type)
(declare-datatypes () ((digit_index_type__ref (mk_digit_index_type__ref (digit_index_type__content digit_index_type)))))
(define-fun digit_index_type__ref___projection ((a digit_index_type__ref)) digit_index_type (digit_index_type__content a))
(define-fun to_rep ((x digit_index_type)) Int (digit_index_typeqtint x))
(declare-fun of_rep (Int) digit_index_type)
(assert (forall ((x digit_index_type)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x digit_index_type)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort tdigit_count_typeB 0)
(declare-fun tdigit_count_typeBqtint (tdigit_count_typeB) Int)
(assert (forall ((i tdigit_count_typeB)) (and (<= (- 2147483648) (tdigit_count_typeBqtint i)) (<= (tdigit_count_typeBqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy1 tdigit_count_typeB)
(declare-datatypes () ((tdigit_count_typeB__ref (mk_tdigit_count_typeB__ref (tdigit_count_typeB__content tdigit_count_typeB)))))
(define-fun tdigit_count_typeB__ref___projection ((a tdigit_count_typeB__ref)) tdigit_count_typeB (tdigit_count_typeB__content a))
(define-fun to_rep1 ((x tdigit_count_typeB)) Int (tdigit_count_typeBqtint x))
(declare-fun of_rep1 (Int) tdigit_count_typeB)
(assert (forall ((x tdigit_count_typeB)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x tdigit_count_typeB)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort octet 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))
(declare-fun user_eq2 (octet octet) Bool)
(declare-const dummy2 octet)
(declare-datatypes () ((octet__ref (mk_octet__ref (octet__content octet)))))
(define-fun octet__ref___projection ((a octet__ref)) octet (octet__content a))
(declare-fun to_rep2 (octet) (_ BitVec 8))
(declare-fun of_rep2 ((_ BitVec 8)) octet)
(assert (forall ((x octet)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_int3 ((x octet)) Int (bv2nat (to_rep2 x)))
(assert (forall ((x octet)) (! (uint_in_range (to_int3 x)) :pattern ((to_int3 x)))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int octet))))))
(declare-fun slide ((Array Int octet) Int Int) (Array Int octet))
(assert (forall ((a (Array Int octet))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int octet))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int octet)) (a__first Int) (a__last Int) (b (Array Int octet)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep2 (select a temp___idx_154)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int octet)) (b (Array Int octet))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep2 (select a temp___idx_154)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy3 tdigit_count_typeB)
(declare-datatypes () ((t17s__ref (mk_t17s__ref (t17s__content tdigit_count_typeB)))))
(define-fun t17s__ref___projection ((a t17s__ref)) tdigit_count_typeB (t17s__content a))
(declare-sort t 0)
(declare-fun first (t) tdigit_count_typeB)
(declare-fun last (t) tdigit_count_typeB)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int octet)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int octet) (elts a))
(define-fun of_array ((a (Array Int octet)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int octet)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int octet)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int octet)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq4 (us_t us_t) Bool)
(declare-const dummy4 us_t)
(declare-datatypes () ((t18s__ref (mk_t18s__ref (t18s__content us_t)))))
(define-fun t18s__ref___projection ((a t18s__ref)) us_t (t18s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__very_longs__very_long__length digit_index_type)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) digit_index_type (rec__very_longs__very_long__length a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__very_longs__very_long__long_digits us_t)))))
(define-fun us_split_fields_Long_Digits__projection ((a us_split_fields)) us_t (rec__very_longs__very_long__long_digits a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__very_longs__very_long__length (us_split_discrs1 a))) (to_rep (rec__very_longs__very_long__length (us_split_discrs1 b)))) (= (bool_eq1 (rec__very_longs__very_long__long_digits (us_split_fields1 a)) (rec__very_longs__very_long__long_digits (us_split_fields1 b))) true)) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const very_longs__very_long__length__first__bit Int)
(declare-const very_longs__very_long__length__last__bit Int)
(declare-const very_longs__very_long__length__position Int)
(assert (<= 0 very_longs__very_long__length__first__bit))
(assert (< very_longs__very_long__length__first__bit very_longs__very_long__length__last__bit))
(assert (<= 0 very_longs__very_long__length__position))
(declare-const very_longs__very_long__long_digits__first__bit Int)
(declare-const very_longs__very_long__long_digits__last__bit Int)
(declare-const very_longs__very_long__long_digits__position Int)
(assert (<= 0 very_longs__very_long__long_digits__first__bit))
(assert (< very_longs__very_long__long_digits__first__bit very_longs__very_long__long_digits__last__bit))
(assert (<= 0 very_longs__very_long__long_digits__position))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((very_long__ref (mk_very_long__ref (very_long__content us_rep)))))
(define-fun very_long__ref___projection ((a very_long__ref)) us_rep (very_long__content a))
(declare-fun number_of_digits (us_rep) Int)
(declare-fun number_of_digits__function_guard (Int us_rep) Bool)
(declare-fun number_of_digits1 (us_rep) Int)
(declare-fun number_of_digits__function_guard1 (Int us_rep) Bool)
(declare-sort digit_count_type 0)
(declare-fun digit_count_typeqtint (digit_count_type) Int)
(assert (forall ((i digit_count_type)) (and (<= 0 (digit_count_typeqtint i)) (<= (digit_count_typeqtint i) 65536))))
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 65536)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (digit_count_type digit_count_type) Bool)
(declare-const dummy6 digit_count_type)
(declare-datatypes () ((digit_count_type__ref (mk_digit_count_type__ref (digit_count_type__content digit_count_type)))))
(define-fun digit_count_type__ref___projection ((a digit_count_type__ref)) digit_count_type (digit_count_type__content a))
(define-fun dynamic_invariant ((temp___expr_221 Int) (temp___is_init_217 Bool) (temp___skip_constant_218 Bool) (temp___do_toplevel_219 Bool) (temp___do_typ_inv_220 Bool)) Bool (=> (or (= temp___is_init_217 true) (<= 0 65536)) (in_range3 temp___expr_221)))
(define-fun dynamic_invariant1 ((temp___expr_248 us_rep) (temp___is_init_244 Bool) (temp___skip_constant_245 Bool) (temp___do_toplevel_246 Bool) (temp___do_typ_inv_247 Bool)) Bool (let ((temp___249 (rec__very_longs__very_long__length (us_split_discrs1 temp___expr_248)))) (and (dynamic_property1 1 (to_rep temp___249) (first1 (rec__very_longs__very_long__long_digits (us_split_fields1 temp___expr_248))) (last1 (rec__very_longs__very_long__long_digits (us_split_fields1 temp___expr_248)))) (and (= (first1 (rec__very_longs__very_long__long_digits (us_split_fields1 temp___expr_248))) 1) (= (last1 (rec__very_longs__very_long__long_digits (us_split_fields1 temp___expr_248))) (to_rep temp___249))))))
(assert (forall ((number us_rep)) (! (=> (dynamic_invariant1 number true true true true) (dynamic_invariant (number_of_digits number) true false true true)) :pattern ((number_of_digits number)))))
(assert (forall ((number us_rep)) (! (=> (dynamic_invariant1 number true true true true) (let ((result (number_of_digits1 number))) (and (and (and (<= result (to_rep (rec__very_longs__very_long__length (us_split_discrs1 number)))) (=> (< 0 result) (not (= (to_rep2 (let ((temp___300 (rec__very_longs__very_long__long_digits (us_split_fields1 number)))) (select (to_array temp___300) result))) #x00)))) (forall ((j Int)) (=> (and (<= (+ result 1) j) (<= j (last1 (rec__very_longs__very_long__long_digits (us_split_fields1 number))))) (= (to_rep2 (let ((temp___301 (rec__very_longs__very_long__long_digits (us_split_fields1 number)))) (select (to_array temp___301) j))) #x00)))) (dynamic_invariant result true false true true)))) :pattern ((number_of_digits1 number)))))
(declare-fun get_shift_distance ((_ BitVec 8)) Int)
(declare-fun get_shift_distance__function_guard (Int (_ BitVec 8)) Bool)
(define-fun dynamic_invariant2 ((temp___expr_235 (_ BitVec 8)) (temp___is_init_231 Bool) (temp___skip_constant_232 Bool) (temp___do_toplevel_233 Bool) (temp___do_typ_inv_234 Bool)) Bool true)
(declare-sort shift_type 0)
(declare-fun shift_typeqtint (shift_type) Int)
(assert (forall ((i shift_type)) (and (<= 0 (shift_typeqtint i)) (<= (shift_typeqtint i) 7))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (shift_type shift_type) Bool)
(declare-const dummy7 shift_type)
(declare-datatypes () ((shift_type__ref (mk_shift_type__ref (shift_type__content shift_type)))))
(define-fun shift_type__ref___projection ((a shift_type__ref)) shift_type (shift_type__content a))
(define-fun dynamic_invariant3 ((temp___expr_765 Int) (temp___is_init_761 Bool) (temp___skip_constant_762 Bool) (temp___do_toplevel_763 Bool) (temp___do_typ_inv_764 Bool)) Bool (=> (or (= temp___is_init_761 true) (<= 0 7)) (in_range4 temp___expr_765)))
(assert (forall ((digit (_ BitVec 8))) (! (=> (and (dynamic_invariant2 digit true true true true) (not (= digit #x00))) (dynamic_invariant3 (get_shift_distance digit) true false true true)) :pattern ((get_shift_distance digit)))))
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq8 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy8 tdigit_count_typeB)
(declare-datatypes () ((tT109bP1__ref (mk_tT109bP1__ref (tT109bP1__content tdigit_count_typeB)))))
(define-fun tT109bP1__ref___projection ((a tT109bP1__ref)) tdigit_count_typeB (tT109bP1__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) tdigit_count_typeB)
(declare-fun last2 (t1) tdigit_count_typeB)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int octet)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int octet) (elts1 a))
(define-fun of_array1 ((a (Array Int octet)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int octet)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int octet)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int octet)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq9 (us_t1 us_t1) Bool)
(declare-const dummy9 us_t1)
(declare-datatypes () ((t109b__ref (mk_t109b__ref (t109b__content us_t1)))))
(define-fun t109b__ref___projection ((a t109b__ref)) us_t1 (t109b__content a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__very_longs__very_long__long_digits1 us_t1)))))
(define-fun us_split_fields_Long_Digits__30__projection ((a us_split_fields2)) us_t1 (rec__very_longs__very_long__long_digits1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___30__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs2 us_split_discrs) (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___59__projection ((a us_rep1)) us_split_discrs (us_split_discrs2 a))
(define-fun us_rep___60__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a) (mk___split_fields (let ((temp___212 (rec__very_longs__very_long__long_digits1 (us_split_fields3 a)))) (of_array (to_array1 temp___212) (first3 temp___212) (last3 temp___212))))))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r) (mk___split_fields1 (let ((temp___211 (rec__very_longs__very_long__long_digits (us_split_fields1 r)))) (of_array1 (to_array temp___211) (first1 temp___211) (last1 temp___211))))))
(define-fun bool_eq4 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep (rec__very_longs__very_long__length (us_split_discrs2 a))) (to_rep (rec__very_longs__very_long__length (us_split_discrs2 b)))) (= (bool_eq3 (rec__very_longs__very_long__long_digits1 (us_split_fields3 a)) (rec__very_longs__very_long__long_digits1 (us_split_fields3 b))) true)) true false))
(define-fun in_range5 ((rec__very_longs__very_long__length1 Int) (a us_rep)) Bool (= rec__very_longs__very_long__length1 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 a)))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const very_longs__very_long__length__first__bit1 Int)
(declare-const very_longs__very_long__length__last__bit1 Int)
(declare-const very_longs__very_long__length__position1 Int)
(assert (<= 0 very_longs__very_long__length__first__bit1))
(assert (< very_longs__very_long__length__first__bit1 very_longs__very_long__length__last__bit1))
(assert (<= 0 very_longs__very_long__length__position1))
(declare-const very_longs__very_long__long_digits__first__bit1 Int)
(declare-const very_longs__very_long__long_digits__last__bit1 Int)
(declare-const very_longs__very_long__long_digits__position1 Int)
(assert (<= 0 very_longs__very_long__long_digits__first__bit1))
(assert (< very_longs__very_long__long_digits__first__bit1 very_longs__very_long__long_digits__last__bit1))
(assert (<= 0 very_longs__very_long__long_digits__position1))
(declare-fun user_eq10 (us_rep1 us_rep1) Bool)
(declare-const dummy10 us_rep1)
(declare-datatypes () ((tuS__ref (mk_tuS__ref (tuS__content us_rep1)))))
(define-fun tuS__ref___projection ((a tuS__ref)) us_rep1 (tuS__content a))
(declare-const u__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq11 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy11 tdigit_count_typeB)
(declare-datatypes () ((tT110bP1__ref (mk_tT110bP1__ref (tT110bP1__content tdigit_count_typeB)))))
(define-fun tT110bP1__ref___projection ((a tT110bP1__ref)) tdigit_count_typeB (tT110bP1__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) tdigit_count_typeB)
(declare-fun last4 (t2) tdigit_count_typeB)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property4 range_first range_last low) (dynamic_property4 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int octet)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int octet) (elts2 a))
(define-fun of_array2 ((a (Array Int octet)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int octet)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int octet)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int octet)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq5 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq12 (us_t2 us_t2) Bool)
(declare-const dummy12 us_t2)
(declare-datatypes () ((t110b__ref (mk_t110b__ref (t110b__content us_t2)))))
(define-fun t110b__ref___projection ((a t110b__ref)) us_t2 (t110b__content a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__very_longs__very_long__long_digits2 us_t2)))))
(define-fun us_split_fields_Long_Digits__31__projection ((a us_split_fields4)) us_t2 (rec__very_longs__very_long__long_digits2 a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___31__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_discrs3 us_split_discrs) (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___61__projection ((a us_rep2)) us_split_discrs (us_split_discrs3 a))
(define-fun us_rep___62__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun to_base1 ((a us_rep2)) us_rep (mk___rep (us_split_discrs3 a) (mk___split_fields (let ((temp___214 (rec__very_longs__very_long__long_digits2 (us_split_fields5 a)))) (of_array (to_array2 temp___214) (first5 temp___214) (last5 temp___214))))))
(define-fun of_base1 ((r us_rep)) us_rep2 (mk___rep2 (us_split_discrs1 r) (mk___split_fields2 (let ((temp___213 (rec__very_longs__very_long__long_digits (us_split_fields1 r)))) (of_array2 (to_array temp___213) (first1 temp___213) (last1 temp___213))))))
(define-fun bool_eq6 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (to_rep (rec__very_longs__very_long__length (us_split_discrs3 a))) (to_rep (rec__very_longs__very_long__length (us_split_discrs3 b)))) (= (bool_eq5 (rec__very_longs__very_long__long_digits2 (us_split_fields5 a)) (rec__very_longs__very_long__long_digits2 (us_split_fields5 b))) true)) true false))
(define-fun in_range6 ((rec__very_longs__very_long__length1 Int) (a us_rep)) Bool (= rec__very_longs__very_long__length1 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 a)))))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep2) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep2) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))
(declare-const very_longs__very_long__length__first__bit2 Int)
(declare-const very_longs__very_long__length__last__bit2 Int)
(declare-const very_longs__very_long__length__position2 Int)
(assert (<= 0 very_longs__very_long__length__first__bit2))
(assert (< very_longs__very_long__length__first__bit2 very_longs__very_long__length__last__bit2))
(assert (<= 0 very_longs__very_long__length__position2))
(declare-const very_longs__very_long__long_digits__first__bit2 Int)
(declare-const very_longs__very_long__long_digits__last__bit2 Int)
(declare-const very_longs__very_long__long_digits__position2 Int)
(assert (<= 0 very_longs__very_long__long_digits__first__bit2))
(assert (< very_longs__very_long__long_digits__first__bit2 very_longs__very_long__long_digits__last__bit2))
(assert (<= 0 very_longs__very_long__long_digits__position2))
(declare-fun user_eq13 (us_rep2 us_rep2) Bool)
(declare-const dummy13 us_rep2)
(declare-datatypes () ((tvS__ref (mk_tvS__ref (tvS__content us_rep2)))))
(define-fun tvS__ref___projection ((a tvS__ref)) us_rep2 (tvS__content a))
(declare-const v__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-sort double_octet 0)
(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 16))
(declare-fun attr__ATTRIBUTE_IMAGE9 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) (_ BitVec 16))
(declare-fun user_eq14 (double_octet double_octet) Bool)
(declare-const dummy14 double_octet)
(declare-datatypes () ((double_octet__ref (mk_double_octet__ref (double_octet__content double_octet)))))
(define-fun double_octet__ref___projection ((a double_octet__ref)) double_octet (double_octet__content a))
(define-fun dynamic_invariant4 ((temp___expr_340 (_ BitVec 16)) (temp___is_init_336 Bool) (temp___skip_constant_337 Bool) (temp___do_toplevel_338 Bool) (temp___do_typ_inv_339 Bool)) Bool true)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const dividend us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_invariant5 ((temp___expr_772 us_rep1) (temp___is_init_768 Bool) (temp___skip_constant_769 Bool) (temp___do_toplevel_770 Bool) (temp___do_typ_inv_771 Bool)) Bool (and (=> (not (= temp___skip_constant_769 true)) (in_range5 (+ (to_rep (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 1) (to_base temp___expr_772))) (and (dynamic_property3 1 (+ (to_rep (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 1) (first3 (rec__very_longs__very_long__long_digits1 (us_split_fields3 temp___expr_772))) (last3 (rec__very_longs__very_long__long_digits1 (us_split_fields3 temp___expr_772)))) (and (= (first3 (rec__very_longs__very_long__long_digits1 (us_split_fields3 temp___expr_772))) 1) (= (last3 (rec__very_longs__very_long__long_digits1 (us_split_fields3 temp___expr_772))) (+ (to_rep (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 1))))))
(define-fun default_initial_assumption ((temp___expr_775 us_rep1) (temp___skip_top_level_776 Bool)) Bool (= (to_rep (rec__very_longs__very_long__length (us_split_discrs2 temp___expr_775))) (+ (to_rep (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 1)))
(declare-const quotient__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(define-fun dynamic_invariant6 ((temp___expr_228 Int) (temp___is_init_224 Bool) (temp___skip_constant_225 Bool) (temp___do_toplevel_226 Bool) (temp___do_typ_inv_227 Bool)) Bool (=> (or (= temp___is_init_224 true) (<= 1 65536)) (in_range1 temp___expr_228)))
(declare-const divisor us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const remainder__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const last6 Int)
(define-fun dynamic_property6 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq15 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy15 tdigit_count_typeB)
(declare-datatypes () ((divisor_digits_count_type__ref (mk_divisor_digits_count_type__ref (divisor_digits_count_type__content tdigit_count_typeB)))))
(define-fun divisor_digits_count_type__ref___projection ((a divisor_digits_count_type__ref)) tdigit_count_typeB (divisor_digits_count_type__content a))
(define-fun dynamic_invariant7 ((temp___expr_751 Int) (temp___is_init_747 Bool) (temp___skip_constant_748 Bool) (temp___do_toplevel_749 Bool) (temp___do_typ_inv_750 Bool)) Bool (=> (or (= temp___is_init_747 true) (<= 1 last6)) (dynamic_property6 1 last6 temp___expr_751)))
(assert (= last6 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor)))))
(declare-const first6 Int)
(declare-const last7 Int)
(define-fun dynamic_property7 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq16 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy16 tdigit_count_typeB)
(declare-datatypes () ((quotient_digits_count_type__ref (mk_quotient_digits_count_type__ref (quotient_digits_count_type__content tdigit_count_typeB)))))
(define-fun quotient_digits_count_type__ref___projection ((a quotient_digits_count_type__ref)) tdigit_count_typeB (quotient_digits_count_type__content a))
(define-fun dynamic_invariant8 ((temp___expr_758 Int) (temp___is_init_754 Bool) (temp___skip_constant_755 Bool) (temp___do_toplevel_756 Bool) (temp___do_typ_inv_757 Bool)) Bool (=> (or (= temp___is_init_754 true) (<= first6 last7)) (dynamic_property7 first6 last7 temp___expr_758)))
(assert (= first6 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor)))))
(assert (= last7 (- (* 2 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor)))) 1)))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(define-fun dynamic_invariant9 ((temp___expr_785 us_rep2) (temp___is_init_781 Bool) (temp___skip_constant_782 Bool) (temp___do_toplevel_783 Bool) (temp___do_typ_inv_784 Bool)) Bool (and (=> (not (= temp___skip_constant_782 true)) (in_range6 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor))) (to_base1 temp___expr_785))) (and (dynamic_property5 1 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor))) (first5 (rec__very_longs__very_long__long_digits2 (us_split_fields5 temp___expr_785))) (last5 (rec__very_longs__very_long__long_digits2 (us_split_fields5 temp___expr_785)))) (and (= (first5 (rec__very_longs__very_long__long_digits2 (us_split_fields5 temp___expr_785))) 1) (= (last5 (rec__very_longs__very_long__long_digits2 (us_split_fields5 temp___expr_785))) (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor))))))))
(define-fun default_initial_assumption1 ((temp___expr_788 us_rep2) (temp___skip_top_level_789 Bool)) Bool (= (to_rep (rec__very_longs__very_long__length (us_split_discrs3 temp___expr_788))) (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor)))))
(declare-const r131b Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(define-fun dynamic_property8 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq17 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy17 tdigit_count_typeB)
(declare-datatypes () ((tS130bP1__ref (mk_tS130bP1__ref (tS130bP1__content tdigit_count_typeB)))))
(define-fun tS130bP1__ref___projection ((a tS130bP1__ref)) tdigit_count_typeB (tS130bP1__content a))
(declare-sort t3 0)
(declare-fun first7 (t3) tdigit_count_typeB)
(declare-fun last8 (t3) tdigit_count_typeB)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first7 (mk3 f l))) f) (= (to_rep1 (last8 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property9 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property8 range_first range_last low) (dynamic_property8 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int octet)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int octet) (elts3 a))
(define-fun of_array3 ((a (Array Int octet)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first8 ((a us_t3)) Int (to_rep1 (first7 (rt3 a))))
(define-fun last9 ((a us_t3)) Int (to_rep1 (last8 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first8 a) (last9 a)) (+ (- (last9 a) (first8 a)) 1) 0))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int octet)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int octet)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int octet)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment6 a))))
(define-fun bool_eq7 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first7 (rt3 x))) (to_rep1 (last8 (rt3 x))) (elts3 y) (to_rep1 (first7 (rt3 y))) (to_rep1 (last8 (rt3 y)))))
(declare-fun user_eq18 (us_t3 us_t3) Bool)
(declare-const dummy18 us_t3)
(declare-datatypes () ((s130b__ref (mk_s130b__ref (s130b__content us_t3)))))
(define-fun s130b__ref___projection ((a s130b__ref)) us_t3 (s130b__content a))
(define-fun dynamic_property10 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq19 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy19 tdigit_count_typeB)
(declare-datatypes () ((t132b__ref (mk_t132b__ref (t132b__content tdigit_count_typeB)))))
(define-fun t132b__ref___projection ((a t132b__ref)) tdigit_count_typeB (t132b__content a))
(declare-sort t4 0)
(declare-fun first9 (t4) tdigit_count_typeB)
(declare-fun last10 (t4) tdigit_count_typeB)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first9 (mk4 f l))) f) (= (to_rep1 (last10 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property11 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property10 range_first range_last low) (dynamic_property10 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int octet)) (rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int octet) (elts4 a))
(define-fun of_array4 ((a (Array Int octet)) (f Int) (l Int)) us_t4 (mk___t4 a (mk4 f l)))
(define-fun first10 ((a us_t4)) Int (to_rep1 (first9 (rt4 a))))
(define-fun last11 ((a us_t4)) Int (to_rep1 (last10 (rt4 a))))
(define-fun length4 ((a us_t4)) Int (ite (<= (first10 a) (last11 a)) (+ (- (last11 a) (first10 a)) 1) 0))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int octet)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int octet)) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int octet)) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment7 a))))
(define-fun bool_eq8 ((x us_t4) (y us_t4)) Bool (bool_eq (elts4 x) (to_rep1 (first9 (rt4 x))) (to_rep1 (last10 (rt4 x))) (elts4 y) (to_rep1 (first9 (rt4 y))) (to_rep1 (last10 (rt4 y)))))
(declare-fun user_eq20 (us_t4 us_t4) Bool)
(declare-const dummy20 us_t4)
(declare-datatypes () ((t133b__ref (mk_t133b__ref (t133b__content us_t4)))))
(define-fun t133b__ref___projection ((a t133b__ref)) us_t4 (t133b__content a))
(declare-const r135b Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(define-fun dynamic_property12 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq21 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy21 tdigit_count_typeB)
(declare-datatypes () ((tS134bP1__ref (mk_tS134bP1__ref (tS134bP1__content tdigit_count_typeB)))))
(define-fun tS134bP1__ref___projection ((a tS134bP1__ref)) tdigit_count_typeB (tS134bP1__content a))
(declare-sort t5 0)
(declare-fun first11 (t5) tdigit_count_typeB)
(declare-fun last12 (t5) tdigit_count_typeB)
(declare-fun mk5 (Int Int) t5)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first11 (mk5 f l))) f) (= (to_rep1 (last12 (mk5 f l))) l)))) :pattern ((mk5 f l)))))
(define-fun dynamic_property13 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property12 range_first range_last low) (dynamic_property12 range_first range_last high))))))
(declare-datatypes () ((us_t5 (mk___t5 (elts5 (Array Int octet)) (rt5 t5)))))
(define-fun to_array5 ((a us_t5)) (Array Int octet) (elts5 a))
(define-fun of_array5 ((a (Array Int octet)) (f Int) (l Int)) us_t5 (mk___t5 a (mk5 f l)))
(define-fun first12 ((a us_t5)) Int (to_rep1 (first11 (rt5 a))))
(define-fun last13 ((a us_t5)) Int (to_rep1 (last12 (rt5 a))))
(define-fun length5 ((a us_t5)) Int (ite (<= (first12 a) (last13 a)) (+ (- (last13 a) (first12 a)) 1) 0))
(declare-const value__size8 Int)
(declare-fun object__size8 ((Array Int octet)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int octet)) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 ((Array Int octet)) Int)
(assert (<= 0 value__size8))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size8 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment8 a))))
(define-fun bool_eq9 ((x us_t5) (y us_t5)) Bool (bool_eq (elts5 x) (to_rep1 (first11 (rt5 x))) (to_rep1 (last12 (rt5 x))) (elts5 y) (to_rep1 (first11 (rt5 y))) (to_rep1 (last12 (rt5 y)))))
(declare-fun user_eq22 (us_t5 us_t5) Bool)
(declare-const dummy22 us_t5)
(declare-datatypes () ((s134b__ref (mk_s134b__ref (s134b__content us_t5)))))
(define-fun s134b__ref___projection ((a s134b__ref)) us_t5 (s134b__content a))
(define-fun dynamic_property14 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq23 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy23 tdigit_count_typeB)
(declare-datatypes () ((t136b__ref (mk_t136b__ref (t136b__content tdigit_count_typeB)))))
(define-fun t136b__ref___projection ((a t136b__ref)) tdigit_count_typeB (t136b__content a))
(declare-sort t6 0)
(declare-fun first13 (t6) tdigit_count_typeB)
(declare-fun last14 (t6) tdigit_count_typeB)
(declare-fun mk6 (Int Int) t6)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first13 (mk6 f l))) f) (= (to_rep1 (last14 (mk6 f l))) l)))) :pattern ((mk6 f l)))))
(define-fun dynamic_property15 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property14 range_first range_last low) (dynamic_property14 range_first range_last high))))))
(declare-datatypes () ((us_t6 (mk___t6 (elts6 (Array Int octet)) (rt6 t6)))))
(define-fun to_array6 ((a us_t6)) (Array Int octet) (elts6 a))
(define-fun of_array6 ((a (Array Int octet)) (f Int) (l Int)) us_t6 (mk___t6 a (mk6 f l)))
(define-fun first14 ((a us_t6)) Int (to_rep1 (first13 (rt6 a))))
(define-fun last15 ((a us_t6)) Int (to_rep1 (last14 (rt6 a))))
(define-fun length6 ((a us_t6)) Int (ite (<= (first14 a) (last15 a)) (+ (- (last15 a) (first14 a)) 1) 0))
(declare-const value__size9 Int)
(declare-fun object__size9 ((Array Int octet)) Int)
(declare-const value__component__size6 Int)
(declare-fun object__component__size6 ((Array Int octet)) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 ((Array Int octet)) Int)
(assert (<= 0 value__size9))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size9 a))))
(assert (<= 0 value__component__size6))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size6 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment9 a))))
(define-fun bool_eq10 ((x us_t6) (y us_t6)) Bool (bool_eq (elts6 x) (to_rep1 (first13 (rt6 x))) (to_rep1 (last14 (rt6 x))) (elts6 y) (to_rep1 (first13 (rt6 y))) (to_rep1 (last14 (rt6 y)))))
(declare-fun user_eq24 (us_t6 us_t6) Bool)
(declare-const dummy24 us_t6)
(declare-datatypes () ((t137b__ref (mk_t137b__ref (t137b__content us_t6)))))
(define-fun t137b__ref___projection ((a t137b__ref)) us_t6 (t137b__content a))
(declare-const r138b Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const r140b Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-fun temp_____aggregate_def_1138 ((_ BitVec 8) Int Int) us_t4)
(declare-fun temp_____aggregate_def_1151 ((_ BitVec 8) Int Int) us_t6)
(declare-sort t7 0)
(declare-fun first15 (t7) tdigit_count_typeB)
(declare-fun last16 (t7) tdigit_count_typeB)
(declare-fun mk7 (Int Int) t7)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first15 (mk7 f l))) f) (= (to_rep1 (last16 (mk7 f l))) l)))) :pattern ((mk7 f l)))))
(define-fun dynamic_property16 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t7 (mk___t7 (elts7 (Array Int octet)) (rt7 t7)))))
(define-fun to_array7 ((a us_t7)) (Array Int octet) (elts7 a))
(define-fun of_array7 ((a (Array Int octet)) (f Int) (l Int)) us_t7 (mk___t7 a (mk7 f l)))
(define-fun first16 ((a us_t7)) Int (to_rep1 (first15 (rt7 a))))
(define-fun last17 ((a us_t7)) Int (to_rep1 (last16 (rt7 a))))
(define-fun length7 ((a us_t7)) Int (ite (<= (first16 a) (last17 a)) (+ (- (last17 a) (first16 a)) 1) 0))
(declare-const value__size10 Int)
(declare-fun object__size10 ((Array Int octet)) Int)
(declare-const value__component__size7 Int)
(declare-fun object__component__size7 ((Array Int octet)) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 ((Array Int octet)) Int)
(assert (<= 0 value__size10))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size10 a))))
(assert (<= 0 value__component__size7))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size7 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment10 a))))
(define-fun bool_eq11 ((x us_t7) (y us_t7)) Bool (bool_eq (elts7 x) (to_rep1 (first15 (rt7 x))) (to_rep1 (last16 (rt7 x))) (elts7 y) (to_rep1 (first15 (rt7 y))) (to_rep1 (last16 (rt7 y)))))
(declare-fun user_eq25 (us_t7 us_t7) Bool)
(declare-const dummy25 us_t7)
(declare-datatypes () ((digits_array_type__ref (mk_digits_array_type__ref (digits_array_type__content us_t7)))))
(define-fun digits_array_type__ref___projection ((a digits_array_type__ref)) us_t7 (digits_array_type__content a))
(define-fun dynamic_invariant10 ((temp___expr_242 us_t7) (temp___is_init_238 Bool) (temp___skip_constant_239 Bool) (temp___do_toplevel_240 Bool) (temp___do_typ_inv_241 Bool)) Bool (=> (not (= temp___skip_constant_239 true)) (dynamic_property16 1 65536 (first16 temp___expr_242) (last17 temp___expr_242))))
(assert (forall ((temp___1140 (_ BitVec 8))) (forall ((temp___1141 Int) (temp___1142 Int)) (let ((temp___1139 (temp_____aggregate_def_1138 temp___1140 temp___1141 temp___1142))) (=> (dynamic_invariant2 temp___1140 true true true true) (and (=> (dynamic_property16 1 65536 temp___1141 temp___1142) (and (= (first10 temp___1139) temp___1141) (= (last11 temp___1139) temp___1142))) (forall ((temp___1143 Int)) (= (to_rep2 (select (to_array4 temp___1139) temp___1143)) temp___1140))))))))
(assert (forall ((temp___1153 (_ BitVec 8))) (forall ((temp___1154 Int) (temp___1155 Int)) (let ((temp___1152 (temp_____aggregate_def_1151 temp___1153 temp___1154 temp___1155))) (=> (dynamic_invariant2 temp___1153 true true true true) (and (=> (dynamic_property16 1 65536 temp___1154 temp___1155) (and (= (first14 temp___1152) temp___1154) (= (last15 temp___1152) temp___1155))) (forall ((temp___1156 Int)) (= (to_rep2 (select (to_array6 temp___1152) temp___1156)) temp___1153))))))))
(define-fun dynamic_invariant11 ((temp___expr_841 us_t3) (temp___is_init_837 Bool) (temp___skip_constant_838 Bool) (temp___do_toplevel_839 Bool) (temp___do_typ_inv_840 Bool)) Bool (=> (not (= temp___skip_constant_838 true)) (and (dynamic_property9 1 r131b (first8 temp___expr_841) (last9 temp___expr_841)) (and (= (first8 temp___expr_841) 1) (= (last9 temp___expr_841) r131b)))))
(define-fun dynamic_invariant12 ((temp___expr_851 us_t5) (temp___is_init_847 Bool) (temp___skip_constant_848 Bool) (temp___do_toplevel_849 Bool) (temp___do_typ_inv_850 Bool)) Bool (=> (not (= temp___skip_constant_848 true)) (and (dynamic_property13 1 r135b (first12 temp___expr_851) (last13 temp___expr_851)) (and (= (first12 temp___expr_851) 1) (= (last13 temp___expr_851) r135b)))))
(assert (not true))
(check-sat)
(exit)
