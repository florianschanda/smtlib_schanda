(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-fun nth1 ((_ BitVec 16) Int) Bool)
(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(declare-fun nth2 ((_ BitVec 32) Int) Bool)
(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun to_int3 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32)) (bv2nat x) (- (- 4294967296 (bv2nat x)))))
(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvlshr x n) (lsr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvashr x n) (asr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvshl x n) (lsl2 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_left3 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_right3 v (bv2nat n)))))
(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (= (nth_bv2 x i) true) (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (nth2 x (bv2nat i)) (nth_bv2 x i))))
(assert (forall ((x (_ BitVec 32)) (i Int)) (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv2 x ((_ int2bv 32) i)) (nth2 x i)))))
(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i))) (= (eq_sub_bv2 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (= (eq_sub2 a b (bv2nat i) (bv2nat n)) (eq_sub_bv2 a b i n))))
(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun bv_min2 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))
(define-fun bv_max2 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-sort packet_length_range 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 8192)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (packet_length_range packet_length_range) Bool)
(declare-const dummy2 packet_length_range)
(declare-datatypes () ((packet_length_range__ref (mk_packet_length_range__ref (packet_length_range__content packet_length_range)))))
(define-fun packet_length_range__ref___projection ((a packet_length_range__ref)) packet_length_range (packet_length_range__content a))
(define-fun dynamic_invariant ((temp___expr_789 Int) (temp___is_init_785 Bool) (temp___skip_constant_786 Bool) (temp___do_toplevel_787 Bool) (temp___do_typ_inv_788 Bool)) Bool (=> (or (= temp___is_init_785 true) (<= 0 8192)) (in_range3 temp___expr_789)))
(declare-sort packet_bytes_range 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 8180)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (packet_bytes_range packet_bytes_range) Bool)
(declare-const dummy3 packet_bytes_range)
(declare-datatypes () ((packet_bytes_range__ref (mk_packet_bytes_range__ref (packet_bytes_range__content packet_bytes_range)))))
(define-fun packet_bytes_range__ref___projection ((a packet_bytes_range__ref)) packet_bytes_range (packet_bytes_range__content a))
(define-fun dynamic_invariant1 ((temp___expr_796 Int) (temp___is_init_792 Bool) (temp___skip_constant_793 Bool) (temp___do_toplevel_794 Bool) (temp___do_typ_inv_795 Bool)) Bool (=> (or (= temp___is_init_792 true) (<= 1 8180)) (in_range4 temp___expr_796)))
(declare-sort byte 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 8))
(declare-fun user_eq4 (byte byte) Bool)
(declare-const dummy4 byte)
(declare-datatypes () ((byte__ref (mk_byte__ref (byte__content byte)))))
(define-fun byte__ref___projection ((a byte__ref)) byte (byte__content a))
(declare-fun to_rep1 (byte) (_ BitVec 8))
(declare-fun of_rep1 ((_ BitVec 8)) byte)
(assert (forall ((x byte)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun to_int4 ((x byte)) Int (bv2nat (to_rep1 x)))
(assert (forall ((x byte)) (! (uint_in_range (to_int4 x)) :pattern ((to_int4 x)))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int byte))))))
(declare-fun slide1 ((Array Int byte) Int Int) (Array Int byte))
(assert (forall ((a (Array Int byte))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int byte))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int byte)) (a__first Int) (a__last Int) (b (Array Int byte)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep1 (select a temp___idx_173)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_173))))))) true false))
(assert (forall ((a (Array Int byte)) (b (Array Int byte))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep1 (select a temp___idx_173)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_173)))))))))))
(declare-sort unsigned32 0)
(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 32))
(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 32))
(declare-fun user_eq5 (unsigned32 unsigned32) Bool)
(declare-const dummy5 unsigned32)
(declare-datatypes () ((unsigned32__ref (mk_unsigned32__ref (unsigned32__content unsigned32)))))
(define-fun unsigned32__ref___projection ((a unsigned32__ref)) unsigned32 (unsigned32__content a))
(declare-fun to_rep2 (unsigned32) (_ BitVec 32))
(declare-fun of_rep2 ((_ BitVec 32)) unsigned32)
(assert (forall ((x unsigned32)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert true)
(assert (forall ((x (_ BitVec 32))) (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_int5 ((x unsigned32)) Int (bv2nat (to_rep2 x)))
(assert (forall ((x unsigned32)) (! (uint_in_range2 (to_int5 x)) :pattern ((to_int5 x)))))
(declare-sort wirestringtypeindex 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 129)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq6 (wirestringtypeindex wirestringtypeindex) Bool)
(declare-const dummy6 wirestringtypeindex)
(declare-datatypes () ((wirestringtypeindex__ref (mk_wirestringtypeindex__ref (wirestringtypeindex__content wirestringtypeindex)))))
(define-fun wirestringtypeindex__ref___projection ((a wirestringtypeindex__ref)) wirestringtypeindex (wirestringtypeindex__content a))
(define-fun dynamic_invariant2 ((temp___expr_1018 Int) (temp___is_init_1014 Bool) (temp___skip_constant_1015 Bool) (temp___do_toplevel_1016 Bool) (temp___do_typ_inv_1017 Bool)) Bool (=> (or (= temp___is_init_1014 true) (<= 1 129)) (in_range5 temp___expr_1018)))
(declare-fun wirenamelength ((Array Int character)) Int)
(declare-fun wirenamelength__function_guard (Int (Array Int character)) Bool)
(declare-sort blocknumbervalue 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 32)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (blocknumbervalue blocknumbervalue) Bool)
(declare-const dummy7 blocknumbervalue)
(declare-datatypes () ((blocknumbervalue__ref (mk_blocknumbervalue__ref (blocknumbervalue__content blocknumbervalue)))))
(define-fun blocknumbervalue__ref___projection ((a blocknumbervalue__ref)) blocknumbervalue (blocknumbervalue__content a))
(declare-fun to_rep3 (blocknumbervalue) Int)
(declare-fun of_rep3 (Int) blocknumbervalue)
(assert (forall ((x blocknumbervalue)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x blocknumbervalue)) (! (in_range6 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort blocknumberarrayindex 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 32)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq8 (blocknumberarrayindex blocknumberarrayindex) Bool)
(declare-const dummy8 blocknumberarrayindex)
(declare-datatypes () ((blocknumberarrayindex__ref (mk_blocknumberarrayindex__ref (blocknumberarrayindex__content blocknumberarrayindex)))))
(define-fun blocknumberarrayindex__ref___projection ((a blocknumberarrayindex__ref)) blocknumberarrayindex (blocknumberarrayindex__content a))
(declare-sort blocklengthvalue 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 32)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq9 (blocklengthvalue blocklengthvalue) Bool)
(declare-const dummy9 blocklengthvalue)
(declare-datatypes () ((blocklengthvalue__ref (mk_blocklengthvalue__ref (blocklengthvalue__content blocklengthvalue)))))
(define-fun blocklengthvalue__ref___projection ((a blocklengthvalue__ref)) blocklengthvalue (blocklengthvalue__content a))
(declare-fun to_rep4 (blocklengthvalue) Int)
(declare-fun of_rep4 (Int) blocklengthvalue)
(assert (forall ((x blocklengthvalue)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x blocklengthvalue)) (! (in_range8 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int blocklengthvalue))))))
(declare-fun slide2 ((Array Int blocklengthvalue) Int Int) (Array Int blocklengthvalue))
(assert (forall ((a (Array Int blocklengthvalue))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int blocklengthvalue))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int blocklengthvalue)) (a__first Int) (a__last Int) (b (Array Int blocklengthvalue)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_218 Int)) (=> (and (<= a__first temp___idx_218) (<= temp___idx_218 a__last)) (= (to_rep4 (select a temp___idx_218)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_218))))))) true false))
(assert (forall ((a (Array Int blocklengthvalue)) (b (Array Int blocklengthvalue))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_218 Int)) (=> (and (<= a__first temp___idx_218) (<= temp___idx_218 a__last)) (= (to_rep4 (select a temp___idx_218)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_218)))))))))))
(declare-sort bitmapindex 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 32)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq10 (bitmapindex bitmapindex) Bool)
(declare-const dummy10 bitmapindex)
(declare-datatypes () ((bitmapindex__ref (mk_bitmapindex__ref (bitmapindex__content bitmapindex)))))
(define-fun bitmapindex__ref___projection ((a bitmapindex__ref)) bitmapindex (bitmapindex__content a))
(declare-const dummy11 (Array Int byte))
(declare-const value__size Int)
(declare-fun object__size ((Array Int byte)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int byte)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int byte)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment a))))
(declare-fun user_eq11 ((Array Int byte) (Array Int byte)) Bool)
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int (Array Int byte)))))))
(declare-fun slide3 ((Array Int (Array Int byte)) Int Int) (Array Int (Array Int byte)))
(assert (forall ((a (Array Int (Array Int byte)))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int (Array Int byte)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq3 ((a (Array Int (Array Int byte))) (a__first Int) (a__last Int) (b (Array Int (Array Int byte))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_219 Int)) (=> (and (<= a__first temp___idx_219) (<= temp___idx_219 a__last)) (= (bool_eq1 (select a temp___idx_219) 1 32 (select b (+ (- b__first a__first) temp___idx_219)) 1 32) true)))) true false))
(assert (forall ((a (Array Int (Array Int byte))) (b (Array Int (Array Int byte)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_219 Int)) (=> (and (<= a__first temp___idx_219) (<= temp___idx_219 a__last)) (= (bool_eq1 (select a temp___idx_219) 1 32 (select b (+ (- b__first a__first) temp___idx_219)) 1 32) true))))))))
(declare-sort classtype 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq12 (classtype classtype) Bool)
(declare-const dummy12 classtype)
(declare-datatypes () ((classtype__ref (mk_classtype__ref (classtype__content classtype)))))
(define-fun classtype__ref___projection ((a classtype__ref)) classtype (classtype__content a))
(declare-fun to_rep5 (classtype) Int)
(declare-fun of_rep5 (Int) classtype)
(assert (forall ((x classtype)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x classtype)) (! (in_range10 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-const dummy13 (Array Int character))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq13 ((Array Int character) (Array Int character)) Bool)
(declare-const dummy14 (Array Int character))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq14 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__rr_type__resourcerecordtype__ttlinseconds unsigned32) (rec__rr_type__resourcerecordtype__class classtype) (rec__ext__ us_private)))))
(define-fun us_split_fields_TTLInSeconds__projection ((a us_split_fields)) unsigned32 (rec__rr_type__resourcerecordtype__ttlinseconds a))
(define-fun us_split_fields_Class__projection ((a us_split_fields)) classtype (rec__rr_type__resourcerecordtype__class a))
(define-fun us_split_fields___2__projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___6__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___7__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___8__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq4 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep2 (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 a))) (to_rep2 (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 b)))) (= (to_rep5 (rec__rr_type__resourcerecordtype__class (us_split_fields1 a))) (to_rep5 (rec__rr_type__resourcerecordtype__class (us_split_fields1 b))))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const rr_type__resourcerecordtype__ttlinseconds__first__bit Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__last__bit Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__position Int)
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__first__bit))
(assert (< rr_type__resourcerecordtype__ttlinseconds__first__bit rr_type__resourcerecordtype__ttlinseconds__last__bit))
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__position))
(declare-const rr_type__resourcerecordtype__class__first__bit Int)
(declare-const rr_type__resourcerecordtype__class__last__bit Int)
(declare-const rr_type__resourcerecordtype__class__position Int)
(assert (<= 0 rr_type__resourcerecordtype__class__first__bit))
(assert (< rr_type__resourcerecordtype__class__first__bit rr_type__resourcerecordtype__class__last__bit))
(assert (<= 0 rr_type__resourcerecordtype__class__position))
(declare-fun user_eq15 (us_rep us_rep) Bool)
(declare-const dummy15 us_rep)
(declare-datatypes () ((resourcerecordtype__ref (mk_resourcerecordtype__ref (resourcerecordtype__content us_rep)))))
(define-fun resourcerecordtype__ref___projection ((a resourcerecordtype__ref)) us_rep (resourcerecordtype__content a))
(declare-sort recordtypeindexvalue 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 32)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq16 (recordtypeindexvalue recordtypeindexvalue) Bool)
(declare-const dummy16 recordtypeindexvalue)
(declare-datatypes () ((recordtypeindexvalue__ref (mk_recordtypeindexvalue__ref (recordtypeindexvalue__content recordtypeindexvalue)))))
(define-fun recordtypeindexvalue__ref___projection ((a recordtypeindexvalue__ref)) recordtypeindexvalue (recordtypeindexvalue__content a))
(declare-fun to_rep6 (recordtypeindexvalue) Int)
(declare-fun of_rep6 (Int) recordtypeindexvalue)
(assert (forall ((x recordtypeindexvalue)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x recordtypeindexvalue)) (! (in_range11 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-sort query_type 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 18)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq17 (query_type query_type) Bool)
(declare-const dummy17 query_type)
(declare-datatypes () ((query_type__ref (mk_query_type__ref (query_type__content query_type)))))
(define-fun query_type__ref___projection ((a query_type__ref)) query_type (query_type__content a))
(declare-fun to_rep7 (query_type) Int)
(declare-fun of_rep7 (Int) query_type)
(assert (forall ((x query_type)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x query_type)) (! (in_range12 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int query_type))))))
(declare-fun slide4 ((Array Int query_type) Int Int) (Array Int query_type))
(assert (forall ((a (Array Int query_type))) (forall ((first Int)) (! (= (slide4 a first first) a) :pattern ((slide4 a first first))))))
(assert (forall ((a (Array Int query_type))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(define-fun bool_eq5 ((a (Array Int query_type)) (a__first Int) (a__last Int) (b (Array Int query_type)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_217 Int)) (=> (and (<= a__first temp___idx_217) (<= temp___idx_217 a__last)) (= (to_rep7 (select a temp___idx_217)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_217))))))) true false))
(assert (forall ((a (Array Int query_type)) (b (Array Int query_type))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_217 Int)) (=> (and (<= a__first temp___idx_217) (<= temp___idx_217 a__last)) (= (to_rep7 (select a temp___idx_217)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_217)))))))))))
(declare-const dummy18 (Array Int query_type))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int query_type)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int query_type)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int query_type)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int query_type))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int query_type))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int query_type))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq18 ((Array Int query_type) (Array Int query_type)) Bool)
(declare-const dummy19 (Array Int byte))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int byte)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int byte)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int byte)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment5 a))))
(declare-fun user_eq19 ((Array Int byte) (Array Int byte)) Bool)
(declare-const dummy20 (Array Int blocklengthvalue))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int blocklengthvalue)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int blocklengthvalue)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int blocklengthvalue)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int blocklengthvalue))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int blocklengthvalue))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int blocklengthvalue))) (<= 0 (object__alignment6 a))))
(declare-fun user_eq20 ((Array Int blocklengthvalue) (Array Int blocklengthvalue)) Bool)
(declare-const dummy21 (Array Int (Array Int byte)))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int (Array Int byte))) Int)
(declare-const value__component__size6 Int)
(declare-fun object__component__size6 ((Array Int (Array Int byte))) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int (Array Int byte))) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int (Array Int byte)))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size6))
(assert (forall ((a (Array Int (Array Int byte)))) (<= 0 (object__component__size6 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int (Array Int byte)))) (<= 0 (object__alignment7 a))))
(declare-fun user_eq21 ((Array Int (Array Int byte)) (Array Int (Array Int byte))) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (Array Int character)) (rec__rr_type__nsec_record_type__nsecrecordtype__recordlist (Array Int character)) (rec__rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes recordtypeindexvalue) (rec__rr_type__nsec_record_type__nsecrecordtype__recordtypes (Array Int query_type)) (rec__rr_type__nsec_record_type__nsecrecordtype__numberofblocks blocknumbervalue) (rec__rr_type__nsec_record_type__nsecrecordtype__blocknumbers (Array Int byte)) (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (Array Int blocklengthvalue)) (rec__rr_type__nsec_record_type__nsecrecordtype__bitmaps (Array Int (Array Int byte))) (rec__rr_type__resourcerecordtype__ttlinseconds1 unsigned32) (rec__rr_type__resourcerecordtype__class1 classtype) (rec__ext__1 us_private)))))
(define-fun us_split_fields_NextDomainName__projection ((a us_split_fields2)) (Array Int character) (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname a))
(define-fun us_split_fields_RecordList__projection ((a us_split_fields2)) (Array Int character) (rec__rr_type__nsec_record_type__nsecrecordtype__recordlist a))
(define-fun us_split_fields_NumberOfRecordTypes__projection ((a us_split_fields2)) recordtypeindexvalue (rec__rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes a))
(define-fun us_split_fields_RecordTypes__projection ((a us_split_fields2)) (Array Int query_type) (rec__rr_type__nsec_record_type__nsecrecordtype__recordtypes a))
(define-fun us_split_fields_NumberOfBlocks__projection ((a us_split_fields2)) blocknumbervalue (rec__rr_type__nsec_record_type__nsecrecordtype__numberofblocks a))
(define-fun us_split_fields_BlockNumbers__projection ((a us_split_fields2)) (Array Int byte) (rec__rr_type__nsec_record_type__nsecrecordtype__blocknumbers a))
(define-fun us_split_fields_BlockLengths__projection ((a us_split_fields2)) (Array Int blocklengthvalue) (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths a))
(define-fun us_split_fields_BitMaps__projection ((a us_split_fields2)) (Array Int (Array Int byte)) (rec__rr_type__nsec_record_type__nsecrecordtype__bitmaps a))
(define-fun us_split_fields_TTLInSeconds__8__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__resourcerecordtype__ttlinseconds1 a))
(define-fun us_split_fields_Class__8__projection ((a us_split_fields2)) classtype (rec__rr_type__resourcerecordtype__class1 a))
(define-fun us_split_fields___9__projection ((a us_split_fields2)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___13__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2) (attr__tag1 Int)))))
(define-fun us_rep___21__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___22__projection ((a us_rep1)) Int (attr__tag1 a))
(declare-fun hide_ext__ ((Array Int character) (Array Int character) recordtypeindexvalue (Array Int query_type) blocknumbervalue (Array Int byte) (Array Int blocklengthvalue) (Array Int (Array Int byte)) us_private) us_private)
(declare-fun extract__nextdomainname (us_private) (Array Int character))
(assert (forall ((nextdomainname (Array Int character)) (recordlist (Array Int character))) (forall ((numberofrecordtypes recordtypeindexvalue)) (forall ((recordtypes (Array Int query_type))) (forall ((numberofblocks blocknumbervalue)) (forall ((blocknumbers (Array Int byte))) (forall ((blocklengths (Array Int blocklengthvalue))) (forall ((bitmaps (Array Int (Array Int byte)))) (forall ((rec__ext__2 us_private)) (= (extract__nextdomainname (hide_ext__ nextdomainname recordlist numberofrecordtypes recordtypes numberofblocks blocknumbers blocklengths bitmaps rec__ext__2)) nextdomainname))))))))))
(declare-fun extract__recordlist (us_private) (Array Int character))
(assert (forall ((nextdomainname (Array Int character)) (recordlist (Array Int character))) (forall ((numberofrecordtypes recordtypeindexvalue)) (forall ((recordtypes (Array Int query_type))) (forall ((numberofblocks blocknumbervalue)) (forall ((blocknumbers (Array Int byte))) (forall ((blocklengths (Array Int blocklengthvalue))) (forall ((bitmaps (Array Int (Array Int byte)))) (forall ((rec__ext__2 us_private)) (= (extract__recordlist (hide_ext__ nextdomainname recordlist numberofrecordtypes recordtypes numberofblocks blocknumbers blocklengths bitmaps rec__ext__2)) recordlist))))))))))
(declare-fun extract__numberofrecordtypes (us_private) recordtypeindexvalue)
(assert (forall ((nextdomainname (Array Int character)) (recordlist (Array Int character))) (forall ((numberofrecordtypes recordtypeindexvalue)) (forall ((recordtypes (Array Int query_type))) (forall ((numberofblocks blocknumbervalue)) (forall ((blocknumbers (Array Int byte))) (forall ((blocklengths (Array Int blocklengthvalue))) (forall ((bitmaps (Array Int (Array Int byte)))) (forall ((rec__ext__2 us_private)) (= (extract__numberofrecordtypes (hide_ext__ nextdomainname recordlist numberofrecordtypes recordtypes numberofblocks blocknumbers blocklengths bitmaps rec__ext__2)) numberofrecordtypes))))))))))
(declare-fun extract__recordtypes (us_private) (Array Int query_type))
(assert (forall ((nextdomainname (Array Int character)) (recordlist (Array Int character))) (forall ((numberofrecordtypes recordtypeindexvalue)) (forall ((recordtypes (Array Int query_type))) (forall ((numberofblocks blocknumbervalue)) (forall ((blocknumbers (Array Int byte))) (forall ((blocklengths (Array Int blocklengthvalue))) (forall ((bitmaps (Array Int (Array Int byte)))) (forall ((rec__ext__2 us_private)) (= (extract__recordtypes (hide_ext__ nextdomainname recordlist numberofrecordtypes recordtypes numberofblocks blocknumbers blocklengths bitmaps rec__ext__2)) recordtypes))))))))))
(declare-fun extract__numberofblocks (us_private) blocknumbervalue)
(assert (forall ((nextdomainname (Array Int character)) (recordlist (Array Int character))) (forall ((numberofrecordtypes recordtypeindexvalue)) (forall ((recordtypes (Array Int query_type))) (forall ((numberofblocks blocknumbervalue)) (forall ((blocknumbers (Array Int byte))) (forall ((blocklengths (Array Int blocklengthvalue))) (forall ((bitmaps (Array Int (Array Int byte)))) (forall ((rec__ext__2 us_private)) (= (extract__numberofblocks (hide_ext__ nextdomainname recordlist numberofrecordtypes recordtypes numberofblocks blocknumbers blocklengths bitmaps rec__ext__2)) numberofblocks))))))))))
(declare-fun extract__blocknumbers (us_private) (Array Int byte))
(assert (forall ((nextdomainname (Array Int character)) (recordlist (Array Int character))) (forall ((numberofrecordtypes recordtypeindexvalue)) (forall ((recordtypes (Array Int query_type))) (forall ((numberofblocks blocknumbervalue)) (forall ((blocknumbers (Array Int byte))) (forall ((blocklengths (Array Int blocklengthvalue))) (forall ((bitmaps (Array Int (Array Int byte)))) (forall ((rec__ext__2 us_private)) (= (extract__blocknumbers (hide_ext__ nextdomainname recordlist numberofrecordtypes recordtypes numberofblocks blocknumbers blocklengths bitmaps rec__ext__2)) blocknumbers))))))))))
(declare-fun extract__blocklengths (us_private) (Array Int blocklengthvalue))
(assert (forall ((nextdomainname (Array Int character)) (recordlist (Array Int character))) (forall ((numberofrecordtypes recordtypeindexvalue)) (forall ((recordtypes (Array Int query_type))) (forall ((numberofblocks blocknumbervalue)) (forall ((blocknumbers (Array Int byte))) (forall ((blocklengths (Array Int blocklengthvalue))) (forall ((bitmaps (Array Int (Array Int byte)))) (forall ((rec__ext__2 us_private)) (= (extract__blocklengths (hide_ext__ nextdomainname recordlist numberofrecordtypes recordtypes numberofblocks blocknumbers blocklengths bitmaps rec__ext__2)) blocklengths))))))))))
(declare-fun extract__bitmaps (us_private) (Array Int (Array Int byte)))
(assert (forall ((nextdomainname (Array Int character)) (recordlist (Array Int character))) (forall ((numberofrecordtypes recordtypeindexvalue)) (forall ((recordtypes (Array Int query_type))) (forall ((numberofblocks blocknumbervalue)) (forall ((blocknumbers (Array Int byte))) (forall ((blocklengths (Array Int blocklengthvalue))) (forall ((bitmaps (Array Int (Array Int byte)))) (forall ((rec__ext__2 us_private)) (= (extract__bitmaps (hide_ext__ nextdomainname recordlist numberofrecordtypes recordtypes numberofblocks blocknumbers blocklengths bitmaps rec__ext__2)) bitmaps))))))))))
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (mk___split_fields (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 a)) (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 a)) (hide_ext__ (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (us_split_fields3 a)) (rec__rr_type__nsec_record_type__nsecrecordtype__recordlist (us_split_fields3 a)) (rec__rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes (us_split_fields3 a)) (rec__rr_type__nsec_record_type__nsecrecordtype__recordtypes (us_split_fields3 a)) (rec__rr_type__nsec_record_type__nsecrecordtype__numberofblocks (us_split_fields3 a)) (rec__rr_type__nsec_record_type__nsecrecordtype__blocknumbers (us_split_fields3 a)) (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 a)) (rec__rr_type__nsec_record_type__nsecrecordtype__bitmaps (us_split_fields3 a)) (rec__ext__1 (us_split_fields3 a)))) (attr__tag1 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (mk___split_fields1 (extract__nextdomainname (rec__ext__ (us_split_fields1 r))) (extract__recordlist (rec__ext__ (us_split_fields1 r))) (extract__numberofrecordtypes (rec__ext__ (us_split_fields1 r))) (extract__recordtypes (rec__ext__ (us_split_fields1 r))) (extract__numberofblocks (rec__ext__ (us_split_fields1 r))) (extract__blocknumbers (rec__ext__ (us_split_fields1 r))) (extract__blocklengths (rec__ext__ (us_split_fields1 r))) (extract__bitmaps (rec__ext__ (us_split_fields1 r))) (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 r)) (rec__rr_type__resourcerecordtype__class (us_split_fields1 r)) (extract__ext__ (rec__ext__ (us_split_fields1 r)))) (attr__tag r)))
(define-fun bool_eq6 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (and (and (and (and (and (and (= (bool_eq (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (us_split_fields3 a)) 1 129 (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (us_split_fields3 b)) 1 129) true) (= (bool_eq (rec__rr_type__nsec_record_type__nsecrecordtype__recordlist (us_split_fields3 a)) 1 256 (rec__rr_type__nsec_record_type__nsecrecordtype__recordlist (us_split_fields3 b)) 1 256) true)) (= (to_rep6 (rec__rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes (us_split_fields3 a))) (to_rep6 (rec__rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes (us_split_fields3 b))))) (= (bool_eq5 (rec__rr_type__nsec_record_type__nsecrecordtype__recordtypes (us_split_fields3 a)) 1 32 (rec__rr_type__nsec_record_type__nsecrecordtype__recordtypes (us_split_fields3 b)) 1 32) true)) (= (to_rep3 (rec__rr_type__nsec_record_type__nsecrecordtype__numberofblocks (us_split_fields3 a))) (to_rep3 (rec__rr_type__nsec_record_type__nsecrecordtype__numberofblocks (us_split_fields3 b))))) (= (bool_eq1 (rec__rr_type__nsec_record_type__nsecrecordtype__blocknumbers (us_split_fields3 a)) 1 32 (rec__rr_type__nsec_record_type__nsecrecordtype__blocknumbers (us_split_fields3 b)) 1 32) true)) (= (bool_eq2 (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 a)) 1 32 (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 b)) 1 32) true)) (= (bool_eq3 (rec__rr_type__nsec_record_type__nsecrecordtype__bitmaps (us_split_fields3 a)) 1 32 (rec__rr_type__nsec_record_type__nsecrecordtype__bitmaps (us_split_fields3 b)) 1 32) true)) (= (to_rep2 (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 a))) (to_rep2 (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 b))))) (= (to_rep5 (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 a))) (to_rep5 (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 b))))) true false))
(declare-const us_tag1 Int)
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep1) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep1) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep1)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment8 a))))
(declare-const rr_type__nsec_record_type__nsecrecordtype__nextdomainname__first__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__nextdomainname__last__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__nextdomainname__position Int)
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__nextdomainname__first__bit))
(assert (< rr_type__nsec_record_type__nsecrecordtype__nextdomainname__first__bit rr_type__nsec_record_type__nsecrecordtype__nextdomainname__last__bit))
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__nextdomainname__position))
(declare-const rr_type__nsec_record_type__nsecrecordtype__recordlist__first__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__recordlist__last__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__recordlist__position Int)
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__recordlist__first__bit))
(assert (< rr_type__nsec_record_type__nsecrecordtype__recordlist__first__bit rr_type__nsec_record_type__nsecrecordtype__recordlist__last__bit))
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__recordlist__position))
(declare-const rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes__first__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes__last__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes__position Int)
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes__first__bit))
(assert (< rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes__first__bit rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes__last__bit))
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__numberofrecordtypes__position))
(declare-const rr_type__nsec_record_type__nsecrecordtype__recordtypes__first__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__recordtypes__last__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__recordtypes__position Int)
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__recordtypes__first__bit))
(assert (< rr_type__nsec_record_type__nsecrecordtype__recordtypes__first__bit rr_type__nsec_record_type__nsecrecordtype__recordtypes__last__bit))
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__recordtypes__position))
(declare-const rr_type__nsec_record_type__nsecrecordtype__numberofblocks__first__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__numberofblocks__last__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__numberofblocks__position Int)
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__numberofblocks__first__bit))
(assert (< rr_type__nsec_record_type__nsecrecordtype__numberofblocks__first__bit rr_type__nsec_record_type__nsecrecordtype__numberofblocks__last__bit))
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__numberofblocks__position))
(declare-const rr_type__nsec_record_type__nsecrecordtype__blocknumbers__first__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__blocknumbers__last__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__blocknumbers__position Int)
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__blocknumbers__first__bit))
(assert (< rr_type__nsec_record_type__nsecrecordtype__blocknumbers__first__bit rr_type__nsec_record_type__nsecrecordtype__blocknumbers__last__bit))
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__blocknumbers__position))
(declare-const rr_type__nsec_record_type__nsecrecordtype__blocklengths__first__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__blocklengths__last__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__blocklengths__position Int)
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__blocklengths__first__bit))
(assert (< rr_type__nsec_record_type__nsecrecordtype__blocklengths__first__bit rr_type__nsec_record_type__nsecrecordtype__blocklengths__last__bit))
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__blocklengths__position))
(declare-const rr_type__nsec_record_type__nsecrecordtype__bitmaps__first__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__bitmaps__last__bit Int)
(declare-const rr_type__nsec_record_type__nsecrecordtype__bitmaps__position Int)
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__bitmaps__first__bit))
(assert (< rr_type__nsec_record_type__nsecrecordtype__bitmaps__first__bit rr_type__nsec_record_type__nsecrecordtype__bitmaps__last__bit))
(assert (<= 0 rr_type__nsec_record_type__nsecrecordtype__bitmaps__position))
(declare-const rr_type__resourcerecordtype__ttlinseconds__first__bit1 Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__last__bit1 Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__position1 Int)
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__first__bit1))
(assert (< rr_type__resourcerecordtype__ttlinseconds__first__bit1 rr_type__resourcerecordtype__ttlinseconds__last__bit1))
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__position1))
(declare-const rr_type__resourcerecordtype__class__first__bit1 Int)
(declare-const rr_type__resourcerecordtype__class__last__bit1 Int)
(declare-const rr_type__resourcerecordtype__class__position1 Int)
(assert (<= 0 rr_type__resourcerecordtype__class__first__bit1))
(assert (< rr_type__resourcerecordtype__class__first__bit1 rr_type__resourcerecordtype__class__last__bit1))
(assert (<= 0 rr_type__resourcerecordtype__class__position1))
(declare-fun user_eq22 (us_rep1 us_rep1) Bool)
(declare-const dummy22 us_rep1)
(declare-datatypes () ((nsecrecordtype__ref (mk_nsecrecordtype__ref (nsecrecordtype__content us_rep1)))))
(define-fun nsecrecordtype__ref___projection ((a nsecrecordtype__ref)) us_rep1 (nsecrecordtype__content a))
(define-fun default_initial_assumption ((temp___expr_1545 us_rep1) (temp___skip_top_level_1546 Bool)) Bool (= (attr__tag1 temp___expr_1545) us_tag1))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const start_byte Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const nsec_record us_rep1)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const r15b Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun to_rep8 (integer) Int)
(declare-fun of_rep8 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq23 (integer integer) Bool)
(declare-const dummy23 integer)
(declare-datatypes () ((t16b__ref (mk_t16b__ref (t16b__content integer)))))
(define-fun t16b__ref___projection ((a t16b__ref)) integer (t16b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq24 (integer integer) Bool)
(declare-const dummy24 integer)
(declare-datatypes () ((t19b__ref (mk_t19b__ref (t19b__content integer)))))
(define-fun t19b__ref___projection ((a t19b__ref)) integer (t19b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq25 (integer integer) Bool)
(declare-const dummy25 integer)
(declare-datatypes () ((t20b__ref (mk_t20b__ref (t20b__content integer)))))
(define-fun t20b__ref___projection ((a t20b__ref)) integer (t20b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(define-fun dynamic_invariant4 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant5 ((temp___expr_803 (_ BitVec 8)) (temp___is_init_799 Bool) (temp___skip_constant_800 Bool) (temp___do_toplevel_801 Bool) (temp___do_typ_inv_802 Bool)) Bool true)
(define-fun dynamic_invariant6 ((temp___expr_861 Int) (temp___is_init_857 Bool) (temp___skip_constant_858 Bool) (temp___do_toplevel_859 Bool) (temp___do_typ_inv_860 Bool)) Bool (=> (or (= temp___is_init_857 true) (<= 0 18)) (in_range12 temp___expr_861)))
(define-fun dynamic_invariant7 ((temp___expr_963 (_ BitVec 32)) (temp___is_init_959 Bool) (temp___skip_constant_960 Bool) (temp___do_toplevel_961 Bool) (temp___do_typ_inv_962 Bool)) Bool true)
(define-fun dynamic_invariant8 ((temp___expr_970 Int) (temp___is_init_966 Bool) (temp___skip_constant_967 Bool) (temp___do_toplevel_968 Bool) (temp___do_typ_inv_969 Bool)) Bool (=> (or (= temp___is_init_966 true) (<= 0 3)) (in_range10 temp___expr_970)))
(define-fun default_initial_assumption1 ((temp___expr_1049 us_rep) (temp___skip_top_level_1050 Bool)) Bool (= (attr__tag temp___expr_1049) us_tag))
(define-fun dynamic_invariant9 ((temp___expr_1442 Int) (temp___is_init_1438 Bool) (temp___skip_constant_1439 Bool) (temp___do_toplevel_1440 Bool) (temp___do_typ_inv_1441 Bool)) Bool (=> (or (= temp___is_init_1438 true) (<= 0 32)) (in_range11 temp___expr_1442)))
(define-fun dynamic_invariant10 ((temp___expr_1466 Int) (temp___is_init_1462 Bool) (temp___skip_constant_1463 Bool) (temp___do_toplevel_1464 Bool) (temp___do_typ_inv_1465 Bool)) Bool (=> (or (= temp___is_init_1462 true) (<= 0 32)) (in_range6 temp___expr_1466)))
(define-fun dynamic_invariant11 ((temp___expr_1473 Int) (temp___is_init_1469 Bool) (temp___skip_constant_1470 Bool) (temp___do_toplevel_1471 Bool) (temp___do_typ_inv_1472 Bool)) Bool (=> (or (= temp___is_init_1469 true) (<= 1 32)) (in_range7 temp___expr_1473)))
(define-fun dynamic_invariant12 ((temp___expr_1490 Int) (temp___is_init_1486 Bool) (temp___skip_constant_1487 Bool) (temp___do_toplevel_1488 Bool) (temp___do_typ_inv_1489 Bool)) Bool (=> (or (= temp___is_init_1486 true) (<= 1 32)) (in_range8 temp___expr_1490)))
(define-fun dynamic_invariant13 ((temp___expr_1507 Int) (temp___is_init_1503 Bool) (temp___skip_constant_1504 Bool) (temp___do_toplevel_1505 Bool) (temp___do_typ_inv_1506 Bool)) Bool (=> (or (= temp___is_init_1503 true) (<= 1 32)) (in_range9 temp___expr_1507)))
(declare-const dstbytes Int)
(declare-const current_name_length Int)
(declare-const blockoffset Int)
(declare-const i Int)
(declare-const block Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const temp___5868 (Array Int byte))
(declare-const temp___5867 Int)
(declare-const o2 Int)
(declare-const o3 (_ BitVec 8))
(declare-const o4 byte)
(declare-const o5 Int)
(declare-const o6 (Array Int byte))
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 byte)
(declare-const o10 Int)
(declare-const o11 (Array Int byte))
(declare-const o12 byte)
(declare-const o13 Int)
(declare-const o14 (Array Int byte))
(declare-const bytes (Array Int byte))
(declare-const result Int)
(declare-const current_name_length1 Int)
(declare-const result1 Int)
(declare-const i1 Int)
(declare-const bytes1 (Array Int byte))
(declare-const i2 Int)
(declare-const result2 (Array Int byte))
(declare-const bytes2 (Array Int byte))
(declare-const bytes3 (Array Int byte))
(declare-const i3 Int)
(declare-const bytes4 (Array Int byte))
(declare-const i4 Int)
(declare-const bytes5 (Array Int byte))
(declare-const i5 Int)
(declare-const bytes6 (Array Int byte))
(declare-const i6 Int)
(declare-const result3 Int)
(declare-const dstbytes1 Int)
(declare-const result4 Int)
(declare-const blockoffset1 Int)
(declare-const result5 Int)
(declare-const block1 Int)
(declare-const bytes7 (Array Int byte))
(declare-const dstbytes2 Int)
(declare-const blockoffset2 Int)
(declare-const block2 Int)
(declare-const byte1 Int)
(declare-const result6 Int)
(declare-const dstbytes3 Int)
(declare-const result7 map__ref1)
(declare-const bytes8 (Array Int byte))
(declare-const result8 map__ref1)
(declare-const bytes9 (Array Int byte))
(declare-const result9 int__ref)
(declare-const byte2 Int)
(declare-const byte3 Int)
(assert (in_range4 start_byte))
(assert (=> (<= 0 8192) (in_range3 dstbytes)))
(assert (<= start_byte 6828))
(assert (=> (<= 1 129) (in_range5 current_name_length)))
(assert (=> (<= 1 8180) (in_range4 blockoffset)))
(assert (and (= o (+ start_byte 4)) (in_range4 (+ start_byte 4))))
(assert (and (= o1 (wirenamelength (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (us_split_fields3 nsec_record)))) (and (in_range5 o1) (or (= o1 129) (and (= (to_rep (select (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (us_split_fields3 nsec_record)) o1)) 0) (forall ((q Int)) (=> (and (<= 1 q) (<= q (- o1 1))) (not (= (to_rep (select (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (us_split_fields3 nsec_record)) q)) 0)))))))))
(assert (= (mk_int__ref result) (mk_int__ref current_name_length)))
(assert (= current_name_length1 o1))
(assert (= current_name_length1 r15b))
(assert (in_range5 r15b))
(assert (= (mk_int__ref result1) (mk_int__ref i)))
(assert (= i1 1))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= temp___5868 bytes)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= temp___5867 i1)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (and (and (and (and (and (<= start_byte (- 8174 current_name_length1)) (<= 1 i2)) (<= i2 129)) (<= 1 current_name_length1)) (<= current_name_length1 129)) (forall ((j Int)) (=> (and (<= 1 j) (<= j 129)) (and (<= 0 (to_rep (select (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (us_split_fields3 nsec_record)) j))) (<= (to_rep (select (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (us_split_fields3 nsec_record)) j)) 255)))))))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (and (=> (<= 1 r15b) (dynamic_property 1 r15b i2)) (and (<= 1 i2) (<= i2 r15b)))))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (and (= o2 (to_rep (select (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (us_split_fields3 nsec_record)) i2))) (uint_in_range (to_rep (select (rec__rr_type__nsec_record_type__nsecrecordtype__nextdomainname (us_split_fields3 nsec_record)) i2))))))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= o3 ((_ int2bv 8) o2))))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= (to_rep1 o4) o3)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (and (<= 1 (+ (- (+ start_byte 6) 1) i2)) (<= (+ (- (+ start_byte 6) 1) i2) 8180))))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= o5 (+ (- (+ start_byte 6) 1) i2))))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= o6 (store bytes1 o5 o4))))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= bytes1 result2)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= bytes2 o6)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= i2 r15b)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= i2 i3)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= bytes2 bytes3)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= i4 i2)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= bytes4 bytes2)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= (mk_int__ref i5) (mk_int__ref i3))))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= (mk_map__ref1 bytes5) (mk_map__ref1 bytes3))))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= i6 i4)))
(assert (=> (and (<= 1 i1) (<= i1 r15b)) (= bytes6 bytes4)))
(assert (=> (not (and (<= 1 i1) (<= i1 r15b))) (= i1 i5)))
(assert (=> (not (and (<= 1 i1) (<= i1 r15b))) (= bytes bytes5)))
(assert (=> (not (and (<= 1 i1) (<= i1 r15b))) (= i6 i1)))
(assert (=> (not (and (<= 1 i1) (<= i1 r15b))) (= bytes6 bytes)))
(assert (= (mk_int__ref result3) (mk_int__ref dstbytes)))
(assert (= dstbytes1 0))
(assert (and (= o7 (+ (- (+ start_byte 6) 1) current_name_length1)) (in_range4 (+ (- (+ start_byte 6) 1) current_name_length1))))
(assert (= (mk_int__ref result4) (mk_int__ref blockoffset)))
(assert (= blockoffset1 o7))
(assert (= (mk_int__ref result5) (mk_int__ref block)))
(assert (= block1 1))
(assert (<= 1 block1))
(assert (<= block1 (to_rep3 (rec__rr_type__nsec_record_type__nsecrecordtype__numberofblocks (us_split_fields3 nsec_record)))))
(assert (and (and (and (and (and (and (and (<= start_byte (- 8174 current_name_length1)) (<= 1 current_name_length1)) (<= current_name_length1 129)) (<= 1 blockoffset2)) (<= blockoffset2 (+ (+ (- (+ start_byte 6) 1) current_name_length1) (* (- block2 1) 34)))) (<= dstbytes2 (* (- block2 1) 32))) (<= 1 (to_rep4 (select (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 nsec_record)) block2)))) (<= (to_rep4 (select (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 nsec_record)) block2)) 32)))
(assert (and (and (and (=> (<= 0 8192) (in_range3 dstbytes2)) (=> (<= 1 (to_rep3 (rec__rr_type__nsec_record_type__nsecrecordtype__numberofblocks (us_split_fields3 nsec_record)))) (dynamic_property1 1 (to_rep3 (rec__rr_type__nsec_record_type__nsecrecordtype__numberofblocks (us_split_fields3 nsec_record))) block2))) (=> (<= 1 8180) (in_range4 blockoffset2))) (and (<= 1 block2) (<= block2 (to_rep3 (rec__rr_type__nsec_record_type__nsecrecordtype__numberofblocks (us_split_fields3 nsec_record)))))))
(assert (and (= o8 (+ dstbytes2 (to_rep4 (select (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 nsec_record)) block2)))) (in_range3 (+ dstbytes2 (to_rep4 (select (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 nsec_record)) block2))))))
(assert (= dstbytes2 result6))
(assert (= dstbytes3 o8))
(assert (= (to_rep1 o9) (to_rep1 (select (rec__rr_type__nsec_record_type__nsecrecordtype__blocknumbers (us_split_fields3 nsec_record)) block2))))
(assert (and (<= 1 (+ blockoffset2 1)) (<= (+ blockoffset2 1) 8180)))
(assert (= o10 (+ blockoffset2 1)))
(assert (= o11 (store bytes7 o10 o9)))
(assert (= result7 (mk_map__ref1 bytes7)))
(assert (= bytes8 o11))
(assert (= (to_rep1 o12) ((_ int2bv 8) (to_rep4 (select (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 nsec_record)) block2)))))
(assert (and (<= 1 (+ blockoffset2 2)) (<= (+ blockoffset2 2) 8180)))
(assert (= o13 (+ blockoffset2 2)))
(assert (= o14 (store bytes8 o13 o12)))
(assert (= result8 (mk_map__ref1 bytes8)))
(assert (= bytes9 o14))
(assert (= result9 (mk_int__ref byte1)))
(assert (= byte2 1))
(assert (<= 1 byte2))
(assert (<= byte2 (to_rep4 (select (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 nsec_record)) block2))))
(assert (and (and (and (and (and (and (and (<= start_byte (- 8174 current_name_length1)) (<= 1 current_name_length1)) (<= current_name_length1 129)) (<= 1 blockoffset2)) (<= blockoffset2 (+ (+ (- (+ start_byte 6) 1) current_name_length1) (* (- block2 1) 34)))) (<= dstbytes3 (* block2 32))) (<= 1 byte3)) (<= byte3 32)))
(assert (and (=> (<= 1 (to_rep4 (select (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 nsec_record)) block2))) (dynamic_property2 1 (to_rep4 (select (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 nsec_record)) block2)) byte3)) (and (<= 1 byte3) (<= byte3 (to_rep4 (select (rec__rr_type__nsec_record_type__nsecrecordtype__blocklengths (us_split_fields3 nsec_record)) block2))))))
(assert (not (in_range1 (* block2 32))))
(check-sat)
(exit)
