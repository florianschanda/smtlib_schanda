(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 32) Int) Bool)
(declare-fun lsr ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun asr ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun lsl ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_right1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_left1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32)) (bv2nat x) (- (- 4294967296 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 32)) (i Int)) (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv x ((_ int2bv 32) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 32))))))
(declare-fun power ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun bv_min ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort statust 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (statust statust) Bool)
(declare-const dummy4 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_237 Int) (temp___is_init_233 Bool) (temp___skip_constant_234 Bool) (temp___do_toplevel_235 Bool) (temp___do_typ_inv_236 Bool)) Bool (=> (or (= temp___is_init_233 true) (<= 0 1)) (in_range4 temp___expr_237)))
(declare-sort unsigned32t 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (unsigned32t unsigned32t) Bool)
(declare-const dummy5 unsigned32t)
(declare-datatypes () ((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t (unsigned32t__content a))
(declare-fun to_rep2 (unsigned32t) Int)
(declare-fun of_rep2 (Int) unsigned32t)
(assert (forall ((x unsigned32t)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x unsigned32t)) (! (in_range5 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq6 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((stringf1l1000__ref (mk_stringf1l1000__ref (stringf1l1000__content us_t1)))))
(define-fun stringf1l1000__ref___projection ((a stringf1l1000__ref)) us_t1 (stringf1l1000__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((stringf1__ref (mk_stringf1__ref (stringf1__content us_t2)))))
(define-fun stringf1__ref___projection ((a stringf1__ref)) us_t2 (stringf1__content a))
(define-fun dynamic_invariant1 ((temp___expr_387 us_t1) (temp___is_init_383 Bool) (temp___skip_constant_384 Bool) (temp___do_toplevel_385 Bool) (temp___do_typ_inv_386 Bool)) Bool (and (=> (not (= temp___skip_constant_384 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_387) (last3 temp___expr_387))) (=> (= temp___do_toplevel_385 true) (=> (= temp___is_init_383 true) (and (let ((temp___389 (of_array2 (to_array1 temp___expr_387) (first3 temp___expr_387) (last3 temp___expr_387)))) (and (= (first5 temp___389) 1) (<= 0 (last5 temp___389)))) (<= (last3 temp___expr_387) 1000))))))
(define-fun dynamic_predicate ((temp___391 us_t1)) Bool (and (let ((temp___393 (of_array2 (to_array1 temp___391) (first3 temp___391) (last3 temp___391)))) (and (= (first5 temp___393) 1) (<= 0 (last5 temp___393)))) (<= (last3 temp___391) 1000)))
(declare-sort descriptioni 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 150)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (descriptioni descriptioni) Bool)
(declare-const dummy8 descriptioni)
(declare-datatypes () ((descriptioni__ref (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni (descriptioni__content a))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun temp___String_Literal_158 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_158 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_158 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_158 us_void_param)))))
(declare-sort namecountt 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (namecountt namecountt) Bool)
(declare-const dummy9 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(declare-fun to_rep3 (namecountt) Int)
(declare-fun of_rep3 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x namecountt)) (! (in_range7 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-const dummy10 (Array Int character))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int character)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq10 ((Array Int character) (Array Int character)) Bool)
(declare-sort issueridt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq11 (issueridt issueridt) Bool)
(declare-const dummy11 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(declare-fun to_rep4 (issueridt) Int)
(declare-fun of_rep4 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x issueridt)) (! (in_range8 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___4__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq4 ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep4 (rec__cryptotypes__issuert__id (us_split_fields1 a))) (to_rep4 (rec__cryptotypes__issuert__id (us_split_fields1 b)))) (= (to_rep3 (rec__cryptotypes__issuert__namelength (us_split_fields1 a))) (to_rep3 (rec__cryptotypes__issuert__namelength (us_split_fields1 b))))) (= (bool_eq (rec__cryptotypes__issuert__name (us_split_fields1 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields1 b)) 1 40) true)) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep)) (<= 0 (object__alignment4 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq12 (us_rep us_rep) Bool)
(declare-const dummy12 us_rep)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep (issuert__content a))
(declare-sort keyidt 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq13 (keyidt keyidt) Bool)
(declare-const dummy13 keyidt)
(declare-datatypes () ((keyidt__ref (mk_keyidt__ref (keyidt__content keyidt)))))
(define-fun keyidt__ref___projection ((a keyidt__ref)) keyidt (keyidt__content a))
(declare-fun to_rep5 (keyidt) Int)
(declare-fun of_rep5 (Int) keyidt)
(assert (forall ((x keyidt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x keyidt)) (! (in_range9 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort keylengtht 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq14 (keylengtht keylengtht) Bool)
(declare-const dummy14 keylengtht)
(declare-datatypes () ((keylengtht__ref (mk_keylengtht__ref (keylengtht__content keylengtht)))))
(define-fun keylengtht__ref___projection ((a keylengtht__ref)) keylengtht (keylengtht__content a))
(declare-fun to_rep6 (keylengtht) Int)
(declare-fun of_rep6 (Int) keylengtht)
(assert (forall ((x keylengtht)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x keylengtht)) (! (in_range10 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-sort algorithmt 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq15 (algorithmt algorithmt) Bool)
(declare-const dummy15 algorithmt)
(declare-datatypes () ((algorithmt__ref (mk_algorithmt__ref (algorithmt__content algorithmt)))))
(define-fun algorithmt__ref___projection ((a algorithmt__ref)) algorithmt (algorithmt__content a))
(declare-fun to_rep7 (algorithmt) Int)
(declare-fun of_rep7 (Int) algorithmt)
(assert (forall ((x algorithmt)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x algorithmt)) (! (in_range11 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__cryptotypes__keypartt__algorithmid algorithmt) (rec__cryptotypes__keypartt__keyid keyidt) (rec__cryptotypes__keypartt__keylength keylengtht)))))
(define-fun us_split_fields_AlgorithmID__projection ((a us_split_fields2)) algorithmt (rec__cryptotypes__keypartt__algorithmid a))
(define-fun us_split_fields_KeyID__projection ((a us_split_fields2)) keyidt (rec__cryptotypes__keypartt__keyid a))
(define-fun us_split_fields_KeyLength__projection ((a us_split_fields2)) keylengtht (rec__cryptotypes__keypartt__keylength a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___5__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq5 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (= (to_rep7 (rec__cryptotypes__keypartt__algorithmid (us_split_fields3 a))) (to_rep7 (rec__cryptotypes__keypartt__algorithmid (us_split_fields3 b)))) (= (to_rep5 (rec__cryptotypes__keypartt__keyid (us_split_fields3 a))) (to_rep5 (rec__cryptotypes__keypartt__keyid (us_split_fields3 b))))) (= (to_rep6 (rec__cryptotypes__keypartt__keylength (us_split_fields3 a))) (to_rep6 (rec__cryptotypes__keypartt__keylength (us_split_fields3 b))))) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep1) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep1) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep1)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment5 a))))
(declare-const cryptotypes__keypartt__algorithmid__first__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__last__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__position Int)
(assert (<= 0 cryptotypes__keypartt__algorithmid__first__bit))
(assert (< cryptotypes__keypartt__algorithmid__first__bit cryptotypes__keypartt__algorithmid__last__bit))
(assert (<= 0 cryptotypes__keypartt__algorithmid__position))
(declare-const cryptotypes__keypartt__keyid__first__bit Int)
(declare-const cryptotypes__keypartt__keyid__last__bit Int)
(declare-const cryptotypes__keypartt__keyid__position Int)
(assert (<= 0 cryptotypes__keypartt__keyid__first__bit))
(assert (< cryptotypes__keypartt__keyid__first__bit cryptotypes__keypartt__keyid__last__bit))
(assert (<= 0 cryptotypes__keypartt__keyid__position))
(declare-const cryptotypes__keypartt__keylength__first__bit Int)
(declare-const cryptotypes__keypartt__keylength__last__bit Int)
(declare-const cryptotypes__keypartt__keylength__position Int)
(assert (<= 0 cryptotypes__keypartt__keylength__first__bit))
(assert (< cryptotypes__keypartt__keylength__first__bit cryptotypes__keypartt__keylength__last__bit))
(assert (<= 0 cryptotypes__keypartt__keylength__position))
(declare-fun user_eq16 (us_rep1 us_rep1) Bool)
(declare-const dummy16 us_rep1)
(declare-datatypes () ((keypartt__ref (mk_keypartt__ref (keypartt__content us_rep1)))))
(define-fun keypartt__ref___projection ((a keypartt__ref)) us_rep1 (keypartt__content a))
(declare-sort logfileindext 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq17 (logfileindext logfileindext) Bool)
(declare-const dummy17 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep8 (logfileindext) Int)
(declare-fun of_rep8 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x logfileindext)) (! (in_range12 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq18 (logentrycountt logentrycountt) Bool)
(declare-const dummy18 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep9 (logentrycountt) Int)
(declare-fun of_rep9 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x logentrycountt)) (! (in_range13 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-sort logfilecountt 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq19 (logfilecountt logfilecountt) Bool)
(declare-const dummy19 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep10 (logfilecountt) Int)
(declare-fun of_rep10 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x logfilecountt)) (! (in_range14 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first6 Int)) (! (= (slide1 a first6 first6) a) :pattern ((slide1 a first6 first6))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq6 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (to_rep8 (select a temp___idx_172)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_172))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (to_rep8 (select a temp___idx_172)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_172)))))))))))
(declare-const dummy20 (Array Int logfileindext))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int logfileindext)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int logfileindext)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment6 a))))
(declare-fun user_eq20 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields4)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields4)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___8__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq7 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (bool_eq6 (rec__auditlog__logfilelistt__list (us_split_fields5 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields5 b)) 1 17) true) (= (to_rep8 (rec__auditlog__logfilelistt__head (us_split_fields5 a))) (to_rep8 (rec__auditlog__logfilelistt__head (us_split_fields5 b))))) (= (to_rep8 (rec__auditlog__logfilelistt__lasti (us_split_fields5 a))) (to_rep8 (rec__auditlog__logfilelistt__lasti (us_split_fields5 b))))) (= (to_rep10 (rec__auditlog__logfilelistt__length (us_split_fields5 a))) (to_rep10 (rec__auditlog__logfilelistt__length (us_split_fields5 b))))) true false))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep2) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep2) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep2)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment7 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq21 (us_rep2 us_rep2) Bool)
(declare-const dummy21 us_rep2)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep2)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep2 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq22 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy22 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep11 (fileentrycountt) Int)
(declare-fun of_rep11 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep11 (to_rep11 x)) x) :pattern ((to_rep11 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range15 (to_rep11 x)) :pattern ((to_rep11 x)))))
(assert (forall ((x Int)) (! (=> (in_range15 x) (= (to_rep11 (of_rep11 x)) x)) :pattern ((to_rep11 (of_rep11 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first6 Int)) (! (= (slide2 a first6 first6) a) :pattern ((slide2 a first6 first6))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq8 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep11 (select a temp___idx_173)) (to_rep11 (select b (+ (- b__first a__first) temp___idx_173))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep11 (select a temp___idx_173)) (to_rep11 (select b (+ (- b__first a__first) temp___idx_173)))))))))))
(declare-const dummy23 (Array Int fileentrycountt))
(declare-const value__size8 Int)
(declare-fun object__size8 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size8))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size8 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment8 a))))
(declare-fun user_eq23 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep2) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields6)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields6)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields6)) us_rep2 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields6)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___9__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq9 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (and (= (to_rep8 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 a))) (to_rep8 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 b)))) (= (to_rep9 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 a))) (to_rep9 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 b))))) (= (bool_eq7 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 b))) true)) (= (bool_eq8 (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 b)) 1 17) true)) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep3) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep3) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep3)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment9 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq24 (us_rep3 us_rep3) Bool)
(declare-const dummy24 us_rep3)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep3)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep3 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep2 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep2 (Array Int fileentrycountt)) Bool)
(declare-fun temp___1282 (Int) (Array Int logfileindext))
(declare-fun temp___1286 (Int) (Array Int fileentrycountt))
(define-fun dynamic_invariant2 ((temp___expr_1276 us_rep3) (temp___is_init_1272 Bool) (temp___skip_constant_1273 Bool) (temp___do_toplevel_1274 Bool) (temp___do_typ_inv_1275 Bool)) Bool (=> (= temp___do_typ_inv_1275 true) (= (valid_numberlogentries (to_rep8 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 temp___expr_1276))) (to_rep9 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 temp___expr_1276))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 temp___expr_1276)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 temp___expr_1276))) true)))
(define-fun default_initial_assumption ((temp___expr_1280 us_rep3) (temp___skip_top_level_1281 Bool)) Bool (and (and (and (= (to_rep8 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 temp___expr_1280))) 1) (= (to_rep9 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 temp___expr_1280))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 temp___expr_1280)) (mk___rep2 (mk___split_fields2 (temp___1282 1) (of_rep8 1) (of_rep8 1) (of_rep10 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 temp___expr_1280)) (temp___1286 0))))
(define-fun type_invariant ((temp___1290 us_rep3)) Bool (= (valid_numberlogentries (to_rep8 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 temp___1290))) (to_rep9 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 temp___1290))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 temp___1290)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 temp___1290))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep4 0)
(declare-fun bool_eq10 (us_rep4 us_rep4) Bool)
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep4) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep4) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep4)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment10 a))))
(declare-fun user_eq25 (us_rep4 us_rep4) Bool)
(declare-const dummy25 us_rep4)
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 us_rep4)))))
(define-fun t__ref___projection ((a t__ref1)) us_rep4 (t__content1 a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep4))))))
(declare-fun slide3 ((Array Int us_rep4) Int Int) (Array Int us_rep4))
(assert (forall ((a (Array Int us_rep4))) (forall ((first6 Int)) (! (= (slide3 a first6 first6) a) :pattern ((slide3 a first6 first6))))))
(assert (forall ((a (Array Int us_rep4))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq11 ((a (Array Int us_rep4)) (a__first Int) (a__last Int) (b (Array Int us_rep4)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (bool_eq10 (select a temp___idx_174) (select b (+ (- b__first a__first) temp___idx_174))) true)))) true false))
(assert (forall ((a (Array Int us_rep4)) (b (Array Int us_rep4))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq11 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (bool_eq10 (select a temp___idx_174) (select b (+ (- b__first a__first) temp___idx_174))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort filestatust 0)
(define-fun in_range16 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq26 (filestatust filestatust) Bool)
(declare-const dummy26 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep12 (filestatust) Int)
(declare-fun of_rep12 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep12 (to_rep12 x)) x) :pattern ((to_rep12 x)))))
(assert (forall ((x filestatust)) (! (in_range16 (to_rep12 x)) :pattern ((to_rep12 x)))))
(assert (forall ((x Int)) (! (=> (in_range16 x) (= (to_rep12 (of_rep12 x)) x)) :pattern ((to_rep12 (of_rep12 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first6 Int)) (! (= (slide4 a first6 first6) a) :pattern ((slide4 a first6 first6))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(define-fun bool_eq12 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep12 (select a temp___idx_175)) (to_rep12 (select b (+ (- b__first a__first) temp___idx_175))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq12 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep12 (select a temp___idx_175)) (to_rep12 (select b (+ (- b__first a__first) temp___idx_175)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__keystore__optionalprivatekeyt__ispresent Bool) (rec__keystore__optionalprivatekeyt__owner us_rep)))))
(define-fun us_split_fields_IsPresent__projection ((a us_split_fields8)) Bool (rec__keystore__optionalprivatekeyt__ispresent a))
(define-fun us_split_fields_Owner__projection ((a us_split_fields8)) us_rep (rec__keystore__optionalprivatekeyt__owner a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___12__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep5 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___13__projection ((a us_rep5)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq13 ((a us_rep5) (b us_rep5)) Bool (ite (and (= (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 a)) (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 b))) (= (bool_eq4 (rec__keystore__optionalprivatekeyt__owner (us_split_fields9 a)) (rec__keystore__optionalprivatekeyt__owner (us_split_fields9 b))) true)) true false))
(declare-const value__size11 Int)
(declare-fun object__size11 (us_rep5) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 (us_rep5) Int)
(assert (<= 0 value__size11))
(assert (forall ((a us_rep5)) (<= 0 (object__size11 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment11 a))))
(declare-const keystore__optionalprivatekeyt__ispresent__first__bit Int)
(declare-const keystore__optionalprivatekeyt__ispresent__last__bit Int)
(declare-const keystore__optionalprivatekeyt__ispresent__position Int)
(assert (<= 0 keystore__optionalprivatekeyt__ispresent__first__bit))
(assert (< keystore__optionalprivatekeyt__ispresent__first__bit keystore__optionalprivatekeyt__ispresent__last__bit))
(assert (<= 0 keystore__optionalprivatekeyt__ispresent__position))
(declare-const keystore__optionalprivatekeyt__owner__first__bit Int)
(declare-const keystore__optionalprivatekeyt__owner__last__bit Int)
(declare-const keystore__optionalprivatekeyt__owner__position Int)
(assert (<= 0 keystore__optionalprivatekeyt__owner__first__bit))
(assert (< keystore__optionalprivatekeyt__owner__first__bit keystore__optionalprivatekeyt__owner__last__bit))
(assert (<= 0 keystore__optionalprivatekeyt__owner__position))
(declare-fun user_eq27 (us_rep5 us_rep5) Bool)
(declare-const dummy27 us_rep5)
(declare-datatypes () ((optionalprivatekeyt__ref (mk_optionalprivatekeyt__ref (optionalprivatekeyt__content us_rep5)))))
(define-fun optionalprivatekeyt__ref___projection ((a optionalprivatekeyt__ref)) us_rep5 (optionalprivatekeyt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun privatekeypresent (us_split_fields8) Bool)
(declare-fun privatekeypresent__function_guard (Bool us_split_fields8) Bool)
(assert true)
(assert (forall ((keystore__thistisinfo__fields us_split_fields8)) (! (= (= (privatekeypresent keystore__thistisinfo__fields) true) (= (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 (mk___rep4 keystore__thistisinfo__fields))) true)) :pattern ((privatekeypresent keystore__thistisinfo__fields)))))
(declare-const theowner us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const thekey us_rep1)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const ispublic Bool)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-sort maskt 0)
(define-fun in_range17 ((x (_ BitVec 32))) Bool (and (bvule #x00000000 x) (bvule x #x0000000F)))
(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 15)))
(declare-fun attr__ATTRIBUTE_IMAGE17 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) (_ BitVec 32))
(declare-fun user_eq28 (maskt maskt) Bool)
(declare-const dummy28 maskt)
(declare-datatypes () ((maskt__ref (mk_maskt__ref (maskt__content maskt)))))
(define-fun maskt__ref___projection ((a maskt__ref)) maskt (maskt__content a))
(declare-fun to_rep13 (maskt) (_ BitVec 32))
(declare-fun of_rep13 ((_ BitVec 32)) maskt)
(assert (forall ((x maskt)) (! (= (of_rep13 (to_rep13 x)) x) :pattern ((to_rep13 x)))))
(assert (forall ((x maskt)) (! (in_range17 (to_rep13 x)) :pattern ((to_rep13 x)))))
(assert (forall ((x (_ BitVec 32))) (! (let ((y (bvurem x #x00000010))) (=> (in_range17 y) (= (to_rep13 (of_rep13 x)) y))) :pattern ((to_rep13 (of_rep13 x))))))
(define-fun to_int2 ((x maskt)) Int (bv2nat (to_rep13 x)))
(assert (forall ((x maskt)) (! (in_range_int (to_int2 x)) :pattern ((to_int2 x)))))
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__keystore__interfac__keytemplatet__attrmask maskt) (rec__keystore__interfac__keytemplatet__owner us_rep) (rec__keystore__interfac__keytemplatet__keyid unsigned32t) (rec__keystore__interfac__keytemplatet__keylength unsigned32t) (rec__keystore__interfac__keytemplatet__ispublic Bool)))))
(define-fun us_split_fields_AttrMask__projection ((a us_split_fields10)) maskt (rec__keystore__interfac__keytemplatet__attrmask a))
(define-fun us_split_fields_Owner__2__projection ((a us_split_fields10)) us_rep (rec__keystore__interfac__keytemplatet__owner a))
(define-fun us_split_fields_KeyID__2__projection ((a us_split_fields10)) unsigned32t (rec__keystore__interfac__keytemplatet__keyid a))
(define-fun us_split_fields_KeyLength__2__projection ((a us_split_fields10)) unsigned32t (rec__keystore__interfac__keytemplatet__keylength a))
(define-fun us_split_fields_IsPublic__projection ((a us_split_fields10)) Bool (rec__keystore__interfac__keytemplatet__ispublic a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___13__projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep6 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___14__projection ((a us_rep6)) us_split_fields10 (us_split_fields11 a))
(define-fun bool_eq14 ((a us_rep6) (b us_rep6)) Bool (ite (and (and (and (and (= (to_rep13 (rec__keystore__interfac__keytemplatet__attrmask (us_split_fields11 a))) (to_rep13 (rec__keystore__interfac__keytemplatet__attrmask (us_split_fields11 b)))) (= (bool_eq4 (rec__keystore__interfac__keytemplatet__owner (us_split_fields11 a)) (rec__keystore__interfac__keytemplatet__owner (us_split_fields11 b))) true)) (= (to_rep2 (rec__keystore__interfac__keytemplatet__keyid (us_split_fields11 a))) (to_rep2 (rec__keystore__interfac__keytemplatet__keyid (us_split_fields11 b))))) (= (to_rep2 (rec__keystore__interfac__keytemplatet__keylength (us_split_fields11 a))) (to_rep2 (rec__keystore__interfac__keytemplatet__keylength (us_split_fields11 b))))) (= (rec__keystore__interfac__keytemplatet__ispublic (us_split_fields11 a)) (rec__keystore__interfac__keytemplatet__ispublic (us_split_fields11 b)))) true false))
(declare-const value__size12 Int)
(declare-fun object__size12 (us_rep6) Int)
(declare-const value__alignment12 Int)
(declare-fun object__alignment12 (us_rep6) Int)
(assert (<= 0 value__size12))
(assert (forall ((a us_rep6)) (<= 0 (object__size12 a))))
(assert (<= 0 value__alignment12))
(assert (forall ((a us_rep6)) (<= 0 (object__alignment12 a))))
(declare-const keystore__interfac__keytemplatet__attrmask__first__bit Int)
(declare-const keystore__interfac__keytemplatet__attrmask__last__bit Int)
(declare-const keystore__interfac__keytemplatet__attrmask__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__attrmask__first__bit))
(assert (< keystore__interfac__keytemplatet__attrmask__first__bit keystore__interfac__keytemplatet__attrmask__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__attrmask__position))
(declare-const keystore__interfac__keytemplatet__owner__first__bit Int)
(declare-const keystore__interfac__keytemplatet__owner__last__bit Int)
(declare-const keystore__interfac__keytemplatet__owner__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__owner__first__bit))
(assert (< keystore__interfac__keytemplatet__owner__first__bit keystore__interfac__keytemplatet__owner__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__owner__position))
(declare-const keystore__interfac__keytemplatet__keyid__first__bit Int)
(declare-const keystore__interfac__keytemplatet__keyid__last__bit Int)
(declare-const keystore__interfac__keytemplatet__keyid__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__keyid__first__bit))
(assert (< keystore__interfac__keytemplatet__keyid__first__bit keystore__interfac__keytemplatet__keyid__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__keyid__position))
(declare-const keystore__interfac__keytemplatet__keylength__first__bit Int)
(declare-const keystore__interfac__keytemplatet__keylength__last__bit Int)
(declare-const keystore__interfac__keytemplatet__keylength__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__keylength__first__bit))
(assert (< keystore__interfac__keytemplatet__keylength__first__bit keystore__interfac__keytemplatet__keylength__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__keylength__position))
(declare-const keystore__interfac__keytemplatet__ispublic__first__bit Int)
(declare-const keystore__interfac__keytemplatet__ispublic__last__bit Int)
(declare-const keystore__interfac__keytemplatet__ispublic__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__ispublic__first__bit))
(assert (< keystore__interfac__keytemplatet__ispublic__first__bit keystore__interfac__keytemplatet__ispublic__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__ispublic__position))
(declare-fun user_eq29 (us_rep6 us_rep6) Bool)
(declare-const dummy29 us_rep6)
(declare-datatypes () ((keytemplatet__ref (mk_keytemplatet__ref (keytemplatet__content us_rep6)))))
(define-fun keytemplatet__ref___projection ((a keytemplatet__ref)) us_rep6 (keytemplatet__content a))
(declare-sort returnvaluet 0)
(define-fun in_range18 ((x Int)) Bool (and (<= 0 x) (<= x 28)))
(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)
(declare-fun user_eq30 (returnvaluet returnvaluet) Bool)
(declare-const dummy30 returnvaluet)
(declare-datatypes () ((returnvaluet__ref (mk_returnvaluet__ref (returnvaluet__content returnvaluet)))))
(define-fun returnvaluet__ref___projection ((a returnvaluet__ref)) returnvaluet (returnvaluet__content a))
(define-fun dynamic_invariant3 ((temp___expr_1688 Int) (temp___is_init_1684 Bool) (temp___skip_constant_1685 Bool) (temp___do_toplevel_1686 Bool) (temp___do_typ_inv_1687 Bool)) Bool (=> (or (= temp___is_init_1684 true) (<= 0 28)) (in_range18 temp___expr_1688)))
(declare-datatypes () ((map__ref5 (mk_map__ref5 (map__content5 (Array Int Bool))))))
(declare-fun slide5 ((Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((a (Array Int Bool))) (forall ((first6 Int)) (! (= (slide5 a first6 first6) a) :pattern ((slide5 a first6 first6))))))
(assert (forall ((a (Array Int Bool))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide5 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide5 a old_first new_first) i))))))))
(define-fun bool_eq15 ((a (Array Int Bool)) (a__first Int) (a__last Int) (b (Array Int Bool)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_194 Int)) (=> (and (<= a__first temp___idx_194) (<= temp___idx_194 a__last)) (= (select a temp___idx_194) (select b (+ (- b__first a__first) temp___idx_194)))))) true false))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq15 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_194 Int)) (=> (and (<= a__first temp___idx_194) (<= temp___idx_194 a__last)) (= (select a temp___idx_194) (select b (+ (- b__first a__first) temp___idx_194))))))))))
(declare-const issystem (Array Int Bool))
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-fun keystore__issystem__aggregate_def (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool) (Array Int Bool))
(declare-fun convertretvaltotext (Int us_t1) (Array Int character))
(declare-fun convertretvaltotext__function_guard ((Array Int character) Int us_t1) Bool)
(assert true)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-fun temp___String_Literal_1863 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1863 us_void_param) 1)) 65) (= (to_rep (select (temp___String_Literal_1863 us_void_param) 2)) 100)) (= (to_rep (select (temp___String_Literal_1863 us_void_param) 3)) 100)) (= (to_rep (select (temp___String_Literal_1863 us_void_param) 4)) 75)) (= (to_rep (select (temp___String_Literal_1863 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_1863 us_void_param) 6)) 121)) :pattern ((temp___String_Literal_1863 us_void_param)))))
(define-fun dynamic_invariant4 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant5 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant6 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant7 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(assert (= issystem (keystore__issystem__aggregate_def (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0))))
(assert (forall ((temp___196 Bool) (temp___197 Bool) (temp___198 Bool) (temp___199 Bool) (temp___200 Bool) (temp___201 Bool) (temp___202 Bool) (temp___203 Bool) (temp___204 Bool) (temp___205 Bool) (temp___206 Bool) (temp___207 Bool) (temp___208 Bool) (temp___209 Bool) (temp___210 Bool) (temp___211 Bool) (temp___212 Bool) (temp___213 Bool) (temp___214 Bool) (temp___215 Bool) (temp___216 Bool) (temp___217 Bool) (temp___218 Bool) (temp___219 Bool) (temp___220 Bool) (temp___221 Bool) (temp___222 Bool) (temp___223 Bool) (temp___224 Bool)) (let ((temp___195 (keystore__issystem__aggregate_def temp___196 temp___197 temp___198 temp___199 temp___200 temp___201 temp___202 temp___203 temp___204 temp___205 temp___206 temp___207 temp___208 temp___209 temp___210 temp___211 temp___212 temp___213 temp___214 temp___215 temp___216 temp___217 temp___218 temp___219 temp___220 temp___221 temp___222 temp___223 temp___224))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (select temp___195 0) temp___196) (= (select temp___195 1) temp___197)) (= (select temp___195 2) temp___198)) (= (select temp___195 3) temp___199)) (= (select temp___195 4) temp___200)) (= (select temp___195 5) temp___201)) (= (select temp___195 6) temp___202)) (= (select temp___195 7) temp___203)) (= (select temp___195 8) temp___204)) (= (select temp___195 9) temp___205)) (= (select temp___195 10) temp___206)) (= (select temp___195 11) temp___207)) (= (select temp___195 12) temp___208)) (= (select temp___195 13) temp___209)) (= (select temp___195 14) temp___210)) (= (select temp___195 15) temp___211)) (= (select temp___195 16) temp___212)) (= (select temp___195 17) temp___213)) (= (select temp___195 18) temp___214)) (= (select temp___195 19) temp___215)) (= (select temp___195 20) temp___216)) (= (select temp___195 21) temp___217)) (= (select temp___195 22) temp___218)) (= (select temp___195 23) temp___219)) (= (select temp___195 24) temp___220)) (= (select temp___195 25) temp___221)) (= (select temp___195 26) temp___222)) (= (select temp___195 27) temp___223)) (= (select temp___195 28) temp___224)))))
(define-fun dynamic_invariant8 ((temp___expr_244 Int) (temp___is_init_240 Bool) (temp___skip_constant_241 Bool) (temp___do_toplevel_242 Bool) (temp___do_typ_inv_243 Bool)) Bool (=> (or (= temp___is_init_240 true) (<= 0 4294967295)) (in_range5 temp___expr_244)))
(define-fun dynamic_invariant9 ((temp___expr_350 us_t2) (temp___is_init_346 Bool) (temp___skip_constant_347 Bool) (temp___do_toplevel_348 Bool) (temp___do_typ_inv_349 Bool)) Bool (and (=> (not (= temp___skip_constant_347 true)) (dynamic_property2 1 2147483647 (first5 temp___expr_350) (last5 temp___expr_350))) (=> (= temp___do_toplevel_348 true) (=> (= temp___is_init_346 true) (and (= (first5 temp___expr_350) 1) (<= 0 (last5 temp___expr_350)))))))
(define-fun dynamic_predicate1 ((temp___353 us_t2)) Bool (and (= (first5 temp___353) 1) (<= 0 (last5 temp___353))))
(define-fun dynamic_invariant10 ((temp___expr_997 Int) (temp___is_init_993 Bool) (temp___skip_constant_994 Bool) (temp___do_toplevel_995 Bool) (temp___do_typ_inv_996 Bool)) Bool (=> (or (= temp___is_init_993 true) (<= 0 40)) (in_range7 temp___expr_997)))
(define-fun dynamic_invariant11 ((temp___expr_1021 Int) (temp___is_init_1017 Bool) (temp___skip_constant_1018 Bool) (temp___do_toplevel_1019 Bool) (temp___do_typ_inv_1020 Bool)) Bool (=> (or (= temp___is_init_1017 true) (<= 0 4294967295)) (in_range8 temp___expr_1021)))
(define-fun dynamic_invariant12 ((temp___expr_1045 Int) (temp___is_init_1041 Bool) (temp___skip_constant_1042 Bool) (temp___do_toplevel_1043 Bool) (temp___do_typ_inv_1044 Bool)) Bool (=> (or (= temp___is_init_1041 true) (<= 0 10)) (in_range11 temp___expr_1045)))
(define-fun dynamic_invariant13 ((temp___expr_1059 Int) (temp___is_init_1055 Bool) (temp___skip_constant_1056 Bool) (temp___do_toplevel_1057 Bool) (temp___do_typ_inv_1058 Bool)) Bool (=> (or (= temp___is_init_1055 true) (<= 0 4294967295)) (in_range9 temp___expr_1059)))
(define-fun dynamic_invariant14 ((temp___expr_1066 Int) (temp___is_init_1062 Bool) (temp___skip_constant_1063 Bool) (temp___do_toplevel_1064 Bool) (temp___do_typ_inv_1065 Bool)) Bool (=> (or (= temp___is_init_1062 true) (<= 0 128)) (in_range10 temp___expr_1066)))
(define-fun dynamic_invariant15 ((temp___expr_471 Int) (temp___is_init_467 Bool) (temp___skip_constant_468 Bool) (temp___do_toplevel_469 Bool) (temp___do_typ_inv_470 Bool)) Bool (=> (or (= temp___is_init_467 true) (<= 1 150)) (in_range6 temp___expr_471)))
(assert (= nouser (temp___String_Literal_158 Tuple0)))
(define-fun dynamic_invariant16 ((temp___expr_1214 Int) (temp___is_init_1210 Bool) (temp___skip_constant_1211 Bool) (temp___do_toplevel_1212 Bool) (temp___do_typ_inv_1213 Bool)) Bool (=> (or (= temp___is_init_1210 true) (<= 0 17)) (in_range14 temp___expr_1214)))
(define-fun dynamic_invariant17 ((temp___expr_1221 Int) (temp___is_init_1217 Bool) (temp___skip_constant_1218 Bool) (temp___do_toplevel_1219 Bool) (temp___do_typ_inv_1220 Bool)) Bool (=> (or (= temp___is_init_1217 true) (<= 1 17)) (in_range12 temp___expr_1221)))
(define-fun dynamic_invariant18 ((temp___expr_1347 Int) (temp___is_init_1343 Bool) (temp___skip_constant_1344 Bool) (temp___do_toplevel_1345 Bool) (temp___do_typ_inv_1346 Bool)) Bool (=> (or (= temp___is_init_1343 true) (<= 0 2)) (in_range16 temp___expr_1347)))
(define-fun dynamic_invariant19 ((temp___expr_1228 Int) (temp___is_init_1224 Bool) (temp___skip_constant_1225 Bool) (temp___do_toplevel_1226 Bool) (temp___do_typ_inv_1227 Bool)) Bool (=> (or (= temp___is_init_1224 true) (<= 0 17408)) (in_range13 temp___expr_1228)))
(define-fun dynamic_invariant20 ((temp___expr_1259 Int) (temp___is_init_1255 Bool) (temp___skip_constant_1256 Bool) (temp___do_toplevel_1257 Bool) (temp___do_typ_inv_1258 Bool)) Bool (=> (or (= temp___is_init_1255 true) (<= 0 1024)) (in_range15 temp___expr_1259)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep2)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep10 (rec__auditlog__logfilelistt__length (us_split_fields5 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep10 (rec__auditlog__logfilelistt__length (us_split_fields5 usedlogfiles))) 1) 1024) (to_rep11 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(assert (forall ((temp___1288 Int)) (=> (dynamic_invariant20 temp___1288 true true true true) (forall ((temp___1289 Int)) (= (to_rep11 (select (temp___1286 temp___1288) temp___1289)) temp___1288)))))
(define-fun dynamic_invariant21 ((temp___expr_1622 (_ BitVec 32)) (temp___is_init_1618 Bool) (temp___skip_constant_1619 Bool) (temp___do_toplevel_1620 Bool) (temp___do_typ_inv_1621 Bool)) Bool (=> (or (= temp___is_init_1618 true) (bvule #x00000000 #x0000000F)) (in_range17 temp___expr_1622)))
(assert (forall ((temp___1284 Int)) (=> (dynamic_invariant17 temp___1284 true true true true) (forall ((temp___1285 Int)) (= (to_rep8 (select (temp___1282 temp___1284) temp___1285)) temp___1284)))))
(declare-const logfiles (Array Int us_rep4))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const auditsystemfault Bool)
(declare-const added Bool)
(declare-const thistisinfo__split_fields Bool)
(declare-const thistisinfo__split_fields1 issueridt)
(declare-const thistisinfo__split_fields2 namecountt)
(declare-const thistisinfo__split_fields3 (Array Int character))
(declare-const thekeytemplate__split_fields maskt)
(declare-const thekeytemplate__split_fields1 issueridt)
(declare-const thekeytemplate__split_fields2 namecountt)
(declare-const thekeytemplate__split_fields3 (Array Int character))
(declare-const thekeytemplate__split_fields4 unsigned32t)
(declare-const thekeytemplate__split_fields5 unsigned32t)
(declare-const thekeytemplate__split_fields6 Bool)
(declare-const retval Int)
(declare-const filestate us_private)
(declare-const state us_private)
(declare-const o unsigned32t)
(declare-const o1 unsigned32t)
(declare-const o2 maskt)
(declare-const o3 us_split_fields10)
(declare-const temp___1861 us_rep6)
(declare-const temp___1864 us_t1)
(declare-const o4 us_t1)
(declare-const o5 (Array Int character))
(declare-const o6 us_t)
(declare-const logfiles1 (Array Int us_rep4))
(declare-const logfilesstatus1 (Array Int filestatust))
(declare-const logfilestate__split_fields7 us_split_fields6)
(declare-const auditalarm1 Int)
(declare-const auditsystemfault1 Bool)
(declare-const thistisinfo__split_fields4 us_split_fields8)
(declare-const filestate1 us_private)
(declare-const state1 us_private)
(declare-const result us_split_fields__ref5)
(declare-const thekeytemplate__split_fields7 us_split_fields10)
(declare-const retval1 Int)
(declare-const store1 us_private)
(declare-const result1 bool__ref)
(declare-const added1 Bool)
(declare-const result2 us_split_fields__ref4)
(declare-const thistisinfo__split_fields5 us_split_fields8)
(declare-const logfiles2 (Array Int us_rep4))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields8 us_split_fields6)
(declare-const auditalarm2 Int)
(declare-const auditsystemfault2 Bool)
(declare-const filestate2 us_private)
(declare-const state2 us_private)
(declare-const logfiles3 map__ref3)
(declare-const logfilesstatus3 map__ref4)
(declare-const logfilestate__split_fields9 us_split_fields__ref3)
(declare-const auditalarm3 int__ref)
(declare-const auditsystemfault3 bool__ref)
(declare-const added2 bool__ref)
(declare-const thistisinfo__split_fields6 us_split_fields__ref4)
(declare-const thekeytemplate__split_fields8 us_split_fields__ref5)
(declare-const retval2 int__ref)
(declare-const filestate3 us_private__ref)
(declare-const state3 us_private__ref)
(declare-const store2 us_private__ref)
(declare-const logfiles4 (Array Int us_rep4))
(declare-const logfilesstatus4 (Array Int filestatust))
(declare-const logfilestate__split_fields10 us_split_fields6)
(declare-const auditalarm4 Int)
(declare-const auditsystemfault4 Bool)
(declare-const added3 Bool)
(declare-const thistisinfo__split_fields7 us_split_fields8)
(declare-const thekeytemplate__split_fields9 us_split_fields10)
(declare-const retval3 Int)
(declare-const filestate4 us_private)
(declare-const state4 us_private)
(declare-const store3 us_private)
(assert (= (keystore__issystem__aggregate_def (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0)) issystem))
(assert (= (temp___String_Literal_158 Tuple0) nouser))
(assert (= (valid_numberlogentries (to_rep8 logfilestate__split_fields) (to_rep9 logfilestate__split_fields1) (mk___rep2 (mk___split_fields2 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range4 auditalarm))
(assert (=> (<= 0 28) (in_range18 retval)))
(assert (= (to_rep2 o) (to_rep6 (rec__cryptotypes__keypartt__keylength (us_split_fields3 thekey)))))
(assert (= (to_rep2 o1) (to_rep5 (rec__cryptotypes__keypartt__keyid (us_split_fields3 thekey)))))
(assert (= (to_rep13 o2) #x0000000F))
(assert (= o3 (mk___split_fields5 o2 theowner o1 o ispublic)))
(assert (= temp___1861 (mk___rep5 o3)))
(assert (= result (mk___split_fields__ref5 (mk___split_fields5 thekeytemplate__split_fields (mk___rep (mk___split_fields thekeytemplate__split_fields1 thekeytemplate__split_fields2 thekeytemplate__split_fields3)) thekeytemplate__split_fields4 thekeytemplate__split_fields5 thekeytemplate__split_fields6))))
(assert (= thekeytemplate__split_fields7 (us_split_fields11 temp___1861)))
(assert (in_range18 retval1))
(assert (= result1 (mk_bool__ref added)))
(assert (= added1 (ite (= retval1 0) true false)))
(assert (=> (ite (= added1 true) (not (= ispublic true)) false) (= result2 (mk___split_fields__ref4 (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3)))))))
(assert (=> (ite (= added1 true) (not (= ispublic true)) false) (= thistisinfo__split_fields5 (mk___split_fields4 (distinct 1 0) theowner))))
(assert (=> (not (ite (= added1 true) (not (= ispublic true)) false)) (= thistisinfo__split_fields5 (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))))))
(assert (=> (not (ite (= added1 true) (not (= ispublic true)) false)) (= thistisinfo__split_fields5 thistisinfo__split_fields4)))
(assert (=> (= (select issystem retval1) true) (dynamic_property1 1 2147483647 1 6)))
(assert (=> (= (select issystem retval1) true) (= temp___1864 (mk___t1 (temp___String_Literal_1863 Tuple0) (mk1 1 6)))))
(assert (=> (= (select issystem retval1) true) (dynamic_predicate temp___1864)))
(assert (=> (= (select issystem retval1) true) (= o4 temp___1864)))
(assert (=> (= (select issystem retval1) true) (= o5 (convertretvaltotext retval1 o4))))
(assert (=> (= (select issystem retval1) true) (= o6 (mk___t o5 (mk 1 150)))))
(assert (=> (= (select issystem retval1) true) (and (in_range4 auditalarm2) (= (valid_numberlogentries (to_rep8 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields8)) (to_rep9 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields8)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields8) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields8)) true))))
(assert (=> (not (= (select issystem retval1) true)) (= state2 state)))
(assert (=> (not (= (select issystem retval1) true)) (= filestate2 filestate)))
(assert (=> (not (= (select issystem retval1) true)) (= auditsystemfault2 auditsystemfault)))
(assert (=> (not (= (select issystem retval1) true)) (= auditalarm2 auditalarm)))
(assert (=> (not (= (select issystem retval1) true)) (= logfilestate__split_fields8 (mk___split_fields3 logfilestate__split_fields logfilestate__split_fields1 (mk___rep2 (mk___split_fields2 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6))))
(assert (=> (not (= (select issystem retval1) true)) (= logfilesstatus2 logfilesstatus)))
(assert (=> (not (= (select issystem retval1) true)) (= logfiles2 logfiles)))
(assert (=> (not (= (select issystem retval1) true)) (= state2 state1)))
(assert (=> (not (= (select issystem retval1) true)) (= filestate2 filestate1)))
(assert (=> (not (= (select issystem retval1) true)) (= auditsystemfault2 auditsystemfault1)))
(assert (=> (not (= (select issystem retval1) true)) (= auditalarm2 auditalarm1)))
(assert (=> (not (= (select issystem retval1) true)) (= logfilestate__split_fields8 logfilestate__split_fields7)))
(assert (=> (not (= (select issystem retval1) true)) (= logfilesstatus2 logfilesstatus1)))
(assert (=> (not (= (select issystem retval1) true)) (= logfiles2 logfiles1)))
(assert (= store2 (mk___private__ref store1)))
(assert (= state3 (mk___private__ref state2)))
(assert (= filestate3 (mk___private__ref filestate2)))
(assert (= retval2 (mk_int__ref retval1)))
(assert (= thekeytemplate__split_fields8 (mk___split_fields__ref5 thekeytemplate__split_fields7)))
(assert (= thistisinfo__split_fields6 (mk___split_fields__ref4 thistisinfo__split_fields5)))
(assert (= added2 (mk_bool__ref added1)))
(assert (= auditsystemfault3 (mk_bool__ref auditsystemfault2)))
(assert (= auditalarm3 (mk_int__ref auditalarm2)))
(assert (= logfilestate__split_fields9 (mk___split_fields__ref3 logfilestate__split_fields8)))
(assert (= logfilesstatus3 (mk_map__ref4 logfilesstatus2)))
(assert (= logfiles3 (mk_map__ref3 logfiles2)))
(assert (= store3 store1))
(assert (= state4 state2))
(assert (= filestate4 filestate2))
(assert (= retval3 retval1))
(assert (= thekeytemplate__split_fields9 thekeytemplate__split_fields7))
(assert (= thistisinfo__split_fields7 thistisinfo__split_fields5))
(assert (= added3 added1))
(assert (= auditsystemfault4 auditsystemfault2))
(assert (= auditalarm4 auditalarm2))
(assert (= logfilestate__split_fields10 logfilestate__split_fields8))
(assert (= logfilesstatus4 logfilesstatus2))
(assert (= logfiles4 logfiles2))
(assert (not (ite (= (ite (= (ite (= (bool__content added2) true) (ite (= ispublic false) (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields6)) false) false) false) (ite (= (bool__content added2) true) (ite (= ispublic false) false (= (ite (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields6)) 1 0) (ite (privatekeypresent (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3)))) 1 0))) (= (ite (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields6)) 1 0) (ite (privatekeypresent (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3)))) 1 0))) true) true) (ite (= (ite (= (ite (= (bool__content added2) true) (ite (= ispublic false) (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields6)) false) false) true) (ite (= (bool__content added2) true) (ite (= ispublic false) false (= (ite (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields6)) 1 0) (ite (privatekeypresent (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3)))) 1 0))) (= (ite (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields6)) 1 0) (ite (privatekeypresent (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3)))) 1 0))) false) false) true true) true)))
(check-sat)
(exit)
