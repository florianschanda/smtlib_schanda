(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 32) Int) Bool)
(declare-fun lsr ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun asr ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun lsl ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_right1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_left1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32)) (bv2nat x) (- (- 4294967296 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 32)) (i Int)) (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv x ((_ int2bv 32) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 32))))))
(declare-fun power ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun bv_min ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort filestatust 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (filestatust filestatust) Bool)
(declare-const dummy4 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep2 (filestatust) Int)
(declare-fun of_rep2 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x filestatust)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int filestatust))))))
(declare-fun slide1 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep2 (select a temp___idx_175)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_175))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep2 (select a temp___idx_175)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_175)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort logfileindext 0)
(declare-fun logfileindextqtint (logfileindext) Int)
(assert (forall ((i logfileindext)) (and (<= 1 (logfileindextqtint i)) (<= (logfileindextqtint i) 17))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (logfileindext logfileindext) Bool)
(declare-const dummy5 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(define-fun to_rep3 ((x logfileindext)) Int (logfileindextqtint x))
(declare-fun of_rep3 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x logfileindext)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort logentrycountt 0)
(declare-fun logentrycounttqtint (logentrycountt) Int)
(assert (forall ((i logentrycountt)) (and (<= 0 (logentrycounttqtint i)) (<= (logentrycounttqtint i) 17408))))
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (logentrycountt logentrycountt) Bool)
(declare-const dummy6 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(define-fun to_rep4 ((x logentrycountt)) Int (logentrycounttqtint x))
(declare-fun of_rep4 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x logentrycountt)) (! (in_range6 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort logfilecountt 0)
(declare-fun logfilecounttqtint (logfilecountt) Int)
(assert (forall ((i logfilecountt)) (and (<= 0 (logfilecounttqtint i)) (<= (logfilecounttqtint i) 17))))
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (logfilecountt logfilecountt) Bool)
(declare-const dummy7 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(define-fun to_rep5 ((x logfilecountt)) Int (logfilecounttqtint x))
(declare-fun of_rep5 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x logfilecountt)) (! (in_range7 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int logfileindext))))))
(declare-fun slide2 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first2 Int)) (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq3 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (to_rep3 (select a temp___idx_172)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_172))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (to_rep3 (select a temp___idx_172)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_172)))))))))))
(declare-const dummy8 (Array Int logfileindext))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int logfileindext)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int logfileindext)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq8 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq4 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (bool_eq3 (rec__auditlog__logfilelistt__list (us_split_fields1 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields1 b)) 1 17) true) (= (to_rep3 (rec__auditlog__logfilelistt__head (us_split_fields1 a))) (to_rep3 (rec__auditlog__logfilelistt__head (us_split_fields1 b))))) (= (to_rep3 (rec__auditlog__logfilelistt__lasti (us_split_fields1 a))) (to_rep3 (rec__auditlog__logfilelistt__lasti (us_split_fields1 b))))) (= (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 a))) (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq9 (us_rep us_rep) Bool)
(declare-const dummy9 us_rep)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(declare-fun fileentrycounttqtint (fileentrycountt) Int)
(assert (forall ((i fileentrycountt)) (and (<= 0 (fileentrycounttqtint i)) (<= (fileentrycounttqtint i) 1024))))
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy10 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(define-fun to_rep6 ((x fileentrycountt)) Int (fileentrycounttqtint x))
(declare-fun of_rep6 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range8 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int fileentrycountt))))))
(declare-fun slide3 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first2 Int)) (! (= (slide3 a first2 first2) a) :pattern ((slide3 a first2 first2))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq5 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep6 (select a temp___idx_173)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_173))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep6 (select a temp___idx_173)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_173)))))))))))
(declare-const dummy11 (Array Int fileentrycountt))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq11 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields2)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields2)) us_rep (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields2)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___9__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq6 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 a))) (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 b)))) (= (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 a))) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 b))))) (= (bool_eq4 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 b))) true)) (= (bool_eq5 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 b)) 1 17) true)) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep1) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep1) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq12 (us_rep1 us_rep1) Bool)
(declare-const dummy12 us_rep1)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep1)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep1 (logfilestatet__content a))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep2 0)
(declare-fun bool_eq7 (us_rep2 us_rep2) Bool)
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep2) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep2) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))
(declare-fun user_eq13 (us_rep2 us_rep2) Bool)
(declare-const dummy13 us_rep2)
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 us_rep2)))))
(define-fun t__ref___projection ((a t__ref1)) us_rep2 (t__content1 a))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int us_rep2))))))
(declare-fun slide4 ((Array Int us_rep2) Int Int) (Array Int us_rep2))
(assert (forall ((a (Array Int us_rep2))) (forall ((first2 Int)) (! (= (slide4 a first2 first2) a) :pattern ((slide4 a first2 first2))))))
(assert (forall ((a (Array Int us_rep2))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(define-fun bool_eq8 ((a (Array Int us_rep2)) (a__first Int) (a__last Int) (b (Array Int us_rep2)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (bool_eq7 (select a temp___idx_174) (select b (+ (- b__first a__first) temp___idx_174))) true)))) true false))
(assert (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (bool_eq7 (select a temp___idx_174) (select b (+ (- b__first a__first) temp___idx_174))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort statust 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq14 (statust statust) Bool)
(declare-const dummy14 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_237 Int) (temp___is_init_233 Bool) (temp___skip_constant_234 Bool) (temp___do_toplevel_235 Bool) (temp___do_typ_inv_236 Bool)) Bool (=> (or (= temp___is_init_233 true) (<= 0 1)) (in_range9 temp___expr_237)))
(declare-fun valid_numberlogentries (Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun temp_____aggregate_def_1275 (Int) (Array Int logfileindext))
(declare-fun temp_____aggregate_def_1279 (Int) (Array Int fileentrycountt))
(define-fun dynamic_invariant1 ((temp___expr_1269 us_rep1) (temp___is_init_1265 Bool) (temp___skip_constant_1266 Bool) (temp___do_toplevel_1267 Bool) (temp___do_typ_inv_1268 Bool)) Bool (=> (= temp___do_typ_inv_1268 true) (= (valid_numberlogentries (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1269))) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1269))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1269)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1269))) true)))
(declare-const rliteral logfileindext)
(assert (= (logfileindextqtint rliteral) 1))
(declare-const rliteral1 logfilecountt)
(assert (= (logfilecounttqtint rliteral1) 1))
(define-fun default_initial_assumption ((temp___expr_1273 us_rep1) (temp___skip_top_level_1274 Bool)) Bool (and (and (and (= (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1273))) 1) (= (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1273))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1273)) (mk___rep (mk___split_fields (temp_____aggregate_def_1275 1) rliteral rliteral rliteral1)))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1273)) (temp_____aggregate_def_1279 0))))
(define-fun type_invariant ((temp___1283 us_rep1)) Bool (= (valid_numberlogentries (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___1283))) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___1283))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___1283)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___1283))) true))
(declare-sort unsigned32t 0)
(declare-fun unsigned32tqtint (unsigned32t) Int)
(assert (forall ((i unsigned32t)) (and (<= 0 (unsigned32tqtint i)) (<= (unsigned32tqtint i) 4294967295))))
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq15 (unsigned32t unsigned32t) Bool)
(declare-const dummy15 unsigned32t)
(declare-datatypes () ((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t (unsigned32t__content a))
(define-fun dynamic_invariant2 ((temp___expr_244 Int) (temp___is_init_240 Bool) (temp___skip_constant_241 Bool) (temp___do_toplevel_242 Bool) (temp___do_typ_inv_243 Bool)) Bool (=> (or (= temp___is_init_240 true) (<= 0 4294967295)) (in_range10 temp___expr_244)))
(declare-sort namecountt 0)
(declare-fun namecounttqtint (namecountt) Int)
(assert (forall ((i namecountt)) (and (<= 0 (namecounttqtint i)) (<= (namecounttqtint i) 40))))
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq16 (namecountt namecountt) Bool)
(declare-const dummy16 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(define-fun to_rep7 ((x namecountt)) Int (namecounttqtint x))
(declare-fun of_rep7 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x namecountt)) (! (in_range11 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-const dummy17 (Array Int character))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int character)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int character))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment6 a))))
(declare-fun user_eq17 ((Array Int character) (Array Int character)) Bool)
(declare-sort issueridt 0)
(declare-fun issueridtqtint (issueridt) Int)
(assert (forall ((i issueridt)) (and (<= 0 (issueridtqtint i)) (<= (issueridtqtint i) 4294967295))))
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq18 (issueridt issueridt) Bool)
(declare-const dummy18 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(define-fun to_rep8 ((x issueridt)) Int (issueridtqtint x))
(declare-fun of_rep8 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x issueridt)) (! (in_range12 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields4)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields4)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields4)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep3 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___4__projection ((a us_rep3)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq9 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (= (to_rep8 (rec__cryptotypes__issuert__id (us_split_fields5 a))) (to_rep8 (rec__cryptotypes__issuert__id (us_split_fields5 b)))) (= (to_rep7 (rec__cryptotypes__issuert__namelength (us_split_fields5 a))) (to_rep7 (rec__cryptotypes__issuert__namelength (us_split_fields5 b))))) (= (bool_eq (rec__cryptotypes__issuert__name (us_split_fields5 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields5 b)) 1 40) true)) true false))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep3) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep3) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep3)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment7 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq19 (us_rep3 us_rep3) Bool)
(declare-const dummy19 us_rep3)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep3)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep3 (issuert__content a))
(define-fun to_rep9 ((x unsigned32t)) Int (unsigned32tqtint x))
(declare-fun of_rep9 (Int) unsigned32t)
(assert (forall ((x unsigned32t)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x unsigned32t)) (! (in_range10 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-sort maskt 0)
(define-fun in_range13 ((x (_ BitVec 32))) Bool (and (bvule #x00000000 x) (bvule x #x0000000F)))
(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 15)))
(declare-fun attr__ATTRIBUTE_IMAGE13 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) (_ BitVec 32))
(declare-fun user_eq20 (maskt maskt) Bool)
(declare-const dummy20 maskt)
(declare-datatypes () ((maskt__ref (mk_maskt__ref (maskt__content maskt)))))
(define-fun maskt__ref___projection ((a maskt__ref)) maskt (maskt__content a))
(declare-fun to_rep10 (maskt) (_ BitVec 32))
(declare-fun of_rep10 ((_ BitVec 32)) maskt)
(assert (forall ((x maskt)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x maskt)) (! (in_range13 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x (_ BitVec 32))) (! (let ((y (bvurem x #x00000010))) (=> (in_range13 y) (= (to_rep10 (of_rep10 x)) y))) :pattern ((to_rep10 (of_rep10 x))))))
(define-fun to_int2 ((x maskt)) Int (bv2nat (to_rep10 x)))
(assert (forall ((x maskt)) (! (in_range_int (to_int2 x)) :pattern ((to_int2 x)))))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__keystore__interfac__keytemplatet__attrmask maskt) (rec__keystore__interfac__keytemplatet__owner us_rep3) (rec__keystore__interfac__keytemplatet__keyid unsigned32t) (rec__keystore__interfac__keytemplatet__keylength unsigned32t) (rec__keystore__interfac__keytemplatet__ispublic Bool)))))
(define-fun us_split_fields_AttrMask__projection ((a us_split_fields6)) maskt (rec__keystore__interfac__keytemplatet__attrmask a))
(define-fun us_split_fields_Owner__2__projection ((a us_split_fields6)) us_rep3 (rec__keystore__interfac__keytemplatet__owner a))
(define-fun us_split_fields_KeyID__2__projection ((a us_split_fields6)) unsigned32t (rec__keystore__interfac__keytemplatet__keyid a))
(define-fun us_split_fields_KeyLength__2__projection ((a us_split_fields6)) unsigned32t (rec__keystore__interfac__keytemplatet__keylength a))
(define-fun us_split_fields_IsPublic__projection ((a us_split_fields6)) Bool (rec__keystore__interfac__keytemplatet__ispublic a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___13__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep4 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___14__projection ((a us_rep4)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq10 ((a us_rep4) (b us_rep4)) Bool (ite (and (and (and (and (= (to_rep10 (rec__keystore__interfac__keytemplatet__attrmask (us_split_fields7 a))) (to_rep10 (rec__keystore__interfac__keytemplatet__attrmask (us_split_fields7 b)))) (= (bool_eq9 (rec__keystore__interfac__keytemplatet__owner (us_split_fields7 a)) (rec__keystore__interfac__keytemplatet__owner (us_split_fields7 b))) true)) (= (to_rep9 (rec__keystore__interfac__keytemplatet__keyid (us_split_fields7 a))) (to_rep9 (rec__keystore__interfac__keytemplatet__keyid (us_split_fields7 b))))) (= (to_rep9 (rec__keystore__interfac__keytemplatet__keylength (us_split_fields7 a))) (to_rep9 (rec__keystore__interfac__keytemplatet__keylength (us_split_fields7 b))))) (= (rec__keystore__interfac__keytemplatet__ispublic (us_split_fields7 a)) (rec__keystore__interfac__keytemplatet__ispublic (us_split_fields7 b)))) true false))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep4) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep4) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep4)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment8 a))))
(declare-const keystore__interfac__keytemplatet__attrmask__first__bit Int)
(declare-const keystore__interfac__keytemplatet__attrmask__last__bit Int)
(declare-const keystore__interfac__keytemplatet__attrmask__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__attrmask__first__bit))
(assert (< keystore__interfac__keytemplatet__attrmask__first__bit keystore__interfac__keytemplatet__attrmask__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__attrmask__position))
(declare-const keystore__interfac__keytemplatet__owner__first__bit Int)
(declare-const keystore__interfac__keytemplatet__owner__last__bit Int)
(declare-const keystore__interfac__keytemplatet__owner__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__owner__first__bit))
(assert (< keystore__interfac__keytemplatet__owner__first__bit keystore__interfac__keytemplatet__owner__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__owner__position))
(declare-const keystore__interfac__keytemplatet__keyid__first__bit Int)
(declare-const keystore__interfac__keytemplatet__keyid__last__bit Int)
(declare-const keystore__interfac__keytemplatet__keyid__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__keyid__first__bit))
(assert (< keystore__interfac__keytemplatet__keyid__first__bit keystore__interfac__keytemplatet__keyid__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__keyid__position))
(declare-const keystore__interfac__keytemplatet__keylength__first__bit Int)
(declare-const keystore__interfac__keytemplatet__keylength__last__bit Int)
(declare-const keystore__interfac__keytemplatet__keylength__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__keylength__first__bit))
(assert (< keystore__interfac__keytemplatet__keylength__first__bit keystore__interfac__keytemplatet__keylength__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__keylength__position))
(declare-const keystore__interfac__keytemplatet__ispublic__first__bit Int)
(declare-const keystore__interfac__keytemplatet__ispublic__last__bit Int)
(declare-const keystore__interfac__keytemplatet__ispublic__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__ispublic__first__bit))
(assert (< keystore__interfac__keytemplatet__ispublic__first__bit keystore__interfac__keytemplatet__ispublic__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__ispublic__position))
(declare-fun user_eq21 (us_rep4 us_rep4) Bool)
(declare-const dummy21 us_rep4)
(declare-datatypes () ((keytemplatet__ref (mk_keytemplatet__ref (keytemplatet__content us_rep4)))))
(define-fun keytemplatet__ref___projection ((a keytemplatet__ref)) us_rep4 (keytemplatet__content a))
(declare-datatypes () ((map__ref5 (mk_map__ref5 (map__content5 (Array Int unsigned32t))))))
(declare-fun slide5 ((Array Int unsigned32t) Int Int) (Array Int unsigned32t))
(assert (forall ((a (Array Int unsigned32t))) (forall ((first2 Int)) (! (= (slide5 a first2 first2) a) :pattern ((slide5 a first2 first2))))))
(assert (forall ((a (Array Int unsigned32t))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide5 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide5 a old_first new_first) i))))))))
(define-fun bool_eq11 ((a (Array Int unsigned32t)) (a__first Int) (a__last Int) (b (Array Int unsigned32t)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_189 Int)) (=> (and (<= a__first temp___idx_189) (<= temp___idx_189 a__last)) (= (to_rep9 (select a temp___idx_189)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_189))))))) true false))
(assert (forall ((a (Array Int unsigned32t)) (b (Array Int unsigned32t))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq11 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_189 Int)) (=> (and (<= a__first temp___idx_189) (<= temp___idx_189 a__last)) (= (to_rep9 (select a temp___idx_189)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_189)))))))))))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-fun temp___String_Literal_158 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_158 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_158 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_158 us_void_param)))))
(declare-const issuer us_rep3)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const expectedcount Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-fun temp___String_Literal_1951 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1951 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 2)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 3)) 121)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 4)) 112)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 5)) 116)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 6)) 111)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 8)) 76)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 9)) 105)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 10)) 98)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 11)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 12)) 97)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 13)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 14)) 121)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 16)) 69)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 17)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 18)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 19)) 111)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 20)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 22)) 58)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 24)) 76)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 25)) 105)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 26)) 98)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 27)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 28)) 97)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 29)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 30)) 121)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 32)) 104)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 33)) 111)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 34)) 108)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 35)) 100)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 36)) 115)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 38)) 109)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 39)) 111)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 40)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 41)) 101)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 43)) 116)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 44)) 104)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 45)) 97)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 46)) 110)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 48)) 111)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 49)) 110)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 50)) 101)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 51)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 52)) 112)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 53)) 117)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 54)) 98)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 55)) 108)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 56)) 105)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 57)) 99)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 58)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 59)) 107)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 60)) 101)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 61)) 121)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 62)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 63)) 102)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 64)) 111)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 65)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 66)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 67)) 97)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 68)) 110)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 69)) 32)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 70)) 73)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 71)) 115)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 72)) 115)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 73)) 117)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 74)) 101)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 75)) 114)) (= (to_rep (select (temp___String_Literal_1951 us_void_param) 76)) 46)) :pattern ((temp___String_Literal_1951 us_void_param)))))
(define-fun dynamic_invariant3 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant4 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant5 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant6 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(assert (= expectedcount 1))
(define-fun dynamic_invariant7 ((temp___expr_990 Int) (temp___is_init_986 Bool) (temp___skip_constant_987 Bool) (temp___do_toplevel_988 Bool) (temp___do_typ_inv_989 Bool)) Bool (=> (or (= temp___is_init_986 true) (<= 0 40)) (in_range11 temp___expr_990)))
(define-fun dynamic_invariant8 ((temp___expr_1014 Int) (temp___is_init_1010 Bool) (temp___skip_constant_1011 Bool) (temp___do_toplevel_1012 Bool) (temp___do_typ_inv_1013 Bool)) Bool (=> (or (= temp___is_init_1010 true) (<= 0 4294967295)) (in_range12 temp___expr_1014)))
(assert (= nouser (temp___String_Literal_158 Tuple0)))
(define-fun dynamic_invariant9 ((temp___expr_1207 Int) (temp___is_init_1203 Bool) (temp___skip_constant_1204 Bool) (temp___do_toplevel_1205 Bool) (temp___do_typ_inv_1206 Bool)) Bool (=> (or (= temp___is_init_1203 true) (<= 0 17)) (in_range7 temp___expr_1207)))
(define-fun dynamic_invariant10 ((temp___expr_1214 Int) (temp___is_init_1210 Bool) (temp___skip_constant_1211 Bool) (temp___do_toplevel_1212 Bool) (temp___do_typ_inv_1213 Bool)) Bool (=> (or (= temp___is_init_1210 true) (<= 1 17)) (in_range5 temp___expr_1214)))
(define-fun dynamic_invariant11 ((temp___expr_1340 Int) (temp___is_init_1336 Bool) (temp___skip_constant_1337 Bool) (temp___do_toplevel_1338 Bool) (temp___do_typ_inv_1339 Bool)) Bool (=> (or (= temp___is_init_1336 true) (<= 0 2)) (in_range4 temp___expr_1340)))
(define-fun dynamic_invariant12 ((temp___expr_1221 Int) (temp___is_init_1217 Bool) (temp___skip_constant_1218 Bool) (temp___do_toplevel_1219 Bool) (temp___do_typ_inv_1220 Bool)) Bool (=> (or (= temp___is_init_1217 true) (<= 0 17408)) (in_range6 temp___expr_1221)))
(define-fun dynamic_invariant13 ((temp___expr_1252 Int) (temp___is_init_1248 Bool) (temp___skip_constant_1249 Bool) (temp___do_toplevel_1250 Bool) (temp___do_typ_inv_1251 Bool)) Bool (=> (or (= temp___is_init_1248 true) (<= 0 1024)) (in_range8 temp___expr_1252)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles))) 1) 1024) (to_rep6 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(declare-const rliteral2 fileentrycountt)
(assert (= (fileentrycounttqtint rliteral2) 0))
(assert (forall ((temp___1281 Int)) (=> (dynamic_invariant13 temp___1281 true true true true) (forall ((temp___1282 Int)) (= (select (temp_____aggregate_def_1279 temp___1281) temp___1282) rliteral2)))))
(define-fun dynamic_invariant14 ((temp___expr_1618 (_ BitVec 32)) (temp___is_init_1614 Bool) (temp___skip_constant_1615 Bool) (temp___do_toplevel_1616 Bool) (temp___do_typ_inv_1617 Bool)) Bool (=> (or (= temp___is_init_1614 true) (bvule #x00000000 #x0000000F)) (in_range13 temp___expr_1618)))
(assert (forall ((temp___1277 Int)) (=> (dynamic_invariant10 temp___1277 true true true true) (forall ((temp___1278 Int)) (= (select (temp_____aggregate_def_1275 temp___1277) temp___1278) rliteral)))))
(declare-const rliteral3 unsigned32t)
(assert (= (unsigned32tqtint rliteral3) 0))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const issuerkey Int)
(declare-const issuertemplate__split_fields maskt)
(declare-const issuertemplate__split_fields1 issueridt)
(declare-const issuertemplate__split_fields2 namecountt)
(declare-const issuertemplate__split_fields3 (Array Int character))
(declare-const issuertemplate__split_fields4 unsigned32t)
(declare-const issuertemplate__split_fields5 unsigned32t)
(declare-const issuertemplate__split_fields6 Bool)
(declare-const actualcount Int)
(declare-const o maskt)
(declare-const o1 maskt)
(declare-const o2 issueridt)
(declare-const o3 namecountt)
(declare-const o4 (Array Int character))
(declare-const o5 unsigned32t)
(declare-const o6 unsigned32t)
(declare-const o7 Bool)
(declare-const temp___1950 maskt)
(declare-const temp___19501 issueridt)
(declare-const temp___19502 namecountt)
(declare-const temp___19503 (Array Int character))
(declare-const temp___19504 unsigned32t)
(declare-const temp___19505 unsigned32t)
(declare-const temp___19506 Bool)
(declare-const result int__ref)
(declare-const actualcount1 Int)
(declare-const result1 us_split_fields__ref3)
(declare-const issuertemplate__split_fields7 us_split_fields6)
(declare-const logfilestate__split_fields7 us_split_fields2)
(declare-const auditalarm1 Int)
(declare-const actualcount2 Int)
(assert (= (temp___String_Literal_158 Tuple0) nouser))
(assert (=> (<= 0 4294967295) (in_range10 issuerkey)))
(assert (= (valid_numberlogentries (to_rep3 logfilestate__split_fields) (to_rep4 logfilestate__split_fields1) (mk___rep (mk___split_fields logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range9 auditalarm))
(assert (in_range10 expectedcount))
(assert (= result (mk_int__ref actualcount)))
(assert (= actualcount1 1))
(assert (in_range10 actualcount1))
(assert (= (to_rep10 o) #x00000009))
(assert (= o o1))
(assert (= issuer (mk___rep2 (mk___split_fields2 o2 o3 o4))))
(assert (= rliteral3 o5))
(assert (= rliteral3 o6))
(assert (= (distinct 1 0) o7))
(assert (= temp___1950 o1))
(assert (= temp___19501 o2))
(assert (= temp___19502 o3))
(assert (= temp___19503 o4))
(assert (= temp___19504 o5))
(assert (= temp___19505 o6))
(assert (= temp___19506 o7))
(assert (= result1 (mk___split_fields__ref3 (mk___split_fields3 issuertemplate__split_fields (mk___rep2 (mk___split_fields2 issuertemplate__split_fields1 issuertemplate__split_fields2 issuertemplate__split_fields3)) issuertemplate__split_fields4 issuertemplate__split_fields5 issuertemplate__split_fields6))))
(assert (= issuertemplate__split_fields7 (mk___split_fields3 temp___1950 (mk___rep2 (mk___split_fields2 temp___19501 temp___19502 temp___19503)) temp___19504 temp___19505 temp___19506)))
(assert (and (and (in_range10 actualcount2) (= (valid_numberlogentries (to_rep3 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields7)) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields7)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields7) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields7)) true)) (in_range9 auditalarm1)))
(assert (< 1 actualcount2))
(assert (not (= (to_rep1 (first (mk 1 76))) 1)))
(check-sat)
(exit)
