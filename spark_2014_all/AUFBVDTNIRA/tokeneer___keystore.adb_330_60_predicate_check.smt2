(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort statust 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (statust statust) Bool)
(declare-const dummy4 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_214 Int) (temp___is_init_211 Bool) (temp___skip_constant_212 Bool) (temp___do_toplevel_213 Bool)) Bool (=> (or (= temp___is_init_211 true) (<= 0 1)) (in_range4 temp___expr_214)))
(declare-sort unsigned32t 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (unsigned32t unsigned32t) Bool)
(declare-const dummy5 unsigned32t)
(declare-datatypes () ((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t (unsigned32t__content a))
(define-fun dynamic_invariant1 ((temp___expr_220 Int) (temp___is_init_217 Bool) (temp___skip_constant_218 Bool) (temp___do_toplevel_219 Bool)) Bool (=> (or (= temp___is_init_217 true) (<= 0 4294967295)) (in_range5 temp___expr_220)))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq6 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((stringf1l1000__ref (mk_stringf1l1000__ref (stringf1l1000__content us_t1)))))
(define-fun stringf1l1000__ref___projection ((a stringf1l1000__ref)) us_t1 (stringf1l1000__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((stringf1__ref (mk_stringf1__ref (stringf1__content us_t2)))))
(define-fun stringf1__ref___projection ((a stringf1__ref)) us_t2 (stringf1__content a))
(define-fun dynamic_invariant2 ((temp___expr_347 us_t1) (temp___is_init_344 Bool) (temp___skip_constant_345 Bool) (temp___do_toplevel_346 Bool)) Bool (and (=> (not (= temp___skip_constant_345 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_347) (last3 temp___expr_347))) (=> (= temp___do_toplevel_346 true) (=> (= temp___is_init_344 true) (and (let ((temp___349 (of_array2 (to_array1 temp___expr_347) (first3 temp___expr_347) (last3 temp___expr_347)))) (and (= (first5 temp___349) 1) (<= 0 (last5 temp___349)))) (<= (last3 temp___expr_347) 1000))))))
(define-fun dynamic_predicate ((temp___351 us_t1)) Bool (and (let ((temp___353 (of_array2 (to_array1 temp___351) (first3 temp___351) (last3 temp___351)))) (and (= (first5 temp___353) 1) (<= 0 (last5 temp___353)))) (<= (last3 temp___351) 1000)))
(declare-sort descriptioni 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 150)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (descriptioni descriptioni) Bool)
(declare-const dummy8 descriptioni)
(declare-datatypes () ((descriptioni__ref (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni (descriptioni__content a))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun temp___String_Literal_136 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_136 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_136 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_136 us_void_param)))))
(declare-sort logfileindext 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (logfileindext logfileindext) Bool)
(declare-const dummy9 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep2 (logfileindext) Int)
(declare-fun of_rep2 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x logfileindext)) (! (in_range7 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (logentrycountt logentrycountt) Bool)
(declare-const dummy10 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep3 (logentrycountt) Int)
(declare-fun of_rep3 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x logentrycountt)) (! (in_range8 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first6 Int)) (! (= (slide1 a first6 first6) a) :pattern ((slide1 a first6 first6))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (logfileindext Int) (Array Int logfileindext))
(assert (forall ((v logfileindext)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq4 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep2 (select a temp___idx_150)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_150))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep2 (select a temp___idx_150)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_150)))))))))))
(declare-fun compare1 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) Int)
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq4 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq4 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep2 (select a (+ i 1))) (to_rep2 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq4 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep2 (select b (+ i 1))) (to_rep2 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy11 (Array Int logfileindext))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int logfileindext)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int logfileindext)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq11 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-sort logfilecountt 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq12 (logfilecountt logfilecountt) Bool)
(declare-const dummy12 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep4 (logfilecountt) Int)
(declare-fun of_rep4 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x logfilecountt)) (! (in_range9 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq5 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (bool_eq4 (rec__auditlog__logfilelistt__list (us_split_fields1 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields1 b)) 1 17) true) (= (to_rep2 (rec__auditlog__logfilelistt__head (us_split_fields1 a))) (to_rep2 (rec__auditlog__logfilelistt__head (us_split_fields1 b))))) (= (to_rep2 (rec__auditlog__logfilelistt__lasti (us_split_fields1 a))) (to_rep2 (rec__auditlog__logfilelistt__lasti (us_split_fields1 b))))) (= (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 a))) (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 b))))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep)) (<= 0 (object__alignment4 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq13 (us_rep us_rep) Bool)
(declare-const dummy13 us_rep)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq14 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy14 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep5 (fileentrycountt) Int)
(declare-fun of_rep5 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range10 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first6 Int)) (! (= (slide2 a first6 first6) a) :pattern ((slide2 a first6 first6))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (fileentrycountt Int) (Array Int fileentrycountt))
(assert (forall ((v fileentrycountt)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq6 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep5 (select a temp___idx_151)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep5 (select a temp___idx_151)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare2 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) Int)
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq6 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq6 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep5 (select a (+ i 1))) (to_rep5 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq6 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep5 (select b (+ i 1))) (to_rep5 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const dummy15 (Array Int fileentrycountt))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment5 a))))
(declare-fun user_eq15 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields2)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields2)) us_rep (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields2)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___9__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq7 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 a))) (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 b)))) (= (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 a))) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 b))))) (= (bool_eq5 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 b))) true)) (= (bool_eq6 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 b)) 1 17) true)) true false))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep1) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep1) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep1)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment6 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq16 (us_rep1 us_rep1) Bool)
(declare-const dummy16 us_rep1)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep1)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep1 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun temp___1143 (Int) (Array Int logfileindext))
(assert (forall ((temp___1145 Int)) (forall ((temp___1146 Int)) (= (select (temp___1143 temp___1145) temp___1146) (of_rep2 temp___1145)))))
(declare-fun temp___1147 (Int) (Array Int fileentrycountt))
(assert (forall ((temp___1149 Int)) (forall ((temp___1150 Int)) (= (select (temp___1147 temp___1149) temp___1150) (of_rep5 temp___1149)))))
(define-fun dynamic_invariant3 ((temp___expr_1137 us_rep1) (temp___is_init_1134 Bool) (temp___skip_constant_1135 Bool) (temp___do_toplevel_1136 Bool)) Bool (= (valid_numberlogentries (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1137))) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1137))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1137)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1137))) true))
(define-fun default_initial_assumption ((temp___expr_1141 us_rep1) (temp___skip_top_level_1142 Bool)) Bool (and (and (and (= (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1141))) 1) (= (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1141))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1141)) (mk___rep (mk___split_fields (temp___1143 1) (of_rep2 1) (of_rep2 1) (of_rep4 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1141)) (temp___1147 0))))
(define-fun type_invariant ((temp___1151 us_rep1)) Bool (= (valid_numberlogentries (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___1151))) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___1151))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___1151)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___1151))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep2 0)
(declare-fun bool_eq8 (us_rep2 us_rep2) Bool)
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep2) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep2) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep2)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment7 a))))
(declare-fun user_eq17 (us_rep2 us_rep2) Bool)
(declare-const dummy17 us_rep2)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep2)))))
(define-fun t__ref___projection ((a t__ref)) us_rep2 (t__content a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep2))))))
(declare-fun slide3 ((Array Int us_rep2) Int Int) (Array Int us_rep2))
(assert (forall ((a (Array Int us_rep2))) (forall ((first6 Int)) (! (= (slide3 a first6 first6) a) :pattern ((slide3 a first6 first6))))))
(assert (forall ((a (Array Int us_rep2))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int us_rep2) Int Int (Array Int us_rep2) Int Int) (Array Int us_rep2))
(assert (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 (us_rep2 Int) (Array Int us_rep2))
(assert (forall ((v us_rep2)) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq9 ((a (Array Int us_rep2)) (a__first Int) (a__last Int) (b (Array Int us_rep2)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq8 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true)))) true false))
(assert (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq9 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq8 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort filestatust 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq18 (filestatust filestatust) Bool)
(declare-const dummy18 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep6 (filestatust) Int)
(declare-fun of_rep6 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x filestatust)) (! (in_range11 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first6 Int)) (! (= (slide4 a first6 first6) a) :pattern ((slide4 a first6 first6))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (filestatust Int) (Array Int filestatust))
(assert (forall ((v filestatust)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq10 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep6 (select a temp___idx_153)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_153))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq10 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep6 (select a temp___idx_153)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_153)))))))))))
(declare-fun compare3 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) Int)
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare3 a a_first a_last b b_first b_last) 0) (= (bool_eq10 a a_first a_last b b_first b_last) true)) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare3 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq10 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep6 (select a (+ i 1))) (to_rep6 (select b (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare3 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq10 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep6 (select b (+ i 1))) (to_rep6 (select a (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-fun nth ((_ BitVec 32) Int) Bool)
(declare-fun lsr ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun asr ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun lsl ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_right1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_left1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun pow2 (Int) Int)
(define-fun to_int2 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32)) (bv2nat x) (- (- 4294967296 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 32)) (i Int)) (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv x ((_ int2bv 32) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 32))))))
(declare-fun power ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun bv_min ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))
(declare-fun to_rep7 (unsigned32t) Int)
(declare-fun of_rep7 (Int) unsigned32t)
(assert (forall ((x unsigned32t)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x unsigned32t)) (! (in_range5 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-sort namecountt 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq19 (namecountt namecountt) Bool)
(declare-const dummy19 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(declare-fun to_rep8 (namecountt) Int)
(declare-fun of_rep8 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x namecountt)) (! (in_range12 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-const dummy20 (Array Int character))
(declare-const value__size8 Int)
(declare-fun object__size8 ((Array Int character)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int character)) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 ((Array Int character)) Int)
(assert (<= 0 value__size8))
(assert (forall ((a (Array Int character))) (<= 0 (object__size8 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment8 a))))
(declare-fun user_eq20 ((Array Int character) (Array Int character)) Bool)
(declare-sort issueridt 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq21 (issueridt issueridt) Bool)
(declare-const dummy21 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(declare-fun to_rep9 (issueridt) Int)
(declare-fun of_rep9 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x issueridt)) (! (in_range13 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields4)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields4)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields4)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep3 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___4__projection ((a us_rep3)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq11 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (= (to_rep9 (rec__cryptotypes__issuert__id (us_split_fields5 a))) (to_rep9 (rec__cryptotypes__issuert__id (us_split_fields5 b)))) (= (to_rep8 (rec__cryptotypes__issuert__namelength (us_split_fields5 a))) (to_rep8 (rec__cryptotypes__issuert__namelength (us_split_fields5 b))))) (= (bool_eq (rec__cryptotypes__issuert__name (us_split_fields5 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields5 b)) 1 40) true)) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep3) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep3) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep3)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment9 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq22 (us_rep3 us_rep3) Bool)
(declare-const dummy22 us_rep3)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep3)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep3 (issuert__content a))
(declare-sort maskt 0)
(define-fun in_range14 ((x (_ BitVec 32))) Bool (and (bvule ((_ int2bv 32) 0) x) (bvule x ((_ int2bv 32) 15))))
(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 15)))
(declare-fun attr__ATTRIBUTE_IMAGE14 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) (_ BitVec 32))
(declare-fun user_eq23 (maskt maskt) Bool)
(declare-const dummy23 maskt)
(declare-datatypes () ((maskt__ref (mk_maskt__ref (maskt__content maskt)))))
(define-fun maskt__ref___projection ((a maskt__ref)) maskt (maskt__content a))
(declare-fun to_rep10 (maskt) (_ BitVec 32))
(declare-fun of_rep10 ((_ BitVec 32)) maskt)
(assert (forall ((x maskt)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x maskt)) (! (in_range14 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x (_ BitVec 32))) (! (let ((y (bvurem x ((_ int2bv 32) 16)))) (=> (in_range14 y) (= (to_rep10 (of_rep10 x)) y))) :pattern ((to_rep10 (of_rep10 x))))))
(define-fun to_int3 ((x maskt)) Int (bv2nat (to_rep10 x)))
(assert (forall ((x maskt)) (! (in_range_int (to_int3 x)) :pattern ((to_int3 x)))))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__keystore__interfac__keytemplatet__attrmask maskt) (rec__keystore__interfac__keytemplatet__owner us_rep3) (rec__keystore__interfac__keytemplatet__keyid unsigned32t) (rec__keystore__interfac__keytemplatet__keylength unsigned32t) (rec__keystore__interfac__keytemplatet__ispublic Bool)))))
(define-fun us_split_fields_AttrMask__projection ((a us_split_fields6)) maskt (rec__keystore__interfac__keytemplatet__attrmask a))
(define-fun us_split_fields_Owner__2__projection ((a us_split_fields6)) us_rep3 (rec__keystore__interfac__keytemplatet__owner a))
(define-fun us_split_fields_KeyID__2__projection ((a us_split_fields6)) unsigned32t (rec__keystore__interfac__keytemplatet__keyid a))
(define-fun us_split_fields_KeyLength__2__projection ((a us_split_fields6)) unsigned32t (rec__keystore__interfac__keytemplatet__keylength a))
(define-fun us_split_fields_IsPublic__projection ((a us_split_fields6)) Bool (rec__keystore__interfac__keytemplatet__ispublic a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___13__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep4 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___14__projection ((a us_rep4)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq12 ((a us_rep4) (b us_rep4)) Bool (ite (and (and (and (and (= (to_rep10 (rec__keystore__interfac__keytemplatet__attrmask (us_split_fields7 a))) (to_rep10 (rec__keystore__interfac__keytemplatet__attrmask (us_split_fields7 b)))) (= (bool_eq11 (rec__keystore__interfac__keytemplatet__owner (us_split_fields7 a)) (rec__keystore__interfac__keytemplatet__owner (us_split_fields7 b))) true)) (= (to_rep7 (rec__keystore__interfac__keytemplatet__keyid (us_split_fields7 a))) (to_rep7 (rec__keystore__interfac__keytemplatet__keyid (us_split_fields7 b))))) (= (to_rep7 (rec__keystore__interfac__keytemplatet__keylength (us_split_fields7 a))) (to_rep7 (rec__keystore__interfac__keytemplatet__keylength (us_split_fields7 b))))) (= (rec__keystore__interfac__keytemplatet__ispublic (us_split_fields7 a)) (rec__keystore__interfac__keytemplatet__ispublic (us_split_fields7 b)))) true false))
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep4) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep4) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep4)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment10 a))))
(declare-const keystore__interfac__keytemplatet__attrmask__first__bit Int)
(declare-const keystore__interfac__keytemplatet__attrmask__last__bit Int)
(declare-const keystore__interfac__keytemplatet__attrmask__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__attrmask__first__bit))
(assert (< keystore__interfac__keytemplatet__attrmask__first__bit keystore__interfac__keytemplatet__attrmask__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__attrmask__position))
(declare-const keystore__interfac__keytemplatet__owner__first__bit Int)
(declare-const keystore__interfac__keytemplatet__owner__last__bit Int)
(declare-const keystore__interfac__keytemplatet__owner__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__owner__first__bit))
(assert (< keystore__interfac__keytemplatet__owner__first__bit keystore__interfac__keytemplatet__owner__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__owner__position))
(declare-const keystore__interfac__keytemplatet__keyid__first__bit Int)
(declare-const keystore__interfac__keytemplatet__keyid__last__bit Int)
(declare-const keystore__interfac__keytemplatet__keyid__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__keyid__first__bit))
(assert (< keystore__interfac__keytemplatet__keyid__first__bit keystore__interfac__keytemplatet__keyid__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__keyid__position))
(declare-const keystore__interfac__keytemplatet__keylength__first__bit Int)
(declare-const keystore__interfac__keytemplatet__keylength__last__bit Int)
(declare-const keystore__interfac__keytemplatet__keylength__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__keylength__first__bit))
(assert (< keystore__interfac__keytemplatet__keylength__first__bit keystore__interfac__keytemplatet__keylength__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__keylength__position))
(declare-const keystore__interfac__keytemplatet__ispublic__first__bit Int)
(declare-const keystore__interfac__keytemplatet__ispublic__last__bit Int)
(declare-const keystore__interfac__keytemplatet__ispublic__position Int)
(assert (<= 0 keystore__interfac__keytemplatet__ispublic__first__bit))
(assert (< keystore__interfac__keytemplatet__ispublic__first__bit keystore__interfac__keytemplatet__ispublic__last__bit))
(assert (<= 0 keystore__interfac__keytemplatet__ispublic__position))
(declare-fun user_eq24 (us_rep4 us_rep4) Bool)
(declare-const dummy24 us_rep4)
(declare-datatypes () ((keytemplatet__ref (mk_keytemplatet__ref (keytemplatet__content us_rep4)))))
(define-fun keytemplatet__ref___projection ((a keytemplatet__ref)) us_rep4 (keytemplatet__content a))
(declare-datatypes () ((map__ref5 (mk_map__ref5 (map__content5 (Array Int unsigned32t))))))
(declare-fun slide5 ((Array Int unsigned32t) Int Int) (Array Int unsigned32t))
(assert (forall ((a (Array Int unsigned32t))) (forall ((first6 Int)) (! (= (slide5 a first6 first6) a) :pattern ((slide5 a first6 first6))))))
(assert (forall ((a (Array Int unsigned32t))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide5 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide5 a old_first new_first) i))))))))
(declare-fun concat6 ((Array Int unsigned32t) Int Int (Array Int unsigned32t) Int Int) (Array Int unsigned32t))
(assert (forall ((a (Array Int unsigned32t)) (b (Array Int unsigned32t))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat6 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat6 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat6 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton6 (unsigned32t Int) (Array Int unsigned32t))
(assert (forall ((v unsigned32t)) (forall ((i Int)) (! (= (select (singleton6 v i) i) v) :pattern ((select (singleton6 v i) i))))))
(define-fun bool_eq13 ((a (Array Int unsigned32t)) (a__first Int) (a__last Int) (b (Array Int unsigned32t)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_167 Int)) (=> (and (<= a__first temp___idx_167) (<= temp___idx_167 a__last)) (= (to_rep7 (select a temp___idx_167)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_167))))))) true false))
(assert (forall ((a (Array Int unsigned32t)) (b (Array Int unsigned32t))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq13 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_167 Int)) (=> (and (<= a__first temp___idx_167) (<= temp___idx_167 a__last)) (= (to_rep7 (select a temp___idx_167)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_167)))))))))))
(declare-fun compare4 ((Array Int unsigned32t) Int Int (Array Int unsigned32t) Int Int) Int)
(assert (forall ((a (Array Int unsigned32t)) (b (Array Int unsigned32t))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare4 a a_first a_last b b_first b_last) 0) (= (bool_eq13 a a_first a_last b b_first b_last) true)) :pattern ((compare4 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int unsigned32t)) (b (Array Int unsigned32t))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare4 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq13 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep7 (select a (+ i 1))) (to_rep7 (select b (+ j 1))))))))))) :pattern ((compare4 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int unsigned32t)) (b (Array Int unsigned32t))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare4 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq13 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep7 (select b (+ i 1))) (to_rep7 (select a (+ j 1))))))))))) :pattern ((compare4 a a_first a_last b b_first b_last))))))
(declare-sort returnvaluet 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 28)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq25 (returnvaluet returnvaluet) Bool)
(declare-const dummy25 returnvaluet)
(declare-datatypes () ((returnvaluet__ref (mk_returnvaluet__ref (returnvaluet__content returnvaluet)))))
(define-fun returnvaluet__ref___projection ((a returnvaluet__ref)) returnvaluet (returnvaluet__content a))
(define-fun dynamic_invariant4 ((temp___expr_1519 Int) (temp___is_init_1516 Bool) (temp___skip_constant_1517 Bool) (temp___do_toplevel_1518 Bool)) Bool (=> (or (= temp___is_init_1516 true) (<= 0 28)) (in_range15 temp___expr_1519)))
(declare-datatypes () ((map__ref6 (mk_map__ref6 (map__content6 (Array Int Bool))))))
(declare-fun slide6 ((Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((a (Array Int Bool))) (forall ((first6 Int)) (! (= (slide6 a first6 first6) a) :pattern ((slide6 a first6 first6))))))
(assert (forall ((a (Array Int Bool))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide6 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide6 a old_first new_first) i))))))))
(declare-fun concat7 ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat7 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat7 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat7 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton7 (Bool Int) (Array Int Bool))
(assert (forall ((v Bool)) (forall ((i Int)) (! (= (select (singleton7 v i) i) v) :pattern ((select (singleton7 v i) i))))))
(define-fun bool_eq14 ((a (Array Int Bool)) (a__first Int) (a__last Int) (b (Array Int Bool)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (select a temp___idx_172) (select b (+ (- b__first a__first) temp___idx_172)))))) true false))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq14 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (select a temp___idx_172) (select b (+ (- b__first a__first) temp___idx_172))))))))))
(declare-fun compare5 ((Array Int Bool) Int Int (Array Int Bool) Int Int) Int)
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare5 a a_first a_last b b_first b_last) 0) (= (bool_eq14 a a_first a_last b b_first b_last) true)) :pattern ((compare5 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare5 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq14 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_int1 (select a (+ i 1))) (to_int1 (select b (+ j 1))))))))))) :pattern ((compare5 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare5 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq14 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_int1 (select b (+ i 1))) (to_int1 (select a (+ j 1))))))))))) :pattern ((compare5 a a_first a_last b b_first b_last))))))
(declare-fun xorb ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(declare-fun andb ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(declare-fun orb ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(declare-fun notb ((Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (orb a a_first a_last b b_first b_last) i) (or (select a i) (select b (+ (- i a_first) b_first))))) :pattern ((select (orb a a_first a_last b b_first b_last) i)))))))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (andb a a_first a_last b b_first b_last) i) (and (select a i) (select b (+ (- i a_first) b_first))))) :pattern ((select (andb a a_first a_last b b_first b_last) i)))))))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (xorb a a_first a_last b b_first b_last) i) (xor (select a i) (select b (+ (- i a_first) b_first))))) :pattern ((select (xorb a a_first a_last b b_first b_last) i)))))))
(assert (forall ((a (Array Int Bool))) (forall ((a_first Int) (a_last Int)) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (notb a a_first a_last) i) (not (select a i)))) :pattern ((select (notb a a_first a_last) i)))))))
(declare-const issystem (Array Int Bool))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun keystore__issystem__aggregate_def (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool) (Array Int Bool))
(assert (forall ((temp___174 Bool) (temp___175 Bool) (temp___176 Bool) (temp___177 Bool) (temp___178 Bool) (temp___179 Bool) (temp___180 Bool) (temp___181 Bool) (temp___182 Bool) (temp___183 Bool) (temp___184 Bool) (temp___185 Bool) (temp___186 Bool) (temp___187 Bool) (temp___188 Bool) (temp___189 Bool) (temp___190 Bool) (temp___191 Bool) (temp___192 Bool) (temp___193 Bool) (temp___194 Bool) (temp___195 Bool) (temp___196 Bool) (temp___197 Bool) (temp___198 Bool) (temp___199 Bool) (temp___200 Bool) (temp___201 Bool) (temp___202 Bool)) (let ((temp___173 (keystore__issystem__aggregate_def temp___174 temp___175 temp___176 temp___177 temp___178 temp___179 temp___180 temp___181 temp___182 temp___183 temp___184 temp___185 temp___186 temp___187 temp___188 temp___189 temp___190 temp___191 temp___192 temp___193 temp___194 temp___195 temp___196 temp___197 temp___198 temp___199 temp___200 temp___201 temp___202))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (select temp___173 0) temp___174) (= (select temp___173 1) temp___175)) (= (select temp___173 2) temp___176)) (= (select temp___173 3) temp___177)) (= (select temp___173 4) temp___178)) (= (select temp___173 5) temp___179)) (= (select temp___173 6) temp___180)) (= (select temp___173 7) temp___181)) (= (select temp___173 8) temp___182)) (= (select temp___173 9) temp___183)) (= (select temp___173 10) temp___184)) (= (select temp___173 11) temp___185)) (= (select temp___173 12) temp___186)) (= (select temp___173 13) temp___187)) (= (select temp___173 14) temp___188)) (= (select temp___173 15) temp___189)) (= (select temp___173 16) temp___190)) (= (select temp___173 17) temp___191)) (= (select temp___173 18) temp___192)) (= (select temp___173 19) temp___193)) (= (select temp___173 20) temp___194)) (= (select temp___173 21) temp___195)) (= (select temp___173 22) temp___196)) (= (select temp___173 23) temp___197)) (= (select temp___173 24) temp___198)) (= (select temp___173 25) temp___199)) (= (select temp___173 26) temp___200)) (= (select temp___173 27) temp___201)) (= (select temp___173 28) temp___202)))))
(declare-fun convertretvaltotext (Int us_t1) (Array Int character))
(declare-fun convertretvaltotext__function_guard ((Array Int character) Int us_t1) Bool)
(assert true)
(declare-const template us_rep4)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-fun temp___1757 (Int) (Array Int unsigned32t))
(assert (forall ((temp___1759 Int)) (forall ((temp___1760 Int)) (= (select (temp___1757 temp___1759) temp___1760) (of_rep7 temp___1759)))))
(declare-fun temp___String_Literal_1761 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1761 us_void_param) 1)) 70) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 2)) 105)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 3)) 110)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 4)) 100)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 5)) 79)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 6)) 98)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 7)) 106)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 8)) 101)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 9)) 99)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 10)) 116)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 11)) 115)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 12)) 73)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 13)) 110)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 14)) 105)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 15)) 116)) (= (to_rep (select (temp___String_Literal_1761 us_void_param) 16)) 32)) :pattern ((temp___String_Literal_1761 us_void_param)))))
(declare-fun temp___String_Literal_1763 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1763 us_void_param) 1)) 70) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 2)) 105)) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 3)) 110)) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 4)) 100)) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 5)) 79)) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 6)) 98)) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 7)) 106)) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 8)) 101)) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 9)) 99)) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 10)) 116)) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 11)) 115)) (= (to_rep (select (temp___String_Literal_1763 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_1763 us_void_param)))))
(declare-fun temp___String_Literal_1765 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1765 us_void_param) 1)) 70) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 2)) 105)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 3)) 110)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 4)) 100)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 5)) 79)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 6)) 98)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 7)) 106)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 8)) 101)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 9)) 99)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 10)) 116)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 11)) 115)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 12)) 70)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 13)) 105)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 14)) 110)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 15)) 97)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 16)) 108)) (= (to_rep (select (temp___String_Literal_1765 us_void_param) 17)) 32)) :pattern ((temp___String_Literal_1765 us_void_param)))))
(define-fun dynamic_invariant5 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant6 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant7 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant8 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(assert (= issystem (keystore__issystem__aggregate_def (of_int 0) (of_int 1) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 1))))
(define-fun dynamic_invariant9 ((temp___expr_313 us_t2) (temp___is_init_310 Bool) (temp___skip_constant_311 Bool) (temp___do_toplevel_312 Bool)) Bool (and (=> (not (= temp___skip_constant_311 true)) (dynamic_property2 1 2147483647 (first5 temp___expr_313) (last5 temp___expr_313))) (=> (= temp___do_toplevel_312 true) (=> (= temp___is_init_310 true) (and (= (first5 temp___expr_313) 1) (<= 0 (last5 temp___expr_313)))))))
(define-fun dynamic_predicate1 ((temp___316 us_t2)) Bool (and (= (first5 temp___316) 1) (<= 0 (last5 temp___316))))
(define-fun dynamic_invariant10 ((temp___expr_889 Int) (temp___is_init_886 Bool) (temp___skip_constant_887 Bool) (temp___do_toplevel_888 Bool)) Bool (=> (or (= temp___is_init_886 true) (<= 0 40)) (in_range12 temp___expr_889)))
(define-fun dynamic_invariant11 ((temp___expr_910 Int) (temp___is_init_907 Bool) (temp___skip_constant_908 Bool) (temp___do_toplevel_909 Bool)) Bool (=> (or (= temp___is_init_907 true) (<= 0 4294967295)) (in_range13 temp___expr_910)))
(define-fun dynamic_invariant12 ((temp___expr_425 Int) (temp___is_init_422 Bool) (temp___skip_constant_423 Bool) (temp___do_toplevel_424 Bool)) Bool (=> (or (= temp___is_init_422 true) (<= 1 150)) (in_range6 temp___expr_425)))
(assert (= nouser (temp___String_Literal_136 Tuple0)))
(define-fun dynamic_invariant13 ((temp___expr_1103 Int) (temp___is_init_1100 Bool) (temp___skip_constant_1101 Bool) (temp___do_toplevel_1102 Bool)) Bool (=> (or (= temp___is_init_1100 true) (<= 0 17)) (in_range9 temp___expr_1103)))
(define-fun dynamic_invariant14 ((temp___expr_1082 Int) (temp___is_init_1079 Bool) (temp___skip_constant_1080 Bool) (temp___do_toplevel_1081 Bool)) Bool (=> (or (= temp___is_init_1079 true) (<= 1 17)) (in_range7 temp___expr_1082)))
(define-fun dynamic_invariant15 ((temp___expr_1207 Int) (temp___is_init_1204 Bool) (temp___skip_constant_1205 Bool) (temp___do_toplevel_1206 Bool)) Bool (=> (or (= temp___is_init_1204 true) (<= 0 2)) (in_range11 temp___expr_1207)))
(define-fun dynamic_invariant16 ((temp___expr_1088 Int) (temp___is_init_1085 Bool) (temp___skip_constant_1086 Bool) (temp___do_toplevel_1087 Bool)) Bool (=> (or (= temp___is_init_1085 true) (<= 0 17408)) (in_range8 temp___expr_1088)))
(define-fun dynamic_invariant17 ((temp___expr_1122 Int) (temp___is_init_1119 Bool) (temp___skip_constant_1120 Bool) (temp___do_toplevel_1121 Bool)) Bool (=> (or (= temp___is_init_1119 true) (<= 0 1024)) (in_range10 temp___expr_1122)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles))) 1) 1024) (to_rep5 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(define-fun dynamic_invariant18 ((temp___expr_1460 (_ BitVec 32)) (temp___is_init_1457 Bool) (temp___skip_constant_1458 Bool) (temp___do_toplevel_1459 Bool)) Bool (=> (or (= temp___is_init_1457 true) (bvule ((_ int2bv 32) 0) ((_ int2bv 32) 15))) (in_range14 temp___expr_1460)))
(declare-const logfiles (Array Int us_rep2))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const auditsystemfault Bool)
(declare-const handlecount Int)
(declare-const handles (Array Int unsigned32t))
(declare-const retvalini Int)
(declare-const retvaldo Int)
(declare-const retvalfin Int)
(declare-const filestate us_private)
(declare-const state us_private)
(declare-const temp___1762 (Array Int character))
(declare-const temp___17621 t1)
(declare-const o (Array Int character))
(declare-const o1 t1)
(declare-const o2 (Array Int character))
(declare-const o3 (Array Int character))
(declare-const o4 t)
(declare-const temp___1764 (Array Int character))
(declare-const temp___17641 t1)
(declare-const o5 (Array Int character))
(declare-const o6 t1)
(declare-const o7 (Array Int character))
(declare-const o8 (Array Int character))
(declare-const o9 t)
(declare-const temp___1766 us_t1)
(declare-const o10 us_t1)
(declare-const o11 (Array Int character))
(declare-const o12 us_t)
(declare-const logfiles1 (Array Int us_rep2))
(declare-const logfilesstatus1 (Array Int filestatust))
(declare-const logfilestate__split_fields7 us_split_fields2)
(declare-const auditalarm1 Int)
(declare-const auditsystemfault1 Bool)
(declare-const handlecount1 Int)
(declare-const filestate1 us_private)
(declare-const state1 us_private)
(declare-const result int__ref)
(declare-const retvaldo1 Int)
(declare-const result1 int__ref)
(declare-const retvalfin1 Int)
(declare-const result2 map__ref5)
(declare-const handles1 (Array Int unsigned32t))
(declare-const retvalini1 Int)
(declare-const handlecount2 Int)
(declare-const handles2 (Array Int unsigned32t))
(declare-const retvaldo2 Int)
(declare-const retvalfin2 Int)
(declare-const logfiles2 (Array Int us_rep2))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields8 us_split_fields2)
(declare-const auditalarm2 Int)
(declare-const auditsystemfault2 Bool)
(declare-const filestate2 us_private)
(declare-const state2 us_private)
(declare-const logfiles3 (Array Int us_rep2))
(declare-const logfilesstatus3 (Array Int filestatust))
(declare-const logfilestate__split_fields9 us_split_fields2)
(declare-const auditalarm3 Int)
(declare-const auditsystemfault3 Bool)
(declare-const filestate3 us_private)
(declare-const state3 us_private)
(assert (= (keystore__issystem__aggregate_def (of_int 0) (of_int 1) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 1)) issystem))
(assert (= (temp___String_Literal_136 Tuple0) nouser))
(assert (in_range5 handlecount))
(assert (= (valid_numberlogentries (to_rep2 logfilestate__split_fields) (to_rep3 logfilestate__split_fields1) (mk___rep (mk___split_fields logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range4 auditalarm))
(assert (=> (<= 0 28) (in_range15 retvalini)))
(assert (= result (mk_int__ref retvaldo)))
(assert (= retvaldo1 0))
(assert (in_range15 retvaldo1))
(assert (= result1 (mk_int__ref retvalfin)))
(assert (= retvalfin1 0))
(assert (in_range15 retvalfin1))
(assert (= result2 (mk_map__ref5 handles)))
(assert (= handles1 (temp___1757 0)))
(assert (in_range15 retvalini1))
(assert (=> (= retvalini1 0) (and (in_range5 handlecount2) (in_range15 retvaldo2))))
(assert (=> (= retvalini1 0) (=> (= retvalini1 0) (in_range15 retvalfin2))))
(assert (=> (= retvalini1 0) (=> (not (= retvalini1 0)) (= retvalfin2 retvalfin1))))
(assert (=> (not (= retvalini1 0)) (= retvalfin2 retvalfin1)))
(assert (=> (not (= retvalini1 0)) (= retvaldo2 retvaldo1)))
(assert (=> (not (= retvalini1 0)) (= handles2 handles1)))
(assert (=> (not (= retvalini1 0)) (= handlecount2 handlecount)))
(assert (=> (not (= retvalini1 0)) (= retvalfin2 retvalfin1)))
(assert (=> (not (= retvalini1 0)) (= retvaldo2 retvaldo1)))
(assert (=> (not (= retvalini1 0)) (= handles2 handles1)))
(assert (=> (not (= retvalini1 0)) (= handlecount2 handlecount1)))
(assert (= (select issystem retvalini1) true))
(assert (dynamic_property1 1 2147483647 1 16))
(assert (= (temp___String_Literal_1761 Tuple0) temp___1762))
(assert (= (mk1 1 16) temp___17621))
(assert (not (dynamic_predicate (mk___t1 temp___1762 temp___17621))))
(check-sat)
(exit)
