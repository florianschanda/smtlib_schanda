(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun div1 (Int Int) Int)
(declare-fun mod1 (Int Int) Int)
(assert (forall ((x Int) (y Int)) (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))
(assert (forall ((x Int) (y Int)) (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))
(assert (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))
(assert (forall ((x Int) (y Int)) (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))
(assert (forall ((x Int) (y Int)) (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))
(assert (forall ((x Int)) (= (div1 x 1) x)))
(assert (forall ((x Int)) (= (mod1 x 1) 0)))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))
(assert (forall ((x Int) (y Int) (z Int)) (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z))) (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1 (+ (* x y) z) x)))))
(assert (forall ((x Int) (y Int) (z Int)) (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z))) (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)))))
(define-fun mod2 ((x Int) (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range2 temp___expr_33)))
(declare-sort positive 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (positive positive) Bool)
(declare-const dummy2 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range3 temp___expr_39)))
(define-fun dynamic_invariant2 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int2 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-sort byte 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 8))
(declare-fun user_eq3 (byte byte) Bool)
(declare-const dummy3 byte)
(declare-datatypes () ((byte__ref (mk_byte__ref (byte__content byte)))))
(define-fun byte__ref___projection ((a byte__ref)) byte (byte__content a))
(declare-sort index_number 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (index_number index_number) Bool)
(declare-const dummy4 index_number)
(declare-datatypes () ((index_number__ref (mk_index_number__ref (index_number__content index_number)))))
(define-fun index_number__ref___projection ((a index_number__ref)) index_number (index_number__content a))
(define-fun dynamic_invariant3 ((temp___expr_255 Int) (temp___is_init_252 Bool) (temp___skip_constant_253 Bool) (temp___do_toplevel_254 Bool)) Bool (=> (or (= temp___is_init_252 true) (<= 0 2147483647)) (in_range4 temp___expr_255)))
(declare-fun to_rep (byte) (_ BitVec 8))
(declare-fun of_rep ((_ BitVec 8)) byte)
(assert (forall ((x byte)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep (of_rep x)) x) :pattern ((to_rep (of_rep x))))))
(define-fun to_int3 ((x byte)) Int (bv2nat (to_rep x)))
(assert (forall ((x byte)) (! (uint_in_range (to_int3 x)) :pattern ((to_int3 x)))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int byte))))))
(declare-fun slide ((Array Int byte) Int Int) (Array Int byte))
(assert (forall ((a (Array Int byte))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int byte))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int byte) Int Int (Array Int byte) Int Int) (Array Int byte))
(assert (forall ((a (Array Int byte)) (b (Array Int byte))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (byte Int) (Array Int byte))
(assert (forall ((v byte)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int byte)) (a__first Int) (a__last Int) (b (Array Int byte)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int byte)) (b (Array Int byte))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int byte) Int Int (Array Int byte) Int Int) Int)
(assert (forall ((a (Array Int byte)) (b (Array Int byte))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int byte)) (b (Array Int byte))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (bvult (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int byte)) (b (Array Int byte))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (bvugt (to_rep (select a (+ j 1))) (to_rep (select b (+ i 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range4 low) (in_range4 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int byte)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int byte) (elts a))
(define-fun of_array ((a (Array Int byte)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int byte)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int byte)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int byte)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq5 (us_t us_t) Bool)
(declare-const dummy5 us_t)
(declare-datatypes () ((byte_array__ref (mk_byte_array__ref (byte_array__content us_t)))))
(define-fun byte_array__ref___projection ((a byte_array__ref)) us_t (byte_array__content a))
(define-fun dynamic_invariant4 ((temp___expr_261 us_t) (temp___is_init_258 Bool) (temp___skip_constant_259 Bool) (temp___do_toplevel_260 Bool)) Bool (=> (not (= temp___skip_constant_259 true)) (dynamic_property 0 2147483647 (first1 temp___expr_261) (last1 temp___expr_261))))
(declare-fun nth1 ((_ BitVec 64) Int) Bool)
(declare-fun lsr1 ((_ BitVec 64) Int) (_ BitVec 64))
(declare-fun asr1 ((_ BitVec 64) Int) (_ BitVec 64))
(declare-fun lsl1 ((_ BitVec 64) Int) (_ BitVec 64))
(declare-fun rotate_right2 ((_ BitVec 64) Int) (_ BitVec 64))
(declare-fun rotate_left2 ((_ BitVec 64) Int) (_ BitVec 64))
(define-fun to_int4 ((x (_ BitVec 64))) Int (ite (bvsge x (_ bv0 64)) (bv2nat x) (- (- 18446744073709551616 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 18446744073709551615)))
(assert (forall ((x (_ BitVec 64)) (n (_ BitVec 64))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 64)) (n (_ BitVec 64))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 64)) (n (_ BitVec 64))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 64)) (n (_ BitVec 64))) (= (bvor (bvshl v (bvurem n (_ bv64 64))) (bvlshr v (bvsub (_ bv64 64) (bvurem n (_ bv64 64))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 64)) (n (_ BitVec 64))) (= (bvor (bvlshr v (bvurem n (_ bv64 64))) (bvshl v (bvsub (_ bv64 64) (bvurem n (_ bv64 64))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 64) (_ BitVec 64)) Bool)
(assert (forall ((x (_ BitVec 64)) (i (_ BitVec 64))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0000000000000001) #x0000000000000000)))))
(assert (forall ((x (_ BitVec 64)) (i (_ BitVec 64))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 64)) (i Int)) (=> (and (<= 0 i) (< i 18446744073709551616)) (= (nth_bv1 x ((_ int2bv 64) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)
(assert (forall ((a (_ BitVec 64)) (b (_ BitVec 64)) (i (_ BitVec 64)) (n (_ BitVec 64))) (let ((mask (bvshl (bvsub (bvshl #x0000000000000001 n) #x0000000000000001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 64)) (b (_ BitVec 64)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 64)) (b (_ BitVec 64)) (i (_ BitVec 64)) (n (_ BitVec 64))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 64))))))
(declare-fun power1 ((_ BitVec 64) Int) (_ BitVec 64))
(define-fun bv_min1 ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 64)) (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) y x))
(declare-sort lane_type 0)
(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 64))
(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 64)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 64))
(declare-fun user_eq6 (lane_type lane_type) Bool)
(declare-const dummy6 lane_type)
(declare-datatypes () ((lane_type__ref (mk_lane_type__ref (lane_type__content lane_type)))))
(define-fun lane_type__ref___projection ((a lane_type__ref)) lane_type (lane_type__content a))
(declare-fun to_rep2 (lane_type) (_ BitVec 64))
(declare-fun of_rep2 ((_ BitVec 64)) lane_type)
(assert (forall ((x lane_type)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert true)
(assert (forall ((x (_ BitVec 64))) (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_int5 ((x lane_type)) Int (bv2nat (to_rep2 x)))
(assert (forall ((x lane_type)) (! (uint_in_range1 (to_int5 x)) :pattern ((to_int5 x)))))
(declare-sort map1 0)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 map1)))))
(declare-fun get (map1 (_ BitVec 8) (_ BitVec 8)) lane_type)
(declare-fun set (map1 (_ BitVec 8) (_ BitVec 8) lane_type) map1)
(assert (forall ((m map1)) (forall ((i (_ BitVec 8))) (forall ((j (_ BitVec 8))) (forall ((a lane_type)) (! (= (get (set m i j a) i j) a) :pattern ((set m i j a))))))))
(assert (forall ((m map1)) (forall ((i (_ BitVec 8)) (i2 (_ BitVec 8))) (forall ((j (_ BitVec 8)) (j2 (_ BitVec 8))) (forall ((a lane_type)) (! (=> (not (and (= i i2) (= j j2))) (= (get (set m i j a) i2 j2) (get m i2 j2))) :pattern ((get (set m i j a) i2 j2)) :pattern ((set m i j a) (get m i2 j2))))))))
(declare-fun slide1 (map1 (_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) map1)
(assert (forall ((a map1)) (forall ((new_first (_ BitVec 8)) (old_first (_ BitVec 8))) (forall ((new_first_2 (_ BitVec 8)) (old_first_2 (_ BitVec 8))) (forall ((i (_ BitVec 8))) (forall ((j (_ BitVec 8))) (! (= (get (slide1 a old_first new_first old_first_2 new_first_2) i j) (get a (bvsub i (bvsub new_first old_first)) (bvsub j (bvsub new_first_2 old_first_2)))) :pattern ((get (slide1 a old_first new_first old_first_2 new_first_2) i j)))))))))
(define-fun bool_eq2 ((a map1) (a__first (_ BitVec 8)) (a__last (_ BitVec 8)) (a__first_2 (_ BitVec 8)) (a__last_2 (_ BitVec 8)) (b map1) (b__first (_ BitVec 8)) (b__last (_ BitVec 8)) (b__first_2 (_ BitVec 8)) (b__last_2 (_ BitVec 8))) Bool (ite (and (and (ite (bvule a__first a__last) (and (bvule b__first b__last) (= (bvsub a__last a__first) (bvsub b__last b__first))) (bvugt b__first b__last)) (ite (bvule a__first_2 a__last_2) (and (bvule b__first_2 b__last_2) (= (bvsub a__last_2 a__first_2) (bvsub b__last_2 b__first_2))) (bvugt b__first_2 b__last_2))) (forall ((temp___idx_133 (_ BitVec 8)) (temp___idx_134 (_ BitVec 8))) (=> (and (and (bvule a__first temp___idx_133) (bvule temp___idx_133 a__last)) (and (bvule a__first_2 temp___idx_134) (bvule temp___idx_134 a__last_2))) (= (to_rep2 (get a temp___idx_133 temp___idx_134)) (to_rep2 (get b (bvadd (bvsub b__first a__first) temp___idx_133) (bvadd (bvsub b__first_2 a__first_2) temp___idx_134))))))) true false))
(assert (forall ((a map1) (b map1)) (forall ((a__first (_ BitVec 8)) (a__last (_ BitVec 8)) (a__first_2 (_ BitVec 8)) (a__last_2 (_ BitVec 8)) (b__first (_ BitVec 8)) (b__last (_ BitVec 8)) (b__first_2 (_ BitVec 8)) (b__last_2 (_ BitVec 8))) (=> (= (bool_eq2 b b__first b__last b__first_2 b__last_2 a a__first a__last a__first_2 a__last_2) true) (and (and (ite (bvule a__first a__last) (and (bvule b__first b__last) (= (bvsub a__last a__first) (bvsub b__last b__first))) (bvugt b__first b__last)) (ite (bvule a__first_2 a__last_2) (and (bvule b__first_2 b__last_2) (= (bvsub a__last_2 a__first_2) (bvsub b__last_2 b__first_2))) (bvugt b__first_2 b__last_2))) (forall ((temp___idx_133 (_ BitVec 8)) (temp___idx_134 (_ BitVec 8))) (=> (and (and (bvule a__first temp___idx_133) (bvule temp___idx_133 a__last)) (and (bvule a__first_2 temp___idx_134) (bvule temp___idx_134 a__last_2))) (= (to_rep2 (get a temp___idx_133 temp___idx_134)) (to_rep2 (get b (bvadd (bvsub b__first a__first) temp___idx_133) (bvadd (bvsub b__first_2 a__first_2) temp___idx_134)))))))))))
(declare-sort states 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (states states) Bool)
(declare-const dummy7 states)
(declare-datatypes () ((states__ref (mk_states__ref (states__content states)))))
(define-fun states__ref___projection ((a states__ref)) states (states__content a))
(declare-sort byte_absorption_number 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 199)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq8 (byte_absorption_number byte_absorption_number) Bool)
(declare-const dummy8 byte_absorption_number)
(declare-datatypes () ((byte_absorption_number__ref (mk_byte_absorption_number__ref (byte_absorption_number__content byte_absorption_number)))))
(define-fun byte_absorption_number__ref___projection ((a byte_absorption_number__ref)) byte_absorption_number (byte_absorption_number__content a))
(declare-sort bit_absorption_number 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 1599)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq9 (bit_absorption_number bit_absorption_number) Bool)
(declare-const dummy9 bit_absorption_number)
(declare-datatypes () ((bit_absorption_number__ref (mk_bit_absorption_number__ref (bit_absorption_number__content bit_absorption_number)))))
(define-fun bit_absorption_number__ref___projection ((a bit_absorption_number__ref)) bit_absorption_number (bit_absorption_number__content a))
(declare-fun to_rep3 (bit_absorption_number) Int)
(declare-fun of_rep3 (Int) bit_absorption_number)
(assert (forall ((x bit_absorption_number)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x bit_absorption_number)) (! (in_range7 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort rate_number 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 199)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq10 (rate_number rate_number) Bool)
(declare-const dummy10 rate_number)
(declare-datatypes () ((rate_number__ref (mk_rate_number__ref (rate_number__content rate_number)))))
(define-fun rate_number__ref___projection ((a rate_number__ref)) rate_number (rate_number__content a))
(declare-fun to_rep4 (rate_number) Int)
(declare-fun of_rep4 (Int) rate_number)
(assert (forall ((x rate_number)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x rate_number)) (! (in_range8 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-const dummy11 map1)
(declare-const value__size1 Int)
(declare-fun object__size1 (map1) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 (map1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (map1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a map1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a map1)) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a map1)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq11 (map1 map1) Bool)
(declare-fun to_rep5 (states) Int)
(declare-fun of_rep5 (Int) states)
(assert (forall ((x states)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x states)) (! (in_range5 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-fun to_rep6 (byte_absorption_number) Int)
(declare-fun of_rep6 (Int) byte_absorption_number)
(assert (forall ((x byte_absorption_number)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x byte_absorption_number)) (! (in_range6 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-const dummy12 (Array Int byte))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int byte)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int byte)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int byte)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq12 ((Array Int byte) (Array Int byte)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__keccak__keccak_1600__sponge__context__state map1) (rec__keccak__keccak_1600__sponge__context__block (Array Int byte)) (rec__keccak__keccak_1600__sponge__context__bits_absorbed bit_absorption_number) (rec__keccak__keccak_1600__sponge__context__bytes_squeezed byte_absorption_number) (rec__keccak__keccak_1600__sponge__context__rate rate_number) (rec__keccak__keccak_1600__sponge__context__curr_state states)))))
(define-fun us_split_fields_State__projection ((a us_split_fields)) map1 (rec__keccak__keccak_1600__sponge__context__state a))
(define-fun us_split_fields_Block__projection ((a us_split_fields)) (Array Int byte) (rec__keccak__keccak_1600__sponge__context__block a))
(define-fun us_split_fields_Bits_Absorbed__projection ((a us_split_fields)) bit_absorption_number (rec__keccak__keccak_1600__sponge__context__bits_absorbed a))
(define-fun us_split_fields_Bytes_Squeezed__projection ((a us_split_fields)) byte_absorption_number (rec__keccak__keccak_1600__sponge__context__bytes_squeezed a))
(define-fun us_split_fields_Rate__projection ((a us_split_fields)) rate_number (rec__keccak__keccak_1600__sponge__context__rate a))
(define-fun us_split_fields_Curr_State__projection ((a us_split_fields)) states (rec__keccak__keccak_1600__sponge__context__curr_state a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq3 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (and (and (= (bool_eq2 (rec__keccak__keccak_1600__sponge__context__state (us_split_fields1 a)) ((_ int2bv 8) 0) ((_ int2bv 8) 4) ((_ int2bv 8) 0) ((_ int2bv 8) 4) (rec__keccak__keccak_1600__sponge__context__state (us_split_fields1 b)) ((_ int2bv 8) 0) ((_ int2bv 8) 4) ((_ int2bv 8) 0) ((_ int2bv 8) 4)) true) (= (bool_eq (rec__keccak__keccak_1600__sponge__context__block (us_split_fields1 a)) 0 199 (rec__keccak__keccak_1600__sponge__context__block (us_split_fields1 b)) 0 199) true)) (= (to_rep3 (rec__keccak__keccak_1600__sponge__context__bits_absorbed (us_split_fields1 a))) (to_rep3 (rec__keccak__keccak_1600__sponge__context__bits_absorbed (us_split_fields1 b))))) (= (to_rep6 (rec__keccak__keccak_1600__sponge__context__bytes_squeezed (us_split_fields1 a))) (to_rep6 (rec__keccak__keccak_1600__sponge__context__bytes_squeezed (us_split_fields1 b))))) (= (to_rep4 (rec__keccak__keccak_1600__sponge__context__rate (us_split_fields1 a))) (to_rep4 (rec__keccak__keccak_1600__sponge__context__rate (us_split_fields1 b))))) (= (to_rep5 (rec__keccak__keccak_1600__sponge__context__curr_state (us_split_fields1 a))) (to_rep5 (rec__keccak__keccak_1600__sponge__context__curr_state (us_split_fields1 b))))) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const keccak__keccak_1600__sponge__context__state__first__bit Int)
(declare-const keccak__keccak_1600__sponge__context__state__last__bit Int)
(declare-const keccak__keccak_1600__sponge__context__state__position Int)
(assert (<= 0 keccak__keccak_1600__sponge__context__state__first__bit))
(assert (< keccak__keccak_1600__sponge__context__state__first__bit keccak__keccak_1600__sponge__context__state__last__bit))
(assert (<= 0 keccak__keccak_1600__sponge__context__state__position))
(declare-const keccak__keccak_1600__sponge__context__block__first__bit Int)
(declare-const keccak__keccak_1600__sponge__context__block__last__bit Int)
(declare-const keccak__keccak_1600__sponge__context__block__position Int)
(assert (<= 0 keccak__keccak_1600__sponge__context__block__first__bit))
(assert (< keccak__keccak_1600__sponge__context__block__first__bit keccak__keccak_1600__sponge__context__block__last__bit))
(assert (<= 0 keccak__keccak_1600__sponge__context__block__position))
(declare-const keccak__keccak_1600__sponge__context__bits_absorbed__first__bit Int)
(declare-const keccak__keccak_1600__sponge__context__bits_absorbed__last__bit Int)
(declare-const keccak__keccak_1600__sponge__context__bits_absorbed__position Int)
(assert (<= 0 keccak__keccak_1600__sponge__context__bits_absorbed__first__bit))
(assert (< keccak__keccak_1600__sponge__context__bits_absorbed__first__bit keccak__keccak_1600__sponge__context__bits_absorbed__last__bit))
(assert (<= 0 keccak__keccak_1600__sponge__context__bits_absorbed__position))
(declare-const keccak__keccak_1600__sponge__context__bytes_squeezed__first__bit Int)
(declare-const keccak__keccak_1600__sponge__context__bytes_squeezed__last__bit Int)
(declare-const keccak__keccak_1600__sponge__context__bytes_squeezed__position Int)
(assert (<= 0 keccak__keccak_1600__sponge__context__bytes_squeezed__first__bit))
(assert (< keccak__keccak_1600__sponge__context__bytes_squeezed__first__bit keccak__keccak_1600__sponge__context__bytes_squeezed__last__bit))
(assert (<= 0 keccak__keccak_1600__sponge__context__bytes_squeezed__position))
(declare-const keccak__keccak_1600__sponge__context__rate__first__bit Int)
(declare-const keccak__keccak_1600__sponge__context__rate__last__bit Int)
(declare-const keccak__keccak_1600__sponge__context__rate__position Int)
(assert (<= 0 keccak__keccak_1600__sponge__context__rate__first__bit))
(assert (< keccak__keccak_1600__sponge__context__rate__first__bit keccak__keccak_1600__sponge__context__rate__last__bit))
(assert (<= 0 keccak__keccak_1600__sponge__context__rate__position))
(declare-const keccak__keccak_1600__sponge__context__curr_state__first__bit Int)
(declare-const keccak__keccak_1600__sponge__context__curr_state__last__bit Int)
(declare-const keccak__keccak_1600__sponge__context__curr_state__position Int)
(assert (<= 0 keccak__keccak_1600__sponge__context__curr_state__first__bit))
(assert (< keccak__keccak_1600__sponge__context__curr_state__first__bit keccak__keccak_1600__sponge__context__curr_state__last__bit))
(assert (<= 0 keccak__keccak_1600__sponge__context__curr_state__position))
(declare-fun user_eq13 (us_rep us_rep) Bool)
(declare-const dummy13 us_rep)
(declare-datatypes () ((context__ref (mk_context__ref (context__content us_rep)))))
(define-fun context__ref___projection ((a context__ref)) us_rep (context__content a))
(declare-fun state_of (us_rep) Int)
(declare-fun state_of__function_guard (Int us_rep) Bool)
(define-fun dynamic_invariant5 ((temp___expr_364 Int) (temp___is_init_361 Bool) (temp___skip_constant_362 Bool) (temp___do_toplevel_363 Bool)) Bool (=> (or (= temp___is_init_361 true) (<= 0 1)) (in_range5 temp___expr_364)))
(assert (forall ((ctx us_rep)) (! (dynamic_invariant5 (state_of ctx) true false true) :pattern ((state_of ctx)))))
(assert (forall ((ctx us_rep)) (! (= (state_of ctx) (to_rep5 (rec__keccak__keccak_1600__sponge__context__curr_state (us_split_fields1 ctx)))) :pattern ((state_of ctx)))))
(declare-fun rate_of (us_rep) Int)
(declare-fun rate_of__function_guard (Int us_rep) Bool)
(assert (forall ((ctx us_rep)) (! (let ((result (rate_of ctx))) (and (< result 1600) (dynamic_invariant1 result true false true))) :pattern ((rate_of ctx)))))
(assert (forall ((ctx us_rep)) (! (= (rate_of ctx) (* (to_rep4 (rec__keccak__keccak_1600__sponge__context__rate (us_split_fields1 ctx))) 8)) :pattern ((rate_of ctx)))))
(declare-fun in_queue_bit_length (us_rep) Int)
(declare-fun in_queue_bit_length__function_guard (Int us_rep) Bool)
(assert (forall ((ctx us_rep)) (! (let ((result (in_queue_bit_length ctx))) (and (< result 1600) (dynamic_invariant result true false true))) :pattern ((in_queue_bit_length ctx)))))
(assert (forall ((ctx us_rep)) (! (= (in_queue_bit_length ctx) (to_rep3 (rec__keccak__keccak_1600__sponge__context__bits_absorbed (us_split_fields1 ctx)))) :pattern ((in_queue_bit_length ctx)))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const data us_t)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const bit_length Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const r74s Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const r75s Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const r78s Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq14 (integer integer) Bool)
(declare-const dummy14 integer)
(declare-datatypes () ((t76s__ref (mk_t76s__ref (t76s__content integer)))))
(define-fun t76s__ref___projection ((a t76s__ref)) integer (t76s__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int byte)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int byte) (elts1 a))
(define-fun of_array1 ((a (Array Int byte)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int byte)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int byte)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int byte)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq4 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq15 (us_t1 us_t1) Bool)
(declare-const dummy15 us_t1)
(declare-datatypes () ((t77s__ref (mk_t77s__ref (t77s__content us_t1)))))
(define-fun t77s__ref___projection ((a t77s__ref)) us_t1 (t77s__content a))
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq16 (integer integer) Bool)
(declare-const dummy16 integer)
(declare-datatypes () ((t79s__ref (mk_t79s__ref (t79s__content integer)))))
(define-fun t79s__ref___projection ((a t79s__ref)) integer (t79s__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int byte)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int byte) (elts2 a))
(define-fun of_array2 ((a (Array Int byte)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int byte)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int byte)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int byte)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment5 a))))
(define-fun bool_eq5 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq17 (us_t2 us_t2) Bool)
(declare-const dummy17 us_t2)
(declare-datatypes () ((t80s__ref (mk_t80s__ref (t80s__content us_t2)))))
(define-fun t80s__ref___projection ((a t80s__ref)) us_t2 (t80s__content a))
(declare-const r81s Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const r82s Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const r85s Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq18 (integer integer) Bool)
(declare-const dummy18 integer)
(declare-datatypes () ((t83s__ref (mk_t83s__ref (t83s__content integer)))))
(define-fun t83s__ref___projection ((a t83s__ref)) integer (t83s__content a))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property5 range_first range_last low) (dynamic_property5 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int byte)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int byte) (elts3 a))
(define-fun of_array3 ((a (Array Int byte)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int byte)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int byte)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int byte)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment6 a))))
(define-fun bool_eq6 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq19 (us_t3 us_t3) Bool)
(declare-const dummy19 us_t3)
(declare-datatypes () ((t84s__ref (mk_t84s__ref (t84s__content us_t3)))))
(define-fun t84s__ref___projection ((a t84s__ref)) us_t3 (t84s__content a))
(define-fun dynamic_property7 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq20 (integer integer) Bool)
(declare-const dummy20 integer)
(declare-datatypes () ((t86s__ref (mk_t86s__ref (t86s__content integer)))))
(define-fun t86s__ref___projection ((a t86s__ref)) integer (t86s__content a))
(declare-sort t4 0)
(declare-fun first8 (t4) integer)
(declare-fun last8 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first8 (mk4 f l))) f) (= (to_rep1 (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property7 range_first range_last low) (dynamic_property7 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int byte)) (rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int byte) (elts4 a))
(define-fun of_array4 ((a (Array Int byte)) (f Int) (l Int)) us_t4 (mk___t4 a (mk4 f l)))
(define-fun first9 ((a us_t4)) Int (to_rep1 (first8 (rt4 a))))
(define-fun last9 ((a us_t4)) Int (to_rep1 (last8 (rt4 a))))
(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last9 a)) (+ (- (last9 a) (first9 a)) 1) 0))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int byte)) Int)
(declare-const value__component__size6 Int)
(declare-fun object__component__size6 ((Array Int byte)) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int byte)) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size6))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size6 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment7 a))))
(define-fun bool_eq7 ((x us_t4) (y us_t4)) Bool (bool_eq (elts4 x) (to_rep1 (first8 (rt4 x))) (to_rep1 (last8 (rt4 x))) (elts4 y) (to_rep1 (first8 (rt4 y))) (to_rep1 (last8 (rt4 y)))))
(declare-fun user_eq21 (us_t4 us_t4) Bool)
(declare-const dummy21 us_t4)
(declare-datatypes () ((t87s__ref (mk_t87s__ref (t87s__content us_t4)))))
(define-fun t87s__ref___projection ((a t87s__ref)) us_t4 (t87s__content a))
(declare-const r88s Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(define-fun dynamic_property9 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq22 (integer integer) Bool)
(declare-const dummy22 integer)
(declare-datatypes () ((t89s__ref (mk_t89s__ref (t89s__content integer)))))
(define-fun t89s__ref___projection ((a t89s__ref)) integer (t89s__content a))
(declare-sort t5 0)
(declare-fun first10 (t5) integer)
(declare-fun last10 (t5) integer)
(declare-fun mk5 (Int Int) t5)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first10 (mk5 f l))) f) (= (to_rep1 (last10 (mk5 f l))) l)))) :pattern ((mk5 f l)))))
(define-fun dynamic_property10 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property9 range_first range_last low) (dynamic_property9 range_first range_last high))))))
(declare-datatypes () ((us_t5 (mk___t5 (elts5 (Array Int byte)) (rt5 t5)))))
(define-fun to_array5 ((a us_t5)) (Array Int byte) (elts5 a))
(define-fun of_array5 ((a (Array Int byte)) (f Int) (l Int)) us_t5 (mk___t5 a (mk5 f l)))
(define-fun first11 ((a us_t5)) Int (to_rep1 (first10 (rt5 a))))
(define-fun last11 ((a us_t5)) Int (to_rep1 (last10 (rt5 a))))
(define-fun length5 ((a us_t5)) Int (ite (<= (first11 a) (last11 a)) (+ (- (last11 a) (first11 a)) 1) 0))
(declare-const value__size8 Int)
(declare-fun object__size8 ((Array Int byte)) Int)
(declare-const value__component__size7 Int)
(declare-fun object__component__size7 ((Array Int byte)) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 ((Array Int byte)) Int)
(assert (<= 0 value__size8))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size8 a))))
(assert (<= 0 value__component__size7))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size7 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment8 a))))
(define-fun bool_eq8 ((x us_t5) (y us_t5)) Bool (bool_eq (elts5 x) (to_rep1 (first10 (rt5 x))) (to_rep1 (last10 (rt5 x))) (elts5 y) (to_rep1 (first10 (rt5 y))) (to_rep1 (last10 (rt5 y)))))
(declare-fun user_eq23 (us_t5 us_t5) Bool)
(declare-const dummy23 us_t5)
(declare-datatypes () ((t90s__ref (mk_t90s__ref (t90s__content us_t5)))))
(define-fun t90s__ref___projection ((a t90s__ref)) us_t5 (t90s__content a))
(declare-const r91s Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-const r92s Int)
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(define-fun dynamic_property11 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq24 (integer integer) Bool)
(declare-const dummy24 integer)
(declare-datatypes () ((t93s__ref (mk_t93s__ref (t93s__content integer)))))
(define-fun t93s__ref___projection ((a t93s__ref)) integer (t93s__content a))
(declare-sort t6 0)
(declare-fun first12 (t6) integer)
(declare-fun last12 (t6) integer)
(declare-fun mk6 (Int Int) t6)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first12 (mk6 f l))) f) (= (to_rep1 (last12 (mk6 f l))) l)))) :pattern ((mk6 f l)))))
(define-fun dynamic_property12 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property11 range_first range_last low) (dynamic_property11 range_first range_last high))))))
(declare-datatypes () ((us_t6 (mk___t6 (elts6 (Array Int byte)) (rt6 t6)))))
(define-fun to_array6 ((a us_t6)) (Array Int byte) (elts6 a))
(define-fun of_array6 ((a (Array Int byte)) (f Int) (l Int)) us_t6 (mk___t6 a (mk6 f l)))
(define-fun first13 ((a us_t6)) Int (to_rep1 (first12 (rt6 a))))
(define-fun last13 ((a us_t6)) Int (to_rep1 (last12 (rt6 a))))
(define-fun length6 ((a us_t6)) Int (ite (<= (first13 a) (last13 a)) (+ (- (last13 a) (first13 a)) 1) 0))
(declare-const value__size9 Int)
(declare-fun object__size9 ((Array Int byte)) Int)
(declare-const value__component__size8 Int)
(declare-fun object__component__size8 ((Array Int byte)) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 ((Array Int byte)) Int)
(assert (<= 0 value__size9))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size9 a))))
(assert (<= 0 value__component__size8))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size8 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment9 a))))
(define-fun bool_eq9 ((x us_t6) (y us_t6)) Bool (bool_eq (elts6 x) (to_rep1 (first12 (rt6 x))) (to_rep1 (last12 (rt6 x))) (elts6 y) (to_rep1 (first12 (rt6 y))) (to_rep1 (last12 (rt6 y)))))
(declare-fun user_eq25 (us_t6 us_t6) Bool)
(declare-const dummy25 us_t6)
(declare-datatypes () ((t94s__ref (mk_t94s__ref (t94s__content us_t6)))))
(define-fun t94s__ref___projection ((a t94s__ref)) us_t6 (t94s__content a))
(declare-const r95s Int)
(declare-const attr__ATTRIBUTE_ADDRESS21 Int)
(declare-const r98s Int)
(declare-const attr__ATTRIBUTE_ADDRESS22 Int)
(declare-const r99s Int)
(declare-const attr__ATTRIBUTE_ADDRESS23 Int)
(define-fun dynamic_property13 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq26 (integer integer) Bool)
(declare-const dummy26 integer)
(declare-datatypes () ((t96s__ref (mk_t96s__ref (t96s__content integer)))))
(define-fun t96s__ref___projection ((a t96s__ref)) integer (t96s__content a))
(declare-sort t7 0)
(declare-fun first14 (t7) integer)
(declare-fun last14 (t7) integer)
(declare-fun mk7 (Int Int) t7)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first14 (mk7 f l))) f) (= (to_rep1 (last14 (mk7 f l))) l)))) :pattern ((mk7 f l)))))
(define-fun dynamic_property14 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property13 range_first range_last low) (dynamic_property13 range_first range_last high))))))
(declare-datatypes () ((us_t7 (mk___t7 (elts7 (Array Int byte)) (rt7 t7)))))
(define-fun to_array7 ((a us_t7)) (Array Int byte) (elts7 a))
(define-fun of_array7 ((a (Array Int byte)) (f Int) (l Int)) us_t7 (mk___t7 a (mk7 f l)))
(define-fun first15 ((a us_t7)) Int (to_rep1 (first14 (rt7 a))))
(define-fun last15 ((a us_t7)) Int (to_rep1 (last14 (rt7 a))))
(define-fun length7 ((a us_t7)) Int (ite (<= (first15 a) (last15 a)) (+ (- (last15 a) (first15 a)) 1) 0))
(declare-const value__size10 Int)
(declare-fun object__size10 ((Array Int byte)) Int)
(declare-const value__component__size9 Int)
(declare-fun object__component__size9 ((Array Int byte)) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 ((Array Int byte)) Int)
(assert (<= 0 value__size10))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size10 a))))
(assert (<= 0 value__component__size9))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size9 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment10 a))))
(define-fun bool_eq10 ((x us_t7) (y us_t7)) Bool (bool_eq (elts7 x) (to_rep1 (first14 (rt7 x))) (to_rep1 (last14 (rt7 x))) (elts7 y) (to_rep1 (first14 (rt7 y))) (to_rep1 (last14 (rt7 y)))))
(declare-fun user_eq27 (us_t7 us_t7) Bool)
(declare-const dummy27 us_t7)
(declare-datatypes () ((t97s__ref (mk_t97s__ref (t97s__content us_t7)))))
(define-fun t97s__ref___projection ((a t97s__ref)) us_t7 (t97s__content a))
(define-fun dynamic_property15 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)
(declare-fun user_eq28 (integer integer) Bool)
(declare-const dummy28 integer)
(declare-datatypes () ((t100s__ref (mk_t100s__ref (t100s__content integer)))))
(define-fun t100s__ref___projection ((a t100s__ref)) integer (t100s__content a))
(declare-sort t8 0)
(declare-fun first16 (t8) integer)
(declare-fun last16 (t8) integer)
(declare-fun mk8 (Int Int) t8)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first16 (mk8 f l))) f) (= (to_rep1 (last16 (mk8 f l))) l)))) :pattern ((mk8 f l)))))
(define-fun dynamic_property16 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property15 range_first range_last low) (dynamic_property15 range_first range_last high))))))
(declare-datatypes () ((us_t8 (mk___t8 (elts8 (Array Int byte)) (rt8 t8)))))
(define-fun to_array8 ((a us_t8)) (Array Int byte) (elts8 a))
(define-fun of_array8 ((a (Array Int byte)) (f Int) (l Int)) us_t8 (mk___t8 a (mk8 f l)))
(define-fun first17 ((a us_t8)) Int (to_rep1 (first16 (rt8 a))))
(define-fun last17 ((a us_t8)) Int (to_rep1 (last16 (rt8 a))))
(define-fun length8 ((a us_t8)) Int (ite (<= (first17 a) (last17 a)) (+ (- (last17 a) (first17 a)) 1) 0))
(declare-const value__size11 Int)
(declare-fun object__size11 ((Array Int byte)) Int)
(declare-const value__component__size10 Int)
(declare-fun object__component__size10 ((Array Int byte)) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 ((Array Int byte)) Int)
(assert (<= 0 value__size11))
(assert (forall ((a (Array Int byte))) (<= 0 (object__size11 a))))
(assert (<= 0 value__component__size10))
(assert (forall ((a (Array Int byte))) (<= 0 (object__component__size10 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a (Array Int byte))) (<= 0 (object__alignment11 a))))
(define-fun bool_eq11 ((x us_t8) (y us_t8)) Bool (bool_eq (elts8 x) (to_rep1 (first16 (rt8 x))) (to_rep1 (last16 (rt8 x))) (elts8 y) (to_rep1 (first16 (rt8 y))) (to_rep1 (last16 (rt8 y)))))
(declare-fun user_eq29 (us_t8 us_t8) Bool)
(declare-const dummy29 us_t8)
(declare-datatypes () ((t101s__ref (mk_t101s__ref (t101s__content us_t8)))))
(define-fun t101s__ref___projection ((a t101s__ref)) us_t8 (t101s__content a))
(define-fun dynamic_invariant6 ((temp___expr_249 (_ BitVec 8)) (temp___is_init_246 Bool) (temp___skip_constant_247 Bool) (temp___do_toplevel_248 Bool)) Bool true)
(define-fun dynamic_invariant7 ((temp___expr_391 Int) (temp___is_init_388 Bool) (temp___skip_constant_389 Bool) (temp___do_toplevel_390 Bool)) Bool (=> (or (= temp___is_init_388 true) (<= 1 199)) (in_range8 temp___expr_391)))
(define-fun dynamic_invariant8 ((temp___expr_370 Int) (temp___is_init_367 Bool) (temp___skip_constant_368 Bool) (temp___do_toplevel_369 Bool)) Bool (=> (or (= temp___is_init_367 true) (<= 0 199)) (in_range6 temp___expr_370)))
(define-fun dynamic_invariant9 ((temp___expr_385 Int) (temp___is_init_382 Bool) (temp___skip_constant_383 Bool) (temp___do_toplevel_384 Bool)) Bool (=> (or (= temp___is_init_382 true) (<= 0 1599)) (in_range7 temp___expr_385)))
(declare-const ctx__split_fields map1)
(declare-const ctx__split_fields1 (Array Int byte))
(declare-const ctx__split_fields2 bit_absorption_number)
(declare-const ctx__split_fields3 byte_absorption_number)
(declare-const ctx__split_fields4 rate_number)
(declare-const ctx__split_fields5 states)
(declare-const offset Int)
(declare-const remaining_bits Int)
(declare-const remaining_bytes Int)
(declare-const initial_data_len Int)
(declare-const free_bytes_in_block Int)
(declare-const free_bits_in_block Int)
(declare-const block_offset Int)
(declare-const data_last Int)
(declare-const initial_bit_rate Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Int)
(declare-const keccak__keccak_1600__sponge__absorb__R75s__assume Int)
(declare-const o17 (Array Int byte))
(declare-const temp___858 (Array Int byte))
(declare-const temp___8581 t2)
(declare-const temp___859 (Array Int byte))
(declare-const temp___8591 t1)
(declare-const o18 (Array Int byte))
(declare-const temp___861 (Array Int byte))
(declare-const temp___8611 t1)
(declare-const temp___863 (Array Int byte))
(declare-const temp___8631 t1)
(declare-const o19 (Array Int byte))
(declare-const o20 map1)
(declare-const o21 (Array Int byte))
(declare-const o22 bit_absorption_number)
(declare-const o23 byte_absorption_number)
(declare-const o24 rate_number)
(declare-const o25 states)
(declare-const temp___866 map1)
(declare-const temp___8661 (Array Int byte))
(declare-const temp___8662 bit_absorption_number)
(declare-const temp___8663 byte_absorption_number)
(declare-const temp___8664 rate_number)
(declare-const temp___8665 states)
(declare-const o26 Int)
(declare-const o27 Int)
(declare-const o28 bit_absorption_number)
(declare-const o29 map1)
(declare-const o30 (Array Int byte))
(declare-const o31 bit_absorption_number)
(declare-const o32 byte_absorption_number)
(declare-const o33 rate_number)
(declare-const o34 states)
(declare-const temp___868 map1)
(declare-const temp___8681 (Array Int byte))
(declare-const temp___8682 bit_absorption_number)
(declare-const temp___8683 byte_absorption_number)
(declare-const temp___8684 rate_number)
(declare-const temp___8685 states)
(declare-const keccak__keccak_1600__sponge__absorb__R82s__assume Int)
(declare-const keccak__keccak_1600__sponge__absorb__R85s__assume Int)
(declare-const o35 (Array Int byte))
(declare-const temp___817 us_t4)
(declare-const temp___818 us_t3)
(declare-const o36 (Array Int byte))
(declare-const temp___820 us_t3)
(declare-const temp___822 us_t3)
(declare-const o37 (Array Int byte))
(declare-const o38 us_split_fields)
(declare-const temp___825 us_rep)
(declare-const o39 Int)
(declare-const o40 Int)
(declare-const o41 Int)
(declare-const o42 Int)
(declare-const o43 Int)
(declare-const o44 (Array Int byte))
(declare-const temp___828 us_t5)
(declare-const o45 us_t)
(declare-const o46 Int)
(declare-const o47 Int)
(declare-const o48 Int)
(declare-const temp___841 Int)
(declare-const temp___840 Int)
(declare-const temp___839 Int)
(declare-const temp___838 us_rep)
(declare-const temp___844 int__ref)
(declare-const temp___843 int__ref)
(declare-const temp___842 int__ref)
(declare-const o49 Int)
(declare-const o50 Int)
(declare-const o51 Int)
(declare-const o52 Bool)
(declare-const o53 Int)
(declare-const o54 Bool)
(declare-const o55 Int)
(declare-const o56 Bool)
(declare-const keccak__keccak_1600__sponge__absorb__L_1__R91s__assume Int)
(declare-const o57 Int)
(declare-const o58 Int)
(declare-const keccak__keccak_1600__sponge__absorb__L_1__R92s__assume Int)
(declare-const o59 (Array Int byte))
(declare-const temp___833 us_t6)
(declare-const o60 us_t)
(declare-const o61 Int)
(declare-const o62 Int)
(declare-const o63 Int)
(declare-const keccak__keccak_1600__sponge__absorb__R98s__assume Int)
(declare-const o64 Int)
(declare-const o65 Int)
(declare-const keccak__keccak_1600__sponge__absorb__R99s__assume Int)
(declare-const o66 (Array Int byte))
(declare-const temp___845 us_t8)
(declare-const temp___846 us_t7)
(declare-const o67 (Array Int byte))
(declare-const temp___849 us_t7)
(declare-const temp___851 us_t7)
(declare-const o68 (Array Int byte))
(declare-const o69 us_split_fields)
(declare-const temp___854 us_rep)
(declare-const o70 Int)
(declare-const o71 Bool)
(declare-const o72 Int)
(declare-const o73 Bool)
(declare-const o74 Int)
(declare-const o75 Bool)
(declare-const o76 Int)
(declare-const o77 bit_absorption_number)
(declare-const o78 us_split_fields)
(declare-const temp___856 us_rep)
(declare-const o79 Int)
(declare-const o80 Int)
(declare-const o81 Int)
(declare-const o82 Int)
(declare-const o83 Bool)
(declare-const ctx__split_fields6 us_split_fields)
(declare-const free_bytes_in_block1 Int)
(declare-const free_bits_in_block1 Int)
(declare-const block_offset1 Int)
(declare-const data_last1 Int)
(declare-const result Bool)
(declare-const result1 Bool)
(declare-const result2 int__ref)
(declare-const offset1 Int)
(declare-const result3 int__ref)
(declare-const remaining_bits1 Int)
(declare-const result4 int__ref)
(declare-const remaining_bytes1 Int)
(declare-const result5 int__ref)
(declare-const initial_data_len1 Int)
(declare-const result6 int__ref)
(declare-const initial_bit_rate1 Int)
(declare-const result7 int__ref)
(declare-const data_last2 Int)
(declare-const result8 int__ref)
(declare-const free_bits_in_block2 Int)
(declare-const result9 int__ref)
(declare-const free_bytes_in_block2 Int)
(declare-const result10 int__ref)
(declare-const block_offset2 Int)
(declare-const result11 us_split_fields__ref)
(declare-const ctx__split_fields7 us_split_fields)
(declare-const result12 us_split_fields__ref)
(declare-const ctx__split_fields8 us_split_fields)
(declare-const result13 int__ref)
(declare-const block_offset3 Int)
(declare-const result14 us_split_fields__ref)
(declare-const ctx__split_fields9 us_split_fields)
(declare-const result15 int__ref)
(declare-const offset2 Int)
(declare-const result16 int__ref)
(declare-const remaining_bytes2 Int)
(declare-const result17 int__ref)
(declare-const remaining_bits2 Int)
(declare-const keccak__keccak_1600__keccakf_1600_lanes__xor_bits_into_state__a map1)
(declare-const result18 us_split_fields__ref)
(declare-const ctx__split_fields10 us_split_fields)
(declare-const keccak__keccak_1600__keccakf_1600_permutation__permute__a map1)
(declare-const result19 us_split_fields__ref)
(declare-const ctx__split_fields11 us_split_fields)
(declare-const ctx__split_fields12 us_split_fields)
(declare-const offset3 Int)
(declare-const remaining_bits3 Int)
(declare-const remaining_bytes3 Int)
(declare-const temp___8441 Int)
(declare-const temp___8431 Int)
(declare-const temp___8421 Int)
(declare-const result20 int__ref)
(declare-const temp___8442 Int)
(declare-const result21 int__ref)
(declare-const temp___8432 Int)
(declare-const result22 int__ref)
(declare-const temp___8422 Int)
(declare-const keccak__keccak_1600__keccakf_1600_lanes__xor_bits_into_state__a1 map1)
(declare-const result23 us_split_fields__ref)
(declare-const ctx__split_fields13 us_split_fields)
(declare-const keccak__keccak_1600__keccakf_1600_permutation__permute__a1 map1)
(declare-const result24 us_split_fields__ref)
(declare-const ctx__split_fields14 us_split_fields)
(declare-const result25 int__ref)
(declare-const offset4 Int)
(declare-const result26 int__ref)
(declare-const remaining_bytes4 Int)
(declare-const result27 int__ref)
(declare-const remaining_bits4 Int)
(declare-const ctx__split_fields15 us_split_fields__ref)
(declare-const offset5 int__ref)
(declare-const remaining_bits5 int__ref)
(declare-const remaining_bytes5 int__ref)
(declare-const temp___8443 int__ref)
(declare-const temp___8433 int__ref)
(declare-const temp___8423 int__ref)
(declare-const ctx__split_fields16 us_split_fields)
(declare-const offset6 Int)
(declare-const remaining_bits6 Int)
(declare-const remaining_bytes6 Int)
(declare-const temp___8444 Int)
(declare-const temp___8434 Int)
(declare-const temp___8424 Int)
(declare-const ctx__split_fields17 us_split_fields__ref)
(declare-const offset7 int__ref)
(declare-const remaining_bits7 int__ref)
(declare-const remaining_bytes7 int__ref)
(declare-const ctx__split_fields18 us_split_fields)
(declare-const offset8 Int)
(declare-const remaining_bits8 Int)
(declare-const remaining_bytes8 Int)
(declare-const ctx__split_fields19 us_split_fields__ref)
(declare-const offset9 int__ref)
(declare-const remaining_bits9 int__ref)
(declare-const remaining_bytes9 int__ref)
(declare-const ctx__split_fields20 us_split_fields)
(declare-const offset10 Int)
(declare-const remaining_bits10 Int)
(declare-const remaining_bytes10 Int)
(declare-const result28 us_split_fields__ref)
(declare-const ctx__split_fields21 us_split_fields)
(declare-const ctx__split_fields22 us_split_fields__ref)
(declare-const ctx__split_fields23 us_split_fields)
(declare-const result29 us_split_fields__ref)
(declare-const ctx__split_fields24 us_split_fields)
(declare-const ctx__split_fields25 us_split_fields__ref)
(declare-const offset11 int__ref)
(declare-const remaining_bits11 int__ref)
(declare-const remaining_bytes11 int__ref)
(declare-const block_offset4 int__ref)
(declare-const ctx__split_fields26 us_split_fields)
(declare-const offset12 Int)
(declare-const remaining_bits12 Int)
(declare-const remaining_bytes12 Int)
(declare-const block_offset5 Int)
(declare-const ctx__split_fields27 us_split_fields__ref)
(declare-const offset13 int__ref)
(declare-const remaining_bits13 int__ref)
(declare-const remaining_bytes13 int__ref)
(declare-const free_bytes_in_block3 int__ref)
(declare-const free_bits_in_block3 int__ref)
(declare-const block_offset6 int__ref)
(declare-const data_last3 int__ref)
(declare-const ctx__split_fields28 us_split_fields)
(declare-const offset14 Int)
(declare-const remaining_bits14 Int)
(declare-const remaining_bytes14 Int)
(declare-const free_bytes_in_block4 Int)
(declare-const free_bits_in_block4 Int)
(declare-const block_offset7 Int)
(declare-const data_last4 Int)
(declare-const ctx__split_fields29 us_split_fields__ref)
(declare-const offset15 int__ref)
(declare-const remaining_bits15 int__ref)
(declare-const remaining_bytes15 int__ref)
(declare-const initial_data_len2 int__ref)
(declare-const free_bytes_in_block5 int__ref)
(declare-const free_bits_in_block5 int__ref)
(declare-const block_offset8 int__ref)
(declare-const data_last5 int__ref)
(declare-const initial_bit_rate2 int__ref)
(declare-const ctx__split_fields30 us_split_fields)
(declare-const offset16 Int)
(declare-const remaining_bits16 Int)
(declare-const remaining_bytes16 Int)
(declare-const initial_data_len3 Int)
(declare-const free_bytes_in_block6 Int)
(declare-const free_bits_in_block6 Int)
(declare-const block_offset9 Int)
(declare-const data_last6 Int)
(declare-const initial_bit_rate3 Int)
(assert (dynamic_invariant4 data true false true))
(assert (in_range2 bit_length))
(assert (and (= (state_of (mk___rep (mk___split_fields ctx__split_fields ctx__split_fields1 ctx__split_fields2 ctx__split_fields3 ctx__split_fields4 ctx__split_fields5))) 0) (and (<= bit_length 2147483640) (and (<= (div1 (+ bit_length 7) 8) (length data)) (and (= (mod2 (in_queue_bit_length (mk___rep (mk___split_fields ctx__split_fields ctx__split_fields1 ctx__split_fields2 ctx__split_fields3 ctx__split_fields4 ctx__split_fields5))) 8) 0) (< (in_queue_bit_length (mk___rep (mk___split_fields ctx__split_fields ctx__split_fields1 ctx__split_fields2 ctx__split_fields3 ctx__split_fields4 ctx__split_fields5))) (rate_of (mk___rep (mk___split_fields ctx__split_fields ctx__split_fields1 ctx__split_fields2 ctx__split_fields3 ctx__split_fields4 ctx__split_fields5)))))))))
(assert (= result2 (mk_int__ref offset)))
(assert (= offset1 0))
(assert (in_range2 offset1))
(assert (= result3 (mk_int__ref remaining_bits)))
(assert (= remaining_bits1 bit_length))
(assert (in_range2 remaining_bits1))
(assert (and (= o6 (+ bit_length 7)) (in_range1 (+ bit_length 7))))
(assert (= o7 (div1 o6 8)))
(assert (and (= o8 o7) (in_range2 o7)))
(assert (= result4 (mk_int__ref remaining_bytes)))
(assert (= remaining_bytes1 o8))
(assert (in_range2 remaining_bytes1))
(assert (= result5 (mk_int__ref initial_data_len)))
(assert (= initial_data_len1 remaining_bytes1))
(assert (in_range2 initial_data_len1))
(assert (=> (<= 0 2147483647) (in_range2 free_bytes_in_block)))
(assert (=> (<= 0 2147483647) (in_range2 free_bits_in_block)))
(assert (=> (<= 0 2147483647) (in_range2 block_offset)))
(assert (=> (<= 0 2147483647) (in_range4 data_last)))
(assert (and (= o9 (rate_of (mk___rep (mk___split_fields ctx__split_fields ctx__split_fields1 ctx__split_fields2 ctx__split_fields3 ctx__split_fields4 ctx__split_fields5)))) (and (in_range3 o9) (and (= o9 (* (to_rep4 ctx__split_fields4) 8)) (< o9 1600)))))
(assert (= result6 (mk_int__ref initial_bit_rate)))
(assert (= initial_bit_rate1 o9))
(assert (in_range3 initial_bit_rate1))
(assert (< 0 initial_data_len1))
(assert (and (= o10 (+ (to_rep1 (first (rt data))) (- initial_data_len1 1))) (in_range1 (+ (to_rep1 (first (rt data))) (- initial_data_len1 1)))))
(assert (and (= o11 o10) (in_range4 o10)))
(assert (= result7 (mk_int__ref data_last)))
(assert (= data_last2 o11))
(assert (and (= o12 (rate_of (mk___rep (mk___split_fields ctx__split_fields ctx__split_fields1 ctx__split_fields2 ctx__split_fields3 ctx__split_fields4 ctx__split_fields5)))) (and (in_range3 o12) (and (= o12 (* (to_rep4 ctx__split_fields4) 8)) (< o12 1600)))))
(assert (= o13 (- o12 (to_rep3 ctx__split_fields2))))
(assert (and (= o14 o13) (in_range1 o13)))
(assert (and (= o15 o14) (in_range2 o14)))
(assert (= result8 (mk_int__ref free_bits_in_block)))
(assert (= free_bits_in_block2 o15))
(assert (= result9 (mk_int__ref free_bytes_in_block)))
(assert (= free_bytes_in_block2 (div1 free_bits_in_block2 8)))
(assert (< free_bits_in_block2 1600))
(assert (= (mod2 free_bits_in_block2 8) 0))
(assert (not (< bit_length free_bits_in_block2)))
(assert (=> (< 0 free_bits_in_block2) (= result13 (mk_int__ref block_offset))))
(assert (=> (< 0 free_bits_in_block2) (= block_offset3 (div1 (to_rep3 ctx__split_fields2) 8))))
(assert (=> (< 0 free_bits_in_block2) (= block_offset3 r81s)))
(assert (=> (< 0 free_bits_in_block2) (in_range2 r81s)))
(assert (=> (< 0 free_bits_in_block2) (and (= keccak__keccak_1600__sponge__absorb__R82s__assume (+ block_offset3 (- free_bytes_in_block2 1))) (in_range1 (+ block_offset3 (- free_bytes_in_block2 1))))))
(assert (=> (< 0 free_bits_in_block2) (= keccak__keccak_1600__sponge__absorb__R82s__assume r82s)))
(assert (=> (< 0 free_bits_in_block2) (in_range1 r82s)))
(assert (=> (< 0 free_bits_in_block2) (and (= keccak__keccak_1600__sponge__absorb__R85s__assume (+ (to_rep1 (first (rt data))) (- free_bytes_in_block2 1))) (in_range1 (+ (to_rep1 (first (rt data))) (- free_bytes_in_block2 1))))))
(assert (=> (< 0 free_bits_in_block2) (= keccak__keccak_1600__sponge__absorb__R85s__assume r85s)))
(assert (=> (< 0 free_bits_in_block2) (in_range1 r85s)))
(assert (=> (< 0 free_bits_in_block2) (=> (<= (to_rep1 (first (rt data))) r85s) (and (and (<= (to_rep1 (first (rt data))) (to_rep1 (first (rt data)))) (<= (to_rep1 (first (rt data))) (to_rep1 (last (rt data))))) (and (<= (to_rep1 (first (rt data))) r85s) (<= r85s (to_rep1 (last (rt data)))))))))
(assert (=> (< 0 free_bits_in_block2) (= o35 (elts data))))
(assert (=> (< 0 free_bits_in_block2) (= temp___817 (mk___t4 o35 (mk4 (to_rep1 (first (rt data))) r85s)))))
(assert (=> (< 0 free_bits_in_block2) (= (ite (<= (to_rep1 (first8 (rt4 temp___817))) (to_rep1 (last8 (rt4 temp___817)))) (+ (- (to_rep1 (last8 (rt4 temp___817))) (to_rep1 (first8 (rt4 temp___817)))) 1) 0) (ite (<= r81s r82s) (+ (- r82s r81s) 1) 0))))
(assert (=> (< 0 free_bits_in_block2) (= temp___818 (mk___t3 (slide (elts4 temp___817) (to_rep1 (first8 (rt4 temp___817))) r81s) (mk3 r81s r82s)))))
(assert (=> (< 0 free_bits_in_block2) (=> (<= r81s r82s) (and (and (<= 0 r81s) (<= r81s 199)) (and (<= 0 r82s) (<= r82s 199))))))
(assert (=> (< 0 free_bits_in_block2) (= o36 ctx__split_fields1)))
(assert (=> (< 0 free_bits_in_block2) (= temp___820 (mk___t3 o36 (mk3 r81s r82s)))))
(assert (=> (< 0 free_bits_in_block2) (= (ite (<= (to_rep1 (first6 (rt3 temp___818))) (to_rep1 (last6 (rt3 temp___818)))) (+ (- (to_rep1 (last6 (rt3 temp___818))) (to_rep1 (first6 (rt3 temp___818)))) 1) 0) (ite (<= (to_rep1 (first6 (rt3 temp___820))) (to_rep1 (last6 (rt3 temp___820)))) (+ (- (to_rep1 (last6 (rt3 temp___820))) (to_rep1 (first6 (rt3 temp___820)))) 1) 0))))
(assert (=> (< 0 free_bits_in_block2) (= temp___822 temp___818)))
(assert (=> (< 0 free_bits_in_block2) (forall ((temp___823 Int)) (ite (and (<= r81s temp___823) (<= temp___823 r82s)) (= (select o37 temp___823) (select (elts3 temp___822) temp___823)) (= (select o37 temp___823) (select ctx__split_fields1 temp___823))))))
(assert (=> (< 0 free_bits_in_block2) (= o38 (mk___split_fields ctx__split_fields o37 ctx__split_fields2 ctx__split_fields3 ctx__split_fields4 ctx__split_fields5))))
(assert (=> (< 0 free_bits_in_block2) (= temp___825 (mk___rep o38))))
(assert (=> (< 0 free_bits_in_block2) (= result14 (mk___split_fields__ref (mk___split_fields ctx__split_fields ctx__split_fields1 ctx__split_fields2 ctx__split_fields3 ctx__split_fields4 ctx__split_fields5)))))
(assert (=> (< 0 free_bits_in_block2) (= ctx__split_fields9 (us_split_fields1 temp___825))))
(assert (=> (< 0 free_bits_in_block2) (and (= o39 (+ offset1 free_bytes_in_block2)) (in_range1 (+ offset1 free_bytes_in_block2)))))
(assert (=> (< 0 free_bits_in_block2) (= result15 (mk_int__ref offset1))))
(assert (=> (< 0 free_bits_in_block2) (= offset2 o39)))
(assert (=> (< 0 free_bits_in_block2) (and (= o40 (- remaining_bytes1 free_bytes_in_block2)) (in_range1 (- remaining_bytes1 free_bytes_in_block2)))))
(assert (=> (< 0 free_bits_in_block2) (and (= o41 o40) (in_range2 o40))))
(assert (=> (< 0 free_bits_in_block2) (= result16 (mk_int__ref remaining_bytes1))))
(assert (=> (< 0 free_bits_in_block2) (= remaining_bytes2 o41)))
(assert (=> (< 0 free_bits_in_block2) (and (= o42 (- remaining_bits1 free_bits_in_block2)) (in_range1 (- remaining_bits1 free_bits_in_block2)))))
(assert (=> (< 0 free_bits_in_block2) (and (= o43 o42) (in_range2 o42))))
(assert (=> (< 0 free_bits_in_block2) (= result17 (mk_int__ref remaining_bits1))))
(assert (=> (< 0 free_bits_in_block2) (= remaining_bits2 o43)))
(assert (=> (not (< 0 free_bits_in_block2)) (= block_offset3 block_offset)))
(assert (=> (not (< 0 free_bits_in_block2)) (= remaining_bytes2 remaining_bytes1)))
(assert (=> (not (< 0 free_bits_in_block2)) (= remaining_bits2 remaining_bits1)))
(assert (=> (not (< 0 free_bits_in_block2)) (= offset2 offset1)))
(assert (=> (not (< 0 free_bits_in_block2)) (= ctx__split_fields9 (mk___split_fields ctx__split_fields ctx__split_fields1 ctx__split_fields2 ctx__split_fields3 ctx__split_fields4 ctx__split_fields5))))
(assert (=> (not (< 0 free_bits_in_block2)) (= block_offset3 block_offset1)))
(assert (=> (not (< 0 free_bits_in_block2)) (= remaining_bytes2 remaining_bytes1)))
(assert (=> (not (< 0 free_bits_in_block2)) (= remaining_bits2 remaining_bits1)))
(assert (=> (not (< 0 free_bits_in_block2)) (= offset2 offset1)))
(assert (=> (not (< 0 free_bits_in_block2)) (= ctx__split_fields9 ctx__split_fields6)))
(assert (= (- (to_rep4 (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields9)) 1) r88s))
(assert (in_range1 r88s))
(assert (=> (<= 0 r88s) (and (and (<= 0 0) (<= 0 199)) (and (<= 0 r88s) (<= r88s 199)))))
(assert (= o44 (rec__keccak__keccak_1600__sponge__context__block ctx__split_fields9)))
(assert (= temp___828 (mk___t5 o44 (mk5 0 r88s))))
(assert (= o45 (mk___t (elts5 temp___828) (mk (to_rep1 (first10 (rt5 temp___828))) (to_rep1 (last10 (rt5 temp___828)))))))
(assert true)
(assert (= result18 (mk___split_fields__ref ctx__split_fields9)))
(assert (= ctx__split_fields10 (mk___split_fields keccak__keccak_1600__keccakf_1600_lanes__xor_bits_into_state__a (rec__keccak__keccak_1600__sponge__context__block ctx__split_fields9) (rec__keccak__keccak_1600__sponge__context__bits_absorbed ctx__split_fields9) (rec__keccak__keccak_1600__sponge__context__bytes_squeezed ctx__split_fields9) (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields9) (rec__keccak__keccak_1600__sponge__context__curr_state ctx__split_fields9))))
(assert (= result19 (mk___split_fields__ref ctx__split_fields10)))
(assert (= ctx__split_fields11 (mk___split_fields keccak__keccak_1600__keccakf_1600_permutation__permute__a (rec__keccak__keccak_1600__sponge__context__block ctx__split_fields10) (rec__keccak__keccak_1600__sponge__context__bits_absorbed ctx__split_fields10) (rec__keccak__keccak_1600__sponge__context__bytes_squeezed ctx__split_fields10) (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields10) (rec__keccak__keccak_1600__sponge__context__curr_state ctx__split_fields10))))
(assert (= (+ offset2 remaining_bytes2) initial_data_len1))
(assert (= remaining_bytes2 (div1 (+ remaining_bits2 7) 8)))
(assert (=> (<= initial_bit_rate1 remaining_bits2) (and (and (= temp___841 remaining_bytes2) (and (= temp___840 remaining_bits2) (and (= temp___839 offset2) (and (= temp___838 (mk___rep ctx__split_fields11)) (and (= temp___844 (mk_int__ref 0)) (and (= temp___843 (mk_int__ref 0)) (and (= temp___842 (mk_int__ref 0)) (and (and (and (and (and (= (+ offset3 remaining_bytes3) initial_data_len1) (= remaining_bytes3 (div1 (+ remaining_bits3 7) 8))) (= (mod2 bit_length 8) (mod2 remaining_bits3 8))) (= (state_of (mk___rep ctx__split_fields12)) 0)) (= (rate_of (mk___rep ctx__split_fields12)) initial_bit_rate1)) (and (and (and (and (and (and (and (and (= (rec__keccak__keccak_1600__sponge__context__block ctx__split_fields12) (rec__keccak__keccak_1600__sponge__context__block (us_split_fields1 temp___838))) (= (rec__keccak__keccak_1600__sponge__context__bits_absorbed ctx__split_fields12) (rec__keccak__keccak_1600__sponge__context__bits_absorbed (us_split_fields1 temp___838)))) (= (rec__keccak__keccak_1600__sponge__context__bytes_squeezed ctx__split_fields12) (rec__keccak__keccak_1600__sponge__context__bytes_squeezed (us_split_fields1 temp___838)))) (= (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields12) (rec__keccak__keccak_1600__sponge__context__rate (us_split_fields1 temp___838)))) (= (rec__keccak__keccak_1600__sponge__context__curr_state ctx__split_fields12) (rec__keccak__keccak_1600__sponge__context__curr_state (us_split_fields1 temp___838)))) (=> (<= 0 2147483647) (in_range2 offset3))) (=> (<= 0 2147483647) (in_range2 remaining_bits3))) (=> (<= 0 2147483647) (in_range2 remaining_bytes3))) (and (and (= result20 (let ((subject temp___844)) (mk_int__ref temp___8441))) (= (let ((subject temp___844)) temp___8442) remaining_bytes3)) (and (and (= result21 (let ((subject temp___843)) (mk_int__ref temp___8431))) (= (let ((subject temp___843)) temp___8432) remaining_bits3)) (and (and (= result22 (let ((subject temp___842)) (mk_int__ref temp___8421))) (= (let ((subject temp___842)) temp___8422) offset3)) (and (and (and (and (= keccak__keccak_1600__sponge__absorb__L_1__R91s__assume (+ (to_rep1 (first (rt data))) offset3)) (in_range1 (+ (to_rep1 (first (rt data))) offset3))) (= keccak__keccak_1600__sponge__absorb__L_1__R91s__assume r91s)) (in_range1 r91s)) (and (and (and (and (and (and (= o57 (+ offset3 (- (to_rep4 (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields12)) 1))) (in_range1 (+ offset3 (- (to_rep4 (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields12)) 1)))) (= o58 (+ (to_rep1 (first (rt data))) o57))) (and (= keccak__keccak_1600__sponge__absorb__L_1__R92s__assume o58) (in_range1 o58))) (= keccak__keccak_1600__sponge__absorb__L_1__R92s__assume r92s)) (in_range1 r92s)) (and (and (and (and (and (=> (<= r91s r92s) (and (and (<= (to_rep1 (first (rt data))) r91s) (<= r91s (to_rep1 (last (rt data))))) (and (<= (to_rep1 (first (rt data))) r92s) (<= r92s (to_rep1 (last (rt data))))))) (= o59 (elts data))) (= temp___833 (mk___t6 o59 (mk6 r91s r92s)))) (= o60 (mk___t (elts6 temp___833) (mk (to_rep1 (first12 (rt6 temp___833))) (to_rep1 (last12 (rt6 temp___833))))))) (and (= result23 (mk___split_fields__ref ctx__split_fields12)) (= ctx__split_fields13 (mk___split_fields keccak__keccak_1600__keccakf_1600_lanes__xor_bits_into_state__a1 (rec__keccak__keccak_1600__sponge__context__block ctx__split_fields12) (rec__keccak__keccak_1600__sponge__context__bits_absorbed ctx__split_fields12) (rec__keccak__keccak_1600__sponge__context__bytes_squeezed ctx__split_fields12) (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields12) (rec__keccak__keccak_1600__sponge__context__curr_state ctx__split_fields12))))) (and (and (= result24 (mk___split_fields__ref ctx__split_fields13)) (= ctx__split_fields14 (mk___split_fields keccak__keccak_1600__keccakf_1600_permutation__permute__a1 (rec__keccak__keccak_1600__sponge__context__block ctx__split_fields13) (rec__keccak__keccak_1600__sponge__context__bits_absorbed ctx__split_fields13) (rec__keccak__keccak_1600__sponge__context__bytes_squeezed ctx__split_fields13) (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields13) (rec__keccak__keccak_1600__sponge__context__curr_state ctx__split_fields13)))) (and (and (and (= o61 (+ offset3 (to_rep4 (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields14)))) (in_range1 (+ offset3 (to_rep4 (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields14))))) (and (= result25 (mk_int__ref offset3)) (= offset4 o61))) (and (and (and (= o62 (- remaining_bytes3 (to_rep4 (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields14)))) (in_range2 (- remaining_bytes3 (to_rep4 (rec__keccak__keccak_1600__sponge__context__rate ctx__split_fields14))))) (and (= result26 (mk_int__ref remaining_bytes3)) (= remaining_bytes4 o62))) (and (and (and (= o63 (- remaining_bits3 initial_bit_rate1)) (in_range2 (- remaining_bits3 initial_bit_rate1))) (and (= result27 (mk_int__ref remaining_bits3)) (= remaining_bits4 o63))) (not (<= initial_bit_rate1 remaining_bits4))))))))))))))))))))) (and (and (= remaining_bytes7 (mk_int__ref remaining_bytes4)) (and (= remaining_bits7 (mk_int__ref remaining_bits4)) (and (= offset7 (mk_int__ref offset4)) (= ctx__split_fields17 (mk___split_fields__ref ctx__split_fields14))))) (and (= remaining_bytes8 remaining_bytes4) (and (= remaining_bits8 remaining_bits4) (and (= offset8 offset4) (= ctx__split_fields18 ctx__split_fields14))))))))
(assert (=> (<= initial_bit_rate1 remaining_bits2) (= remaining_bytes9 remaining_bytes7)))
(assert (=> (<= initial_bit_rate1 remaining_bits2) (= remaining_bits9 remaining_bits7)))
(assert (=> (<= initial_bit_rate1 remaining_bits2) (= offset9 offset7)))
(assert (=> (<= initial_bit_rate1 remaining_bits2) (= ctx__split_fields19 ctx__split_fields17)))
(assert (=> (<= initial_bit_rate1 remaining_bits2) (= remaining_bytes10 remaining_bytes8)))
(assert (=> (<= initial_bit_rate1 remaining_bits2) (= remaining_bits10 remaining_bits8)))
(assert (=> (<= initial_bit_rate1 remaining_bits2) (= offset10 offset8)))
(assert (=> (<= initial_bit_rate1 remaining_bits2) (= ctx__split_fields20 ctx__split_fields18)))
(assert (=> (not (<= initial_bit_rate1 remaining_bits2)) (= remaining_bytes9 (mk_int__ref remaining_bytes2))))
(assert (=> (not (<= initial_bit_rate1 remaining_bits2)) (= remaining_bits9 (mk_int__ref remaining_bits2))))
(assert (=> (not (<= initial_bit_rate1 remaining_bits2)) (= offset9 (mk_int__ref offset2))))
(assert (=> (not (<= initial_bit_rate1 remaining_bits2)) (= ctx__split_fields19 (mk___split_fields__ref ctx__split_fields11))))
(assert (=> (not (<= initial_bit_rate1 remaining_bits2)) (= remaining_bytes10 remaining_bytes2)))
(assert (=> (not (<= initial_bit_rate1 remaining_bits2)) (= remaining_bits10 remaining_bits2)))
(assert (=> (not (<= initial_bit_rate1 remaining_bits2)) (= offset10 offset2)))
(assert (=> (not (<= initial_bit_rate1 remaining_bits2)) (= ctx__split_fields20 ctx__split_fields11)))
(assert (=> (< 0 (int__content remaining_bits9)) (= (- (int__content remaining_bytes9) 1) r95s)))
(assert (=> (< 0 (int__content remaining_bits9)) (in_range1 r95s)))
(assert (=> (< 0 (int__content remaining_bits9)) (and (= keccak__keccak_1600__sponge__absorb__R98s__assume (+ (to_rep1 (first (rt data))) (int__content offset9))) (in_range1 (+ (to_rep1 (first (rt data))) (int__content offset9))))))
(assert (=> (< 0 (int__content remaining_bits9)) (= keccak__keccak_1600__sponge__absorb__R98s__assume r98s)))
(assert (=> (< 0 (int__content remaining_bits9)) (in_range1 r98s)))
(assert (=> (< 0 (int__content remaining_bits9)) (and (= o64 (+ (int__content offset9) (- (int__content remaining_bytes9) 1))) (in_range1 (+ (int__content offset9) (- (int__content remaining_bytes9) 1))))))
(assert (=> (< 0 (int__content remaining_bits9)) (= o65 (+ (to_rep1 (first (rt data))) o64))))
(assert (=> (< 0 (int__content remaining_bits9)) (and (= keccak__keccak_1600__sponge__absorb__R99s__assume o65) (in_range1 o65))))
(assert (=> (< 0 (int__content remaining_bits9)) (= keccak__keccak_1600__sponge__absorb__R99s__assume r99s)))
(assert (=> (< 0 (int__content remaining_bits9)) (in_range1 r99s)))
(assert (=> (< 0 (int__content remaining_bits9)) (=> (<= r98s r99s) (and (and (<= (to_rep1 (first (rt data))) r98s) (<= r98s (to_rep1 (last (rt data))))) (and (<= (to_rep1 (first (rt data))) r99s) (<= r99s (to_rep1 (last (rt data)))))))))
(assert (=> (< 0 (int__content remaining_bits9)) (= o66 (elts data))))
(assert (=> (< 0 (int__content remaining_bits9)) (= temp___845 (mk___t8 o66 (mk8 r98s r99s)))))
(assert (=> (< 0 (int__content remaining_bits9)) (= (ite (<= (to_rep1 (first16 (rt8 temp___845))) (to_rep1 (last16 (rt8 temp___845)))) (+ (- (to_rep1 (last16 (rt8 temp___845))) (to_rep1 (first16 (rt8 temp___845)))) 1) 0) (ite (<= 0 r95s) (+ (- r95s 0) 1) 0))))
(assert (=> (< 0 (int__content remaining_bits9)) (= temp___846 (mk___t7 (slide (elts8 temp___845) (to_rep1 (first16 (rt8 temp___845))) 0) (mk7 0 r95s)))))
(assert (=> (< 0 (int__content remaining_bits9)) (=> (<= 0 r95s) (and (and (<= 0 0) (<= 0 199)) (and (<= 0 r95s) (<= r95s 199))))))
(assert (=> (< 0 (int__content remaining_bits9)) (= o67 (rec__keccak__keccak_1600__sponge__context__block (us_split_fields__content ctx__split_fields19)))))
(assert (=> (< 0 (int__content remaining_bits9)) (= temp___849 (mk___t7 o67 (mk7 0 r95s)))))
(assert (=> (< 0 (int__content remaining_bits9)) (= (ite (<= (to_rep1 (first14 (rt7 temp___846))) (to_rep1 (last14 (rt7 temp___846)))) (+ (- (to_rep1 (last14 (rt7 temp___846))) (to_rep1 (first14 (rt7 temp___846)))) 1) 0) (ite (<= (to_rep1 (first14 (rt7 temp___849))) (to_rep1 (last14 (rt7 temp___849)))) (+ (- (to_rep1 (last14 (rt7 temp___849))) (to_rep1 (first14 (rt7 temp___849)))) 1) 0))))
(assert (=> (< 0 (int__content remaining_bits9)) (= temp___851 temp___846)))
(assert (=> (< 0 (int__content remaining_bits9)) (forall ((temp___852 Int)) (ite (and (<= 0 temp___852) (<= temp___852 r95s)) (= (select o68 temp___852) (select (elts7 temp___851) temp___852)) (= (select o68 temp___852) (select (rec__keccak__keccak_1600__sponge__context__block (us_split_fields__content ctx__split_fields19)) temp___852))))))
(assert (=> (< 0 (int__content remaining_bits9)) (= o69 (mk___split_fields (rec__keccak__keccak_1600__sponge__context__state (us_split_fields__content ctx__split_fields19)) o68 (rec__keccak__keccak_1600__sponge__context__bits_absorbed (us_split_fields__content ctx__split_fields19)) (rec__keccak__keccak_1600__sponge__context__bytes_squeezed (us_split_fields__content ctx__split_fields19)) (rec__keccak__keccak_1600__sponge__context__rate (us_split_fields__content ctx__split_fields19)) (rec__keccak__keccak_1600__sponge__context__curr_state (us_split_fields__content ctx__split_fields19))))))
(assert (=> (< 0 (int__content remaining_bits9)) (= temp___854 (mk___rep o69))))
(assert (=> (< 0 (int__content remaining_bits9)) (= result28 ctx__split_fields19)))
(assert (=> (< 0 (int__content remaining_bits9)) (= ctx__split_fields21 (us_split_fields1 temp___854))))
(assert (=> (< 0 (int__content remaining_bits9)) (= ctx__split_fields22 (mk___split_fields__ref ctx__split_fields21))))
(assert (=> (< 0 (int__content remaining_bits9)) (= ctx__split_fields23 ctx__split_fields21)))
(assert (=> (not (< 0 (int__content remaining_bits9))) (= ctx__split_fields22 ctx__split_fields19)))
(assert (=> (not (< 0 (int__content remaining_bits9))) (= ctx__split_fields23 ctx__split_fields20)))
(assert (and (and (and (= (mod2 (int__content remaining_bits9) 8) (mod2 bit_length 8)) (= (state_of (mk___rep (us_split_fields__content ctx__split_fields22))) 0)) (< (int__content remaining_bits9) (rate_of (mk___rep (us_split_fields__content ctx__split_fields22))))) (= (rate_of (mk___rep (us_split_fields__content ctx__split_fields22))) initial_bit_rate1)))
(assert (not (in_range7 (int__content remaining_bits9))))
(check-sat)
(exit)
