;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(declare-sort natural 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (natural natural) Bool)

(declare-fun dummy4 () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_33)))

(declare-fun sum_of (Int) Int)

(declare-fun sum_of__function_guard (Int Int) Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun r2b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun first2 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (integer integer) Bool)

(declare-fun dummy5 () integer)

(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content integer)))))
(define-fun t3b__ref___projection ((a t3b__ref)) integer (t3b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun r5b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun last2 () Int)

(define-fun dynamic_property2 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (integer integer) Bool)

(declare-fun dummy6 () integer)

(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content integer)))))
(define-fun t6b__ref___projection ((a t6b__ref)) integer (t6b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun r8b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun r10b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun first3 () Int)

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq7 (integer integer) Bool)

(declare-fun dummy7 () integer)

(declare-datatypes () ((t11b__ref (mk_t11b__ref (t11b__content integer)))))
(define-fun t11b__ref___projection ((a t11b__ref)) integer (t11b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun r13b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(declare-fun r15b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(declare-fun first4 () Int)

(define-fun dynamic_property4 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq8 (integer integer) Bool)

(declare-fun dummy8 () integer)

(declare-datatypes () ((t16b__ref (mk_t16b__ref (t16b__content integer)))))
(define-fun t16b__ref___projection ((a t16b__ref)) integer (t16b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS12 () Int)

(declare-fun temp___String_Literal_513 (tuple0) (Array Int character))

;; temp___String_Literal_513__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_513 us_void_param) 1)) 70)
     (= (to_rep (select (temp___String_Literal_513 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_513 us_void_param) 3)) 114))
     (= (to_rep (select (temp___String_Literal_513 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_513 us_void_param) 5)) 108))
     (= (to_rep (select (temp___String_Literal_513 us_void_param) 6)) 111))
     (= (to_rep (select (temp___String_Literal_513 us_void_param) 7)) 111))
     (= (to_rep (select (temp___String_Literal_513 us_void_param) 8)) 112))
     (= (to_rep (select (temp___String_Literal_513 us_void_param) 9)) 115)) :pattern (
  (temp___String_Literal_513 us_void_param)) )))

(declare-fun temp___String_Literal_514 (tuple0) (Array Int character))

;; temp___String_Literal_514__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 1)) 69)
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 2)) 82))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 3)) 82))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 4)) 79))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 5)) 82))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 6)) 32))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 7)) 49))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 8)) 58))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 10)) 108))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 11)) 111))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 12)) 111))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 13)) 112))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 14)) 32))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 15)) 115))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 16)) 104))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 17)) 111))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 18)) 117))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 19)) 108))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 20)) 100))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 22)) 110))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 23)) 111))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 24)) 116))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 25)) 32))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 26)) 101))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 27)) 120))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 28)) 101))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 29)) 99))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 30)) 117))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 31)) 116))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 32)) 101)) :pattern (
  (temp___String_Literal_514 us_void_param)) )))

(declare-fun temp___String_Literal_520 (tuple0) (Array Int character))

;; temp___String_Literal_520__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 1)) 69)
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 2)) 82))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 3)) 82))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 4)) 79))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 5)) 82))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 6)) 32))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 7)) 50))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 8)) 58))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 10)) 105))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 11)) 110))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 12)) 118))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 13)) 97))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 14)) 114))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 15)) 105))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 16)) 97))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 17)) 110))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 18)) 116))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 19)) 32))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 20)) 100))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 21)) 105))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 22)) 100))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 23)) 32))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 24)) 110))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 25)) 111))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 26)) 116))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 27)) 32))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 28)) 102))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 29)) 97))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 30)) 105))
     (= (to_rep (select (temp___String_Literal_520 us_void_param) 31)) 108)) :pattern (
  (temp___String_Literal_520 us_void_param)) )))

(declare-fun temp___String_Literal_526 (tuple0) (Array Int character))

;; temp___String_Literal_526__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 1)) 69)
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 2)) 82))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 3)) 82))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 4)) 79))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 5)) 82))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 6)) 32))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 7)) 51))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 8)) 58))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 10)) 108))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 11)) 111))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 12)) 111))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 13)) 112))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 14)) 32))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 15)) 115))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 16)) 104))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 17)) 111))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 18)) 117))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 19)) 108))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 20)) 100))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 22)) 110))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 23)) 111))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 24)) 116))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 25)) 32))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 26)) 101))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 27)) 120))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 28)) 101))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 29)) 99))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 30)) 117))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 31)) 116))
     (= (to_rep (select (temp___String_Literal_526 us_void_param) 32)) 101)) :pattern (
  (temp___String_Literal_526 us_void_param)) )))

(declare-fun temp___String_Literal_533 (tuple0) (Array Int character))

;; temp___String_Literal_533__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 1)) 69)
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 2)) 82))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 3)) 82))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 4)) 79))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 5)) 82))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 6)) 32))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 7)) 52))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 8)) 58))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 10)) 108))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 11)) 111))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 12)) 111))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 13)) 112))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 14)) 32))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 15)) 115))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 16)) 104))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 17)) 111))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 18)) 117))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 19)) 108))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 20)) 100))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 22)) 110))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 23)) 111))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 24)) 116))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 25)) 32))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 26)) 101))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 27)) 120))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 28)) 101))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 29)) 99))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 30)) 117))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 31)) 116))
     (= (to_rep (select (temp___String_Literal_533 us_void_param) 32)) 101)) :pattern (
  (temp___String_Literal_533 us_void_param)) )))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant2 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant3 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(define-fun dynamic_invariant4 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun counter () Int)

(declare-fun i () Int)

(declare-fun i1 () Int)

(declare-fun for_loops__B_1__test1__R2b__assume () Int)

(declare-fun temp___516 () Int)

(declare-fun temp___515 () Int)

(declare-fun for_loops__B_2__test2__R5b__assume () Int)

(declare-fun result () Int)

(declare-fun counter1 () Int)

(declare-fun result1 () Int)

(declare-fun i2 () Int)

(declare-fun i3 () Int)

(declare-fun i4 () Int)

(declare-fun i5 () Int)

(declare-fun i6 () Int)

(declare-fun i7 () Int)

(declare-fun result2 () Int)

(declare-fun i8 () Int)

;; H
  (assert (= result counter))

;; H
  (assert (= counter1 1))

;; H
  (assert (in_range4 counter1))

;; H
  (assert (sum_of__function_guard (sum_of counter1) counter1))

;; H
  (assert (sum_of__function_guard (sum_of counter1) counter1))

;; H
  (assert
  (and
  (and (= for_loops__B_1__test1__R2b__assume (sum_of 3))
  (sum_of__function_guard for_loops__B_1__test1__R2b__assume 3)) (in_range4
  for_loops__B_1__test1__R2b__assume)))

;; H
  (assert (= for_loops__B_1__test1__R2b__assume r2b))

;; H
  (assert (in_range4 r2b))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref i)))

;; H
  (assert (= i2 r2b))

;; H
  (assert (=> (and (<= r2b i2) (<= i2 2)) (= temp___516 (sum_of counter1))))

;; H
  (assert (=> (and (<= r2b i2) (<= i2 2)) (= temp___515 i2)))

;; H
  (assert (=> (and (<= r2b i2) (<= i2 2)) (< 0 temp___516)))

;; H
  (assert
  (=> (and (<= r2b i2) (<= i2 2))
  (and (=> (<= r2b 2) (dynamic_property1 r2b 2 i3))
  (and (<= r2b i3) (<= i3 2)))))

;; H
  (assert (=> (and (<= r2b i2) (<= i2 2)) (= i3 2)))

;; H
  (assert (=> (and (<= r2b i2) (<= i2 2)) (= i3 i4)))

;; H
  (assert (=> (and (<= r2b i2) (<= i2 2)) (= i5 i3)))

;; H
  (assert
  (=> (and (<= r2b i2) (<= i2 2)) (= (mk_int__ref i6) (mk_int__ref i4))))

;; H
  (assert (=> (and (<= r2b i2) (<= i2 2)) (= i7 i5)))

;; H
  (assert (=> (not (and (<= r2b i2) (<= i2 2))) (= i2 i6)))

;; H
  (assert (=> (not (and (<= r2b i2) (<= i2 2))) (= i7 i2)))

;; H
  (assert
  (and
  (and (= for_loops__B_2__test2__R5b__assume (sum_of 3))
  (sum_of__function_guard for_loops__B_2__test2__R5b__assume 3)) (in_range4
  for_loops__B_2__test2__R5b__assume)))

;; H
  (assert (= for_loops__B_2__test2__R5b__assume r5b))

;; H
  (assert (in_range4 r5b))

;; H
  (assert (= (mk_int__ref result2) (mk_int__ref i1)))

;; H
  (assert (= i8 2))

;; H
  (assert (<= 2 i8))

;; H
  (assert (<= i8 r5b))

;; H
  (assert (sum_of__function_guard (sum_of counter1) counter1))

(assert
;; WP_parameter_def
 ;; File "for_loops.adb", line 5, characters 0-0
  (not (< (sum_of counter1) 0)))
(check-sat)
