;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                             (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(declare-sort descriptioni 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 150)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq4 (descriptioni descriptioni) Bool)

(declare-fun dummy4 () descriptioni)

(declare-datatypes ()
((descriptioni__ref
 (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni 
  (descriptioni__content a))

(declare-fun nodescription () (Array Int character))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun audittypes__nodescription__aggregate_def (Int) (Array Int character))

;; def_axiom
  (assert
  (forall ((temp___133 Int))
  (forall ((temp___134 Int))
  (= (select (audittypes__nodescription__aggregate_def temp___133) temp___134) 
  (of_rep temp___133)))))

(declare-sort filesizet 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 4194304)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (filesizet filesizet) Bool)

(declare-fun dummy5 () filesizet)

(declare-datatypes ()
((filesizet__ref (mk_filesizet__ref (filesizet__content filesizet)))))
(define-fun filesizet__ref___projection ((a filesizet__ref)) filesizet 
  (filesizet__content a))

(define-fun dynamic_invariant ((temp___expr_197 Int)
  (temp___is_init_194 Bool) (temp___skip_constant_195 Bool)
  (temp___do_toplevel_196 Bool)) Bool (=>
                                      (or (= temp___is_init_194 true)
                                      (<= 0 4194304)) (in_range4
                                      temp___expr_197)))

(declare-sort durationt 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 864000)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (durationt durationt) Bool)

(declare-fun dummy6 () durationt)

(declare-datatypes ()
((durationt__ref (mk_durationt__ref (durationt__content durationt)))))
(define-fun durationt__ref___projection ((a durationt__ref)) durationt 
  (durationt__content a))

(define-fun dynamic_invariant1 ((temp___expr_263 Int)
  (temp___is_init_260 Bool) (temp___skip_constant_261 Bool)
  (temp___do_toplevel_262 Bool)) Bool (=>
                                      (or (= temp___is_init_260 true)
                                      (<= 0 864000)) (in_range5
                                      temp___expr_263)))

(declare-sort durationtexti 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (durationtexti durationtexti) Bool)

(declare-fun dummy7 () durationtexti)

(declare-datatypes ()
((durationtexti__ref
 (mk_durationtexti__ref (durationtexti__content durationtexti)))))
(define-fun durationtexti__ref___projection ((a durationtexti__ref)) durationtexti 
  (durationtexti__content a))

(declare-fun printduration (Int) (Array Int character))

(declare-fun printduration__function_guard ((Array Int character) Int) Bool)

;; printduration__post_axiom
  (assert true)

(declare-sort fart 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (fart fart) Bool)

(declare-fun dummy8 () fart)

(declare-datatypes () ((fart__ref (mk_fart__ref (fart__content fart)))))
(define-fun fart__ref___projection ((a fart__ref)) fart (fart__content a))

(define-fun dynamic_invariant2 ((temp___expr_731 Int)
  (temp___is_init_728 Bool) (temp___skip_constant_729 Bool)
  (temp___do_toplevel_730 Bool)) Bool (=>
                                      (or (= temp___is_init_728 true)
                                      (<= 0 2147483647)) (in_range7
                                      temp___expr_731)))

(declare-sort classt 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 5)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (classt classt) Bool)

(declare-fun dummy9 () classt)

(declare-datatypes ()
((classt__ref (mk_classt__ref (classt__content classt)))))
(define-fun classt__ref___projection ((a classt__ref)) classt (classt__content
                                                              a))

(define-fun dynamic_invariant3 ((temp___expr_807 Int)
  (temp___is_init_804 Bool) (temp___skip_constant_805 Bool)
  (temp___do_toplevel_806 Bool)) Bool (=>
                                      (or (= temp___is_init_804 true)
                                      (<= 0 5)) (in_range8 temp___expr_807)))

(declare-sort durationt1 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 2000)))

(define-fun bool_eq11 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq10 (durationt1 durationt1) Bool)

(declare-fun dummy10 () durationt1)

(declare-datatypes ()
((durationt__ref1 (mk_durationt__ref1 (durationt__content1 durationt1)))))
(define-fun durationt__ref_2__projection ((a durationt__ref1)) durationt1 
  (durationt__content1 a))

(define-fun dynamic_invariant4 ((temp___expr_820 Int)
  (temp___is_init_817 Bool) (temp___skip_constant_818 Bool)
  (temp___do_toplevel_819 Bool)) Bool (=>
                                      (or (= temp___is_init_817 true)
                                      (<= 0 2000)) (in_range9
                                      temp___expr_820)))

(declare-sort accesspolicyt 0)

(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq11 (accesspolicyt accesspolicyt) Bool)

(declare-fun dummy11 () accesspolicyt)

(declare-datatypes ()
((accesspolicyt__ref
 (mk_accesspolicyt__ref (accesspolicyt__content accesspolicyt)))))
(define-fun accesspolicyt__ref___projection ((a accesspolicyt__ref)) accesspolicyt 
  (accesspolicyt__content a))

(define-fun dynamic_invariant5 ((temp___expr_826 Int)
  (temp___is_init_823 Bool) (temp___skip_constant_824 Bool)
  (temp___do_toplevel_825 Bool)) Bool (=>
                                      (or (= temp___is_init_823 true)
                                      (<= 0 1)) (in_range10 temp___expr_826)))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS12 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS13 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS14 () Int)

(declare-sort t6b 0)

(define-fun in_range11 ((x Int)) Bool (and (<= 1 x) (<= x 5)))

(define-fun bool_eq13 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq12 (t6b t6b) Bool)

(declare-fun dummy12 () t6b)

(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content t6b)))))
(define-fun t6b__ref___projection ((a t6b__ref)) t6b (t6b__content a))

(declare-sort t9b 0)

(define-fun in_range12 ((x Int)) Bool (and (<= 1 x) (<= x 5)))

(define-fun bool_eq14 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq13 (t9b t9b) Bool)

(declare-fun dummy13 () t9b)

(declare-datatypes () ((t9b__ref (mk_t9b__ref (t9b__content t9b)))))
(define-fun t9b__ref___projection ((a t9b__ref)) t9b (t9b__content a))

(declare-sort t12b 0)

(define-fun in_range13 ((x Int)) Bool (and (<= 1 x) (<= x 5)))

(define-fun bool_eq15 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)

(declare-fun user_eq14 (t12b t12b) Bool)

(declare-fun dummy14 () t12b)

(declare-datatypes () ((t12b__ref (mk_t12b__ref (t12b__content t12b)))))
(define-fun t12b__ref___projection ((a t12b__ref)) t12b (t12b__content a))

(declare-fun str__first () integer)

(declare-fun str__last () integer)

(declare-fun attr__ATTRIBUTE_ADDRESS15 () Int)

(declare-sort t20b 0)

(define-fun in_range14 ((x Int)) Bool (and (<= 1 x) (<= x 150)))

(define-fun bool_eq16 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)

(declare-fun user_eq15 (t20b t20b) Bool)

(declare-fun dummy15 () t20b)

(declare-datatypes () ((t20b__ref (mk_t20b__ref (t20b__content t20b)))))
(define-fun t20b__ref___projection ((a t20b__ref)) t20b (t20b__content a))

(declare-fun last2 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq17 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)

(declare-fun user_eq16 (integer integer) Bool)

(declare-fun dummy16 () integer)

(declare-datatypes () ((t22b__ref (mk_t22b__ref (t22b__content integer)))))
(define-fun t22b__ref___projection ((a t22b__ref)) integer (t22b__content a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last3 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last3 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int character))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))

(define-fun of_array1 ((a (Array Int character)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last4 ((a us_t1)) Int (to_rep1 (last3 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last4 a))
                                    (+ (- (last4 a) (first3 a)) 1) 0))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int character)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int character)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))

(define-fun bool_eq18 ((x us_t1)
  (y us_t1)) Bool (bool_eq3 (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last3 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last3 (rt1 y)))))

(declare-fun user_eq17 (us_t1 us_t1) Bool)

(declare-fun dummy17 () us_t1)

(declare-datatypes () ((t23b__ref (mk_t23b__ref (t23b__content us_t1)))))
(define-fun t23b__ref___projection ((a t23b__ref)) us_t1 (t23b__content a))

(declare-fun temp___String_Literal_960 (tuple0) (Array Int character))

;; temp___String_Literal_960__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_960 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_960 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_960 us_void_param)) )))

(declare-fun temp___String_Literal_965 (tuple0) (Array Int character))

;; temp___String_Literal_965__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_965 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_965 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_965 us_void_param)) )))

(declare-fun temp___String_Literal_970 (tuple0) (Array Int character))

;; temp___String_Literal_970__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_970 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_970 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_970 us_void_param)) )))

(declare-fun temp___String_Literal_975 (tuple0) (Array Int character))

;; temp___String_Literal_975__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_975 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_975 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_975 us_void_param)) )))

(declare-fun temp___String_Literal_980 (tuple0) (Array Int character))

;; temp___String_Literal_980__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_980 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_980 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_980 us_void_param)) )))

(declare-fun temp___String_Literal_988 (tuple0) (Array Int character))

;; temp___String_Literal_988__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_988 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_988 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_988 us_void_param)) )))

(declare-fun temp___String_Literal_996 (tuple0) (Array Int character))

;; temp___String_Literal_996__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_996 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_996 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_996 us_void_param)) )))

(declare-fun temp___String_Literal_1004 (tuple0) (Array Int character))

;; temp___String_Literal_1004__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_1004 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_1004 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_1004 us_void_param)) )))

(declare-fun temp___String_Literal_1009 (tuple0) (Array Int character))

;; temp___String_Literal_1009__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_1009 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_1009 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_1009 us_void_param)) )))

(declare-fun temp___String_Literal_1014 (tuple0) (Array Int character))

;; temp___String_Literal_1014__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_1014 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_1014 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_1014 us_void_param)) )))

(declare-fun temp___String_Literal_1019 (tuple0) (Array Int character))

;; temp___String_Literal_1019__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_1019 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_1019 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_1019 us_void_param)) )))

(declare-fun temp___String_Literal_1024 (tuple0) (Array Int character))

;; temp___String_Literal_1024__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_1024 us_void_param) 1)) 59)
     (= (to_rep (select (temp___String_Literal_1024 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_1024 us_void_param)) )))

(define-fun dynamic_invariant6 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range1
                                     temp___expr_39)))

(define-fun dynamic_invariant7 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range2 temp___expr_63)))

(define-fun dynamic_invariant8 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(define-fun dynamic_invariant9 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(define-fun dynamic_invariant10 ((temp___expr_167 Int)
  (temp___is_init_164 Bool) (temp___skip_constant_165 Bool)
  (temp___do_toplevel_166 Bool)) Bool (=>
                                      (or (= temp___is_init_164 true)
                                      (<= 1 150)) (in_range3
                                      temp___expr_167)))

;; nodescription__def_axiom
  (assert (= nodescription (audittypes__nodescription__aggregate_def 32)))

(define-fun dynamic_invariant11 ((temp___expr_300 Int)
  (temp___is_init_297 Bool) (temp___skip_constant_298 Bool)
  (temp___do_toplevel_299 Bool)) Bool (=>
                                      (or (= temp___is_init_297 true)
                                      (<= 1 10)) (in_range6 temp___expr_300)))

(declare-fun thelatchunlockduration () Int)

(declare-fun thealarmsilentduration () Int)

(declare-fun thefingerwaitduration () Int)

(declare-fun thetokenremovalduration () Int)

(declare-fun theenclaveclearance () Int)

(declare-fun theworkinghoursstart () Int)

(declare-fun theworkinghoursend () Int)

(declare-fun themaxauthduration () Int)

(declare-fun theaccesspolicy () Int)

(declare-fun theminentryclass () Int)

(declare-fun theminpreservedlogsize () Int)

(declare-fun thealarmthresholdsize () Int)

(declare-fun thesystemmaxfar () Int)

(declare-fun localtext () (Array Int character))

(declare-fun temp___1001 () (Array Int character))

(declare-fun temp___1003 () (Array Int character))

(declare-fun temp___993 () (Array Int character))

(declare-fun temp___995 () (Array Int character))

(declare-fun temp___985 () (Array Int character))

(declare-fun temp___987 () (Array Int character))

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Int)

(declare-fun temp___963 () (Array Int character))

(declare-fun temp___9631 () t)

(declare-fun o6 () Int)

(declare-fun o7 () Int)

(declare-fun o8 () Int)

(declare-fun o9 () Int)

(declare-fun o10 () Int)

(declare-fun result () map__ref)

(declare-fun localtext1 () (Array Int character))

;; H
  (assert (= (audittypes__nodescription__aggregate_def 32) nodescription))

;; H
  (assert (in_range9 thelatchunlockduration))

;; H
  (assert (in_range9 thealarmsilentduration))

;; H
  (assert (in_range9 thefingerwaitduration))

;; H
  (assert (in_range9 thetokenremovalduration))

;; H
  (assert (in_range8 theenclaveclearance))

;; H
  (assert (in_range5 theworkinghoursstart))

;; H
  (assert (in_range5 theworkinghoursend))

;; H
  (assert (in_range5 themaxauthduration))

;; H
  (assert (in_range10 theaccesspolicy))

;; H
  (assert (in_range8 theminentryclass))

;; H
  (assert (in_range4 theminpreservedlogsize))

;; H
  (assert (in_range4 thealarmthresholdsize))

;; H
  (assert (in_range7 thesystemmaxfar))

;; H
  (assert (= result (mk_map__ref localtext)))

;; H
  (assert (= localtext1 nodescription))

;; H
  (assert
  (and (= temp___1001 (printduration themaxauthduration))
  (printduration__function_guard temp___1001 themaxauthduration)))

;; H
  (assert
  (=> (<= 1 5) (and (and (<= 1 1) (<= 1 10)) (and (<= 1 5) (<= 5 10)))))

;; H
  (assert (= temp___1003 temp___1001))

;; H
  (assert
  (and (= temp___993 (printduration theworkinghoursend))
  (printduration__function_guard temp___993 theworkinghoursend)))

;; H
  (assert
  (=> (<= 1 5) (and (and (<= 1 1) (<= 1 10)) (and (<= 1 5) (<= 5 10)))))

;; H
  (assert (= temp___995 temp___993))

;; H
  (assert
  (and (= temp___985 (printduration theworkinghoursstart))
  (printduration__function_guard temp___985 theworkinghoursstart)))

;; H
  (assert
  (=> (<= 1 5) (and (and (<= 1 1) (<= 1 10)) (and (<= 1 5) (<= 5 10)))))

;; H
  (assert (= temp___987 temp___985))

;; H
  (assert
  (=>
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0)
  (= (temp___String_Literal_960 Tuple0) temp___963)))

;; H
  (assert
  (=>
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0)
  (= (mk 1 2) temp___9631)))

;; H
  (assert
  (=>
  (not
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0))
  (=> (<= 1 2) (= o (+ (- 2 1) 1)))))

;; H
  (assert
  (=>
  (not
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0))
  (=> (not (<= 1 2)) (= o 0))))

;; H
  (assert
  (=>
  (not
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0))
  (=>
  (<= (to_rep1
      (first
      (rt
      (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))))) 
  (to_rep1
  (last
  (rt (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))))))
  (= o1 (+ (- (to_rep1
              (last
              (rt
              (to_string
              (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))))) 
  (to_rep1
  (first
  (rt (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10))))))) 1)))))

;; H
  (assert
  (=>
  (not
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0))
  (=>
  (not
  (<= (to_rep1
      (first
      (rt
      (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))))) 
  (to_rep1
  (last
  (rt (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10))))))))
  (= o1 0))))

;; H
  (assert
  (=>
  (not
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0))
  (= o2 (+ o1 o))))

;; H
  (assert
  (=>
  (not
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0))
  (= o3 (+ (to_rep1
           (first
           (rt
           (to_string
           (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))))) 
  o2))))

;; H
  (assert
  (=>
  (not
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0))
  (= o4 (- o3 1))))

;; H
  (assert
  (=>
  (not
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0))
  (and (= o5 o4) (in_range1 o4))))

;; H
  (assert
  (=>
  (not
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0))
  (= (concat1
     (elts
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10))))
     (to_rep1
     (first
     (rt
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10))))))
     (to_rep1
     (last
     (rt
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10))))))
     (temp___String_Literal_960 Tuple0) 1 2) temp___963)))

;; H
  (assert
  (=>
  (not
  (= (length
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10)))) 0))
  (= (mk
     (to_rep1
     (first
     (rt
     (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thealarmsilentduration 10))))))
     o5) temp___9631)))

;; H
  (assert (not (= (length (mk___t temp___963 temp___9631)) 0)))

;; H
  (assert
  (=>
  (<= (to_rep1
      (first
      (rt
      (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thelatchunlockduration 10)))))) 
  (to_rep1
  (last
  (rt (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thelatchunlockduration 10)))))))
  (= o6 (+ (- (to_rep1
              (last
              (rt
              (to_string
              (attr__ATTRIBUTE_IMAGE5 (div1 thelatchunlockduration 10)))))) 
  (to_rep1
  (first
  (rt (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thelatchunlockduration 10))))))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1
      (first
      (rt
      (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thelatchunlockduration 10)))))) 
  (to_rep1
  (last
  (rt (to_string (attr__ATTRIBUTE_IMAGE5 (div1 thelatchunlockduration 10))))))))
  (= o6 0)))

;; H
  (assert
  (=> (<= (to_rep1 (first temp___9631)) (to_rep1 (last temp___9631)))
  (= o7 (+ (- (to_rep1 (last temp___9631)) (to_rep1 (first temp___9631))) 1))))

;; H
  (assert
  (=> (not (<= (to_rep1 (first temp___9631)) (to_rep1 (last temp___9631))))
  (= o7 0)))

;; H
  (assert (= o8 (+ o7 o6)))

;; H
  (assert (= o9 (+ (to_rep1 (first temp___9631)) o8)))

;; H
  (assert (= o10 (- o9 1)))

(assert
;; WP_parameter_def
 ;; File "audittypes.ads", line 92, characters 0-0
  (not (in_range1 o10)))
(check-sat)
