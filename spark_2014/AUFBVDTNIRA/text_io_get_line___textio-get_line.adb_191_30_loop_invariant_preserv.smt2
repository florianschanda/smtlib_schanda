;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-sort natural 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (natural natural) Bool)

(declare-fun dummy4 () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant1 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_33)))

(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant3 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(declare-sort int__ 0)

(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (int__ int__) Bool)

(declare-fun dummy5 () int__)

(declare-datatypes () ((int____ref (mk_int____ref (int____content int__)))))
(define-fun int____ref_2__projection ((a int____ref)) int__ (int____content
                                                            a))

(define-fun dynamic_invariant4 ((temp___expr_340 Int)
  (temp___is_init_337 Bool) (temp___skip_constant_338 Bool)
  (temp___do_toplevel_339 Bool)) Bool (=>
                                      (or (= temp___is_init_337 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range5 temp___expr_340)))

(declare-fun eof () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun eof_ch () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-sort file_descr 0)

(define-fun in_range6 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (file_descr file_descr) Bool)

(declare-fun dummy6 () file_descr)

(declare-datatypes ()
((file_descr__ref (mk_file_descr__ref (file_descr__content file_descr)))))
(define-fun file_descr__ref___projection ((a file_descr__ref)) file_descr 
  (file_descr__content a))

(declare-fun to_rep2 (file_descr) Int)

(declare-fun of_rep2 (Int) file_descr)

;; inversion_axiom
  (assert
  (forall ((x file_descr))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x file_descr)) (! (in_range6
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort count 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq7 (count count) Bool)

(declare-fun dummy7 () count)

(declare-datatypes () ((count__ref (mk_count__ref (count__content count)))))
(define-fun count__ref___projection ((a count__ref)) count (count__content a))

(declare-fun to_rep3 (count) Int)

(declare-fun of_rep3 (Int) count)

;; inversion_axiom
  (assert
  (forall ((x count))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x count)) (! (in_range7 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range7 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__textio__file_type__descr file_descr)(rec__textio__file_type__before_lm Bool)(rec__textio__file_type__before_lm_pm Bool)(rec__textio__file_type__col count)(rec__textio__file_type__line count)(rec__textio__file_type__page count)(rec__textio__file_type__is_regular_file Bool)))))
(define-fun us_split_fields_Descr__projection ((a us_split_fields)) file_descr 
  (rec__textio__file_type__descr a))

(define-fun us_split_fields_Before_LM__projection ((a us_split_fields)) Bool 
  (rec__textio__file_type__before_lm a))

(define-fun us_split_fields_Before_LM_PM__projection ((a us_split_fields)) Bool 
  (rec__textio__file_type__before_lm_pm a))

(define-fun us_split_fields_Col__projection ((a us_split_fields)) count 
  (rec__textio__file_type__col a))

(define-fun us_split_fields_Line__projection ((a us_split_fields)) count 
  (rec__textio__file_type__line a))

(define-fun us_split_fields_Page__projection ((a us_split_fields)) count 
  (rec__textio__file_type__page a))

(define-fun us_split_fields_Is_Regular_File__projection ((a us_split_fields)) Bool 
  (rec__textio__file_type__is_regular_file a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq9 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (= (to_rep2
                           (rec__textio__file_type__descr
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__textio__file_type__descr
                                                  (us_split_fields1 b))))
                        (= (rec__textio__file_type__before_lm
                           (us_split_fields1 a)) (rec__textio__file_type__before_lm
                                                 (us_split_fields1 b))))
                        (= (rec__textio__file_type__before_lm_pm
                           (us_split_fields1 a)) (rec__textio__file_type__before_lm_pm
                                                 (us_split_fields1 b))))
                        (= (to_rep3
                           (rec__textio__file_type__col (us_split_fields1 a))) 
                        (to_rep3
                        (rec__textio__file_type__col (us_split_fields1 b)))))
                        (= (to_rep3
                           (rec__textio__file_type__line
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__textio__file_type__line
                                                  (us_split_fields1 b)))))
                        (= (to_rep3
                           (rec__textio__file_type__page
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__textio__file_type__page
                                                  (us_split_fields1 b)))))
                        (= (rec__textio__file_type__is_regular_file
                           (us_split_fields1 a)) (rec__textio__file_type__is_regular_file
                                                 (us_split_fields1 b))))
                   true false))

(declare-fun user_eq8 (us_rep us_rep) Bool)

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun textio__file_type__descr__first__bit () Int)

(declare-fun textio__file_type__descr__last__bit () Int)

(declare-fun textio__file_type__descr__position () Int)

;; textio__file_type__descr__first__bit_axiom
  (assert (<= 0 textio__file_type__descr__first__bit))

;; textio__file_type__descr__last__bit_axiom
  (assert
  (< textio__file_type__descr__first__bit textio__file_type__descr__last__bit))

;; textio__file_type__descr__position_axiom
  (assert (<= 0 textio__file_type__descr__position))

(declare-fun textio__file_type__before_lm__first__bit () Int)

(declare-fun textio__file_type__before_lm__last__bit () Int)

(declare-fun textio__file_type__before_lm__position () Int)

;; textio__file_type__before_lm__first__bit_axiom
  (assert (<= 0 textio__file_type__before_lm__first__bit))

;; textio__file_type__before_lm__last__bit_axiom
  (assert
  (< textio__file_type__before_lm__first__bit textio__file_type__before_lm__last__bit))

;; textio__file_type__before_lm__position_axiom
  (assert (<= 0 textio__file_type__before_lm__position))

(declare-fun textio__file_type__before_lm_pm__first__bit () Int)

(declare-fun textio__file_type__before_lm_pm__last__bit () Int)

(declare-fun textio__file_type__before_lm_pm__position () Int)

;; textio__file_type__before_lm_pm__first__bit_axiom
  (assert (<= 0 textio__file_type__before_lm_pm__first__bit))

;; textio__file_type__before_lm_pm__last__bit_axiom
  (assert
  (< textio__file_type__before_lm_pm__first__bit textio__file_type__before_lm_pm__last__bit))

;; textio__file_type__before_lm_pm__position_axiom
  (assert (<= 0 textio__file_type__before_lm_pm__position))

(declare-fun textio__file_type__col__first__bit () Int)

(declare-fun textio__file_type__col__last__bit () Int)

(declare-fun textio__file_type__col__position () Int)

;; textio__file_type__col__first__bit_axiom
  (assert (<= 0 textio__file_type__col__first__bit))

;; textio__file_type__col__last__bit_axiom
  (assert
  (< textio__file_type__col__first__bit textio__file_type__col__last__bit))

;; textio__file_type__col__position_axiom
  (assert (<= 0 textio__file_type__col__position))

(declare-fun textio__file_type__line__first__bit () Int)

(declare-fun textio__file_type__line__last__bit () Int)

(declare-fun textio__file_type__line__position () Int)

;; textio__file_type__line__first__bit_axiom
  (assert (<= 0 textio__file_type__line__first__bit))

;; textio__file_type__line__last__bit_axiom
  (assert
  (< textio__file_type__line__first__bit textio__file_type__line__last__bit))

;; textio__file_type__line__position_axiom
  (assert (<= 0 textio__file_type__line__position))

(declare-fun textio__file_type__page__first__bit () Int)

(declare-fun textio__file_type__page__last__bit () Int)

(declare-fun textio__file_type__page__position () Int)

;; textio__file_type__page__first__bit_axiom
  (assert (<= 0 textio__file_type__page__first__bit))

;; textio__file_type__page__last__bit_axiom
  (assert
  (< textio__file_type__page__first__bit textio__file_type__page__last__bit))

;; textio__file_type__page__position_axiom
  (assert (<= 0 textio__file_type__page__position))

(declare-fun textio__file_type__is_regular_file__first__bit () Int)

(declare-fun textio__file_type__is_regular_file__last__bit () Int)

(declare-fun textio__file_type__is_regular_file__position () Int)

;; textio__file_type__is_regular_file__first__bit_axiom
  (assert (<= 0 textio__file_type__is_regular_file__first__bit))

;; textio__file_type__is_regular_file__last__bit_axiom
  (assert
  (< textio__file_type__is_regular_file__first__bit textio__file_type__is_regular_file__last__bit))

;; textio__file_type__is_regular_file__position_axiom
  (assert (<= 0 textio__file_type__is_regular_file__position))

(declare-fun dummy8 () us_rep)

(declare-datatypes ()
((file_type__ref (mk_file_type__ref (file_type__content us_rep)))))
(define-fun file_type__ref___projection ((a file_type__ref)) us_rep (file_type__content
                                                                    a))

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun item__first () integer)

(declare-fun item__last () integer)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun end_of_file (us_rep Int (Array Int character)) Bool)

(declare-fun end_of_file__function_guard (Bool us_rep Int
  (Array Int character)) Bool)

(declare-fun fpeek (us_rep Int (Array Int character)) Int)

(declare-fun fpeek__function_guard (Int us_rep Int
  (Array Int character)) Bool)

;; end_of_file__post_axiom
  (assert
  (forall ((file us_rep))
  (forall ((helpers__cur_position Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=> (dynamic_invariant2 helpers__cur_position true true true)
     (let ((result (end_of_file file helpers__cur_position helpers__the_file)))
     (and (fpeek__function_guard
     (fpeek file helpers__cur_position helpers__the_file) file
     helpers__cur_position helpers__the_file)
     (=> (end_of_file__function_guard result file helpers__cur_position
     helpers__the_file)
     (= (= result true)
     (= (fpeek file helpers__cur_position helpers__the_file) eof)))))) :pattern (
  (end_of_file file helpers__cur_position helpers__the_file)) )))))

(declare-fun cur_position_at_start () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun eof_at_start () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(declare-fun no_char_in_slice (Int Int Int (Array Int character)) Bool)

(declare-fun no_char_in_slice__function_guard (Bool Int Int Int
  (Array Int character)) Bool)

(declare-fun find_char_in_slice (Int Int Int (Array Int character)) Int)

(declare-fun find_char_in_slice__function_guard (Int Int Int Int
  (Array Int character)) Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(declare-fun first2 () Int)

(declare-fun last2 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (integer integer) Bool)

(declare-fun dummy9 () integer)

(declare-datatypes () ((t49b__ref (mk_t49b__ref (t49b__content integer)))))
(define-fun t49b__ref___projection ((a t49b__ref)) integer (t49b__content a))

(declare-sort t1 0)

(declare-fun first3 (t1) integer)

(declare-fun last3 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first3 (mk1 f l))) f)
     (= (to_rep1 (last3 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int character))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))

(define-fun of_array1 ((a (Array Int character)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first4 ((a us_t1)) Int (to_rep1 (first3 (rt1 a))))

(define-fun last4 ((a us_t1)) Int (to_rep1 (last3 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first4 a) (last4 a))
                                    (+ (- (last4 a) (first4 a)) 1) 0))

(declare-fun value__size2 () Int)

(declare-fun object__size2 ((Array Int character)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int character)) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))

(define-fun bool_eq11 ((x us_t1)
  (y us_t1)) Bool (bool_eq3 (elts1 x) (to_rep1 (first3 (rt1 x)))
                  (to_rep1 (last3 (rt1 x))) (elts1 y)
                  (to_rep1 (first3 (rt1 y))) (to_rep1 (last3 (rt1 y)))))

(declare-fun user_eq10 (us_t1 us_t1) Bool)

(declare-fun dummy10 () us_t1)

(declare-datatypes () ((t50b__ref (mk_t50b__ref (t50b__content us_t1)))))
(define-fun t50b__ref___projection ((a t50b__ref)) us_t1 (t50b__content a))

(declare-fun temp___593 (Int Int Int) us_t1)

;; def_axiom
  (assert
  (forall ((temp___595 Int) (temp___596 Int) (temp___597 Int))
  (let ((temp___594 (temp___593 temp___595 temp___596 temp___597)))
  (and
  (=> (dynamic_property 1 2147483647 temp___596 temp___597)
  (and (= (first4 temp___594) temp___596) (= (last4 temp___594) temp___597)))
  (forall ((temp___598 Int))
  (= (select (to_array1 temp___594) temp___598) (of_rep temp___595)))))))

(define-fun dynamic_invariant5 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(define-fun dynamic_invariant6 ((temp___expr_454 Int)
  (temp___is_init_451 Bool) (temp___skip_constant_452 Bool)
  (temp___do_toplevel_453 Bool)) Bool (=>
                                      (or (= temp___is_init_451 true)
                                      (<= 0 2147483647)) (in_range7
                                      temp___expr_454)))

(declare-fun fpeek1 (Int Int (Array Int character)) Int)

(declare-fun fpeek__function_guard1 (Int Int Int (Array Int character)) Bool)

;; fpeek__post_axiom
  (assert
  (forall ((file us_rep))
  (forall ((helpers__cur_position Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=> (dynamic_invariant2 helpers__cur_position true true true)
     (let ((result (fpeek file helpers__cur_position helpers__the_file)))
     (=> (fpeek__function_guard result file helpers__cur_position
     helpers__the_file) (dynamic_invariant4 result true false true)))) :pattern (
  (fpeek file helpers__cur_position helpers__the_file)) )))))

;; fpeek__def_axiom
  (assert
  (forall ((file us_rep))
  (forall ((helpers__cur_position Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=>
     (and (dynamic_invariant2 helpers__cur_position true true true)
     (fpeek__function_guard
     (fpeek file helpers__cur_position helpers__the_file) file
     helpers__cur_position helpers__the_file))
     (and (fpeek__function_guard1
     (fpeek1
     (to_rep2 (rec__textio__file_type__descr (us_split_fields1 file)))
     helpers__cur_position helpers__the_file)
     (to_rep2 (rec__textio__file_type__descr (us_split_fields1 file)))
     helpers__cur_position helpers__the_file)
     (= (fpeek file helpers__cur_position helpers__the_file) (fpeek1
                                                             (to_rep2
                                                             (rec__textio__file_type__descr
                                                             (us_split_fields1
                                                             file)))
                                                             helpers__cur_position
                                                             helpers__the_file)))) :pattern (
  (fpeek file helpers__cur_position helpers__the_file)) )))))

;; eof_ch__def_axiom
  (assert (= eof_ch (mod2 eof 256)))

(define-fun dynamic_invariant7 ((temp___expr_388 Int)
  (temp___is_init_385 Bool) (temp___skip_constant_386 Bool)
  (temp___do_toplevel_387 Bool)) Bool (=>
                                      (or (= temp___is_init_385 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range6 temp___expr_388)))

;; fpeek__post_axiom
  (assert
  (forall ((stream Int) (helpers__cur_position Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=>
     (and (dynamic_invariant7 stream true true true) (dynamic_invariant2
     helpers__cur_position true true true))
     (let ((result (fpeek1 stream helpers__cur_position helpers__the_file)))
     (=> (fpeek__function_guard1 result stream helpers__cur_position
     helpers__the_file) (dynamic_invariant4 result true false true)))) :pattern (
  (fpeek1 stream helpers__cur_position helpers__the_file)) ))))

;; fpeek__def_axiom
  (assert
  (forall ((stream Int) (helpers__cur_position Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=>
     (and
     (and (dynamic_invariant7 stream true true true) (dynamic_invariant2
     helpers__cur_position true true true)) (fpeek__function_guard1
     (fpeek1 stream helpers__cur_position helpers__the_file) stream
     helpers__cur_position helpers__the_file))
     (= (fpeek1 stream helpers__cur_position helpers__the_file) (ite (= 
                                                                (to_rep
                                                                (select helpers__the_file helpers__cur_position)) 
                                                                eof_ch) 
                                                                eof
                                                                (to_rep
                                                                (select helpers__the_file helpers__cur_position))))) :pattern (
  (fpeek1 stream helpers__cur_position helpers__the_file)) ))))

;; no_char_in_slice__post_axiom
  (assert true)

;; no_char_in_slice__def_axiom
  (assert
  (forall ((ch Int) (from Int) (to__ Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=> (no_char_in_slice__function_guard
     (no_char_in_slice ch from to__ helpers__the_file) ch from to__
     helpers__the_file)
     (= (= (no_char_in_slice ch from to__ helpers__the_file) true)
     (forall ((idx Int))
     (=> (and (<= from idx) (<= idx to__))
     (not (= (to_rep (select helpers__the_file idx)) ch)))))) :pattern (
  (no_char_in_slice ch from to__ helpers__the_file)) ))))

(declare-fun has_char_in_slice (Int Int Int (Array Int character)) Bool)

(declare-fun has_char_in_slice__function_guard (Bool Int Int Int
  (Array Int character)) Bool)

;; has_char_in_slice__post_axiom
  (assert true)

;; has_char_in_slice__def_axiom
  (assert
  (forall ((ch Int) (from Int) (to__ Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=> (has_char_in_slice__function_guard
     (has_char_in_slice ch from to__ helpers__the_file) ch from to__
     helpers__the_file)
     (= (= (has_char_in_slice ch from to__ helpers__the_file) true)
     (exists ((idx Int))
     (and (and (<= from idx) (<= idx to__))
     (= (to_rep (select helpers__the_file idx)) ch))))) :pattern ((has_char_in_slice
                                                                  ch from
                                                                  to__
                                                                  helpers__the_file)) ))))

;; find_char_in_slice__post_axiom
  (assert
  (forall ((ch Int) (from Int) (to__ Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (and (has_char_in_slice__function_guard
     (has_char_in_slice ch from to__ helpers__the_file) ch from to__
     helpers__the_file)
     (=>
     (and
     (and
     (and (dynamic_invariant3 ch true true true) (dynamic_invariant2 from
     true true true)) (dynamic_invariant2 to__ true true true))
     (= (has_char_in_slice ch from to__ helpers__the_file) true))
     (let ((result (find_char_in_slice ch from to__ helpers__the_file)))
     (and (no_char_in_slice__function_guard
     (no_char_in_slice ch from (- result 1) helpers__the_file) ch from
     (- result 1) helpers__the_file)
     (=> (find_char_in_slice__function_guard result ch from to__
     helpers__the_file)
     (and
     (and (and (<= from result) (<= result to__))
     (and (= (no_char_in_slice ch from (- result 1) helpers__the_file) true)
     (= (to_rep (select helpers__the_file result)) ch))) (dynamic_invariant2
     result true false true))))))) :pattern ((find_char_in_slice ch from to__
                                             helpers__the_file)) ))))

(declare-fun the_file () (Array Int character))

(declare-fun cur_position () Int)

(declare-fun file__split_fields () file_descr)

(declare-fun file__split_fields1 () Bool)

(declare-fun file__split_fields2 () Bool)

(declare-fun file__split_fields3 () count)

(declare-fun file__split_fields4 () count)

(declare-fun file__split_fields5 () count)

(declare-fun file__split_fields6 () Bool)

(declare-fun item () (Array Int character))

(declare-fun last5 () Int)

(declare-fun ch () Int)

(declare-fun n () Int)

(declare-fun rest () Int)

(declare-fun textio__get_line__eof_at_start__assume () Bool)

(declare-fun temp___600 () (Array Int character))

(declare-fun temp___6001 () t1)

(declare-fun temp___601 () (Array Int character))

(declare-fun temp___6011 () t)

(declare-fun temp___602 () (Array Int character))

(declare-fun temp___6021 () t)

(declare-fun o () (Array Int character))

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Int)

(declare-fun o6 () Int)

(declare-fun o7 () Int)

(declare-fun result () (Array Int character))

(declare-fun item1 () (Array Int character))

(declare-fun result1 () Int)

(declare-fun last6 () Int)

(declare-fun result2 () Int)

(declare-fun n1 () Int)

(declare-fun cur_position1 () Int)

(declare-fun item2 () (Array Int character))

(declare-fun last7 () Int)

(declare-fun n2 () Int)

(declare-fun rest1 () Int)

(declare-fun cur_position2 () Int)

(declare-fun item3 () (Array Int character))

(declare-fun last8 () Int)

(declare-fun textio__get_line__get_chunk__rest () Int)

(declare-fun result3 () Int)

(declare-fun rest2 () Int)

(declare-fun result4 () Int)

(declare-fun n3 () Int)

(declare-fun result5 () Int)

(declare-fun n4 () Int)

;; H
  (assert (dynamic_property 1 2147483647 (to_rep1 item__first)
  (to_rep1 item__last)))

;; H
  (assert (=> (<= 0 2147483647) (in_range4 last5)))

;; H
  (assert (in_range2 cur_position))

;; H
  (assert (in_range3 eof_ch))

;; H
  (assert (= (mod2 eof 256) eof_ch))

;; H
  (assert (in_range5 eof))

;; H
  (assert (end_of_file__function_guard
  (end_of_file
  (mk___rep
  (mk___split_fields file__split_fields file__split_fields1
  file__split_fields2 file__split_fields3 file__split_fields4
  file__split_fields5 file__split_fields6)) cur_position the_file)
  (mk___rep
  (mk___split_fields file__split_fields file__split_fields1
  file__split_fields2 file__split_fields3 file__split_fields4
  file__split_fields5 file__split_fields6)) cur_position the_file))

;; H
  (assert
  (not
  (= (end_of_file
     (mk___rep
     (mk___split_fields file__split_fields file__split_fields1
     file__split_fields2 file__split_fields3 file__split_fields4
     file__split_fields5 file__split_fields6)) cur_position the_file) true)))

;; H
  (assert (= cur_position cur_position_at_start))

;; H
  (assert (in_range2 cur_position_at_start))

;; H
  (assert (fpeek__function_guard
  (fpeek
  (mk___rep
  (mk___split_fields file__split_fields file__split_fields1
  file__split_fields2 file__split_fields3 file__split_fields4
  file__split_fields5 file__split_fields6)) cur_position the_file)
  (mk___rep
  (mk___split_fields file__split_fields file__split_fields1
  file__split_fields2 file__split_fields3 file__split_fields4
  file__split_fields5 file__split_fields6)) cur_position the_file))

;; H
  (assert
  (and
  (and
  (= textio__get_line__eof_at_start__assume (end_of_file
                                            (mk___rep
                                            (mk___split_fields
                                            file__split_fields
                                            file__split_fields1
                                            file__split_fields2
                                            file__split_fields3
                                            file__split_fields4
                                            file__split_fields5
                                            file__split_fields6))
                                            cur_position the_file))
  (end_of_file__function_guard textio__get_line__eof_at_start__assume
  (mk___rep
  (mk___split_fields file__split_fields file__split_fields1
  file__split_fields2 file__split_fields3 file__split_fields4
  file__split_fields5 file__split_fields6)) cur_position the_file))
  (= (= textio__get_line__eof_at_start__assume true)
  (= (fpeek
     (mk___rep
     (mk___split_fields file__split_fields file__split_fields1
     file__split_fields2 file__split_fields3 file__split_fields4
     file__split_fields5 file__split_fields6)) cur_position the_file) 
  eof))))

;; H
  (assert (= textio__get_line__eof_at_start__assume eof_at_start))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range5 ch)))

;; H
  (assert (=> (<= 0 2147483647) (in_range4 n)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 rest)))

;; H
  (assert
  (= (to_rep1
     (first3
     (rt1 (temp___593 32 (to_rep1 item__first) (to_rep1 item__last))))) 
  (to_rep1 item__first)))

;; H
  (assert
  (= (to_rep1
     (last3 (rt1 (temp___593 32 (to_rep1 item__first) (to_rep1 item__last))))) 
  (to_rep1 item__last)))

;; H
  (assert
  (= (mk___t1 temp___600 temp___6001) (temp___593 32 (to_rep1 item__first)
                                      (to_rep1 item__last))))

;; H
  (assert (= temp___600 temp___601))

;; H
  (assert
  (= (mk (to_rep1 (first3 temp___6001)) (to_rep1 (last3 temp___6001))) 
  temp___6011))

;; H
  (assert
  (= (ite (<= (to_rep1 (first temp___6011)) (to_rep1 (last temp___6011)))
     (+ (- (to_rep1 (last temp___6011)) (to_rep1 (first temp___6011))) 1) 0) 
  (ite (<= (to_rep1 item__first) (to_rep1 item__last))
  (+ (- (to_rep1 item__last) (to_rep1 item__first)) 1) 0)))

;; H
  (assert
  (= (mk___t temp___602 temp___6021) (mk___t temp___601 temp___6011)))

;; H
  (assert
  (= o (slide temp___602 (to_rep1 (first temp___6021)) (to_rep1 item__first))))

;; H
  (assert (= (mk_map__ref result) (mk_map__ref item)))

;; H
  (assert (= item1 o))

;; H
  (assert
  (and (= o1 (- (to_rep1 item__first) 1)) (in_range1
  (- (to_rep1 item__first) 1))))

;; H
  (assert (and (= o2 o1) (in_range4 o1)))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref last5)))

;; H
  (assert (= last6 o2))

;; H
  (assert (not (< (to_rep1 item__last) (to_rep1 item__first))))

;; H
  (assert
  (and (= o3 (- (to_rep1 item__last) (to_rep1 item__first))) (in_range1
  (- (to_rep1 item__last) (to_rep1 item__first)))))

;; H
  (assert (= o4 (+ o3 1)))

;; H
  (assert (and (= o5 o4) (in_range1 o4)))

;; H
  (assert (and (= o6 o5) (in_range4 o5)))

;; H
  (assert (= (mk_int__ref result2) (mk_int__ref n)))

;; H
  (assert (= n1 o6))

;; H
  (assert (<= 80 n1))

;; H
  (assert
  (and (<= (to_rep1 item__first) (+ last7 1))
  (= (+ last7 n2) (to_rep1 item__last))))

;; H
  (assert
  (forall ((idx Int))
  (=> (and (<= (to_rep1 item__first) idx) (<= idx last7))
  (= (to_rep (select item2 idx)) (to_rep
                                 (select the_file (+ (- idx (to_rep1
                                                            item__first)) 
                                 cur_position)))))))

;; H
  (assert
  (= cur_position1 (+ (- (+ cur_position last7) (to_rep1 item__first)) 1)))

;; H
  (assert (end_of_file__function_guard
  (end_of_file
  (mk___rep
  (mk___split_fields file__split_fields file__split_fields1
  file__split_fields2 file__split_fields3 file__split_fields4
  file__split_fields5 file__split_fields6)) cur_position1 the_file)
  (mk___rep
  (mk___split_fields file__split_fields file__split_fields1
  file__split_fields2 file__split_fields3 file__split_fields4
  file__split_fields5 file__split_fields6)) cur_position1 the_file))

;; H
  (assert (no_char_in_slice__function_guard
  (no_char_in_slice 10 cur_position1 (- (+ cur_position1 80) 2) the_file) 10
  cur_position1 (- (+ cur_position1 80) 2) the_file))

;; H
  (assert (no_char_in_slice__function_guard
  (no_char_in_slice eof_ch cur_position1 (- (+ cur_position1 80) 2) the_file)
  eof_ch cur_position1 (- (+ cur_position1 80) 2) the_file))

;; H
  (assert (no_char_in_slice__function_guard
  (no_char_in_slice eof_ch cur_position1 (- (+ cur_position1 80) 2) the_file)
  eof_ch cur_position1 (- (+ cur_position1 80) 2) the_file))

;; H
  (assert (find_char_in_slice__function_guard
  (find_char_in_slice 10 cur_position1 (- (+ cur_position1 80) 2) the_file)
  10 cur_position1 (- (+ cur_position1 80) 2) the_file))

;; H
  (assert (find_char_in_slice__function_guard
  (find_char_in_slice 10 cur_position1 (- (+ cur_position1 80) 2) the_file)
  10 cur_position1 (- (+ cur_position1 80) 2) the_file))

;; H
  (assert (find_char_in_slice__function_guard
  (find_char_in_slice eof_ch cur_position1 (- (+ cur_position1 80) 2)
  the_file) eof_ch cur_position1 (- (+ cur_position1 80) 2) the_file))

;; H
  (assert (find_char_in_slice__function_guard
  (find_char_in_slice eof_ch cur_position1 (- (+ cur_position1 80) 2)
  the_file) eof_ch cur_position1 (- (+ cur_position1 80) 2) the_file))

;; H
  (assert
  (and
  (and
  (and
  (and (=> (<= 0 2147483647) (in_range4 last7))
  (=> (<= 0 2147483647) (in_range4 n2)))
  (=> (<= (- 2147483648) 2147483647) (in_range1 rest1))) (in_range2
  cur_position1)) (<= 80 n2)))

;; H
  (assert (<= cur_position1 10000))

;; H
  (assert
  (and
  (and
  (forall ((idx Int))
  (=> (and (<= (to_rep1 item__first) idx) (<= idx last7))
  (= (to_rep (select item3 idx)) (to_rep (select item2 idx)))))
  (and (= (- cur_position2 cur_position1) (- last8 last7))
  (and
  (forall ((idx Int))
  (=> (and (<= (+ last7 1) idx) (<= idx last8))
  (= (to_rep (select item3 idx)) (to_rep
                                 (select the_file (+ (- (- idx last7) 1) 
                                 cur_position1))))))
  (ite (= 80 1) (and (= last8 last7) (= textio__get_line__get_chunk__rest 1))
  (ite (= (end_of_file
          (mk___rep
          (mk___split_fields file__split_fields file__split_fields1
          file__split_fields2 file__split_fields3 file__split_fields4
          file__split_fields5 file__split_fields6)) cur_position1 the_file) true)
  (and (= last8 last7) (= textio__get_line__get_chunk__rest 0))
  (ite (and
       (= (no_char_in_slice 10 cur_position1 (- (+ cur_position1 80) 2)
          the_file) true)
       (= (no_char_in_slice eof_ch cur_position1 (- (+ cur_position1 80) 2)
          the_file) true))
  (and
  (and (= last8 (- (+ last7 80) 1))
  (forall ((idx Int))
  (=> (and (<= 1 idx) (<= idx (- 80 1)))
  (= (to_rep (select item3 (+ last7 idx))) (to_rep
                                           (select the_file (- (+ cur_position1 idx) 1)))))))
  (= textio__get_line__get_chunk__rest 1))
  (ite (= (no_char_in_slice eof_ch cur_position1 (- (+ cur_position1 80) 2)
          the_file) true)
  (and
  (and
  (= last8 (- (+ last7 (find_char_in_slice 10 cur_position1
                       (- (+ cur_position1 80) 2) the_file)) cur_position1))
  (forall ((idx Int))
  (=>
  (and (<= cur_position1 idx)
  (<= idx (- (find_char_in_slice 10 cur_position1 (- (+ cur_position1 80) 2)
             the_file) 1)))
  (= (to_rep (select item3 (+ (- (+ last7 idx) cur_position1) 1))) (to_rep
                                                                   (select 
                                                                   the_file idx))))))
  (= textio__get_line__get_chunk__rest 0))
  (and
  (and
  (= last8 (- (+ last7 (find_char_in_slice eof_ch cur_position1
                       (- (+ cur_position1 80) 2) the_file)) cur_position1))
  (forall ((idx Int))
  (=>
  (and (<= cur_position1 idx)
  (<= idx (- (find_char_in_slice eof_ch cur_position1
             (- (+ cur_position1 80) 2) the_file) 1)))
  (= (to_rep (select item3 (+ (- (+ last7 idx) cur_position1) 1))) (to_rep
                                                                   (select 
                                                                   the_file idx))))))
  (= textio__get_line__get_chunk__rest 0)))))))))
  (and (and (in_range4 textio__get_line__get_chunk__rest) (in_range4 last8))
  (in_range2 cur_position2))))

;; H
  (assert (= rest1 result3))

;; H
  (assert (= rest2 textio__get_line__get_chunk__rest))

;; H
  (assert (=> (= rest2 0) (= n2 result4)))

;; H
  (assert (=> (= rest2 0) (= n3 0)))

;; H
  (assert
  (=> (not (= rest2 0))
  (and (= o7 (+ (- n2 80) 1)) (in_range4 (+ (- n2 80) 1)))))

;; H
  (assert (=> (not (= rest2 0)) (= n2 result5)))

;; H
  (assert (=> (not (= rest2 0)) (= n4 o7)))

;; H
  (assert (=> (not (= rest2 0)) (= n3 n4)))

;; H
  (assert (<= 80 n3))

(assert
;; WP_parameter_def
 ;; File "i-cstrea.ads", line 56, characters 0-0
  (not
  (= cur_position2 (+ (- (+ cur_position last8) (to_rep1 item__first)) 1))))
(check-sat)
