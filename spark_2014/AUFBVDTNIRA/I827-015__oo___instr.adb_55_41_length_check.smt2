;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                             (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-fun dummy4 () (Array Int character))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int character)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int character)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))

(declare-fun user_eq4 ((Array Int character) (Array Int character)) Bool)

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__instr__instrument__name (Array Int character))(rec__ext__ us_private)))))
(define-fun us_split_fields_Name__projection ((a us_split_fields)) (Array Int character) 
  (rec__instr__instrument__name a))

(define-fun us_split_fields___projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun us_rep_2__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq5 ((a us_rep)
  (b us_rep)) Bool (ite (= (bool_eq3
                           (rec__instr__instrument__name
                           (us_split_fields1 a)) 1 14
                           (rec__instr__instrument__name
                           (us_split_fields1 b)) 1 14) true)
                   true false))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-fun us_tag () Int)

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))

(declare-fun instr__instrument__name__first__bit () Int)

(declare-fun instr__instrument__name__last__bit () Int)

(declare-fun instr__instrument__name__position () Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit instr__instrument__name__last__bit))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position))

(declare-fun dummy5 () us_rep)

(declare-datatypes ()
((instrument__ref (mk_instrument__ref (instrument__content us_rep)))))
(define-fun instrument__ref___projection ((a instrument__ref)) us_rep 
  (instrument__content a))

(declare-sort speed 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 85)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq6 (speed speed) Bool)

(declare-fun dummy6 () speed)

(declare-datatypes () ((speed__ref (mk_speed__ref (speed__content speed)))))
(define-fun speed__ref___projection ((a speed__ref)) speed (speed__content a))

(declare-fun to_rep2 (speed) Int)

(declare-fun of_rep2 (Int) speed)

;; inversion_axiom
  (assert
  (forall ((x speed))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x speed)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__instr__speedometer__value speed)(rec__instr__instrument__name1 (Array Int character))(rec__ext__1 us_private)))))
(define-fun us_split_fields_Value__projection ((a us_split_fields2)) speed 
  (rec__instr__speedometer__value a))

(define-fun us_split_fields_Name2__projection ((a us_split_fields2)) (Array Int character) 
  (rec__instr__instrument__name1 a))

(define-fun us_split_fields_2__projection ((a us_split_fields2)) us_private 
  (rec__ext__1 a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)(attr__tag1 Int)))))
(define-fun us_rep_3__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                a))

(define-fun us_rep_4__projection ((a us_rep1)) Int (attr__tag1 a))

(declare-fun hide_ext__ (speed us_private) us_private)

(declare-fun extract__value (us_private) speed)

;; extract__value__conv
  (assert
  (forall ((value speed))
  (forall ((rec__ext__2 us_private))
  (= (extract__value (hide_ext__ value rec__ext__2)) value))))

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep1)) us_rep (mk___rep
                                         (mk___split_fields
                                         (rec__instr__instrument__name1
                                         (us_split_fields3 a))
                                         (hide_ext__
                                         (rec__instr__speedometer__value
                                         (us_split_fields3 a))
                                         (rec__ext__1 (us_split_fields3 a))))
                                         (attr__tag1 a)))

(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1
                                         (mk___split_fields1
                                         (extract__value
                                         (rec__ext__ (us_split_fields1 r)))
                                         (rec__instr__instrument__name
                                         (us_split_fields1 r))
                                         (extract__ext__
                                         (rec__ext__ (us_split_fields1 r))))
                                         (attr__tag r)))

(define-fun bool_eq7 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep2
                            (rec__instr__speedometer__value
                            (us_split_fields3 a))) (to_rep2
                                                   (rec__instr__speedometer__value
                                                   (us_split_fields3 b))))
                         (= (bool_eq3
                            (rec__instr__instrument__name1
                            (us_split_fields3 a)) 1 14
                            (rec__instr__instrument__name1
                            (us_split_fields3 b)) 1 14) true))
                    true false))

(declare-fun user_eq7 (us_rep1 us_rep1) Bool)

(declare-fun us_tag1 () Int)

(declare-fun value__size3 () Int)

(declare-fun object__size3 (us_rep1) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))

(declare-fun instr__speedometer__value__first__bit () Int)

(declare-fun instr__speedometer__value__last__bit () Int)

(declare-fun instr__speedometer__value__position () Int)

;; instr__speedometer__value__first__bit_axiom
  (assert (<= 0 instr__speedometer__value__first__bit))

;; instr__speedometer__value__last__bit_axiom
  (assert
  (< instr__speedometer__value__first__bit instr__speedometer__value__last__bit))

;; instr__speedometer__value__position_axiom
  (assert (<= 0 instr__speedometer__value__position))

(declare-fun instr__instrument__name__first__bit1 () Int)

(declare-fun instr__instrument__name__last__bit1 () Int)

(declare-fun instr__instrument__name__position1 () Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit1))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit1 instr__instrument__name__last__bit1))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position1))

(declare-fun dummy7 () us_rep1)

(declare-datatypes ()
((speedometer__ref (mk_speedometer__ref (speedometer__content us_rep1)))))
(define-fun speedometer__ref___projection ((a speedometer__ref)) us_rep1 
  (speedometer__content a))

(declare-sort percent 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 100)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq8 (percent percent) Bool)

(declare-fun dummy8 () percent)

(declare-datatypes ()
((percent__ref (mk_percent__ref (percent__content percent)))))
(define-fun percent__ref___projection ((a percent__ref)) percent (percent__content
                                                                 a))

(declare-fun to_rep3 (percent) Int)

(declare-fun of_rep3 (Int) percent)

;; inversion_axiom
  (assert
  (forall ((x percent))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x percent)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2
 (rec__instr__gauge__value percent)(rec__instr__instrument__name2 (Array Int character))(rec__ext__2 us_private)))))
(define-fun us_split_fields_Value2__projection ((a us_split_fields4)) percent 
  (rec__instr__gauge__value a))

(define-fun us_split_fields_Name3__projection ((a us_split_fields4)) (Array Int character) 
  (rec__instr__instrument__name2 a))

(define-fun us_split_fields_3__projection ((a us_split_fields4)) us_private 
  (rec__ext__2 a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref_3__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)(attr__tag2 Int)))))
(define-fun us_rep_5__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                a))

(define-fun us_rep_6__projection ((a us_rep2)) Int (attr__tag2 a))

(declare-fun hide_ext__1 (percent us_private) us_private)

(declare-fun extract__value1 (us_private) percent)

;; extract__value__conv
  (assert
  (forall ((value percent))
  (forall ((rec__ext__3 us_private))
  (= (extract__value1 (hide_ext__1 value rec__ext__3)) value))))

(declare-fun extract__ext__1 (us_private) us_private)

(define-fun to_base1 ((a us_rep2)) us_rep (mk___rep
                                          (mk___split_fields
                                          (rec__instr__instrument__name2
                                          (us_split_fields5 a))
                                          (hide_ext__1
                                          (rec__instr__gauge__value
                                          (us_split_fields5 a))
                                          (rec__ext__2 (us_split_fields5 a))))
                                          (attr__tag2 a)))

(define-fun of_base1 ((r us_rep)) us_rep2 (mk___rep2
                                          (mk___split_fields2
                                          (extract__value1
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__instr__instrument__name
                                          (us_split_fields1 r))
                                          (extract__ext__1
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq9 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (to_rep3
                            (rec__instr__gauge__value (us_split_fields5 a))) 
                         (to_rep3
                         (rec__instr__gauge__value (us_split_fields5 b))))
                         (= (bool_eq3
                            (rec__instr__instrument__name2
                            (us_split_fields5 a)) 1 14
                            (rec__instr__instrument__name2
                            (us_split_fields5 b)) 1 14) true))
                    true false))

(declare-fun user_eq9 (us_rep2 us_rep2) Bool)

(declare-fun us_tag2 () Int)

(declare-fun value__size4 () Int)

(declare-fun object__size4 (us_rep2) Int)

(declare-fun value__alignment4 () Int)

(declare-fun object__alignment4 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))

(declare-fun instr__gauge__value__first__bit () Int)

(declare-fun instr__gauge__value__last__bit () Int)

(declare-fun instr__gauge__value__position () Int)

;; instr__gauge__value__first__bit_axiom
  (assert (<= 0 instr__gauge__value__first__bit))

;; instr__gauge__value__last__bit_axiom
  (assert (< instr__gauge__value__first__bit instr__gauge__value__last__bit))

;; instr__gauge__value__position_axiom
  (assert (<= 0 instr__gauge__value__position))

(declare-fun instr__instrument__name__first__bit2 () Int)

(declare-fun instr__instrument__name__last__bit2 () Int)

(declare-fun instr__instrument__name__position2 () Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit2))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit2 instr__instrument__name__last__bit2))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position2))

(declare-fun dummy9 () us_rep2)

(declare-datatypes ()
((gauge__ref (mk_gauge__ref (gauge__content us_rep2)))))
(define-fun gauge__ref___projection ((a gauge__ref)) us_rep2 (gauge__content
                                                             a))

(declare-datatypes ()
((us_split_fields6
 (mk___split_fields3
 (rec__instr__graphic_gauge__size integer)(rec__instr__graphic_gauge__fill character)(rec__instr__graphic_gauge__empty character)(rec__instr__instrument__name3 (Array Int character))(rec__instr__gauge__value1 percent)(rec__ext__3 us_private)))))
(define-fun us_split_fields_Size__projection ((a us_split_fields6)) integer 
  (rec__instr__graphic_gauge__size a))

(define-fun us_split_fields_Fill__projection ((a us_split_fields6)) character 
  (rec__instr__graphic_gauge__fill a))

(define-fun us_split_fields_Empty__projection ((a us_split_fields6)) character 
  (rec__instr__graphic_gauge__empty a))

(define-fun us_split_fields_Name4__projection ((a us_split_fields6)) (Array Int character) 
  (rec__instr__instrument__name3 a))

(define-fun us_split_fields_Value3__projection ((a us_split_fields6)) percent 
  (rec__instr__gauge__value1 a))

(define-fun us_split_fields_4__projection ((a us_split_fields6)) us_private 
  (rec__ext__3 a))

(declare-datatypes ()
((us_split_fields__ref3
 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref_4__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6)(attr__tag3 Int)))))
(define-fun us_rep_7__projection ((a us_rep3)) us_split_fields6 (us_split_fields7
                                                                a))

(define-fun us_rep_8__projection ((a us_rep3)) Int (attr__tag3 a))

(declare-fun hide_ext__2 (integer character character percent
  us_private) us_private)

(declare-fun extract__size (us_private) integer)

;; extract__size__conv
  (assert
  (forall ((size integer))
  (forall ((fill character) (empty character))
  (forall ((value percent))
  (forall ((rec__ext__4 us_private))
  (= (extract__size (hide_ext__2 size fill empty value rec__ext__4)) size))))))

(declare-fun extract__fill (us_private) character)

;; extract__fill__conv
  (assert
  (forall ((size integer))
  (forall ((fill character) (empty character))
  (forall ((value percent))
  (forall ((rec__ext__4 us_private))
  (= (extract__fill (hide_ext__2 size fill empty value rec__ext__4)) fill))))))

(declare-fun extract__empty (us_private) character)

;; extract__empty__conv
  (assert
  (forall ((size integer))
  (forall ((fill character) (empty character))
  (forall ((value percent))
  (forall ((rec__ext__4 us_private))
  (= (extract__empty (hide_ext__2 size fill empty value rec__ext__4)) empty))))))

;; extract__value__conv
  (assert
  (forall ((size integer))
  (forall ((fill character) (empty character))
  (forall ((value percent))
  (forall ((rec__ext__4 us_private))
  (= (extract__value1 (hide_ext__2 size fill empty value rec__ext__4)) value))))))

(declare-fun extract__ext__2 (us_private) us_private)

(define-fun to_base2 ((a us_rep3)) us_rep (mk___rep
                                          (mk___split_fields
                                          (rec__instr__instrument__name3
                                          (us_split_fields7 a))
                                          (hide_ext__2
                                          (rec__instr__graphic_gauge__size
                                          (us_split_fields7 a))
                                          (rec__instr__graphic_gauge__fill
                                          (us_split_fields7 a))
                                          (rec__instr__graphic_gauge__empty
                                          (us_split_fields7 a))
                                          (rec__instr__gauge__value1
                                          (us_split_fields7 a))
                                          (rec__ext__3 (us_split_fields7 a))))
                                          (attr__tag3 a)))

(define-fun of_base2 ((r us_rep)) us_rep3 (mk___rep3
                                          (mk___split_fields3
                                          (extract__size
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__fill
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__empty
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__instr__instrument__name
                                          (us_split_fields1 r))
                                          (extract__value1
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__ext__2
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq10 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (and
                         (and
                         (and
                         (= (to_rep1
                            (rec__instr__graphic_gauge__size
                            (us_split_fields7 a))) (to_rep1
                                                   (rec__instr__graphic_gauge__size
                                                   (us_split_fields7 b))))
                         (= (to_rep
                            (rec__instr__graphic_gauge__fill
                            (us_split_fields7 a))) (to_rep
                                                   (rec__instr__graphic_gauge__fill
                                                   (us_split_fields7 b)))))
                         (= (to_rep
                            (rec__instr__graphic_gauge__empty
                            (us_split_fields7 a))) (to_rep
                                                   (rec__instr__graphic_gauge__empty
                                                   (us_split_fields7 b)))))
                         (= (bool_eq3
                            (rec__instr__instrument__name3
                            (us_split_fields7 a)) 1 14
                            (rec__instr__instrument__name3
                            (us_split_fields7 b)) 1 14) true))
                         (= (to_rep3
                            (rec__instr__gauge__value1 (us_split_fields7 a))) 
                         (to_rep3
                         (rec__instr__gauge__value1 (us_split_fields7 b)))))
                    true false))

(declare-fun user_eq10 (us_rep3 us_rep3) Bool)

(declare-fun us_tag3 () Int)

(declare-fun value__size5 () Int)

(declare-fun object__size5 (us_rep3) Int)

(declare-fun value__alignment5 () Int)

(declare-fun object__alignment5 (us_rep3) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__alignment5 a))))

(declare-fun instr__graphic_gauge__size__first__bit () Int)

(declare-fun instr__graphic_gauge__size__last__bit () Int)

(declare-fun instr__graphic_gauge__size__position () Int)

;; instr__graphic_gauge__size__first__bit_axiom
  (assert (<= 0 instr__graphic_gauge__size__first__bit))

;; instr__graphic_gauge__size__last__bit_axiom
  (assert
  (< instr__graphic_gauge__size__first__bit instr__graphic_gauge__size__last__bit))

;; instr__graphic_gauge__size__position_axiom
  (assert (<= 0 instr__graphic_gauge__size__position))

(declare-fun instr__graphic_gauge__fill__first__bit () Int)

(declare-fun instr__graphic_gauge__fill__last__bit () Int)

(declare-fun instr__graphic_gauge__fill__position () Int)

;; instr__graphic_gauge__fill__first__bit_axiom
  (assert (<= 0 instr__graphic_gauge__fill__first__bit))

;; instr__graphic_gauge__fill__last__bit_axiom
  (assert
  (< instr__graphic_gauge__fill__first__bit instr__graphic_gauge__fill__last__bit))

;; instr__graphic_gauge__fill__position_axiom
  (assert (<= 0 instr__graphic_gauge__fill__position))

(declare-fun instr__graphic_gauge__empty__first__bit () Int)

(declare-fun instr__graphic_gauge__empty__last__bit () Int)

(declare-fun instr__graphic_gauge__empty__position () Int)

;; instr__graphic_gauge__empty__first__bit_axiom
  (assert (<= 0 instr__graphic_gauge__empty__first__bit))

;; instr__graphic_gauge__empty__last__bit_axiom
  (assert
  (< instr__graphic_gauge__empty__first__bit instr__graphic_gauge__empty__last__bit))

;; instr__graphic_gauge__empty__position_axiom
  (assert (<= 0 instr__graphic_gauge__empty__position))

(declare-fun instr__instrument__name__first__bit3 () Int)

(declare-fun instr__instrument__name__last__bit3 () Int)

(declare-fun instr__instrument__name__position3 () Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit3))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit3 instr__instrument__name__last__bit3))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position3))

(declare-fun instr__gauge__value__first__bit1 () Int)

(declare-fun instr__gauge__value__last__bit1 () Int)

(declare-fun instr__gauge__value__position1 () Int)

;; instr__gauge__value__first__bit_axiom
  (assert (<= 0 instr__gauge__value__first__bit1))

;; instr__gauge__value__last__bit_axiom
  (assert
  (< instr__gauge__value__first__bit1 instr__gauge__value__last__bit1))

;; instr__gauge__value__position_axiom
  (assert (<= 0 instr__gauge__value__position1))

(declare-fun dummy10 () us_rep3)

(declare-datatypes ()
((graphic_gauge__ref
 (mk_graphic_gauge__ref (graphic_gauge__content us_rep3)))))
(define-fun graphic_gauge__ref___projection ((a graphic_gauge__ref)) us_rep3 
  (graphic_gauge__content a))

(declare-sort sixty 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 60)))

(define-fun bool_eq11 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq11 (sixty sixty) Bool)

(declare-fun dummy11 () sixty)

(declare-datatypes () ((sixty__ref (mk_sixty__ref (sixty__content sixty)))))
(define-fun sixty__ref___projection ((a sixty__ref)) sixty (sixty__content a))

(declare-fun to_rep4 (sixty) Int)

(declare-fun of_rep4 (Int) sixty)

;; inversion_axiom
  (assert
  (forall ((x sixty))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x sixty)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-sort twenty_four 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 24)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq12 (twenty_four twenty_four) Bool)

(declare-fun dummy12 () twenty_four)

(declare-datatypes ()
((twenty_four__ref (mk_twenty_four__ref (twenty_four__content twenty_four)))))
(define-fun twenty_four__ref___projection ((a twenty_four__ref)) twenty_four 
  (twenty_four__content a))

(declare-fun to_rep5 (twenty_four) Int)

(declare-fun of_rep5 (Int) twenty_four)

;; inversion_axiom
  (assert
  (forall ((x twenty_four))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x twenty_four)) (! (in_range6
  (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                              (of_rep5 x))) )))

(declare-datatypes ()
((us_split_fields8
 (mk___split_fields4
 (rec__instr__clock__seconds sixty)(rec__instr__clock__minutes sixty)(rec__instr__clock__hours twenty_four)(rec__instr__instrument__name4 (Array Int character))(rec__ext__4 us_private)))))
(define-fun us_split_fields_Seconds__projection ((a us_split_fields8)) sixty 
  (rec__instr__clock__seconds a))

(define-fun us_split_fields_Minutes__projection ((a us_split_fields8)) sixty 
  (rec__instr__clock__minutes a))

(define-fun us_split_fields_Hours__projection ((a us_split_fields8)) twenty_four 
  (rec__instr__clock__hours a))

(define-fun us_split_fields_Name5__projection ((a us_split_fields8)) (Array Int character) 
  (rec__instr__instrument__name4 a))

(define-fun us_split_fields_5__projection ((a us_split_fields8)) us_private 
  (rec__ext__4 a))

(declare-datatypes ()
((us_split_fields__ref4
 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref_5__projection ((a us_split_fields__ref4)) us_split_fields8 
  (us_split_fields__content4 a))

(declare-datatypes ()
((us_rep4 (mk___rep4 (us_split_fields9 us_split_fields8)(attr__tag4 Int)))))
(define-fun us_rep_9__projection ((a us_rep4)) us_split_fields8 (us_split_fields9
                                                                a))

(define-fun us_rep_10__projection ((a us_rep4)) Int (attr__tag4 a))

(declare-fun hide_ext__3 (sixty sixty twenty_four us_private) us_private)

(declare-fun extract__seconds (us_private) sixty)

;; extract__seconds__conv
  (assert
  (forall ((seconds sixty) (minutes sixty))
  (forall ((hours twenty_four))
  (forall ((rec__ext__5 us_private))
  (= (extract__seconds (hide_ext__3 seconds minutes hours rec__ext__5)) seconds)))))

(declare-fun extract__minutes (us_private) sixty)

;; extract__minutes__conv
  (assert
  (forall ((seconds sixty) (minutes sixty))
  (forall ((hours twenty_four))
  (forall ((rec__ext__5 us_private))
  (= (extract__minutes (hide_ext__3 seconds minutes hours rec__ext__5)) minutes)))))

(declare-fun extract__hours (us_private) twenty_four)

;; extract__hours__conv
  (assert
  (forall ((seconds sixty) (minutes sixty))
  (forall ((hours twenty_four))
  (forall ((rec__ext__5 us_private))
  (= (extract__hours (hide_ext__3 seconds minutes hours rec__ext__5)) hours)))))

(declare-fun extract__ext__3 (us_private) us_private)

(define-fun to_base3 ((a us_rep4)) us_rep (mk___rep
                                          (mk___split_fields
                                          (rec__instr__instrument__name4
                                          (us_split_fields9 a))
                                          (hide_ext__3
                                          (rec__instr__clock__seconds
                                          (us_split_fields9 a))
                                          (rec__instr__clock__minutes
                                          (us_split_fields9 a))
                                          (rec__instr__clock__hours
                                          (us_split_fields9 a))
                                          (rec__ext__4 (us_split_fields9 a))))
                                          (attr__tag4 a)))

(define-fun of_base3 ((r us_rep)) us_rep4 (mk___rep4
                                          (mk___split_fields4
                                          (extract__seconds
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__minutes
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__hours
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__instr__instrument__name
                                          (us_split_fields1 r))
                                          (extract__ext__3
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq13 ((a us_rep4)
  (b us_rep4)) Bool (ite (and
                         (and
                         (and
                         (= (to_rep4
                            (rec__instr__clock__seconds (us_split_fields9 a))) 
                         (to_rep4
                         (rec__instr__clock__seconds (us_split_fields9 b))))
                         (= (to_rep4
                            (rec__instr__clock__minutes (us_split_fields9 a))) 
                         (to_rep4
                         (rec__instr__clock__minutes (us_split_fields9 b)))))
                         (= (to_rep5
                            (rec__instr__clock__hours (us_split_fields9 a))) 
                         (to_rep5
                         (rec__instr__clock__hours (us_split_fields9 b)))))
                         (= (bool_eq3
                            (rec__instr__instrument__name4
                            (us_split_fields9 a)) 1 14
                            (rec__instr__instrument__name4
                            (us_split_fields9 b)) 1 14) true))
                    true false))

(declare-fun user_eq13 (us_rep4 us_rep4) Bool)

(declare-fun us_tag4 () Int)

(declare-fun value__size6 () Int)

(declare-fun object__size6 (us_rep4) Int)

(declare-fun value__alignment6 () Int)

(declare-fun object__alignment6 (us_rep4) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a us_rep4)) (<= 0 (object__size6 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a us_rep4)) (<= 0 (object__alignment6 a))))

(declare-fun instr__clock__seconds__first__bit () Int)

(declare-fun instr__clock__seconds__last__bit () Int)

(declare-fun instr__clock__seconds__position () Int)

;; instr__clock__seconds__first__bit_axiom
  (assert (<= 0 instr__clock__seconds__first__bit))

;; instr__clock__seconds__last__bit_axiom
  (assert
  (< instr__clock__seconds__first__bit instr__clock__seconds__last__bit))

;; instr__clock__seconds__position_axiom
  (assert (<= 0 instr__clock__seconds__position))

(declare-fun instr__clock__minutes__first__bit () Int)

(declare-fun instr__clock__minutes__last__bit () Int)

(declare-fun instr__clock__minutes__position () Int)

;; instr__clock__minutes__first__bit_axiom
  (assert (<= 0 instr__clock__minutes__first__bit))

;; instr__clock__minutes__last__bit_axiom
  (assert
  (< instr__clock__minutes__first__bit instr__clock__minutes__last__bit))

;; instr__clock__minutes__position_axiom
  (assert (<= 0 instr__clock__minutes__position))

(declare-fun instr__clock__hours__first__bit () Int)

(declare-fun instr__clock__hours__last__bit () Int)

(declare-fun instr__clock__hours__position () Int)

;; instr__clock__hours__first__bit_axiom
  (assert (<= 0 instr__clock__hours__first__bit))

;; instr__clock__hours__last__bit_axiom
  (assert (< instr__clock__hours__first__bit instr__clock__hours__last__bit))

;; instr__clock__hours__position_axiom
  (assert (<= 0 instr__clock__hours__position))

(declare-fun instr__instrument__name__first__bit4 () Int)

(declare-fun instr__instrument__name__last__bit4 () Int)

(declare-fun instr__instrument__name__position4 () Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit4))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit4 instr__instrument__name__last__bit4))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position4))

(declare-fun dummy13 () us_rep4)

(declare-datatypes ()
((clock__ref (mk_clock__ref (clock__content us_rep4)))))
(define-fun clock__ref___projection ((a clock__ref)) us_rep4 (clock__content
                                                             a))

(declare-fun us_tag5 () Int)

(declare-fun value__size7 () Int)

(declare-fun object__size7 (us_rep4) Int)

(declare-fun value__alignment7 () Int)

(declare-fun object__alignment7 (us_rep4) Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (forall ((a us_rep4)) (<= 0 (object__size7 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment7))

;; object__alignment_axiom
  (assert (forall ((a us_rep4)) (<= 0 (object__alignment7 a))))

(declare-fun instr__instrument__name__first__bit5 () Int)

(declare-fun instr__instrument__name__last__bit5 () Int)

(declare-fun instr__instrument__name__position5 () Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit5))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit5 instr__instrument__name__last__bit5))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position5))

(declare-fun instr__clock__seconds__first__bit1 () Int)

(declare-fun instr__clock__seconds__last__bit1 () Int)

(declare-fun instr__clock__seconds__position1 () Int)

;; instr__clock__seconds__first__bit_axiom
  (assert (<= 0 instr__clock__seconds__first__bit1))

;; instr__clock__seconds__last__bit_axiom
  (assert
  (< instr__clock__seconds__first__bit1 instr__clock__seconds__last__bit1))

;; instr__clock__seconds__position_axiom
  (assert (<= 0 instr__clock__seconds__position1))

(declare-fun instr__clock__minutes__first__bit1 () Int)

(declare-fun instr__clock__minutes__last__bit1 () Int)

(declare-fun instr__clock__minutes__position1 () Int)

;; instr__clock__minutes__first__bit_axiom
  (assert (<= 0 instr__clock__minutes__first__bit1))

;; instr__clock__minutes__last__bit_axiom
  (assert
  (< instr__clock__minutes__first__bit1 instr__clock__minutes__last__bit1))

;; instr__clock__minutes__position_axiom
  (assert (<= 0 instr__clock__minutes__position1))

(declare-fun instr__clock__hours__first__bit1 () Int)

(declare-fun instr__clock__hours__last__bit1 () Int)

(declare-fun instr__clock__hours__position1 () Int)

;; instr__clock__hours__first__bit_axiom
  (assert (<= 0 instr__clock__hours__first__bit1))

;; instr__clock__hours__last__bit_axiom
  (assert
  (< instr__clock__hours__first__bit1 instr__clock__hours__last__bit1))

;; instr__clock__hours__position_axiom
  (assert (<= 0 instr__clock__hours__position1))

(declare-fun dummy14 () us_rep4)

(declare-datatypes ()
((chronometer__ref (mk_chronometer__ref (chronometer__content us_rep4)))))
(define-fun chronometer__ref___projection ((a chronometer__ref)) us_rep4 
  (chronometer__content a))

(declare-fun display_value__specific_post (Int us_rep) Bool)

;; instr__instrument__compat_axiom
  (assert true)

;; instr__speedometer__compat_axiom
  (assert true)

;; instr__gauge__compat_axiom
  (assert true)

;; instr__graphic_gauge__compat_axiom
  (assert true)

;; instr__clock__compat_axiom
  (assert true)

;; instr__chronometer__compat_axiom
  (assert true)

(declare-fun temp___String_Literal_163 (tuple0) (Array Int character))

;; temp___String_Literal_163__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 1)) 32)
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 2)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 3)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 5)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 6)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 11)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 12)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 13)) 32))
     (= (to_rep (select (temp___String_Literal_163 us_void_param) 14)) 32)) :pattern (
  (temp___String_Literal_163 us_void_param)) )))

(define-fun default_initial_assumption ((temp___expr_229 us_rep3)
  (temp___skip_top_level_230 Bool)) Bool (and
                                         (= (attr__tag3 temp___expr_229) 
                                         us_tag3)
                                         (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep1
                                            (rec__instr__graphic_gauge__size
                                            (us_split_fields7
                                            temp___expr_229))) 20)
                                         (= (to_rep
                                            (rec__instr__graphic_gauge__fill
                                            (us_split_fields7
                                            temp___expr_229))) 42))
                                         (= (to_rep
                                            (rec__instr__graphic_gauge__empty
                                            (us_split_fields7
                                            temp___expr_229))) 46))
                                         (= (rec__instr__instrument__name3
                                            (us_split_fields7
                                            temp___expr_229)) (temp___String_Literal_163
                                                              Tuple0)))
                                         (= (to_rep3
                                            (rec__instr__gauge__value1
                                            (us_split_fields7
                                            temp___expr_229))) 0))))

(declare-fun x () us_rep3)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun lg () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))

(define-fun bool_eq14 ((x1 Int) (y Int)) Bool (ite (= x1 y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq14 (integer integer) Bool)

(declare-fun dummy15 () integer)

(declare-datatypes ()
((tTs1SP1__ref (mk_tTs1SP1__ref (tTs1SP1__content integer)))))
(define-fun tTs1SP1__ref___projection ((a tTs1SP1__ref)) integer (tTs1SP1__content
                                                                 a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int character))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))

(define-fun of_array1 ((a (Array Int character)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-fun value__size8 () Int)

(declare-fun object__size8 ((Array Int character)) Int)

(declare-fun value__component__size2 () Int)

(declare-fun object__component__size2 ((Array Int character)) Int)

(declare-fun value__alignment8 () Int)

(declare-fun object__alignment8 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size8 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment8))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment8 a))))

(define-fun bool_eq15 ((x1 us_t1)
  (y us_t1)) Bool (bool_eq3 (elts1 x1) (to_rep1 (first2 (rt1 x1)))
                  (to_rep1 (last2 (rt1 x1))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))

(declare-fun user_eq15 (us_t1 us_t1) Bool)

(declare-fun dummy16 () us_t1)

(declare-datatypes () ((ts1S__ref (mk_ts1S__ref (ts1S__content us_t1)))))
(define-fun ts1S__ref___projection ((a ts1S__ref)) us_t1 (ts1S__content a))

(define-fun dynamic_invariant1 ((temp___expr_303 us_t1)
  (temp___is_init_300 Bool) (temp___skip_constant_301 Bool)
  (temp___do_toplevel_302 Bool)) Bool (=>
                                      (not (= temp___skip_constant_301 true))
                                      (and (dynamic_property2 1 lg
                                      (first3 temp___expr_303)
                                      (last3 temp___expr_303))
                                      (and (= (first3 temp___expr_303) 1)
                                      (= (last3 temp___expr_303) lg)))))

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))

(define-fun bool_eq16 ((x1 Int) (y Int)) Bool (ite (= x1 y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq16 (integer integer) Bool)

(declare-fun dummy17 () integer)

(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content integer)))))
(define-fun t8b__ref___projection ((a t8b__ref)) integer (t8b__content a))

(declare-sort t2 0)

(declare-fun first4 (t2) integer)

(declare-fun last4 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first4 (mk2 f l))) f)
     (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)) )))

(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high)
                   (and (dynamic_property3 range_first range_last low)
                   (dynamic_property3 range_first range_last high))))))

(declare-datatypes ()
((us_t2 (mk___t2 (elts2 (Array Int character))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))

(define-fun of_array2 ((a (Array Int character)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))

(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a))
                                    (+ (- (last5 a) (first5 a)) 1) 0))

(declare-fun value__size9 () Int)

(declare-fun object__size9 ((Array Int character)) Int)

(declare-fun value__component__size3 () Int)

(declare-fun object__component__size3 ((Array Int character)) Int)

(declare-fun value__alignment9 () Int)

(declare-fun object__alignment9 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size9))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size9 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment9))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment9 a))))

(define-fun bool_eq17 ((x1 us_t2)
  (y us_t2)) Bool (bool_eq3 (elts2 x1) (to_rep1 (first4 (rt2 x1)))
                  (to_rep1 (last4 (rt2 x1))) (elts2 y)
                  (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))

(declare-fun user_eq17 (us_t2 us_t2) Bool)

(declare-fun dummy18 () us_t2)

(declare-datatypes () ((t9b__ref (mk_t9b__ref (t9b__content us_t2)))))
(define-fun t9b__ref___projection ((a t9b__ref)) us_t2 (t9b__content a))

(declare-fun s1 () us_t1)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun instr__display_value__4__s1__aggregate_def (Int Int Int) us_t2)

;; def_axiom
  (assert
  (forall ((temp___133 Int) (temp___134 Int) (temp___135 Int))
  (let ((temp___132 (instr__display_value__4__s1__aggregate_def temp___133
                    temp___134 temp___135)))
  (and
  (=> (dynamic_property 1 2147483647 temp___134 temp___135)
  (and (= (first5 temp___132) temp___134) (= (last5 temp___132) temp___135)))
  (forall ((temp___136 Int))
  (= (select (to_array2 temp___132) temp___136) (of_rep temp___133)))))))

(define-fun dynamic_property5 ((first_int Int) (last_int Int)
  (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))

(define-fun bool_eq18 ((x1 Int) (y Int)) Bool (ite (= x1 y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq18 (integer integer) Bool)

(declare-fun dummy19 () integer)

(declare-datatypes ()
((tTs2SP1__ref (mk_tTs2SP1__ref (tTs2SP1__content integer)))))
(define-fun tTs2SP1__ref___projection ((a tTs2SP1__ref)) integer (tTs2SP1__content
                                                                 a))

(declare-sort t3 0)

(declare-fun first6 (t3) integer)

(declare-fun last6 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first6 (mk3 f l))) f)
     (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)) )))

(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high)
                   (and (dynamic_property5 range_first range_last low)
                   (dynamic_property5 range_first range_last high))))))

(declare-datatypes ()
((us_t3 (mk___t3 (elts3 (Array Int character))(rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int character) (elts3 a))

(define-fun of_array3 ((a (Array Int character)) (f Int)
  (l Int)) us_t3 (mk___t3 a (mk3 f l)))

(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))

(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a))
                                    (+ (- (last7 a) (first7 a)) 1) 0))

(declare-fun value__size10 () Int)

(declare-fun object__size10 ((Array Int character)) Int)

(declare-fun value__component__size4 () Int)

(declare-fun object__component__size4 ((Array Int character)) Int)

(declare-fun value__alignment10 () Int)

(declare-fun object__alignment10 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size10))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size10 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size4))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment10))

;; object__alignment_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__alignment10 a))))

(define-fun bool_eq19 ((x1 us_t3)
  (y us_t3)) Bool (bool_eq3 (elts3 x1) (to_rep1 (first6 (rt3 x1)))
                  (to_rep1 (last6 (rt3 x1))) (elts3 y)
                  (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))

(declare-fun user_eq19 (us_t3 us_t3) Bool)

(declare-fun dummy20 () us_t3)

(declare-datatypes () ((ts2S__ref (mk_ts2S__ref (ts2S__content us_t3)))))
(define-fun ts2S__ref___projection ((a ts2S__ref)) us_t3 (ts2S__content a))

(define-fun dynamic_invariant2 ((temp___expr_312 us_t3)
  (temp___is_init_309 Bool) (temp___skip_constant_310 Bool)
  (temp___do_toplevel_311 Bool)) Bool (=>
                                      (not (= temp___skip_constant_310 true))
                                      (and (dynamic_property6 (+ lg 1)
                                      (to_rep1
                                      (rec__instr__graphic_gauge__size
                                      (us_split_fields7 x)))
                                      (first7 temp___expr_312)
                                      (last7 temp___expr_312))
                                      (and
                                      (= (first7 temp___expr_312) (+ 
                                      lg 1))
                                      (= (last7 temp___expr_312) (to_rep1
                                                                 (rec__instr__graphic_gauge__size
                                                                 (us_split_fields7
                                                                 x))))))))

(define-fun dynamic_property7 ((first_int Int) (last_int Int)
  (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))

(define-fun bool_eq20 ((x1 Int) (y Int)) Bool (ite (= x1 y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq20 (integer integer) Bool)

(declare-fun dummy21 () integer)

(declare-datatypes () ((t10b__ref (mk_t10b__ref (t10b__content integer)))))
(define-fun t10b__ref___projection ((a t10b__ref)) integer (t10b__content a))

(declare-sort t4 0)

(declare-fun first8 (t4) integer)

(declare-fun last8 (t4) integer)

(declare-fun mk4 (Int Int) t4)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first8 (mk4 f l))) f)
     (= (to_rep1 (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)) )))

(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high)
                   (and (dynamic_property7 range_first range_last low)
                   (dynamic_property7 range_first range_last high))))))

(declare-datatypes ()
((us_t4 (mk___t4 (elts4 (Array Int character))(rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int character) (elts4 a))

(define-fun of_array4 ((a (Array Int character)) (f Int)
  (l Int)) us_t4 (mk___t4 a (mk4 f l)))

(define-fun first9 ((a us_t4)) Int (to_rep1 (first8 (rt4 a))))

(define-fun last9 ((a us_t4)) Int (to_rep1 (last8 (rt4 a))))

(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last9 a))
                                    (+ (- (last9 a) (first9 a)) 1) 0))

(declare-fun value__size11 () Int)

(declare-fun object__size11 ((Array Int character)) Int)

(declare-fun value__component__size5 () Int)

(declare-fun object__component__size5 ((Array Int character)) Int)

(declare-fun value__alignment11 () Int)

(declare-fun object__alignment11 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size11))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size11 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size5))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment11))

;; object__alignment_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__alignment11 a))))

(define-fun bool_eq21 ((x1 us_t4)
  (y us_t4)) Bool (bool_eq3 (elts4 x1) (to_rep1 (first8 (rt4 x1)))
                  (to_rep1 (last8 (rt4 x1))) (elts4 y)
                  (to_rep1 (first8 (rt4 y))) (to_rep1 (last8 (rt4 y)))))

(declare-fun user_eq21 (us_t4 us_t4) Bool)

(declare-fun dummy22 () us_t4)

(declare-datatypes () ((t11b__ref (mk_t11b__ref (t11b__content us_t4)))))
(define-fun t11b__ref___projection ((a t11b__ref)) us_t4 (t11b__content a))

(declare-fun s2 () us_t3)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun instr__display_value__4__s2__aggregate_def (Int Int Int) us_t4)

;; def_axiom
  (assert
  (forall ((temp___139 Int) (temp___140 Int) (temp___141 Int))
  (let ((temp___138 (instr__display_value__4__s2__aggregate_def temp___139
                    temp___140 temp___141)))
  (and
  (=> (dynamic_property 1 2147483647 temp___140 temp___141)
  (and (= (first9 temp___138) temp___140) (= (last9 temp___138) temp___141)))
  (forall ((temp___142 Int))
  (= (select (to_array4 temp___138) temp___142) (of_rep temp___139)))))))

(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range1
                                     temp___expr_39)))

(define-fun dynamic_invariant4 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range2 temp___expr_63)))

(define-fun dynamic_invariant5 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

;; lg__def_axiom
  (assert
  (= lg (div1
        (* (to_rep1 (rec__instr__graphic_gauge__size (us_split_fields7 x))) 
        (to_rep3 (rec__instr__gauge__value1 (us_split_fields7 x)))) 100)))

;; s1__def_axiom
  (assert
  (= s1 (let ((temp___137 (instr__display_value__4__s1__aggregate_def
                          (to_rep
                          (rec__instr__graphic_gauge__fill
                          (us_split_fields7 x))) 1 lg)))
        (of_array1 (to_array2 temp___137) (first5 temp___137)
        (last5 temp___137)))))

;; s2__def_axiom
  (assert
  (= s2 (let ((temp___143 (instr__display_value__4__s2__aggregate_def
                          (to_rep
                          (rec__instr__graphic_gauge__empty
                          (us_split_fields7 x))) (+ lg 1)
                          (to_rep1
                          (rec__instr__graphic_gauge__size
                          (us_split_fields7 x))))))
        (of_array3
        (slide (to_array4 temp___143) (first9 temp___143) (+ lg 1)) (+ 
        lg 1)
        (to_rep1 (rec__instr__graphic_gauge__size (us_split_fields7 x)))))))

(define-fun dynamic_invariant6 ((temp___expr_178 Int)
  (temp___is_init_175 Bool) (temp___skip_constant_176 Bool)
  (temp___do_toplevel_177 Bool)) Bool (=>
                                      (or (= temp___is_init_175 true)
                                      (<= 0 85)) (in_range3 temp___expr_178)))

(define-fun dynamic_invariant7 ((temp___expr_202 Int)
  (temp___is_init_199 Bool) (temp___skip_constant_200 Bool)
  (temp___do_toplevel_201 Bool)) Bool (=>
                                      (or (= temp___is_init_199 true)
                                      (<= 0 100)) (in_range4
                                      temp___expr_202)))

(define-fun dynamic_invariant8 ((temp___expr_236 Int)
  (temp___is_init_233 Bool) (temp___skip_constant_234 Bool)
  (temp___do_toplevel_235 Bool)) Bool (=>
                                      (or (= temp___is_init_233 true)
                                      (<= 0 60)) (in_range5 temp___expr_236)))

(define-fun dynamic_invariant9 ((temp___expr_242 Int)
  (temp___is_init_239 Bool) (temp___skip_constant_240 Bool)
  (temp___do_toplevel_241 Bool)) Bool (=>
                                      (or (= temp___is_init_239 true)
                                      (<= 0 24)) (in_range6 temp___expr_242)))

(define-fun default_initial_assumption1 ((temp___expr_161 us_rep)
  (temp___skip_top_level_162 Bool)) Bool (and
                                         (= (attr__tag temp___expr_161) 
                                         us_tag)
                                         (= (rec__instr__instrument__name
                                            (us_split_fields1
                                            temp___expr_161)) (temp___String_Literal_163
                                                              Tuple0))))

(define-fun default_initial_assumption2 ((temp___expr_186 us_rep1)
  (temp___skip_top_level_187 Bool)) Bool (and
                                         (= (attr__tag1 temp___expr_186) 
                                         us_tag1)
                                         (and
                                         (= (to_rep2
                                            (rec__instr__speedometer__value
                                            (us_split_fields3
                                            temp___expr_186))) 0)
                                         (= (rec__instr__instrument__name1
                                            (us_split_fields3
                                            temp___expr_186)) (temp___String_Literal_163
                                                              Tuple0)))))

(define-fun default_initial_assumption3 ((temp___expr_210 us_rep2)
  (temp___skip_top_level_211 Bool)) Bool (and
                                         (= (attr__tag2 temp___expr_210) 
                                         us_tag2)
                                         (and
                                         (= (to_rep3
                                            (rec__instr__gauge__value
                                            (us_split_fields5
                                            temp___expr_210))) 0)
                                         (= (rec__instr__instrument__name2
                                            (us_split_fields5
                                            temp___expr_210)) (temp___String_Literal_163
                                                              Tuple0)))))

(define-fun default_initial_assumption4 ((temp___expr_250 us_rep4)
  (temp___skip_top_level_251 Bool)) Bool (and
                                         (= (attr__tag4 temp___expr_250) 
                                         us_tag4)
                                         (and
                                         (and
                                         (and
                                         (= (to_rep4
                                            (rec__instr__clock__seconds
                                            (us_split_fields9
                                            temp___expr_250))) 0)
                                         (= (to_rep4
                                            (rec__instr__clock__minutes
                                            (us_split_fields9
                                            temp___expr_250))) 0))
                                         (= (to_rep5
                                            (rec__instr__clock__hours
                                            (us_split_fields9
                                            temp___expr_250))) 0))
                                         (= (rec__instr__instrument__name4
                                            (us_split_fields9
                                            temp___expr_250)) (temp___String_Literal_163
                                                              Tuple0)))))

(define-fun default_initial_assumption5 ((temp___expr_272 us_rep4)
  (temp___skip_top_level_273 Bool)) Bool (and
                                         (= (attr__tag4 temp___expr_272) 
                                         us_tag5)
                                         (and
                                         (and
                                         (and
                                         (= (rec__instr__instrument__name4
                                            (us_split_fields9
                                            temp___expr_272)) (temp___String_Literal_163
                                                              Tuple0))
                                         (= (to_rep4
                                            (rec__instr__clock__seconds
                                            (us_split_fields9
                                            temp___expr_272))) 0))
                                         (= (to_rep4
                                            (rec__instr__clock__minutes
                                            (us_split_fields9
                                            temp___expr_272))) 0))
                                         (= (to_rep5
                                            (rec__instr__clock__hours
                                            (us_split_fields9
                                            temp___expr_272))) 0))))

(declare-fun o () Int)

(declare-fun instr__display_value__4__lg__assume () Int)

(declare-fun temp___349 () (Array Int character))

(declare-fun temp___3491 () t2)

;; H
  (assert
  (and
  (= o (* (to_rep1 (rec__instr__graphic_gauge__size (us_split_fields7 x))) 
  (to_rep3 (rec__instr__gauge__value1 (us_split_fields7 x))))) (in_range
  (* (to_rep1 (rec__instr__graphic_gauge__size (us_split_fields7 x))) 
  (to_rep3 (rec__instr__gauge__value1 (us_split_fields7 x)))))))

;; H
  (assert (= instr__display_value__4__lg__assume (div1 o 100)))

;; H
  (assert (= instr__display_value__4__lg__assume lg))

;; H
  (assert (in_range lg))

;; H
  (assert
  (= (to_rep1
     (first4
     (rt2
     (instr__display_value__4__s1__aggregate_def
     (to_rep (rec__instr__graphic_gauge__fill (us_split_fields7 x))) 1 
     lg)))) 1))

;; H
  (assert
  (= (to_rep1
     (last4
     (rt2
     (instr__display_value__4__s1__aggregate_def
     (to_rep (rec__instr__graphic_gauge__fill (us_split_fields7 x))) 1 
     lg)))) lg))

;; H
  (assert
  (= (mk___t2 temp___349 temp___3491) (instr__display_value__4__s1__aggregate_def
                                      (to_rep
                                      (rec__instr__graphic_gauge__fill
                                      (us_split_fields7 x))) 1 lg)))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not
  (= (ite (<= (to_rep1 (first4 temp___3491)) (to_rep1 (last4 temp___3491)))
     (+ (- (to_rep1 (last4 temp___3491)) (to_rep1 (first4 temp___3491))) 1)
     0) (ite (<= 1 lg) (+ (- lg 1) 1) 0))))
(check-sat)
