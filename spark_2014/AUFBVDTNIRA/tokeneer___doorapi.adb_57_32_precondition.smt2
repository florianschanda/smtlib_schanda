;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant1 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(declare-fun overwrite (us_t Int us_t) us_t)

(declare-fun overwrite__function_guard (us_t us_t Int us_t) Bool)

;; overwrite__post_axiom
  (assert
  (forall ((source us_t) (new_item us_t))
  (forall ((position Int))
  (! (=>
     (and
     (and (dynamic_invariant1 source true true true) (dynamic_invariant
     position true true true)) (dynamic_invariant1 new_item true true true))
     (dynamic_invariant1 (overwrite source position new_item) true false
     true)) :pattern ((overwrite source position new_item)) ))))

(declare-sort messagelengtht 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 4096)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (messagelengtht messagelengtht) Bool)

(declare-fun dummy4 () messagelengtht)

(declare-datatypes ()
((messagelengtht__ref
 (mk_messagelengtht__ref (messagelengtht__content messagelengtht)))))
(define-fun messagelengtht__ref___projection ((a messagelengtht__ref)) messagelengtht 
  (messagelengtht__content a))

(declare-fun to_rep2 (messagelengtht) Int)

(declare-fun of_rep2 (Int) messagelengtht)

;; inversion_axiom
  (assert
  (forall ((x messagelengtht))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x messagelengtht)) (! (in_range4
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort messageindext 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 4096)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (messageindext messageindext) Bool)

(declare-fun dummy5 () messageindext)

(declare-datatypes ()
((messageindext__ref
 (mk_messageindext__ref (messageindext__content messageindext)))))
(define-fun messageindext__ref___projection ((a messageindext__ref)) messageindext 
  (messageindext__content a))

(declare-fun dummy6 () (Array Int character))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int character)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int character)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))

(declare-fun user_eq6 ((Array Int character) (Array Int character)) Bool)

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__tcpip__messaget__data (Array Int character))(rec__tcpip__messaget__length messagelengtht)))))
(define-fun us_split_fields_Data__projection ((a us_split_fields)) (Array Int character) 
  (rec__tcpip__messaget__data a))

(define-fun us_split_fields_Length__projection ((a us_split_fields)) messagelengtht 
  (rec__tcpip__messaget__length a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref_2__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep_2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(define-fun bool_eq7 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (bool_eq3
                           (rec__tcpip__messaget__data (us_split_fields1 a))
                           1 4096
                           (rec__tcpip__messaget__data (us_split_fields1 b))
                           1 4096) true)
                        (= (to_rep2
                           (rec__tcpip__messaget__length
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__tcpip__messaget__length
                                                  (us_split_fields1 b)))))
                   true false))

(declare-fun user_eq7 (us_rep us_rep) Bool)

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))

(declare-fun tcpip__messaget__data__first__bit () Int)

(declare-fun tcpip__messaget__data__last__bit () Int)

(declare-fun tcpip__messaget__data__position () Int)

;; tcpip__messaget__data__first__bit_axiom
  (assert (<= 0 tcpip__messaget__data__first__bit))

;; tcpip__messaget__data__last__bit_axiom
  (assert
  (< tcpip__messaget__data__first__bit tcpip__messaget__data__last__bit))

;; tcpip__messaget__data__position_axiom
  (assert (<= 0 tcpip__messaget__data__position))

(declare-fun tcpip__messaget__length__first__bit () Int)

(declare-fun tcpip__messaget__length__last__bit () Int)

(declare-fun tcpip__messaget__length__position () Int)

;; tcpip__messaget__length__first__bit_axiom
  (assert (<= 0 tcpip__messaget__length__first__bit))

;; tcpip__messaget__length__last__bit_axiom
  (assert
  (< tcpip__messaget__length__first__bit tcpip__messaget__length__last__bit))

;; tcpip__messaget__length__position_axiom
  (assert (<= 0 tcpip__messaget__length__position))

(declare-fun dummy7 () us_rep)

(declare-datatypes ()
((messaget__ref (mk_messaget__ref (messaget__content us_rep)))))
(define-fun messaget__ref___projection ((a messaget__ref)) us_rep (messaget__content
                                                                  a))

(declare-fun temp___571 (Int) (Array Int character))

;; def_axiom
  (assert
  (forall ((temp___573 Int))
  (forall ((temp___574 Int))
  (= (select (temp___571 temp___573) temp___574) (of_rep temp___573)))))

(define-fun default_initial_assumption ((temp___expr_569 us_rep)
  (temp___skip_top_level_570 Bool)) Bool (and
                                         (= (rec__tcpip__messaget__data
                                            (us_split_fields1
                                            temp___expr_569)) (temp___571 0))
                                         (= (to_rep2
                                            (rec__tcpip__messaget__length
                                            (us_split_fields1
                                            temp___expr_569))) 0)))

(declare-fun nullmsg () us_rep)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun temp___139 (Int) (Array Int character))

;; def_axiom
  (assert
  (forall ((temp___141 Int))
  (forall ((temp___142 Int))
  (= (select (temp___139 temp___141) temp___142) (of_rep temp___141)))))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int character))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))

(define-fun of_array1 ((a (Array Int character)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-fun value__size3 () Int)

(declare-fun object__size3 ((Array Int character)) Int)

(declare-fun value__component__size2 () Int)

(declare-fun object__component__size2 ((Array Int character)) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size3 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment3 a))))

(define-fun bool_eq8 ((x us_t1)
  (y us_t1)) Bool (bool_eq3 (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last2 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))

(declare-fun user_eq8 (us_t1 us_t1) Bool)

(declare-fun dummy8 () us_t1)

(declare-datatypes ()
((dictionaryt__ref (mk_dictionaryt__ref (dictionaryt__content us_t1)))))
(define-fun dictionaryt__ref___projection ((a dictionaryt__ref)) us_t1 
  (dictionaryt__content a))

(define-fun dynamic_invariant2 ((temp___expr_604 us_t1)
  (temp___is_init_601 Bool) (temp___skip_constant_602 Bool)
  (temp___do_toplevel_603 Bool)) Bool (=>
                                      (not (= temp___skip_constant_602 true))
                                      (dynamic_property1 1 2147483647
                                      (first3 temp___expr_604)
                                      (last3 temp___expr_604))))

(declare-fun getdictionary (us_t Int) us_t1)

(declare-fun getdictionary__function_guard (us_t1 us_t Int) Bool)

(declare-fun getstringbykey (us_t1 us_t) us_t)

(declare-fun getstringbykey__function_guard (us_t us_t1 us_t) Bool)

(declare-fun getresponsefrommsg (us_rep) us_t)

(declare-fun getresponsefrommsg__function_guard (us_t us_rep) Bool)

(declare-sort doorstatet 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq9 (doorstatet doorstatet) Bool)

(declare-fun dummy9 () doorstatet)

(declare-datatypes ()
((doorstatet__ref (mk_doorstatet__ref (doorstatet__content doorstatet)))))
(define-fun doorstatet__ref___projection ((a doorstatet__ref)) doorstatet 
  (doorstatet__content a))

(define-fun dynamic_invariant3 ((temp___expr_623 Int)
  (temp___is_init_620 Bool) (temp___skip_constant_621 Bool)
  (temp___do_toplevel_622 Bool)) Bool (=>
                                      (or (= temp___is_init_620 true)
                                      (<= 0 2)) (in_range6 temp___expr_623)))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun outmsg () us_rep)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun temp___String_Literal_143 (tuple0) (Array Int character))

;; temp___String_Literal_143__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 1)) 100)
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 3)) 111))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 4)) 114))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 5)) 46))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 6)) 103))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 7)) 101))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 8)) 116))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 9)) 83))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 10)) 116))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 11)) 97))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 12)) 116))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 13)) 101))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 14)) 40))
     (= (to_rep (select (temp___String_Literal_143 us_void_param) 15)) 41)) :pattern (
  (temp___String_Literal_143 us_void_param)) )))

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun msg__first () integer)

(declare-fun msg__last () integer)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun statedict__first () integer)

(declare-fun statedict__last () integer)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun temp___String_Literal_629 (tuple0) (Array Int character))

;; temp___String_Literal_629__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 1)) 111)
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 2)) 112))
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 3)) 101))
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 4)) 114))
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 5)) 97))
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 6)) 116))
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 7)) 105))
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 8)) 111))
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 9)) 110))
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 10)) 97))
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 11)) 108))
     (= (to_rep (select (temp___String_Literal_629 us_void_param) 12)) 63)) :pattern (
  (temp___String_Literal_629 us_void_param)) )))

(declare-fun temp___String_Literal_630 (tuple0) (Array Int character))

;; temp___String_Literal_630__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_630 us_void_param) 1)) 99)
     (= (to_rep (select (temp___String_Literal_630 us_void_param) 2)) 108))
     (= (to_rep (select (temp___String_Literal_630 us_void_param) 3)) 111))
     (= (to_rep (select (temp___String_Literal_630 us_void_param) 4)) 115))
     (= (to_rep (select (temp___String_Literal_630 us_void_param) 5)) 101))
     (= (to_rep (select (temp___String_Literal_630 us_void_param) 6)) 100))
     (= (to_rep (select (temp___String_Literal_630 us_void_param) 7)) 63)) :pattern (
  (temp___String_Literal_630 us_void_param)) )))

(define-fun dynamic_invariant4 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant5 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

;; outmsg__def_axiom
  (assert
  (= outmsg (mk___rep
            (mk___split_fields
            (let ((temp___144 (overwrite
                              (of_array
                              (rec__tcpip__messaget__data
                              (us_split_fields1 nullmsg)) 1 4096) 1
                              (of_array (temp___String_Literal_143 Tuple0) 1
                              15))))
            (slide (to_array temp___144) (first1 temp___144) 1))
            (of_rep2 15)))))

(define-fun dynamic_invariant6 ((temp___expr_555 Int)
  (temp___is_init_552 Bool) (temp___skip_constant_553 Bool)
  (temp___do_toplevel_554 Bool)) Bool (=>
                                      (or (= temp___is_init_552 true)
                                      (<= 0 4096)) (in_range4
                                      temp___expr_555)))

(define-fun dynamic_invariant7 ((temp___expr_561 Int)
  (temp___is_init_558 Bool) (temp___skip_constant_559 Bool)
  (temp___do_toplevel_560 Bool)) Bool (=>
                                      (or (= temp___is_init_558 true)
                                      (<= 1 4096)) (in_range5
                                      temp___expr_561)))

;; nullmsg__def_axiom
  (assert
  (= nullmsg (mk___rep (mk___split_fields (temp___139 0) (of_rep2 0)))))

(declare-fun inmsg__split_fields () (Array Int character))

(declare-fun inmsg__split_fields1 () messagelengtht)

(declare-fun doorstate () Int)

(declare-fun isop () Bool)

(declare-fun msg () (Array Int character))

(declare-fun statedict () (Array Int character))

(declare-fun o () messagelengtht)

(declare-fun o1 () (Array Int character))

(declare-fun o2 () messagelengtht)

(declare-fun temp___633 () (Array Int character))

(declare-fun temp___6331 () messagelengtht)

(declare-fun temp___628 () (Array Int character))

(declare-fun temp___6281 () t)

(declare-fun o3 () messagelengtht)

(declare-fun o4 () (Array Int character))

(declare-fun o5 () (Array Int character))

(declare-fun o6 () messagelengtht)

(declare-fun doorapi__getdoorstateraw__outmsg__assume () (Array Int character))

(declare-fun doorapi__getdoorstateraw__outmsg__assume1 () messagelengtht)

(declare-fun doorapi__getdoorstateraw__B_1__msg__assume () (Array Int character))

(declare-fun doorapi__getdoorstateraw__B_1__msg__assume1 () t)

(declare-fun doorapi__getdoorstateraw__B_1__statedict__assume () (Array Int character))

(declare-fun doorapi__getdoorstateraw__B_1__statedict__assume1 () t1)

(declare-fun o7 () (Array Int character))

(declare-fun o8 () t)

(declare-fun o9 () us_image)

(declare-fun o10 () Bool)

(declare-fun o11 () (Array Int character))

(declare-fun o12 () t)

(declare-fun o13 () us_image)

(declare-fun result () Int)

(declare-fun doorstate1 () Int)

(declare-fun inmsg__split_fields2 () (Array Int character))

(declare-fun inmsg__split_fields3 () messagelengtht)

(declare-fun commsisok () Bool)

(declare-fun result1 () (Array Int character))

(declare-fun msg1 () (Array Int character))

(declare-fun result2 () map__ref)

(declare-fun statedict1 () (Array Int character))

(declare-fun result3 () bool__ref)

(declare-fun isop1 () Bool)

(define-fun o14 () us_t (mk___t o11 o12))

(define-fun o15 () us_t (mk___t o7 o8))

(define-fun doorapi__getdoorstateraw__B_1__statedict__assume2 () us_t1 
  (mk___t1 doorapi__getdoorstateraw__B_1__statedict__assume
  doorapi__getdoorstateraw__B_1__statedict__assume1))

(define-fun doorapi__getdoorstateraw__B_1__msg__assume2 () us_t (mk___t
                                                                doorapi__getdoorstateraw__B_1__msg__assume
                                                                doorapi__getdoorstateraw__B_1__msg__assume1))

(define-fun temp___6282 () us_t (mk___t temp___628 temp___6281))

;; H
  (assert (= (to_rep2 o) 0))

;; H
  (assert (= (temp___139 0) o1))

;; H
  (assert (= o o2))

;; H
  (assert (= temp___633 o1))

;; H
  (assert (= temp___6331 o2))

;; H
  (assert (= (mk___rep (mk___split_fields temp___633 temp___6331)) nullmsg))

;; H
  (assert
  (and (= inmsg__split_fields (temp___571 0))
  (= (to_rep2 inmsg__split_fields1) 0)))

;; H
  (assert (= (to_rep2 o3) 15))

;; H
  (assert
  (and
  (= temp___6282 (overwrite
                 (mk___t
                 (rec__tcpip__messaget__data (us_split_fields1 nullmsg))
                 (mk 1 4096)) 1
                 (mk___t (temp___String_Literal_143 Tuple0) (mk 1 15))))
  (dynamic_invariant1 temp___6282 true false true)))

;; H
  (assert
  (= (ite (<= (to_rep1 (first temp___6281)) (to_rep1 (last temp___6281)))
     (+ (- (to_rep1 (last temp___6281)) (to_rep1 (first temp___6281))) 1) 0) 
  (ite (<= 1 4096) (+ (- 4096 1) 1) 0)))

;; H
  (assert (= o4 (slide temp___628 (to_rep1 (first temp___6281)) 1)))

;; H
  (assert (= o4 o5))

;; H
  (assert (= o3 o6))

;; H
  (assert (= doorapi__getdoorstateraw__outmsg__assume o5))

;; H
  (assert (= doorapi__getdoorstateraw__outmsg__assume1 o6))

;; H
  (assert
  (= (mk___rep
     (mk___split_fields doorapi__getdoorstateraw__outmsg__assume
     doorapi__getdoorstateraw__outmsg__assume1)) outmsg))

;; H
  (assert (= result doorstate))

;; H
  (assert (= doorstate1 0))

;; H
  (assert (in_range6 doorstate1))

;; H
  (assert (= commsisok true))

;; H
  (assert
  (and
  (= doorapi__getdoorstateraw__B_1__msg__assume2 (getresponsefrommsg
                                                 (mk___rep
                                                 (mk___split_fields
                                                 inmsg__split_fields2
                                                 inmsg__split_fields3))))
  (dynamic_invariant1 doorapi__getdoorstateraw__B_1__msg__assume2 true false
  true)))

;; H
  (assert (= result1 msg))

;; H
  (assert (= msg1 doorapi__getdoorstateraw__B_1__msg__assume))

;; H
  (assert
  (= (to_rep1 msg__first) (to_rep1
                          (first doorapi__getdoorstateraw__B_1__msg__assume1))))

;; H
  (assert
  (= (to_rep1 msg__last) (to_rep1
                         (last doorapi__getdoorstateraw__B_1__msg__assume1))))

;; H
  (assert (dynamic_property 1 2147483647 (to_rep1 msg__first)
  (to_rep1 msg__last)))

;; H
  (assert
  (and
  (= doorapi__getdoorstateraw__B_1__statedict__assume2 (getdictionary
                                                       (mk___t msg1
                                                       (mk
                                                       (to_rep1 msg__first)
                                                       (to_rep1 msg__last)))
                                                       1))
  (dynamic_invariant2 doorapi__getdoorstateraw__B_1__statedict__assume2 true
  false true)))

;; H
  (assert (= result2 (mk_map__ref statedict)))

;; H
  (assert (= statedict1 doorapi__getdoorstateraw__B_1__statedict__assume))

;; H
  (assert
  (= (to_rep1 statedict__first) (to_rep1
                                (first2
                                doorapi__getdoorstateraw__B_1__statedict__assume1))))

;; H
  (assert
  (= (to_rep1 statedict__last) (to_rep1
                               (last2
                               doorapi__getdoorstateraw__B_1__statedict__assume1))))

;; H
  (assert (dynamic_property1 1 2147483647 (to_rep1 statedict__first)
  (to_rep1 statedict__last)))

;; H
  (assert
  (and
  (= o15 (getstringbykey
         (mk___t1 statedict1
         (mk1 (to_rep1 statedict__first) (to_rep1 statedict__last)))
         (mk___t (temp___String_Literal_629 Tuple0) (mk 1 12))))
  (dynamic_invariant1 o15 true false true)))

;; H
  (assert (= o9 (from_string o15)))

;; H
  (assert (= result3 (mk_bool__ref isop)))

;; H
  (assert (= isop1 o10))

;; H
  (assert
  (and
  (= o14 (getstringbykey
         (mk___t1 statedict1
         (mk1 (to_rep1 statedict__first) (to_rep1 statedict__last)))
         (mk___t (temp___String_Literal_630 Tuple0) (mk 1 7))))
  (dynamic_invariant1 o14 true false true)))

;; H
  (assert (= o13 (from_string o14)))

(assert
;; WP_parameter_def
 ;; File "doorapi.ads", line 30, characters 0-0
  (not (attr__ATTRIBUTE_VALUE__pre_check o13)))
(check-sat)
