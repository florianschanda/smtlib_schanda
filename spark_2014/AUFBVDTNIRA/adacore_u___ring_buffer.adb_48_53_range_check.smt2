;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort natural 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-fun dummy1 () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(declare-fun to_rep (natural) Int)

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-sort length_range 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 100)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (length_range length_range) Bool)

(declare-fun dummy2 () length_range)

(declare-datatypes ()
((length_range__ref
 (mk_length_range__ref (length_range__content length_range)))))
(define-fun length_range__ref___projection ((a length_range__ref)) length_range 
  (length_range__content a))

(define-fun dynamic_invariant1 ((temp___expr_148 Int)
  (temp___is_init_145 Bool) (temp___skip_constant_146 Bool)
  (temp___do_toplevel_147 Bool)) Bool (=>
                                      (or (= temp___is_init_145 true)
                                      (<= 0 100)) (in_range3
                                      temp___expr_148)))

(declare-sort index_type 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(define-fun bool_eq3 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (index_type index_type) Bool)

(declare-fun dummy3 () index_type)

(declare-datatypes ()
((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type 
  (index_type__content a))

(define-fun dynamic_invariant2 ((temp___expr_154 Int)
  (temp___is_init_151 Bool) (temp___skip_constant_152 Bool)
  (temp___do_toplevel_153 Bool)) Bool (=>
                                      (or (= temp___is_init_151 true)
                                      (<= 1 100)) (in_range4
                                      temp___expr_154)))

(declare-sort extended_index 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 100)))

(define-fun bool_eq4 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq4 (extended_index extended_index) Bool)

(declare-fun dummy4 () extended_index)

(declare-datatypes ()
((extended_index__ref
 (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) extended_index 
  (extended_index__content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq5 (us_rep us_rep) Bool)

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun dummy5 () us_rep)

(declare-datatypes ()
((sequence__ref (mk_sequence__ref (sequence__content us_rep)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep (sequence__content
                                                                  a))

(declare-fun length (us_rep) Int)

(declare-fun length__function_guard (Int us_rep) Bool)

(declare-sort count_type 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (count_type count_type) Bool)

(declare-fun dummy6 () count_type)

(declare-datatypes ()
((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type 
  (count_type__content a))

(define-fun dynamic_invariant3 ((temp___expr_142 Int)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (=>
                                      (or (= temp___is_init_139 true)
                                      (<= 0 2147483647)) (in_range6
                                      temp___expr_142)))

(define-fun last ((container us_rep)) Int (+ 0 (length container)))

(declare-fun last__function_guard (Int us_rep) Bool)

(declare-fun get (us_rep Int) Int)

(declare-fun get__function_guard (Int us_rep Int) Bool)

(define-fun oeq ((left us_rep)
  (right us_rep)) Bool (and (= (length left) (length right)) (ite (forall
                                                                  ((n Int))
                                                                  (=>
                                                                  (and
                                                                  (<= 1 n)
                                                                  (<= n 
                                                                  (last left)))
                                                                  (= 
                                                                  (get left
                                                                  n) 
                                                                  (get right
                                                                  n))))
                                                             true false)))

(declare-fun oeq__function_guard (Bool us_rep us_rep) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep) (b us_rep))
  (! (= (user_eq5 a b) (oeq a b)) :pattern ((user_eq5 a b)) )))

(define-fun default_initial_assumption ((temp___expr_179 us_rep)
  (temp___skip_top_level_180 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_180 true))
                                         (= (length temp___expr_179) 0)))

;; length__post_axiom
  (assert
  (forall ((container us_rep))
  (! (let ((result (length container)))
     (and (<= (+ 0 result) 100) (dynamic_invariant3 result true false true))) :pattern (
  (length container)) )))

(declare-sort element_type 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq7 (element_type element_type) Bool)

(declare-fun dummy7 () element_type)

(declare-datatypes ()
((element_type__ref
 (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type 
  (element_type__content a))

(define-fun dynamic_invariant4 ((temp___expr_166 Int)
  (temp___is_init_163 Bool) (temp___skip_constant_164 Bool)
  (temp___do_toplevel_165 Bool)) Bool (=>
                                      (or (= temp___is_init_163 true)
                                      (<= 0 2147483647)) (in_range7
                                      temp___expr_166)))

(define-fun dynamic_invariant5 ((temp___expr_172 Int)
  (temp___is_init_169 Bool) (temp___skip_constant_170 Bool)
  (temp___do_toplevel_171 Bool)) Bool (=>
                                      (or (= temp___is_init_169 true)
                                      (<= 0 100)) (in_range5
                                      temp___expr_172)))

;; get__post_axiom
  (assert
  (forall ((container us_rep))
  (forall ((position Int))
  (! (=>
     (and (dynamic_invariant5 position true true true)
     (and (<= 1 position) (<= position (last container))))
     (dynamic_invariant4 (get container position) true false true)) :pattern (
  (get container position)) ))))

(define-fun ole ((left us_rep)
  (right us_rep)) Bool (and (<= (length left) (length right)) (ite (forall
                                                                   ((n Int))
                                                                   (=>
                                                                   (and
                                                                   (<= 1 n)
                                                                   (<= n 
                                                                   (last
                                                                   left)))
                                                                   (= 
                                                                   (get left
                                                                   n) 
                                                                   (get right
                                                                   n))))
                                                              true false)))

(declare-fun ole__function_guard (Bool us_rep us_rep) Bool)

(declare-fun add (us_rep Int) us_rep)

(declare-fun add__function_guard (us_rep us_rep Int) Bool)

;; add__post_axiom
  (assert
  (forall ((container us_rep))
  (forall ((new_item Int))
  (! (=>
     (and (dynamic_invariant4 new_item true true true)
     (and (< (length container) 2147483647) (< (last container) 100)))
     (let ((result (add container new_item)))
     (and (= (length result) (+ (length container) 1))
     (and (= (get result (last result)) new_item)
     (= (ole container result) true))))) :pattern ((add container new_item)) ))))

(declare-datatypes ()
((model_type__ref (mk_model_type__ref (model_type__content us_rep)))))
(define-fun model_type__ref___projection ((a model_type__ref)) us_rep 
  (model_type__content a))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int natural) Int Int (Array Int natural) Int
  Int) (Array Int natural))

;; concat_def
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (natural Int) (Array Int natural))

;; singleton_def
  (assert
  (forall ((v natural))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq8 ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq8 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int natural) Int Int (Array Int natural) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq8 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq8 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq8 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun valid_model__2 (us_rep (Array Int natural) Int Int) Bool)

(declare-fun valid_model__2__function_guard (Bool us_rep (Array Int natural)
  Int Int) Bool)

(declare-fun valid_model__21 (us_rep (Array Int natural) Int Int) Bool)

(declare-fun valid_model__2__function_guard1 (Bool us_rep (Array Int natural)
  Int Int) Bool)

(define-fun default_initial_assumption1 ((temp___expr_186 us_rep)
  (temp___skip_top_level_187 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_187 true))
                                         (= (length temp___expr_186) 0)))

;; valid_model__2__post_axiom
  (assert true)

;; valid_model__2__post_refine_axiom
  (assert
  (forall ((m us_rep))
  (forall ((ring_buffer__content (Array Int natural)))
  (forall ((ring_buffer__first Int) (ring_buffer__length Int))
  (! (=>
     (and (dynamic_invariant2 ring_buffer__first true true true)
     (dynamic_invariant1 ring_buffer__length true true true))
     (=>
     (= (valid_model__21 m ring_buffer__content ring_buffer__first
        ring_buffer__length) true)
     (and
     (forall ((i Int))
     (=>
     (and (<= 1 i)
     (<= i (ite (< ring_buffer__length (+ (- 100 ring_buffer__first) 1)) ring_buffer__length (+ (- 100 ring_buffer__first) 1))))
     (= (get m i) (to_rep
                  (select ring_buffer__content (+ (- i 1) ring_buffer__first))))))
     (forall ((i Int))
     (=>
     (and (<= (+ (- 100 ring_buffer__first) 2) i) (<= i ring_buffer__length))
     (= (get m i) (to_rep
                  (select ring_buffer__content (- (+ (- i 100) ring_buffer__first) 1))))))))) :pattern (
  (valid_model__21 m ring_buffer__content ring_buffer__first
  ring_buffer__length)) )))))

;; valid_model__2__def_axiom
  (assert
  (forall ((m us_rep))
  (forall ((ring_buffer__content (Array Int natural)))
  (forall ((ring_buffer__first Int) (ring_buffer__length Int))
  (! (=
     (= (valid_model__21 m ring_buffer__content ring_buffer__first
        ring_buffer__length) true)
     (and (= ring_buffer__length (length m))
     (forall ((i Int))
     (=> (and (<= 1 i) (<= i 100))
     (ite (and (<= ring_buffer__first i)
          (<= i (ite (< (- (+ ring_buffer__first ring_buffer__length) 1) 100) (- (+ ring_buffer__first ring_buffer__length) 1) 100)))
     (= (to_rep (select ring_buffer__content i)) (get m
                                                 (+ (- i ring_buffer__first) 1)))
     (=>
     (and (<= 1 i)
     (<= i (- (- (+ ring_buffer__first ring_buffer__length) 1) 100)))
     (= (to_rep (select ring_buffer__content i)) (get m
                                                 (+ (- (+ i 100) ring_buffer__first) 1))))))))) :pattern (
  (valid_model__21 m ring_buffer__content ring_buffer__first
  ring_buffer__length)) )))))

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun c () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun r13b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq8 (integer integer) Bool)

(declare-fun dummy8 () integer)

(declare-datatypes () ((t14b__ref (mk_t14b__ref (t14b__content integer)))))
(define-fun t14b__ref___projection ((a t14b__ref)) integer (t14b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun r19b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq9 (integer integer) Bool)

(declare-fun dummy9 () integer)

(declare-datatypes () ((t20b__ref (mk_t20b__ref (t20b__content integer)))))
(define-fun t20b__ref___projection ((a t20b__ref)) integer (t20b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(define-fun dynamic_invariant6 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_33)))

(declare-fun content () (Array Int natural))

(declare-fun first () Int)

(declare-fun length1 () Int)

(declare-fun r () us_rep)

(declare-fun j () Int)

(declare-fun j1 () Int)

(declare-fun ring_buffer__get_model__c__assume () Int)

(declare-fun temp___223 () Int)

(declare-fun temp___222 () us_rep)

(declare-fun o () us_rep)

(declare-fun o1 () us_rep)

(declare-fun i () Int)

(declare-fun r1 () us_rep)

(declare-fun result () Int)

(declare-fun j2 () Int)

(declare-fun r2 () us_rep)

(declare-fun j3 () Int)

(declare-fun result1 () us_rep)

(declare-fun r3 () us_rep)

(declare-fun r4 () us_rep)

(declare-fun j4 () Int)

(declare-fun r5 () us_rep)

(declare-fun j5 () Int)

(declare-fun r6 () us_rep)

(declare-fun j6 () Int)

(declare-fun r7 () us_rep)

(declare-fun j7 () Int)

(declare-fun result2 () Int)

(declare-fun j8 () Int)

(declare-fun r8 () us_rep)

(declare-fun j9 () Int)

(define-fun r9 () model_type__ref (mk_model_type__ref r6))

;; H
  (assert (in_range4 first))

;; H
  (assert (in_range3 length1))

;; H
  (assert (= (length r) 0))

;; H
  (assert
  (and
  (= ring_buffer__get_model__c__assume (ite (< (- (+ length1 first) 1) 100) (- (+ 
  length1 first) 1) 100)) (in_range3
  (ite (< (- (+ length1 first) 1) 100) (- (+ length1 first) 1) 100))))

;; H
  (assert (= ring_buffer__get_model__c__assume c))

;; H
  (assert (in_range3 c))

;; H
  (assert (= first r13b))

;; H
  (assert (in_range4 r13b))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref j)))

;; H
  (assert (= j2 r13b))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= temp___223 j2)))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= temp___222 r)))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= (length r2) (- j3 first))))

;; H
  (assert
  (=> (and (<= r13b j2) (<= j2 c))
  (forall ((i1 Int))
  (=> (and (<= 1 i1) (<= i1 100))
  (=> (and (<= first i1) (<= i1 (- j3 1)))
  (= (to_rep (select content i1)) (get r2 (+ (- i1 first) 1))))))))

;; H
  (assert
  (=> (and (<= r13b j2) (<= j2 c))
  (and (=> (<= r13b c) (dynamic_property r13b c j3))
  (and (<= r13b j3) (<= j3 c)))))

;; H
  (assert
  (=> (and (<= r13b j2) (<= j2 c))
  (and (= o (add r2 (to_rep (select content j3))))
  (and (= (length o) (+ (length r2) 1))
  (and (= (get o (last o)) (to_rep (select content j3))) (= (ole r2 o) true))))))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= o1 o)))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= r2 result1)))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= r3 o1)))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= j3 c)))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= j3 j4)))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= r3 r4)))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= j5 j3)))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= r5 r3)))

;; H
  (assert
  (=> (and (<= r13b j2) (<= j2 c)) (= (mk_int__ref j6) (mk_int__ref j4))))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= r9 (mk_model_type__ref r4))))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= j7 j5)))

;; H
  (assert (=> (and (<= r13b j2) (<= j2 c)) (= r7 r5)))

;; H
  (assert (=> (not (and (<= r13b j2) (<= j2 c))) (= j2 j6)))

;; H
  (assert
  (=> (not (and (<= r13b j2) (<= j2 c))) (= r9 (mk_model_type__ref r))))

;; H
  (assert (=> (not (and (<= r13b j2) (<= j2 c))) (= j7 j2)))

;; H
  (assert (=> (not (and (<= r13b j2) (<= j2 c))) (= r7 r1)))

;; H
  (assert (= (- (- (+ first length1) 1) 100) r19b))

;; H
  (assert (in_range1 r19b))

;; H
  (assert (= (mk_int__ref result2) (mk_int__ref j1)))

;; H
  (assert (= j8 1))

;; H
  (assert (<= 1 j8))

;; H
  (assert (<= j8 r19b))

;; H
  (assert (= (length r8) (+ (- c first) j9)))

;; H
  (assert
  (forall ((i1 Int))
  (=> (and (<= 1 i1) (<= i1 100))
  (ite (and (<= first i1)
       (<= i1 (ite (< (- (+ first length1) 1) 100) (- (+ first length1) 1) 100)))
  (= (to_rep (select content i1)) (get r8 (+ (- i1 first) 1)))
  (=> (and (<= 1 i1) (<= i1 (- j9 1)))
  (= (to_rep (select content i1)) (get r8 (+ (- (+ i1 100) first) 1))))))))

;; H
  (assert
  (and (=> (<= 1 r19b) (dynamic_property1 1 r19b j9))
  (and (<= 1 j9) (<= j9 r19b))))

;; H
  (assert (<= 1 i))

;; H
  (assert (<= i 100))

;; H
  (assert (<= first i))

;; H
  (assert
  (<= i (ite (< (- (+ first length1) 1) 100) (- (+ first length1) 1) 100)))

(assert
;; WP_parameter_def
 ;; File "ring_buffer.ads", line 24, characters 0-0
  (not (in_range5 (+ (- i first) 1))))
(check-sat)
