;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 8)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 256)) (= (bv2nat ((_ int2bv 8) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvlshr x n) (lsr x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvashr x n) (asr x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvshl x n) (lsl x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_left1 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_right1 v (bv2nat n)))))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (nth x (bv2nat i)) (nth_bv x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 8)) (i Int))
  (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i)))
  (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-fun nth1 ((_ BitVec 32) Int) Bool)

(declare-fun lsr1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun to_int2 ((_ BitVec 32)) Int)

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 4294967296)) (= (bv2nat ((_ int2bv 32) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvlshr x n) (lsr1 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvashr x n) (asr1 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvshl x n) (lsl1 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) 
  (rotate_left2 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) 
  (rotate_right2 v (bv2nat n)))))

(declare-fun nth_bv1 ((_ BitVec 32) (_ BitVec 32)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
  (= (= (nth_bv1 x i) true)
  (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
  (= (nth1 x (bv2nat i)) (nth_bv1 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 32)) (i Int))
  (=> (and (<= 0 i) (< i 4294967296))
  (= (nth_bv1 x ((_ int2bv 32) i)) (nth1 x i)))))

(declare-fun eq_sub_bv1 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32))
  (n (_ BitVec 32)))
  (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i)))
  (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub1 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32))
  (n (_ BitVec 32)))
  (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))

(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 32))))))
(declare-fun power1 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min1 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-sort storage_element 0)

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 8))

(define-fun bool_eq ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) (_ BitVec 8))

(declare-fun user_eq (storage_element storage_element) Bool)

(declare-fun dummy () storage_element)

(declare-datatypes ()
((storage_element__ref
 (mk_storage_element__ref (storage_element__content storage_element)))))
(define-fun storage_element__ref___projection ((a storage_element__ref)) storage_element 
  (storage_element__content a))

(declare-fun to_rep (storage_element) (_ BitVec 8))

(declare-fun of_rep ((_ BitVec 8)) storage_element)

;; inversion_axiom
  (assert
  (forall ((x storage_element))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep (of_rep x)) x) :pattern ((to_rep (of_rep x))) )))

(define-fun to_int3 ((x storage_element)) Int (bv2nat (to_rep x)))

;; range_int_axiom
  (assert
  (forall ((x storage_element)) (! (uint_in_range
  (to_int3 x)) :pattern ((to_int3 x)) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int storage_element))))))
(declare-fun slide ((Array Int storage_element) Int
  Int) (Array Int storage_element))

;; slide_eq
  (assert
  (forall ((a (Array Int storage_element)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int storage_element)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int storage_element) Int Int
  (Array Int storage_element) Int Int) (Array Int storage_element))

;; concat_def
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (storage_element Int) (Array Int storage_element))

;; singleton_def
  (assert
  (forall ((v storage_element))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq1 ((a (Array Int storage_element)) (a__first Int)
  (a__last Int) (b (Array Int storage_element)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int storage_element) Int Int
  (Array Int storage_element) Int Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq1 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq1 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (bvult (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq1 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (bvugt (to_rep (select a (+ j 1))) (to_rep (select b (+ i 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-sort tintB 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (tintB tintB) Bool)

(declare-fun dummy1 () tintB)

(declare-datatypes () ((tintB__ref (mk_tintB__ref (tintB__content tintB)))))
(define-fun tintB__ref___projection ((a tintB__ref)) tintB (tintB__content a))

(declare-sort int__ 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq3 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (int__ int__) Bool)

(declare-fun dummy2 () int__)

(declare-datatypes () ((int____ref (mk_int____ref (int____content int__)))))
(define-fun int____ref___projection ((a int____ref)) int__ (int____content a))

(define-fun dynamic_invariant ((temp___expr_267 Int)
  (temp___is_init_264 Bool) (temp___skip_constant_265 Bool)
  (temp___do_toplevel_266 Bool)) Bool (=>
                                      (or (= temp___is_init_264 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range1 temp___expr_267)))

(declare-fun to_rep1 (int__) Int)

(declare-fun of_rep1 (Int) int__)

;; inversion_axiom
  (assert
  (forall ((x int__))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x int__)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort nat 0)

(declare-fun attr__ATTRIBUTE_MODULUS1 () (_ BitVec 32))

(define-fun bool_eq4 ((x (_ BitVec 32))
  (y (_ BitVec 32))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 32))

(declare-fun user_eq3 (nat nat) Bool)

(declare-fun dummy3 () nat)

(declare-datatypes () ((nat__ref (mk_nat__ref (nat__content nat)))))
(define-fun nat__ref___projection ((a nat__ref)) nat (nat__content a))

(define-fun dynamic_invariant1 ((temp___expr_273 (_ BitVec 32))
  (temp___is_init_270 Bool) (temp___skip_constant_271 Bool)
  (temp___do_toplevel_272 Bool)) Bool true)

(declare-fun to_rep2 (nat) (_ BitVec 32))

(declare-fun of_rep2 ((_ BitVec 32)) nat)

;; inversion_axiom
  (assert
  (forall ((x nat)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 32)))
  (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))) )))

(define-fun to_int4 ((x nat)) Int (bv2nat (to_rep2 x)))

;; range_int_axiom
  (assert
  (forall ((x nat)) (! (uint_in_range1 (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__linted__update__packet__x_position int__)(rec__linted__update__packet__y_position int__)(rec__linted__update__packet__z_position int__)(rec__linted__update__packet__mx_position int__)(rec__linted__update__packet__my_position int__)(rec__linted__update__packet__mz_position int__)(rec__linted__update__packet__z_rotation nat)(rec__linted__update__packet__x_rotation nat)))))
(define-fun us_split_fields_X_Position__projection ((a us_split_fields)) int__ 
  (rec__linted__update__packet__x_position a))

(define-fun us_split_fields_Y_Position__projection ((a us_split_fields)) int__ 
  (rec__linted__update__packet__y_position a))

(define-fun us_split_fields_Z_Position__projection ((a us_split_fields)) int__ 
  (rec__linted__update__packet__z_position a))

(define-fun us_split_fields_MX_Position__projection ((a us_split_fields)) int__ 
  (rec__linted__update__packet__mx_position a))

(define-fun us_split_fields_MY_Position__projection ((a us_split_fields)) int__ 
  (rec__linted__update__packet__my_position a))

(define-fun us_split_fields_MZ_Position__projection ((a us_split_fields)) int__ 
  (rec__linted__update__packet__mz_position a))

(define-fun us_split_fields_Z_Rotation__projection ((a us_split_fields)) nat 
  (rec__linted__update__packet__z_rotation a))

(define-fun us_split_fields_X_Rotation__projection ((a us_split_fields)) nat 
  (rec__linted__update__packet__x_rotation a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq5 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (= (to_rep1
                           (rec__linted__update__packet__x_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__x_position
                                                  (us_split_fields1 b))))
                        (= (to_rep1
                           (rec__linted__update__packet__y_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__y_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__linted__update__packet__z_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__z_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__linted__update__packet__mx_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__mx_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__linted__update__packet__my_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__my_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__linted__update__packet__mz_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__mz_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep2
                           (rec__linted__update__packet__z_rotation
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__linted__update__packet__z_rotation
                                                  (us_split_fields1 b)))))
                        (= (to_rep2
                           (rec__linted__update__packet__x_rotation
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__linted__update__packet__x_rotation
                                                  (us_split_fields1 b)))))
                   true false))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun linted__update__packet__x_position__first__bit () Int)

(declare-fun linted__update__packet__x_position__last__bit () Int)

(declare-fun linted__update__packet__x_position__position () Int)

;; linted__update__packet__x_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__x_position__first__bit))

;; linted__update__packet__x_position__last__bit_axiom
  (assert
  (< linted__update__packet__x_position__first__bit linted__update__packet__x_position__last__bit))

;; linted__update__packet__x_position__position_axiom
  (assert (<= 0 linted__update__packet__x_position__position))

(declare-fun linted__update__packet__y_position__first__bit () Int)

(declare-fun linted__update__packet__y_position__last__bit () Int)

(declare-fun linted__update__packet__y_position__position () Int)

;; linted__update__packet__y_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__y_position__first__bit))

;; linted__update__packet__y_position__last__bit_axiom
  (assert
  (< linted__update__packet__y_position__first__bit linted__update__packet__y_position__last__bit))

;; linted__update__packet__y_position__position_axiom
  (assert (<= 0 linted__update__packet__y_position__position))

(declare-fun linted__update__packet__z_position__first__bit () Int)

(declare-fun linted__update__packet__z_position__last__bit () Int)

(declare-fun linted__update__packet__z_position__position () Int)

;; linted__update__packet__z_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__z_position__first__bit))

;; linted__update__packet__z_position__last__bit_axiom
  (assert
  (< linted__update__packet__z_position__first__bit linted__update__packet__z_position__last__bit))

;; linted__update__packet__z_position__position_axiom
  (assert (<= 0 linted__update__packet__z_position__position))

(declare-fun linted__update__packet__mx_position__first__bit () Int)

(declare-fun linted__update__packet__mx_position__last__bit () Int)

(declare-fun linted__update__packet__mx_position__position () Int)

;; linted__update__packet__mx_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__mx_position__first__bit))

;; linted__update__packet__mx_position__last__bit_axiom
  (assert
  (< linted__update__packet__mx_position__first__bit linted__update__packet__mx_position__last__bit))

;; linted__update__packet__mx_position__position_axiom
  (assert (<= 0 linted__update__packet__mx_position__position))

(declare-fun linted__update__packet__my_position__first__bit () Int)

(declare-fun linted__update__packet__my_position__last__bit () Int)

(declare-fun linted__update__packet__my_position__position () Int)

;; linted__update__packet__my_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__my_position__first__bit))

;; linted__update__packet__my_position__last__bit_axiom
  (assert
  (< linted__update__packet__my_position__first__bit linted__update__packet__my_position__last__bit))

;; linted__update__packet__my_position__position_axiom
  (assert (<= 0 linted__update__packet__my_position__position))

(declare-fun linted__update__packet__mz_position__first__bit () Int)

(declare-fun linted__update__packet__mz_position__last__bit () Int)

(declare-fun linted__update__packet__mz_position__position () Int)

;; linted__update__packet__mz_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__mz_position__first__bit))

;; linted__update__packet__mz_position__last__bit_axiom
  (assert
  (< linted__update__packet__mz_position__first__bit linted__update__packet__mz_position__last__bit))

;; linted__update__packet__mz_position__position_axiom
  (assert (<= 0 linted__update__packet__mz_position__position))

(declare-fun linted__update__packet__z_rotation__first__bit () Int)

(declare-fun linted__update__packet__z_rotation__last__bit () Int)

(declare-fun linted__update__packet__z_rotation__position () Int)

;; linted__update__packet__z_rotation__first__bit_axiom
  (assert (<= 0 linted__update__packet__z_rotation__first__bit))

;; linted__update__packet__z_rotation__last__bit_axiom
  (assert
  (< linted__update__packet__z_rotation__first__bit linted__update__packet__z_rotation__last__bit))

;; linted__update__packet__z_rotation__position_axiom
  (assert (<= 0 linted__update__packet__z_rotation__position))

(declare-fun linted__update__packet__x_rotation__first__bit () Int)

(declare-fun linted__update__packet__x_rotation__last__bit () Int)

(declare-fun linted__update__packet__x_rotation__position () Int)

;; linted__update__packet__x_rotation__first__bit_axiom
  (assert (<= 0 linted__update__packet__x_rotation__first__bit))

;; linted__update__packet__x_rotation__last__bit_axiom
  (assert
  (< linted__update__packet__x_rotation__first__bit linted__update__packet__x_rotation__last__bit))

;; linted__update__packet__x_rotation__position_axiom
  (assert (<= 0 linted__update__packet__x_rotation__position))

(declare-fun dummy4 () us_rep)

(declare-datatypes ()
((packet__ref (mk_packet__ref (packet__content us_rep)))))
(define-fun packet__ref___projection ((a packet__ref)) us_rep (packet__content
                                                              a))

(define-fun default_initial_assumption ((temp___expr_280 us_rep)
  (temp___skip_top_level_281 Bool)) Bool (and
                                         (and
                                         (and
                                         (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep1
                                            (rec__linted__update__packet__x_position
                                            (us_split_fields1
                                            temp___expr_280))) 0)
                                         (= (to_rep1
                                            (rec__linted__update__packet__y_position
                                            (us_split_fields1
                                            temp___expr_280))) 0))
                                         (= (to_rep1
                                            (rec__linted__update__packet__z_position
                                            (us_split_fields1
                                            temp___expr_280))) 0))
                                         (= (to_rep1
                                            (rec__linted__update__packet__mx_position
                                            (us_split_fields1
                                            temp___expr_280))) 0))
                                         (= (to_rep1
                                            (rec__linted__update__packet__my_position
                                            (us_split_fields1
                                            temp___expr_280))) 0))
                                         (= (to_rep1
                                            (rec__linted__update__packet__mz_position
                                            (us_split_fields1
                                            temp___expr_280))) 0))
                                         (= (to_rep2
                                            (rec__linted__update__packet__z_rotation
                                            (us_split_fields1
                                            temp___expr_280))) ((_ int2bv 32) 0)))
                                         (= (to_rep2
                                            (rec__linted__update__packet__x_rotation
                                            (us_split_fields1
                                            temp___expr_280))) ((_ int2bv 32) 0))))

(declare-sort tstorageP1 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 32)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (tstorageP1 tstorageP1) Bool)

(declare-fun dummy5 () tstorageP1)

(declare-datatypes ()
((tstorageP1__ref (mk_tstorageP1__ref (tstorageP1__content tstorageP1)))))
(define-fun tstorageP1__ref___projection ((a tstorageP1__ref)) tstorageP1 
  (tstorageP1__content a))

(declare-fun s () (Array Int storage_element))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-sort ttupleP1 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 4)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (ttupleP1 ttupleP1) Bool)

(declare-fun dummy6 () ttupleP1)

(declare-datatypes ()
((ttupleP1__ref (mk_ttupleP1__ref (ttupleP1__content ttupleP1)))))
(define-fun ttupleP1__ref___projection ((a ttupleP1__ref)) ttupleP1 (ttupleP1__content
                                                                    a))

(declare-sort t16b 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 4)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (t16b t16b) Bool)

(declare-fun dummy7 () t16b)

(declare-datatypes () ((t16b__ref (mk_t16b__ref (t16b__content t16b)))))
(define-fun t16b__ref___projection ((a t16b__ref)) t16b (t16b__content a))

(declare-fun c19b () (Array Int storage_element))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-sort t28b 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 4)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (t28b t28b) Bool)

(declare-fun dummy8 () t28b)

(declare-datatypes () ((t28b__ref (mk_t28b__ref (t28b__content t28b)))))
(define-fun t28b__ref___projection ((a t28b__ref)) t28b (t28b__content a))

(declare-sort t31b 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 4)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (t31b t31b) Bool)

(declare-fun dummy9 () t31b)

(declare-datatypes () ((t31b__ref (mk_t31b__ref (t31b__content t31b)))))
(define-fun t31b__ref___projection ((a t31b__ref)) t31b (t31b__content a))

(declare-sort t34b 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 4)))

(define-fun bool_eq11 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq10 (t34b t34b) Bool)

(declare-fun dummy10 () t34b)

(declare-datatypes () ((t34b__ref (mk_t34b__ref (t34b__content t34b)))))
(define-fun t34b__ref___projection ((a t34b__ref)) t34b (t34b__content a))

(declare-sort t37b 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 4)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq11 (t37b t37b) Bool)

(declare-fun dummy11 () t37b)

(declare-datatypes () ((t37b__ref (mk_t37b__ref (t37b__content t37b)))))
(define-fun t37b__ref___projection ((a t37b__ref)) t37b (t37b__content a))

(declare-sort t39b 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(define-fun bool_eq13 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq12 (t39b t39b) Bool)

(declare-fun dummy12 () t39b)

(declare-datatypes () ((t39b__ref (mk_t39b__ref (t39b__content t39b)))))
(define-fun t39b__ref___projection ((a t39b__ref)) t39b (t39b__content a))

(declare-fun c42b () (Array Int storage_element))

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-sort t51b 0)

(define-fun in_range10 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(define-fun bool_eq14 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq13 (t51b t51b) Bool)

(declare-fun dummy13 () t51b)

(declare-datatypes () ((t51b__ref (mk_t51b__ref (t51b__content t51b)))))
(define-fun t51b__ref___projection ((a t51b__ref)) t51b (t51b__content a))

(declare-sort t54b 0)

(define-fun in_range11 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(define-fun bool_eq15 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)

(declare-fun user_eq14 (t54b t54b) Bool)

(declare-fun dummy14 () t54b)

(declare-datatypes () ((t54b__ref (mk_t54b__ref (t54b__content t54b)))))
(define-fun t54b__ref___projection ((a t54b__ref)) t54b (t54b__content a))

(declare-sort t57b 0)

(define-fun in_range12 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(define-fun bool_eq16 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)

(declare-fun user_eq15 (t57b t57b) Bool)

(declare-fun dummy15 () t57b)

(declare-datatypes () ((t57b__ref (mk_t57b__ref (t57b__content t57b)))))
(define-fun t57b__ref___projection ((a t57b__ref)) t57b (t57b__content a))

(declare-sort t60b 0)

(define-fun in_range13 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(define-fun bool_eq17 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)

(declare-fun user_eq16 (t60b t60b) Bool)

(declare-fun dummy16 () t60b)

(declare-datatypes () ((t60b__ref (mk_t60b__ref (t60b__content t60b)))))
(define-fun t60b__ref___projection ((a t60b__ref)) t60b (t60b__content a))

(declare-sort t62b 0)

(define-fun in_range14 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(define-fun bool_eq18 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)

(declare-fun user_eq17 (t62b t62b) Bool)

(declare-fun dummy17 () t62b)

(declare-datatypes () ((t62b__ref (mk_t62b__ref (t62b__content t62b)))))
(define-fun t62b__ref___projection ((a t62b__ref)) t62b (t62b__content a))

(declare-fun c65b () (Array Int storage_element))

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(declare-sort t74b 0)

(define-fun in_range15 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(define-fun bool_eq19 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)

(declare-fun user_eq18 (t74b t74b) Bool)

(declare-fun dummy18 () t74b)

(declare-datatypes () ((t74b__ref (mk_t74b__ref (t74b__content t74b)))))
(define-fun t74b__ref___projection ((a t74b__ref)) t74b (t74b__content a))

(declare-sort t77b 0)

(define-fun in_range16 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(define-fun bool_eq20 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)

(declare-fun user_eq19 (t77b t77b) Bool)

(declare-fun dummy19 () t77b)

(declare-datatypes () ((t77b__ref (mk_t77b__ref (t77b__content t77b)))))
(define-fun t77b__ref___projection ((a t77b__ref)) t77b (t77b__content a))

(declare-sort t80b 0)

(define-fun in_range17 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(define-fun bool_eq21 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE19 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) Int)

(declare-fun user_eq20 (t80b t80b) Bool)

(declare-fun dummy20 () t80b)

(declare-datatypes () ((t80b__ref (mk_t80b__ref (t80b__content t80b)))))
(define-fun t80b__ref___projection ((a t80b__ref)) t80b (t80b__content a))

(declare-sort t83b 0)

(define-fun in_range18 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(define-fun bool_eq22 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE20 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check20 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE20 (us_image) Int)

(declare-fun user_eq21 (t83b t83b) Bool)

(declare-fun dummy21 () t83b)

(declare-datatypes () ((t83b__ref (mk_t83b__ref (t83b__content t83b)))))
(define-fun t83b__ref___projection ((a t83b__ref)) t83b (t83b__content a))

(declare-sort t85b 0)

(define-fun in_range19 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(define-fun bool_eq23 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE21 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check21 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE21 (us_image) Int)

(declare-fun user_eq22 (t85b t85b) Bool)

(declare-fun dummy22 () t85b)

(declare-datatypes () ((t85b__ref (mk_t85b__ref (t85b__content t85b)))))
(define-fun t85b__ref___projection ((a t85b__ref)) t85b (t85b__content a))

(declare-fun c88b () (Array Int storage_element))

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS12 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS13 () Int)

(declare-sort t97b 0)

(define-fun in_range20 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(define-fun bool_eq24 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE22 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check22 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE22 (us_image) Int)

(declare-fun user_eq23 (t97b t97b) Bool)

(declare-fun dummy23 () t97b)

(declare-datatypes () ((t97b__ref (mk_t97b__ref (t97b__content t97b)))))
(define-fun t97b__ref___projection ((a t97b__ref)) t97b (t97b__content a))

(declare-sort t100b 0)

(define-fun in_range21 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(define-fun bool_eq25 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE23 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check23 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE23 (us_image) Int)

(declare-fun user_eq24 (t100b t100b) Bool)

(declare-fun dummy24 () t100b)

(declare-datatypes () ((t100b__ref (mk_t100b__ref (t100b__content t100b)))))
(define-fun t100b__ref___projection ((a t100b__ref)) t100b (t100b__content a))

(declare-sort t103b 0)

(define-fun in_range22 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(define-fun bool_eq26 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE24 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check24 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE24 (us_image) Int)

(declare-fun user_eq25 (t103b t103b) Bool)

(declare-fun dummy25 () t103b)

(declare-datatypes () ((t103b__ref (mk_t103b__ref (t103b__content t103b)))))
(define-fun t103b__ref___projection ((a t103b__ref)) t103b (t103b__content a))

(declare-sort t106b 0)

(define-fun in_range23 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(define-fun bool_eq27 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE25 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check25 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE25 (us_image) Int)

(declare-fun user_eq26 (t106b t106b) Bool)

(declare-fun dummy26 () t106b)

(declare-datatypes () ((t106b__ref (mk_t106b__ref (t106b__content t106b)))))
(define-fun t106b__ref___projection ((a t106b__ref)) t106b (t106b__content a))

(declare-sort t108b 0)

(define-fun in_range24 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(define-fun bool_eq28 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE26 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check26 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE26 (us_image) Int)

(declare-fun user_eq27 (t108b t108b) Bool)

(declare-fun dummy27 () t108b)

(declare-datatypes () ((t108b__ref (mk_t108b__ref (t108b__content t108b)))))
(define-fun t108b__ref___projection ((a t108b__ref)) t108b (t108b__content a))

(declare-fun c111b () (Array Int storage_element))

(declare-fun attr__ATTRIBUTE_ADDRESS14 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS15 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS16 () Int)

(declare-sort t120b 0)

(define-fun in_range25 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(define-fun bool_eq29 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE27 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check27 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE27 (us_image) Int)

(declare-fun user_eq28 (t120b t120b) Bool)

(declare-fun dummy28 () t120b)

(declare-datatypes () ((t120b__ref (mk_t120b__ref (t120b__content t120b)))))
(define-fun t120b__ref___projection ((a t120b__ref)) t120b (t120b__content a))

(declare-sort t123b 0)

(define-fun in_range26 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(define-fun bool_eq30 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE28 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check28 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE28 (us_image) Int)

(declare-fun user_eq29 (t123b t123b) Bool)

(declare-fun dummy29 () t123b)

(declare-datatypes () ((t123b__ref (mk_t123b__ref (t123b__content t123b)))))
(define-fun t123b__ref___projection ((a t123b__ref)) t123b (t123b__content a))

(declare-sort t126b 0)

(define-fun in_range27 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(define-fun bool_eq31 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE29 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check29 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE29 (us_image) Int)

(declare-fun user_eq30 (t126b t126b) Bool)

(declare-fun dummy30 () t126b)

(declare-datatypes () ((t126b__ref (mk_t126b__ref (t126b__content t126b)))))
(define-fun t126b__ref___projection ((a t126b__ref)) t126b (t126b__content a))

(declare-sort t129b 0)

(define-fun in_range28 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(define-fun bool_eq32 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE30 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check30 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE30 (us_image) Int)

(declare-fun user_eq31 (t129b t129b) Bool)

(declare-fun dummy31 () t129b)

(declare-datatypes () ((t129b__ref (mk_t129b__ref (t129b__content t129b)))))
(define-fun t129b__ref___projection ((a t129b__ref)) t129b (t129b__content a))

(declare-sort t131b 0)

(define-fun in_range29 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(define-fun bool_eq33 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE31 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check31 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE31 (us_image) Int)

(declare-fun user_eq32 (t131b t131b) Bool)

(declare-fun dummy32 () t131b)

(declare-datatypes () ((t131b__ref (mk_t131b__ref (t131b__content t131b)))))
(define-fun t131b__ref___projection ((a t131b__ref)) t131b (t131b__content a))

(declare-fun c134b () (Array Int storage_element))

(declare-fun attr__ATTRIBUTE_ADDRESS17 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS18 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS19 () Int)

(declare-sort t143b 0)

(define-fun in_range30 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(define-fun bool_eq34 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE32 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check32 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE32 (us_image) Int)

(declare-fun user_eq33 (t143b t143b) Bool)

(declare-fun dummy33 () t143b)

(declare-datatypes () ((t143b__ref (mk_t143b__ref (t143b__content t143b)))))
(define-fun t143b__ref___projection ((a t143b__ref)) t143b (t143b__content a))

(declare-sort t146b 0)

(define-fun in_range31 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(define-fun bool_eq35 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE33 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check33 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE33 (us_image) Int)

(declare-fun user_eq34 (t146b t146b) Bool)

(declare-fun dummy34 () t146b)

(declare-datatypes () ((t146b__ref (mk_t146b__ref (t146b__content t146b)))))
(define-fun t146b__ref___projection ((a t146b__ref)) t146b (t146b__content a))

(declare-sort t149b 0)

(define-fun in_range32 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(define-fun bool_eq36 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE34 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check34 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE34 (us_image) Int)

(declare-fun user_eq35 (t149b t149b) Bool)

(declare-fun dummy35 () t149b)

(declare-datatypes () ((t149b__ref (mk_t149b__ref (t149b__content t149b)))))
(define-fun t149b__ref___projection ((a t149b__ref)) t149b (t149b__content a))

(declare-sort t152b 0)

(define-fun in_range33 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(define-fun bool_eq37 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE35 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check35 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE35 (us_image) Int)

(declare-fun user_eq36 (t152b t152b) Bool)

(declare-fun dummy36 () t152b)

(declare-datatypes () ((t152b__ref (mk_t152b__ref (t152b__content t152b)))))
(define-fun t152b__ref___projection ((a t152b__ref)) t152b (t152b__content a))

(declare-sort t154b 0)

(define-fun in_range34 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(define-fun bool_eq38 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE36 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check36 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE36 (us_image) Int)

(declare-fun user_eq37 (t154b t154b) Bool)

(declare-fun dummy37 () t154b)

(declare-datatypes () ((t154b__ref (mk_t154b__ref (t154b__content t154b)))))
(define-fun t154b__ref___projection ((a t154b__ref)) t154b (t154b__content a))

(declare-fun c157b () (Array Int storage_element))

(declare-fun attr__ATTRIBUTE_ADDRESS20 () Int)

(declare-sort t160b 0)

(define-fun in_range35 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(define-fun bool_eq39 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE37 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check37 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE37 (us_image) Int)

(declare-fun user_eq38 (t160b t160b) Bool)

(declare-fun dummy38 () t160b)

(declare-datatypes () ((t160b__ref (mk_t160b__ref (t160b__content t160b)))))
(define-fun t160b__ref___projection ((a t160b__ref)) t160b (t160b__content a))

(declare-sort t162b 0)

(define-fun in_range36 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(define-fun bool_eq40 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE38 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check38 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE38 (us_image) Int)

(declare-fun user_eq39 (t162b t162b) Bool)

(declare-fun dummy39 () t162b)

(declare-datatypes () ((t162b__ref (mk_t162b__ref (t162b__content t162b)))))
(define-fun t162b__ref___projection ((a t162b__ref)) t162b (t162b__content a))

(declare-sort t164b 0)

(define-fun in_range37 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(define-fun bool_eq41 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE39 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check39 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE39 (us_image) Int)

(declare-fun user_eq40 (t164b t164b) Bool)

(declare-fun dummy40 () t164b)

(declare-datatypes () ((t164b__ref (mk_t164b__ref (t164b__content t164b)))))
(define-fun t164b__ref___projection ((a t164b__ref)) t164b (t164b__content a))

(declare-sort t166b 0)

(define-fun in_range38 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(define-fun bool_eq42 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE40 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check40 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE40 (us_image) Int)

(declare-fun user_eq41 (t166b t166b) Bool)

(declare-fun dummy41 () t166b)

(declare-datatypes () ((t166b__ref (mk_t166b__ref (t166b__content t166b)))))
(define-fun t166b__ref___projection ((a t166b__ref)) t166b (t166b__content a))

(declare-sort t168b 0)

(define-fun in_range39 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(define-fun bool_eq43 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE41 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check41 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE41 (us_image) Int)

(declare-fun user_eq42 (t168b t168b) Bool)

(declare-fun dummy42 () t168b)

(declare-datatypes () ((t168b__ref (mk_t168b__ref (t168b__content t168b)))))
(define-fun t168b__ref___projection ((a t168b__ref)) t168b (t168b__content a))

(declare-fun c171b () (Array Int storage_element))

(declare-fun attr__ATTRIBUTE_ADDRESS21 () Int)

(declare-sort t174b 0)

(define-fun in_range40 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(define-fun bool_eq44 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE42 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check42 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE42 (us_image) Int)

(declare-fun user_eq43 (t174b t174b) Bool)

(declare-fun dummy43 () t174b)

(declare-datatypes () ((t174b__ref (mk_t174b__ref (t174b__content t174b)))))
(define-fun t174b__ref___projection ((a t174b__ref)) t174b (t174b__content a))

(declare-sort t176b 0)

(define-fun in_range41 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(define-fun bool_eq45 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE43 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check43 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE43 (us_image) Int)

(declare-fun user_eq44 (t176b t176b) Bool)

(declare-fun dummy44 () t176b)

(declare-datatypes () ((t176b__ref (mk_t176b__ref (t176b__content t176b)))))
(define-fun t176b__ref___projection ((a t176b__ref)) t176b (t176b__content a))

(declare-sort t178b 0)

(define-fun in_range42 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(define-fun bool_eq46 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE44 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check44 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE44 (us_image) Int)

(declare-fun user_eq45 (t178b t178b) Bool)

(declare-fun dummy45 () t178b)

(declare-datatypes () ((t178b__ref (mk_t178b__ref (t178b__content t178b)))))
(define-fun t178b__ref___projection ((a t178b__ref)) t178b (t178b__content a))

(declare-sort t180b 0)

(define-fun in_range43 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(define-fun bool_eq47 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE45 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check45 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE45 (us_image) Int)

(declare-fun user_eq46 (t180b t180b) Bool)

(declare-fun dummy46 () t180b)

(declare-datatypes () ((t180b__ref (mk_t180b__ref (t180b__content t180b)))))
(define-fun t180b__ref___projection ((a t180b__ref)) t180b (t180b__content a))

(define-fun dynamic_invariant2 ((temp___expr_250 (_ BitVec 8))
  (temp___is_init_247 Bool) (temp___skip_constant_248 Bool)
  (temp___do_toplevel_249 Bool)) Bool true)

(declare-fun x () (_ BitVec 32))

(declare-fun y () Int)

(declare-fun linted__update__from_storage__C19b__assume () (Array Int storage_element))

(declare-fun temp___378 () (Array Int storage_element))

(declare-fun o () storage_element)

(declare-fun o1 () (_ BitVec 8))

(declare-fun temp___381 () (Array Int storage_element))

(declare-fun o2 () storage_element)

(declare-fun o3 () (_ BitVec 8))

(declare-fun o4 () (_ BitVec 32))

(declare-fun o5 () (_ BitVec 32))

(declare-fun o6 () (_ BitVec 32))

(declare-fun temp___384 () (Array Int storage_element))

(declare-fun o7 () storage_element)

(declare-fun o8 () (_ BitVec 8))

(declare-fun o9 () (_ BitVec 32))

(declare-fun o10 () (_ BitVec 32))

(declare-fun o11 () (_ BitVec 32))

(declare-fun temp___387 () (Array Int storage_element))

(declare-fun o12 () storage_element)

(declare-fun o13 () (_ BitVec 8))

(declare-fun o14 () (_ BitVec 32))

(declare-fun o15 () (_ BitVec 32))

(declare-fun o16 () (_ BitVec 32))

(declare-fun o17 () (_ BitVec 32))

(declare-fun result () t__ref1)

(declare-fun x1 () (_ BitVec 32))

;; H
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

;; H
  (assert (= linted__update__from_storage__C19b__assume s))

;; H
  (assert (= linted__update__from_storage__C19b__assume c19b))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 y)))

;; H
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

;; H
  (assert (= temp___387 s))

;; H
  (assert (= o12 (select temp___387 1)))

;; H
  (assert (= o13 (to_rep o12)))

;; H
  (assert (= o14 ((_ zero_extend 24) o13)))

;; H
  (assert (= o15 (bvshl o14 ((_ int2bv 32) 24))))

;; H
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

;; H
  (assert (= temp___384 s))

;; H
  (assert (= o7 (select temp___384 2)))

;; H
  (assert (= o8 (to_rep o7)))

;; H
  (assert (= o9 ((_ zero_extend 24) o8)))

;; H
  (assert (= o10 (bvshl o9 ((_ int2bv 32) 16))))

;; H
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

;; H
  (assert (= temp___381 s))

;; H
  (assert (= o2 (select temp___381 3)))

;; H
  (assert (= o3 (to_rep o2)))

;; H
  (assert (= o4 ((_ zero_extend 24) o3)))

;; H
  (assert (= o5 (bvshl o4 ((_ int2bv 32) 8))))

;; H
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

;; H
  (assert (= temp___378 s))

;; H
  (assert (= o (select temp___378 4)))

;; H
  (assert (= o1 (to_rep o)))

;; H
  (assert (= o6 ((_ zero_extend 24) o1)))

;; H
  (assert (= o11 (bvor o6 o5)))

;; H
  (assert (= o16 (bvor o11 o10)))

;; H
  (assert (= o17 (bvor o16 o15)))

;; H
  (assert (= result (mk_t__ref1 x)))

;; H
  (assert (= x1 o17))

;; H
  (assert (bvule x1 ((_ int2bv 32) 2147483647)))

(assert
;; WP_parameter_def
 ;; File "linted-update.adb", line 90, characters 0-0
  (not (in_range1 (bv2nat x1))))
(check-sat)
