;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq (us_rep us_rep) Bool)

(declare-fun user_eq (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun dummy () us_rep)

(declare-datatypes ()
((simple_priv__ref (mk_simple_priv__ref (simple_priv__content us_rep)))))
(define-fun simple_priv__ref___projection ((a simple_priv__ref)) us_rep 
  (simple_priv__content a))

(declare-fun simple_priv_ok (us_rep) Bool)

(declare-fun simple_priv_ok__function_guard (Bool us_rep) Bool)

;; temp___result_141_def
  (assert
  (forall ((temp___140 us_rep)) (simple_priv_ok__function_guard
  (simple_priv_ok temp___140) temp___140)))

(define-fun default_initial_assumption ((temp___expr_138 us_rep)
  (temp___skip_top_level_139 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_139 true))
                                         (= (simple_priv_ok temp___expr_138) true)))

(declare-sort us_main_type1 0)

(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)

(declare-sort us_rep1 0)

(declare-fun bool_eq1 (us_rep1 us_rep1) Bool)

(declare-fun user_eq1 (us_rep1 us_rep1) Bool)

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep1) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))

(declare-fun dummy1 () us_rep1)

(declare-datatypes ()
((wrong_priv__ref (mk_wrong_priv__ref (wrong_priv__content us_rep1)))))
(define-fun wrong_priv__ref___projection ((a wrong_priv__ref)) us_rep1 
  (wrong_priv__content a))

(declare-fun wrong_priv_ok (us_rep1) Bool)

(declare-fun wrong_priv_ok__function_guard (Bool us_rep1) Bool)

;; temp___result_149_def
  (assert
  (forall ((temp___148 us_rep1)) (wrong_priv_ok__function_guard
  (wrong_priv_ok temp___148) temp___148)))

(define-fun default_initial_assumption1 ((temp___expr_146 us_rep1)
  (temp___skip_top_level_147 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_147 true))
                                         (= (wrong_priv_ok temp___expr_146) true)))

(declare-sort us_main_type2 0)

(declare-fun us_main_eq2 (us_main_type2 us_main_type2) Bool)

(declare-sort us_rep2 0)

(declare-fun bool_eq2 (us_rep2 us_rep2) Bool)

(declare-fun user_eq2 (us_rep2 us_rep2) Bool)

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep2) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment2 a))))

(declare-fun dummy2 () us_rep2)

(declare-datatypes ()
((priv_with_glob__ref
 (mk_priv_with_glob__ref (priv_with_glob__content us_rep2)))))
(define-fun priv_with_glob__ref___projection ((a priv_with_glob__ref)) us_rep2 
  (priv_with_glob__content a))

(declare-fun priv_with_glob_ok (us_rep2 us_private) Bool)

(declare-fun priv_with_glob_ok__function_guard (Bool us_rep2
  us_private) Bool)

;; temp___result_157_def
  (assert
  (forall ((private_default__glob us_private) (temp___156 us_rep2))
  (priv_with_glob_ok__function_guard
  (priv_with_glob_ok temp___156 private_default__glob) temp___156
  private_default__glob)))

(define-fun default_initial_assumption2 ((temp___expr_154 us_rep2)
  (temp___skip_top_level_155 Bool)
  (private_default__glob us_private)) Bool (=>
                                           (not
                                           (= temp___skip_top_level_155 true))
                                           (= (priv_with_glob_ok
                                              temp___expr_154
                                              private_default__glob) true)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun p1 () us_rep)

(declare-fun p2 () us_rep1)

(declare-fun p3 () us_rep2)

(declare-fun glob () us_private)

(declare-fun glob1 () us_private)

;; H
  (assert (default_initial_assumption p1 false))

;; H
  (assert (default_initial_assumption1 p2 false))

;; H
  (assert (default_initial_assumption2 p3 false glob))

;; H
  (assert (simple_priv_ok__function_guard (simple_priv_ok p1) p1))

;; H
  (assert (= (simple_priv_ok p1) true))

;; H
  (assert (wrong_priv_ok__function_guard (wrong_priv_ok p2) p2))

;; H
  (assert (= (wrong_priv_ok p2) true))

;; H
  (assert (priv_with_glob_ok__function_guard (priv_with_glob_ok p3 glob) 
  p3 glob))

;; H
  (assert (= (priv_with_glob_ok p3 glob) true))

;; H
  (assert (simple_priv_ok__function_guard (simple_priv_ok p1) p1))

;; H
  (assert (= (simple_priv_ok p1) true))

;; H
  (assert (wrong_priv_ok__function_guard (wrong_priv_ok p2) p2))

;; H
  (assert (= (wrong_priv_ok p2) true))

;; H
  (assert (priv_with_glob_ok__function_guard (priv_with_glob_ok p3 glob1) 
  p3 glob1))

(assert
;; WP_parameter_def
 ;; File "default_init.ads", line 99, characters 0-0
  (not (= (priv_with_glob_ok p3 glob1) true)))
(check-sat)
