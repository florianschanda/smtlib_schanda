;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                             (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(declare-sort opt_index 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq4 (opt_index opt_index) Bool)

(declare-fun dummy4 () opt_index)

(declare-datatypes ()
((opt_index__ref (mk_opt_index__ref (opt_index__content opt_index)))))
(define-fun opt_index__ref___projection ((a opt_index__ref)) opt_index 
  (opt_index__content a))

(define-fun dynamic_invariant ((temp___expr_170 Int)
  (temp___is_init_167 Bool) (temp___skip_constant_168 Bool)
  (temp___do_toplevel_169 Bool)) Bool (=>
                                      (or (= temp___is_init_167 true)
                                      (<= 0 2147483647)) (in_range3
                                      temp___expr_170)))

(declare-sort topt_indexB 0)

(define-fun in_range4 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (topt_indexB topt_indexB) Bool)

(declare-fun dummy5 () topt_indexB)

(declare-datatypes ()
((topt_indexB__ref (mk_topt_indexB__ref (topt_indexB__content topt_indexB)))))
(define-fun topt_indexB__ref___projection ((a topt_indexB__ref)) topt_indexB 
  (topt_indexB__content a))

(declare-fun to_rep2 (topt_indexB) Int)

(declare-fun of_rep2 (Int) topt_indexB)

;; inversion_axiom
  (assert
  (forall ((x topt_indexB))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x topt_indexB)) (! (in_range4
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort index 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (index index) Bool)

(declare-fun dummy6 () index)

(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))

(declare-datatypes ()
((map__ref1 (mk_map__ref1 (map__content1 (Array Int integer))))))
(declare-fun slide1 ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array Int integer) Int Int (Array Int integer) Int
  Int) (Array Int integer))

;; concat_def
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 (integer Int) (Array Int integer))

;; singleton_def
  (assert
  (forall ((v integer))
  (forall ((i Int))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq8 ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq8 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare1 ((Array Int integer) Int Int (Array Int integer) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare1 a a_first a_last b b_first b_last) 0)
     (= (bool_eq8 a a_first a_last b b_first b_last) true)) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare1 a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq8 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare1 a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq8 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

(declare-sort t1 0)

(declare-fun first2 (t1) topt_indexB)

(declare-fun last2 (t1) topt_indexB)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range4 f)
     (=> (in_range4 l)
     (and (= (to_rep2 (first2 (mk1 f l))) f)
     (= (to_rep2 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range4 low)
                   (and (in_range4 high)
                   (=> (<= low high) (and (in_range5 low) (in_range5 high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int integer))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int integer) (elts1 a))

(define-fun of_array1 ((a (Array Int integer)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep2 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep2 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int integer)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int integer)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))

(define-fun bool_eq9 ((x us_t1)
  (y us_t1)) Bool (bool_eq8 (elts1 x) (to_rep2 (first2 (rt1 x)))
                  (to_rep2 (last2 (rt1 x))) (elts1 y)
                  (to_rep2 (first2 (rt1 y))) (to_rep2 (last2 (rt1 y)))))

(declare-fun user_eq7 (us_t1 us_t1) Bool)

(declare-fun dummy7 () us_t1)

(declare-datatypes () ((ar__ref (mk_ar__ref (ar__content us_t1)))))
(define-fun ar__ref___projection ((a ar__ref)) us_t1 (ar__content a))

(define-fun dynamic_invariant1 ((temp___expr_182 us_t1)
  (temp___is_init_179 Bool) (temp___skip_constant_180 Bool)
  (temp___do_toplevel_181 Bool)) Bool (=>
                                      (not (= temp___skip_constant_180 true))
                                      (dynamic_property1 1 2147483647
                                      (first3 temp___expr_182)
                                      (last3 temp___expr_182))))

(define-fun dynamic_invariant2 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-fun sorted (us_t1) Bool)

(declare-fun sorted__function_guard (Bool us_t1) Bool)

(declare-fun search (us_t1 Int) Int)

(declare-fun search__function_guard (Int us_t1 Int) Bool)

;; search__post_axiom
  (assert
  (forall ((a us_t1))
  (forall ((i Int))
  (! (=>
     (and
     (and (dynamic_invariant1 a true true true) (dynamic_invariant2 i true
     true true)) (= (sorted a) true))
     (let ((result (search a i)))
     (and
     (ite (and (<= (first3 a) result) (<= result (last3 a)))
     (= (to_rep1 (select (to_array1 a) result)) i)
     (forall ((index1 Int))
     (=> (and (<= (first3 a) index1) (<= index1 (last3 a)))
     (not (= (to_rep1 (select (to_array1 a) index1)) i)))))
     (dynamic_invariant result true false true)))) :pattern ((search a i)) ))))

(declare-sort t1b 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 9)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq8 (t1b t1b) Bool)

(declare-fun dummy8 () t1b)

(declare-datatypes () ((t1b__ref (mk_t1b__ref (t1b__content t1b)))))
(define-fun t1b__ref___projection ((a t1b__ref)) t1b (t1b__content a))

(declare-fun a () us_t1)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun test_search__a__aggregate_def (Int Int Int Int Int Int Int Int
  Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___153 Int) (temp___154 Int) (temp___155 Int)
  (temp___156 Int) (temp___157 Int) (temp___158 Int) (temp___159 Int)
  (temp___160 Int) (temp___161 Int))
  (let ((temp___152 (test_search__a__aggregate_def temp___153 temp___154
                    temp___155 temp___156 temp___157 temp___158 temp___159
                    temp___160 temp___161)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and (= (select temp___152 1) (of_rep1 temp___153))
  (= (select temp___152 2) (of_rep1 temp___154)))
  (= (select temp___152 3) (of_rep1 temp___155)))
  (= (select temp___152 4) (of_rep1 temp___156)))
  (= (select temp___152 5) (of_rep1 temp___157)))
  (= (select temp___152 6) (of_rep1 temp___158)))
  (= (select temp___152 7) (of_rep1 temp___159)))
  (= (select temp___152 8) (of_rep1 temp___160)))
  (= (select temp___152 9) (of_rep1 temp___161))))))

(declare-sort t3b 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq11 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq9 (t3b t3b) Bool)

(declare-fun dummy9 () t3b)

(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content t3b)))))
(define-fun t3b__ref___projection ((a1 t3b__ref)) t3b (t3b__content a1))

(declare-fun b () us_t1)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun test_search__b__aggregate_def (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___164 Int) (temp___165 Int))
  (let ((temp___163 (test_search__b__aggregate_def temp___164 temp___165)))
  (and (= (select temp___163 1) (of_rep1 temp___164))
  (= (select temp___163 2) (of_rep1 temp___165))))))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun temp___String_Literal_550 (tuple0) (Array Int character))

;; temp___String_Literal_550__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 1)) 110)
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 3)) 116))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 5)) 79))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 6)) 75))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 7)) 58))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 9)) 68))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 10)) 105))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 11)) 100))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 12)) 32))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 13)) 110))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 14)) 111))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 15)) 116))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 16)) 32))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 17)) 102))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 18)) 105))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 19)) 110))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 20)) 100))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 22)) 101))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 23)) 120))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 24)) 105))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 25)) 115))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 26)) 116))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 27)) 105))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 28)) 110))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 29)) 103))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 30)) 32))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 31)) 118))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 32)) 97))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 33)) 108))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 34)) 117))
     (= (to_rep (select (temp___String_Literal_550 us_void_param) 35)) 101)) :pattern (
  (temp___String_Literal_550 us_void_param)) )))

(declare-fun temp___String_Literal_551 (tuple0) (Array Int character))

;; temp___String_Literal_551__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 1)) 110)
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 3)) 116))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 5)) 79))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 6)) 75))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 7)) 58))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 9)) 70))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 10)) 111))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 11)) 117))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 12)) 110))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 13)) 100))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 14)) 32))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 15)) 101))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 16)) 120))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 17)) 105))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 18)) 115))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 19)) 116))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 20)) 105))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 21)) 110))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 22)) 103))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 23)) 32))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 24)) 118))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 25)) 97))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 26)) 108))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 27)) 117))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 28)) 101))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 29)) 32))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 30)) 97))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 31)) 116))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 32)) 32))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 33)) 111))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 34)) 116))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 35)) 104))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 36)) 101))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 37)) 114))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 38)) 32))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 39)) 105))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 40)) 110))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 41)) 100))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 42)) 101))
     (= (to_rep (select (temp___String_Literal_551 us_void_param) 43)) 120)) :pattern (
  (temp___String_Literal_551 us_void_param)) )))

(declare-fun temp___String_Literal_552 (tuple0) (Array Int character))

;; temp___String_Literal_552__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 1)) 79)
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 2)) 75))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 3)) 58))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 5)) 70))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 6)) 111))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 7)) 117))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 8)) 110))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 9)) 100))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 11)) 101))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 12)) 120))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 13)) 105))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 14)) 115))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 15)) 116))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 16)) 105))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 17)) 110))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 18)) 103))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 19)) 32))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 20)) 118))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 21)) 97))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 22)) 108))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 23)) 117))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 24)) 101))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 25)) 32))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 26)) 97))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 27)) 116))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 28)) 32))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 29)) 102))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 30)) 105))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 31)) 114))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 32)) 115))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 33)) 116))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 34)) 32))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 35)) 105))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 36)) 110))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 37)) 100))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 38)) 101))
     (= (to_rep (select (temp___String_Literal_552 us_void_param) 39)) 120)) :pattern (
  (temp___String_Literal_552 us_void_param)) )))

(declare-fun temp___String_Literal_553 (tuple0) (Array Int character))

;; temp___String_Literal_553__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 1)) 110)
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 3)) 116))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 5)) 79))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 6)) 75))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 7)) 58))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 9)) 70))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 10)) 111))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 11)) 117))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 12)) 110))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 13)) 100))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 14)) 32))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 15)) 110))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 16)) 111))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 17)) 110))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 18)) 45))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 19)) 101))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 20)) 120))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 21)) 105))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 22)) 115))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 23)) 116))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 24)) 105))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 25)) 110))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 26)) 103))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 27)) 32))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 28)) 118))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 29)) 97))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 30)) 108))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 31)) 117))
     (= (to_rep (select (temp___String_Literal_553 us_void_param) 32)) 101)) :pattern (
  (temp___String_Literal_553 us_void_param)) )))

(declare-fun temp___String_Literal_554 (tuple0) (Array Int character))

;; temp___String_Literal_554__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 1)) 79)
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 2)) 75))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 3)) 58))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 5)) 68))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 6)) 105))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 7)) 100))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 9)) 110))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 10)) 111))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 11)) 116))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 12)) 32))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 13)) 102))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 14)) 105))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 15)) 110))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 16)) 100))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 17)) 32))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 18)) 110))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 19)) 111))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 20)) 110))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 21)) 45))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 22)) 101))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 23)) 120))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 24)) 105))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 25)) 115))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 26)) 116))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 27)) 105))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 28)) 110))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 29)) 103))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 30)) 32))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 31)) 118))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 32)) 97))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 33)) 108))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 34)) 117))
     (= (to_rep (select (temp___String_Literal_554 us_void_param) 35)) 101)) :pattern (
  (temp___String_Literal_554 us_void_param)) )))

(declare-fun temp___String_Literal_555 (tuple0) (Array Int character))

;; temp___String_Literal_555__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 1)) 110)
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 3)) 116))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 5)) 79))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 6)) 75))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 7)) 58))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 9)) 68))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 10)) 105))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 11)) 100))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 12)) 32))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 13)) 110))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 14)) 111))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 15)) 116))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 16)) 32))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 17)) 102))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 18)) 105))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 19)) 110))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 20)) 100))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 22)) 101))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 23)) 120))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 24)) 105))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 25)) 115))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 26)) 116))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 27)) 105))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 28)) 110))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 29)) 103))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 30)) 32))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 31)) 118))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 32)) 97))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 33)) 108))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 34)) 117))
     (= (to_rep (select (temp___String_Literal_555 us_void_param) 35)) 101)) :pattern (
  (temp___String_Literal_555 us_void_param)) )))

(declare-fun temp___String_Literal_556 (tuple0) (Array Int character))

;; temp___String_Literal_556__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 1)) 110)
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 3)) 116))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 5)) 79))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 6)) 75))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 7)) 58))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 9)) 70))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 10)) 111))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 11)) 117))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 12)) 110))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 13)) 100))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 14)) 32))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 15)) 101))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 16)) 120))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 17)) 105))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 18)) 115))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 19)) 116))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 20)) 105))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 21)) 110))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 22)) 103))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 23)) 32))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 24)) 118))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 25)) 97))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 26)) 108))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 27)) 117))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 28)) 101))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 29)) 32))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 30)) 97))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 31)) 116))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 32)) 32))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 33)) 111))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 34)) 116))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 35)) 104))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 36)) 101))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 37)) 114))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 38)) 32))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 39)) 105))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 40)) 110))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 41)) 100))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 42)) 101))
     (= (to_rep (select (temp___String_Literal_556 us_void_param) 43)) 120)) :pattern (
  (temp___String_Literal_556 us_void_param)) )))

(declare-fun temp___String_Literal_557 (tuple0) (Array Int character))

;; temp___String_Literal_557__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 1)) 79)
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 2)) 75))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 3)) 58))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 5)) 70))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 6)) 111))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 7)) 117))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 8)) 110))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 9)) 100))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 11)) 101))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 12)) 120))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 13)) 105))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 14)) 115))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 15)) 116))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 16)) 105))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 17)) 110))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 18)) 103))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 19)) 32))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 20)) 118))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 21)) 97))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 22)) 108))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 23)) 117))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 24)) 101))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 25)) 32))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 26)) 97))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 27)) 116))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 28)) 32))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 29)) 102))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 30)) 105))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 31)) 114))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 32)) 115))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 33)) 116))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 34)) 32))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 35)) 105))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 36)) 110))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 37)) 100))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 38)) 101))
     (= (to_rep (select (temp___String_Literal_557 us_void_param) 39)) 120)) :pattern (
  (temp___String_Literal_557 us_void_param)) )))

(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range1
                                     temp___expr_39)))

(define-fun dynamic_invariant4 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range2 temp___expr_63)))

(define-fun dynamic_invariant5 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

;; a__def_axiom
  (assert
  (= a (of_array1 (test_search__a__aggregate_def 0 0 1 1 3 4 5 8 8) 1 9)))

;; b__def_axiom
  (assert (= b (of_array1 (test_search__b__aggregate_def 1 2) 1 2)))

(define-fun dynamic_invariant6 ((temp___expr_176 Int)
  (temp___is_init_173 Bool) (temp___skip_constant_174 Bool)
  (temp___do_toplevel_175 Bool)) Bool (=>
                                      (or (= temp___is_init_173 true)
                                      (<= 1 2147483647)) (in_range5
                                      temp___expr_176)))

;; sorted__post_axiom
  (assert true)

;; sorted__def_axiom
  (assert
  (forall ((a1 us_t1))
  (! (= (= (sorted a1) true)
     (forall ((i1 Int))
     (=> (and (<= (first3 a1) i1) (<= i1 (last3 a1)))
     (forall ((i2 Int))
     (=> (and (<= i1 i2) (<= i2 (last3 a1)))
     (<= (to_rep1 (select (to_array1 a1) i1)) (to_rep1
                                              (select (to_array1 a1) i2)))))))) :pattern (
  (sorted a1)) )))

(declare-fun res () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun result () Int)

(declare-fun res1 () Int)

(declare-fun result1 () Int)

(declare-fun res2 () Int)

;; H
  (assert
  (= (mk___t1 (test_search__a__aggregate_def 0 0 1 1 3 4 5 8 8) (mk1 1 9)) 
  a))

;; H
  (assert (dynamic_invariant1 a true false true))

;; H
  (assert (= (mk___t1 (test_search__b__aggregate_def 1 2) (mk1 1 2)) b))

;; H
  (assert (dynamic_invariant1 b true false true))

;; H
  (assert (=> (<= 0 2147483647) (in_range3 res)))

;; H
  (assert
  (and (= o (search a 1))
  (and (in_range3 o)
  (ite (and (<= (to_rep2 (first2 (rt1 a))) o)
       (<= o (to_rep2 (last2 (rt1 a)))))
  (= (to_rep1 (select (elts1 a) o)) 1)
  (forall ((index1 Int))
  (=>
  (and (<= (to_rep2 (first2 (rt1 a))) index1)
  (<= index1 (to_rep2 (last2 (rt1 a)))))
  (not (= (to_rep1 (select (elts1 a) index1)) 1))))))))

;; H
  (assert (= result res))

;; H
  (assert (= res1 o))

;; H
  (assert
  (and (= o1 (search a 6))
  (and (in_range3 o1)
  (ite (and (<= (to_rep2 (first2 (rt1 a))) o1)
       (<= o1 (to_rep2 (last2 (rt1 a)))))
  (= (to_rep1 (select (elts1 a) o1)) 6)
  (forall ((index1 Int))
  (=>
  (and (<= (to_rep2 (first2 (rt1 a))) index1)
  (<= index1 (to_rep2 (last2 (rt1 a)))))
  (not (= (to_rep1 (select (elts1 a) index1)) 6))))))))

;; H
  (assert (= result1 res1))

;; H
  (assert (= res2 o1))

(assert
;; WP_parameter_def
 ;; File "test_search.adb", line 4, characters 0-0
  (not (= (sorted b) true)))
(check-sat)
