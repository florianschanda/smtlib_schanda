;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-datatypes ()
((us_split_discrs
 (mk___split_discrs (rec__private_record__result_ty__found Bool)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) Bool (rec__private_record__result_ty__found
                                                                    a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields (rec__private_record__result_ty us_main_type)))))
(define-fun us_split_fields_Result_Ty__projection ((a us_split_fields)) us_main_type 
  (rec__private_record__result_ty a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep_2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (rec__private_record__result_ty__found
                           (us_split_discrs1 a)) (rec__private_record__result_ty__found
                                                 (us_split_discrs1 b)))
                        (= (us_main_eq
                           (rec__private_record__result_ty
                           (us_split_fields1 a))
                           (rec__private_record__result_ty
                           (us_split_fields1 b))) true))
                   true false))

(declare-fun user_eq (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun private_record__result_ty__found__first__bit () Int)

(declare-fun private_record__result_ty__found__last__bit () Int)

(declare-fun private_record__result_ty__found__position () Int)

;; private_record__result_ty__found__first__bit_axiom
  (assert (<= 0 private_record__result_ty__found__first__bit))

;; private_record__result_ty__found__last__bit_axiom
  (assert
  (< private_record__result_ty__found__first__bit private_record__result_ty__found__last__bit))

;; private_record__result_ty__found__position_axiom
  (assert (<= 0 private_record__result_ty__found__position))

(declare-fun dummy () us_rep)

(declare-datatypes ()
((result_ty__ref (mk_result_ty__ref (result_ty__content us_rep)))))
(define-fun result_ty__ref___projection ((a result_ty__ref)) us_rep (result_ty__content
                                                                    a))

(define-fun in_range1 ((rec__private_record__result_ty__found1 Bool)
  (a us_rep)) Bool (= rec__private_record__result_ty__found1 (rec__private_record__result_ty__found
                                                             (us_split_discrs1
                                                             a))))

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun private_record__result_ty__found__first__bit1 () Int)

(declare-fun private_record__result_ty__found__last__bit1 () Int)

(declare-fun private_record__result_ty__found__position1 () Int)

;; private_record__result_ty__found__first__bit_axiom
  (assert (<= 0 private_record__result_ty__found__first__bit1))

;; private_record__result_ty__found__last__bit_axiom
  (assert
  (< private_record__result_ty__found__first__bit1 private_record__result_ty__found__last__bit1))

;; private_record__result_ty__found__position_axiom
  (assert (<= 0 private_record__result_ty__found__position1))

(declare-fun dummy1 () us_rep)

(declare-datatypes ()
((res_false__ref (mk_res_false__ref (res_false__content us_rep)))))
(define-fun res_false__ref___projection ((a res_false__ref)) us_rep (res_false__content
                                                                    a))

(declare-fun r () us_rep)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun dynamic_invariant ((temp___expr_210 us_rep)
  (temp___is_init_207 Bool) (temp___skip_constant_208 Bool)
  (temp___do_toplevel_209 Bool)) Bool (=>
                                      (not (= temp___skip_constant_208 true))
                                      (in_range1 (of_int 0) temp___expr_210)))

(define-fun default_initial_assumption ((temp___expr_212 us_rep)
  (temp___skip_top_level_213 Bool)) Bool (= (rec__private_record__result_ty__found
                                            (us_split_discrs1
                                            temp___expr_212)) (of_int 0)))

(assert
;; WP_parameter_def
 ;; File "record_discr.adb", line 19, characters 0-0
  (not
  (= (of_int 0) (rec__private_record__result_ty__found (us_split_discrs1 r)))))
(check-sat)
