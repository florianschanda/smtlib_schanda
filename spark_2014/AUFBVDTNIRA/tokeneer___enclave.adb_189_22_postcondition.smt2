;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun ispresent (us_private) Bool)

(declare-fun ispresent__function_guard (Bool us_private) Bool)

(declare-sort statust 0)

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 8)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (statust statust) Bool)

(declare-fun dummy () statust)

(declare-datatypes ()
((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref_2__projection ((a statust__ref)) statust (statust__content
                                                                  a))

(define-fun dynamic_invariant ((temp___expr_1903 Int)
  (temp___is_init_1900 Bool) (temp___skip_constant_1901 Bool)
  (temp___do_toplevel_1902 Bool)) Bool (=>
                                       (or (= temp___is_init_1900 true)
                                       (<= 0 8)) (in_range temp___expr_1903)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-sort enrolmentstates 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (enrolmentstates enrolmentstates) Bool)

(declare-fun dummy1 () enrolmentstates)

(declare-datatypes ()
((enrolmentstates__ref
 (mk_enrolmentstates__ref (enrolmentstates__content enrolmentstates)))))
(define-fun enrolmentstates__ref___projection ((a enrolmentstates__ref)) enrolmentstates 
  (enrolmentstates__content a))

(define-fun dynamic_invariant1 ((temp___expr_2155 Int)
  (temp___is_init_2152 Bool) (temp___skip_constant_2153 Bool)
  (temp___do_toplevel_2154 Bool)) Bool (=>
                                       (or (= temp___is_init_2152 true)
                                       (<= 0 2)) (in_range1
                                       temp___expr_2155)))

(declare-fun state () us_private)

(declare-fun status () Int)

(declare-fun state1 () us_private)

(declare-fun status1 () Int)

(declare-fun result () Bool)

(declare-fun state2 () us_private)

(declare-fun state3 () us_private)

(declare-fun filestate () us_private)

(declare-fun state4 () us_private)

(declare-fun state5 () us_private)

(declare-fun result1 () Int)

(declare-fun status2 () Int)

(declare-fun state6 () us_private)

(declare-fun filestate1 () us_private)

(declare-fun state7 () us_private)

(declare-fun state8 () us_private)

(declare-fun filestate2 () us_private)

(declare-fun state9 () us_private)

(declare-fun state10 () us_private)

(declare-fun state11 () us_private)

(declare-fun state12 () us_private)

(declare-fun status3 () Int)

(declare-fun filestate3 () us_private)

(declare-fun state13 () us_private)

(declare-fun state14 () us_private)

(declare-fun state15 () us_private)

(declare-fun state16 () us_private)

(declare-fun status4 () Int)

;; H
  (assert (in_range status))

;; H
  (assert (in_range1 status))

;; H
  (assert
  (and (= result (ispresent state)) (ispresent__function_guard result state)))

;; H
  (assert (=> (= result true) (= result1 status)))

;; H
  (assert (=> (= result true) (= status2 1)))

;; H
  (assert (=> (not (= result true)) (= status2 status)))

;; H
  (assert (=> (not (= result true)) (= state3 state6)))

;; H
  (assert (=> (not (= result true)) (= state2 state)))

;; H
  (assert (=> (not (= result true)) (= state5 state8)))

;; H
  (assert (=> (not (= result true)) (= state4 state7)))

;; H
  (assert (=> (not (= result true)) (= filestate filestate1)))

;; H
  (assert (=> (not (= result true)) (= status2 status1)))

;; H
  (assert (=> (not (= result true)) (= state3 state6)))

;; H
  (assert (=> (not (= result true)) (= state2 state1)))

;; H
  (assert (=> (not (= result true)) (= state5 state8)))

;; H
  (assert (=> (not (= result true)) (= state4 state7)))

;; H
  (assert (=> (not (= result true)) (= filestate filestate1)))

;; H
  (assert (= status2 status3))

;; H
  (assert (= state12 state3))

;; H
  (assert (= state11 state2))

;; H
  (assert (= state10 state5))

;; H
  (assert (= state9 state4))

;; H
  (assert (= filestate2 filestate))

;; H
  (assert (= status4 status2))

;; H
  (assert (= state16 state3))

;; H
  (assert (= state15 state2))

;; H
  (assert (= state14 state5))

;; H
  (assert (= state13 state4))

;; H
  (assert (= filestate3 filestate))

(assert
;; WP_parameter_def
 ;; File "enclave.adb", line 147, characters 0-0
  (not (in_range1 status3)))
(check-sat)
