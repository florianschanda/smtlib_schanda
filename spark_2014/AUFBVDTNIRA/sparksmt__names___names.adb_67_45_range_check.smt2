;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort name_id 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (name_id name_id) Bool)

(declare-fun dummy () name_id)

(declare-datatypes ()
((name_id__ref (mk_name_id__ref (name_id__content name_id)))))
(define-fun name_id__ref___projection ((a name_id__ref)) name_id (name_id__content
                                                                 a))

(declare-sort capacity_range 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (capacity_range capacity_range) Bool)

(declare-fun dummy1 () capacity_range)

(declare-datatypes ()
((capacity_range__ref
 (mk_capacity_range__ref (capacity_range__content capacity_range)))))
(define-fun capacity_range__ref___projection ((a capacity_range__ref)) capacity_range 
  (capacity_range__content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-datatypes ()
((us_split_discrs
 (mk___split_discrs
 (rec__names__data__char_tables__vector__capacity capacity_range)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) capacity_range 
  (rec__names__data__char_tables__vector__capacity a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields (rec__names__data__char_tables__vector us_main_type)))))
(define-fun us_split_fields_Vector__projection ((a us_split_fields)) us_main_type 
  (rec__names__data__char_tables__vector a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep_2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun names__data__char_tables__vector__capacity__first__bit () Int)

(declare-fun names__data__char_tables__vector__capacity__last__bit () Int)

(declare-fun names__data__char_tables__vector__capacity__position () Int)

;; names__data__char_tables__vector__capacity__first__bit_axiom
  (assert (<= 0 names__data__char_tables__vector__capacity__first__bit))

;; names__data__char_tables__vector__capacity__last__bit_axiom
  (assert
  (< names__data__char_tables__vector__capacity__first__bit names__data__char_tables__vector__capacity__last__bit))

;; names__data__char_tables__vector__capacity__position_axiom
  (assert (<= 0 names__data__char_tables__vector__capacity__position))

(declare-fun dummy2 () us_rep)

(declare-datatypes ()
((vector__ref (mk_vector__ref (vector__content us_rep)))))
(define-fun vector__ref___projection ((a vector__ref)) us_rep (vector__content
                                                              a))

(declare-fun to_rep (capacity_range) Int)

(declare-fun of_rep (Int) capacity_range)

;; inversion_axiom
  (assert
  (forall ((x capacity_range))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x capacity_range)) (! (in_range2
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(define-fun in_range3 ((rec__names__data__char_tables__vector__capacity1 Int)
  (a us_rep)) Bool (= rec__names__data__char_tables__vector__capacity1 
  (to_rep
  (rec__names__data__char_tables__vector__capacity (us_split_discrs1 a)))))

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun names__data__char_tables__vector__capacity__first__bit1 () Int)

(declare-fun names__data__char_tables__vector__capacity__last__bit1 () Int)

(declare-fun names__data__char_tables__vector__capacity__position1 () Int)

;; names__data__char_tables__vector__capacity__first__bit_axiom
  (assert (<= 0 names__data__char_tables__vector__capacity__first__bit1))

;; names__data__char_tables__vector__capacity__last__bit_axiom
  (assert
  (< names__data__char_tables__vector__capacity__first__bit1 names__data__char_tables__vector__capacity__last__bit1))

;; names__data__char_tables__vector__capacity__position_axiom
  (assert (<= 0 names__data__char_tables__vector__capacity__position1))

(declare-fun dummy3 () us_rep)

(declare-datatypes ()
((tchar_tableS__ref (mk_tchar_tableS__ref (tchar_tableS__content us_rep)))))
(define-fun tchar_tableS__ref___projection ((a tchar_tableS__ref)) us_rep 
  (tchar_tableS__content a))

(declare-fun char_table__split_discrs () us_split_discrs)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun is_empty (us_rep) Bool)

(declare-fun is_empty__function_guard (Bool us_rep) Bool)

(define-fun dynamic_invariant ((temp___expr_403 us_rep)
  (temp___is_init_400 Bool) (temp___skip_constant_401 Bool)
  (temp___do_toplevel_402 Bool)) Bool (=>
                                      (not (= temp___skip_constant_401 true))
                                      (in_range3 1024 temp___expr_403)))

(define-fun default_initial_assumption ((temp___expr_405 us_rep)
  (temp___skip_top_level_406 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__names__data__char_tables__vector__capacity
                                            (us_split_discrs1
                                            temp___expr_405))) 1024)
                                         (=>
                                         (not
                                         (= temp___skip_top_level_406 true))
                                         (= (is_empty temp___expr_405) true))))

(declare-sort capacity_range1 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (capacity_range1 capacity_range1) Bool)

(declare-fun dummy4 () capacity_range1)

(declare-datatypes ()
((capacity_range__ref1
 (mk_capacity_range__ref1 (capacity_range__content1 capacity_range1)))))
(define-fun capacity_range__ref_2__projection ((a capacity_range__ref1)) capacity_range1 
  (capacity_range__content1 a))

(declare-sort us_main_type1 0)

(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)

(declare-datatypes ()
((us_split_discrs2
 (mk___split_discrs1
 (rec__names__data__entry_tables__vector__capacity capacity_range1)))))
(define-fun us_split_discrs_2__projection ((a us_split_discrs2)) capacity_range1 
  (rec__names__data__entry_tables__vector__capacity a))

(declare-datatypes ()
((us_split_discrs__ref1
 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref_2__projection ((a us_split_discrs__ref1)) us_split_discrs2 
  (us_split_discrs__content1 a))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1 (rec__names__data__entry_tables__vector us_main_type1)))))
(define-fun us_split_fields_Vector2__projection ((a us_split_fields2)) us_main_type1 
  (rec__names__data__entry_tables__vector a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_3__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1
 (mk___rep1
 (us_split_discrs3 us_split_discrs2)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep_4__projection ((a us_rep1)) us_split_discrs2 (us_split_discrs3
                                                                a))

(define-fun us_rep_5__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                a))

(declare-fun user_eq4 (us_rep1 us_rep1) Bool)

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep1) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))

(declare-fun names__data__entry_tables__vector__capacity__first__bit () Int)

(declare-fun names__data__entry_tables__vector__capacity__last__bit () Int)

(declare-fun names__data__entry_tables__vector__capacity__position () Int)

;; names__data__entry_tables__vector__capacity__first__bit_axiom
  (assert (<= 0 names__data__entry_tables__vector__capacity__first__bit))

;; names__data__entry_tables__vector__capacity__last__bit_axiom
  (assert
  (< names__data__entry_tables__vector__capacity__first__bit names__data__entry_tables__vector__capacity__last__bit))

;; names__data__entry_tables__vector__capacity__position_axiom
  (assert (<= 0 names__data__entry_tables__vector__capacity__position))

(declare-fun dummy5 () us_rep1)

(declare-datatypes ()
((vector__ref1 (mk_vector__ref1 (vector__content1 us_rep1)))))
(define-fun vector__ref_2__projection ((a vector__ref1)) us_rep1 (vector__content1
                                                                 a))

(declare-fun to_rep1 (capacity_range1) Int)

(declare-fun of_rep1 (Int) capacity_range1)

;; inversion_axiom
  (assert
  (forall ((x capacity_range1))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x capacity_range1)) (! (in_range4
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(define-fun in_range5 ((rec__names__data__entry_tables__vector__capacity1 Int)
  (a us_rep1)) Bool (= rec__names__data__entry_tables__vector__capacity1 
  (to_rep1
  (rec__names__data__entry_tables__vector__capacity (us_split_discrs3 a)))))

(declare-fun value__size3 () Int)

(declare-fun object__size3 (us_rep1) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))

(declare-fun names__data__entry_tables__vector__capacity__first__bit1 () Int)

(declare-fun names__data__entry_tables__vector__capacity__last__bit1 () Int)

(declare-fun names__data__entry_tables__vector__capacity__position1 () Int)

;; names__data__entry_tables__vector__capacity__first__bit_axiom
  (assert (<= 0 names__data__entry_tables__vector__capacity__first__bit1))

;; names__data__entry_tables__vector__capacity__last__bit_axiom
  (assert
  (< names__data__entry_tables__vector__capacity__first__bit1 names__data__entry_tables__vector__capacity__last__bit1))

;; names__data__entry_tables__vector__capacity__position_axiom
  (assert (<= 0 names__data__entry_tables__vector__capacity__position1))

(declare-fun dummy6 () us_rep1)

(declare-datatypes ()
((tentry_tableS__ref
 (mk_tentry_tableS__ref (tentry_tableS__content us_rep1)))))
(define-fun tentry_tableS__ref___projection ((a tentry_tableS__ref)) us_rep1 
  (tentry_tableS__content a))

(declare-fun entry_table__split_discrs () us_split_discrs2)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun is_empty1 (us_rep1) Bool)

(declare-fun is_empty__function_guard1 (Bool us_rep1) Bool)

(define-fun dynamic_invariant1 ((temp___expr_412 us_rep1)
  (temp___is_init_409 Bool) (temp___skip_constant_410 Bool)
  (temp___do_toplevel_411 Bool)) Bool (=>
                                      (not (= temp___skip_constant_410 true))
                                      (in_range5 256 temp___expr_412)))

(define-fun default_initial_assumption1 ((temp___expr_414 us_rep1)
  (temp___skip_top_level_415 Bool)) Bool (and
                                         (= (to_rep1
                                            (rec__names__data__entry_tables__vector__capacity
                                            (us_split_discrs3
                                            temp___expr_414))) 256)
                                         (=>
                                         (not
                                         (= temp___skip_top_level_415 true))
                                         (= (is_empty1 temp___expr_414) true))))

(declare-sort index_type 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq3 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (index_type index_type) Bool)

(declare-fun dummy7 () index_type)

(declare-datatypes ()
((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref_3__projection ((a index_type__ref)) index_type 
  (index_type__content a))

(declare-sort positive 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq4 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (positive positive) Bool)

(declare-fun dummy8 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-fun to_rep2 (positive) Int)

(declare-fun of_rep2 (Int) positive)

;; inversion_axiom
  (assert
  (forall ((x positive))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x positive)) (! (in_range7 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range7 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-fun to_rep3 (name_id) Int)

(declare-fun of_rep3 (Int) name_id)

;; inversion_axiom
  (assert
  (forall ((x name_id))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x name_id)) (! (in_range1 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-sort char_table_index 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 2147483646)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (char_table_index char_table_index) Bool)

(declare-fun dummy9 () char_table_index)

(declare-datatypes ()
((char_table_index__ref
 (mk_char_table_index__ref (char_table_index__content char_table_index)))))
(define-fun char_table_index__ref___projection ((a char_table_index__ref)) char_table_index 
  (char_table_index__content a))

(declare-fun to_rep4 (char_table_index) Int)

(declare-fun of_rep4 (Int) char_table_index)

;; inversion_axiom
  (assert
  (forall ((x char_table_index))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x char_table_index)) (! (in_range8
  (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range8 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2
 (rec__names__data__name_entry__table_index char_table_index)(rec__names__data__name_entry__length positive)(rec__names__data__name_entry__next_hash name_id)))))
(define-fun us_split_fields_Table_Index__projection ((a us_split_fields4)) char_table_index 
  (rec__names__data__name_entry__table_index a))

(define-fun us_split_fields_Length__projection ((a us_split_fields4)) positive 
  (rec__names__data__name_entry__length a))

(define-fun us_split_fields_Next_Hash__projection ((a us_split_fields4)) name_id 
  (rec__names__data__name_entry__next_hash a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref_2__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep_3__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                a))

(define-fun bool_eq6 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (to_rep4
                            (rec__names__data__name_entry__table_index
                            (us_split_fields5 a))) (to_rep4
                                                   (rec__names__data__name_entry__table_index
                                                   (us_split_fields5 b))))
                         (= (to_rep2
                            (rec__names__data__name_entry__length
                            (us_split_fields5 a))) (to_rep2
                                                   (rec__names__data__name_entry__length
                                                   (us_split_fields5 b)))))
                         (= (to_rep3
                            (rec__names__data__name_entry__next_hash
                            (us_split_fields5 a))) (to_rep3
                                                   (rec__names__data__name_entry__next_hash
                                                   (us_split_fields5 b)))))
                    true false))

(declare-fun user_eq8 (us_rep2 us_rep2) Bool)

(declare-fun value__size4 () Int)

(declare-fun object__size4 (us_rep2) Int)

(declare-fun value__alignment4 () Int)

(declare-fun object__alignment4 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))

(declare-fun names__data__name_entry__table_index__first__bit () Int)

(declare-fun names__data__name_entry__table_index__last__bit () Int)

(declare-fun names__data__name_entry__table_index__position () Int)

;; names__data__name_entry__table_index__first__bit_axiom
  (assert (<= 0 names__data__name_entry__table_index__first__bit))

;; names__data__name_entry__table_index__last__bit_axiom
  (assert
  (< names__data__name_entry__table_index__first__bit names__data__name_entry__table_index__last__bit))

;; names__data__name_entry__table_index__position_axiom
  (assert (<= 0 names__data__name_entry__table_index__position))

(declare-fun names__data__name_entry__length__first__bit () Int)

(declare-fun names__data__name_entry__length__last__bit () Int)

(declare-fun names__data__name_entry__length__position () Int)

;; names__data__name_entry__length__first__bit_axiom
  (assert (<= 0 names__data__name_entry__length__first__bit))

;; names__data__name_entry__length__last__bit_axiom
  (assert
  (< names__data__name_entry__length__first__bit names__data__name_entry__length__last__bit))

;; names__data__name_entry__length__position_axiom
  (assert (<= 0 names__data__name_entry__length__position))

(declare-fun names__data__name_entry__next_hash__first__bit () Int)

(declare-fun names__data__name_entry__next_hash__last__bit () Int)

(declare-fun names__data__name_entry__next_hash__position () Int)

;; names__data__name_entry__next_hash__first__bit_axiom
  (assert (<= 0 names__data__name_entry__next_hash__first__bit))

;; names__data__name_entry__next_hash__last__bit_axiom
  (assert
  (< names__data__name_entry__next_hash__first__bit names__data__name_entry__next_hash__last__bit))

;; names__data__name_entry__next_hash__position_axiom
  (assert (<= 0 names__data__name_entry__next_hash__position))

(declare-fun dummy10 () us_rep2)

(declare-datatypes ()
((name_entry__ref (mk_name_entry__ref (name_entry__content us_rep2)))))
(define-fun name_entry__ref___projection ((a name_entry__ref)) us_rep2 
  (name_entry__content a))

(declare-datatypes ()
((element_type__ref (mk_element_type__ref (element_type__content us_rep2)))))
(define-fun element_type__ref_3__projection ((a element_type__ref)) us_rep2 
  (element_type__content a))

(declare-sort us_main_type2 0)

(declare-fun us_main_eq2 (us_main_type2 us_main_type2) Bool)

(declare-sort us_rep3 0)

(declare-fun bool_eq7 (us_rep3 us_rep3) Bool)

(declare-fun user_eq9 (us_rep3 us_rep3) Bool)

(declare-fun value__size5 () Int)

(declare-fun object__size5 (us_rep3) Int)

(declare-fun value__alignment5 () Int)

(declare-fun object__alignment5 (us_rep3) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__alignment5 a))))

(declare-fun dummy11 () us_rep3)

(declare-datatypes ()
((sequence__ref (mk_sequence__ref (sequence__content us_rep3)))))
(define-fun sequence__ref_2__projection ((a sequence__ref)) us_rep3 (sequence__content
                                                                    a))

(declare-fun length (us_rep3) Int)

(declare-fun length__function_guard (Int us_rep3) Bool)

(define-fun last ((container us_rep3)) Int (+ 0 (length container)))

(declare-fun last__function_guard (Int us_rep3) Bool)

(declare-fun model__ (us_rep1) us_rep3)

(declare-fun model____function_guard (us_rep3 us_rep1) Bool)

(define-fun last_index ((container us_rep1)) Int (last (model__ container)))

(declare-fun last_index__function_guard (Int us_rep1) Bool)

(declare-sort extended_index 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq10 (extended_index extended_index) Bool)

(declare-fun dummy12 () extended_index)

(declare-datatypes ()
((extended_index__ref
 (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref_3__projection ((a extended_index__ref)) extended_index 
  (extended_index__content a))

(define-fun dynamic_invariant2 ((temp___expr_358 Int)
  (temp___is_init_355 Bool) (temp___skip_constant_356 Bool)
  (temp___do_toplevel_357 Bool)) Bool (=>
                                      (or (= temp___is_init_355 true)
                                      (<= 0 2147483647)) (in_range9
                                      temp___expr_358)))

(declare-fun first_index__function_guard (Int us_rep1) Bool)

(define-fun dynamic_invariant3 ((temp___expr_343 Int)
  (temp___is_init_340 Bool) (temp___skip_constant_341 Bool)
  (temp___do_toplevel_342 Bool)) Bool (=>
                                      (or (= temp___is_init_340 true)
                                      (<= 1 2147483647)) (in_range6
                                      temp___expr_343)))

(declare-datatypes ()
((element_type__ref1
 (mk_element_type__ref1 (element_type__content1 us_rep2)))))
(define-fun element_type__ref_4__projection ((a element_type__ref1)) us_rep2 
  (element_type__content1 a))

(declare-fun get (us_rep3 Int) us_rep2)

(declare-fun get__function_guard (us_rep2 us_rep3 Int) Bool)

(define-fun element ((container us_rep1)
  (index Int)) us_rep2 (get (model__ container) index))

(declare-fun element__function_guard (us_rep2 us_rep1 Int) Bool)

(declare-fun valid_tables (us_split_fields us_split_fields2) Bool)

(declare-fun valid_tables__function_guard (Bool us_split_fields
  us_split_fields2) Bool)

(declare-sort us_main_type3 0)

(declare-fun us_main_eq3 (us_main_type3 us_main_type3) Bool)

(declare-sort us_rep4 0)

(declare-fun bool_eq9 (us_rep4 us_rep4) Bool)

(declare-fun user_eq11 (us_rep4 us_rep4) Bool)

(declare-fun value__size6 () Int)

(declare-fun object__size6 (us_rep4) Int)

(declare-fun value__alignment6 () Int)

(declare-fun object__alignment6 (us_rep4) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a us_rep4)) (<= 0 (object__size6 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a us_rep4)) (<= 0 (object__alignment6 a))))

(declare-fun dummy13 () us_rep4)

(declare-datatypes ()
((sequence__ref1 (mk_sequence__ref1 (sequence__content1 us_rep4)))))
(define-fun sequence__ref___projection ((a sequence__ref1)) us_rep4 (sequence__content1
                                                                    a))

(declare-fun length1 (us_rep4) Int)

(declare-fun length__function_guard1 (Int us_rep4) Bool)

(define-fun last1 ((container us_rep4)) Int (+ (- 1) (length1 container)))

(declare-fun last__function_guard1 (Int us_rep4) Bool)

(declare-fun model__1 (us_rep) us_rep4)

(declare-fun model____function_guard1 (us_rep4 us_rep) Bool)

(define-fun last_index1 ((container us_rep)) Int (last1 (model__1 container)))

(declare-fun last_index__function_guard1 (Int us_rep) Bool)

;; valid_tables__post_axiom
  (assert true)

;; valid_tables__def_axiom
  (assert
  (forall ((names__char_table__fields us_split_fields))
  (forall ((names__entry_table__fields us_split_fields2))
  (! (=> (valid_tables__function_guard
     (valid_tables names__char_table__fields names__entry_table__fields)
     names__char_table__fields names__entry_table__fields)
     (=
     (= (valid_tables names__char_table__fields names__entry_table__fields) true)
     (and
     (<= (last_index
         (mk___rep1 entry_table__split_discrs names__entry_table__fields)) 2147483647)
     (<= (last_index1
         (mk___rep char_table__split_discrs names__char_table__fields)) 2147483646)))) :pattern (
  (valid_tables names__char_table__fields names__entry_table__fields)) ))))

(declare-fun valid_entry (us_rep2 us_split_fields us_split_fields2) Bool)

(declare-fun valid_entry__function_guard (Bool us_rep2 us_split_fields
  us_split_fields2) Bool)

;; valid_entry__post_axiom
  (assert
  (forall ((e us_rep2))
  (forall ((names__char_table__fields us_split_fields))
  (forall ((names__entry_table__fields us_split_fields2))
  (! (valid_tables__function_guard
  (valid_tables names__char_table__fields names__entry_table__fields)
  names__char_table__fields
  names__entry_table__fields) :pattern ((valid_entry e
                                        names__char_table__fields
                                        names__entry_table__fields)) )))))

;; valid_entry__def_axiom
  (assert
  (forall ((e us_rep2))
  (forall ((names__char_table__fields us_split_fields))
  (forall ((names__entry_table__fields us_split_fields2))
  (! (=> (valid_entry__function_guard
     (valid_entry e names__char_table__fields names__entry_table__fields) e
     names__char_table__fields names__entry_table__fields)
     (=
     (= (valid_entry e names__char_table__fields names__entry_table__fields) true)
     (and
     (<= (to_rep3
         (rec__names__data__name_entry__next_hash (us_split_fields5 e))) 
     (last_index
     (mk___rep1 entry_table__split_discrs names__entry_table__fields)))
     (<= (- (to_rep2
            (rec__names__data__name_entry__length (us_split_fields5 e))) 1) (- 
     (last_index1
     (mk___rep char_table__split_discrs names__char_table__fields)) (to_rep4
                                                                    (rec__names__data__name_entry__table_index
                                                                    (us_split_fields5
                                                                    e)))))))) :pattern (
  (valid_entry e names__char_table__fields names__entry_table__fields)) )))))

(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range7
                                     temp___expr_39)))

(define-fun dynamic_invariant5 ((temp___expr_180 Int)
  (temp___is_init_177 Bool) (temp___skip_constant_178 Bool)
  (temp___do_toplevel_179 Bool)) Bool (=>
                                      (or (= temp___is_init_177 true)
                                      (<= 0 2147483647)) (in_range1
                                      temp___expr_180)))

(declare-sort count_type 0)

(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq12 (count_type count_type) Bool)

(declare-fun dummy14 () count_type)

(declare-datatypes ()
((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type 
  (count_type__content a))

(define-fun dynamic_invariant6 ((temp___expr_142 Int)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (=>
                                      (or (= temp___is_init_139 true)
                                      (<= 0 2147483647)) (in_range10
                                      temp___expr_142)))

(define-fun dynamic_invariant7 ((temp___expr_274 Int)
  (temp___is_init_271 Bool) (temp___skip_constant_272 Bool)
  (temp___do_toplevel_273 Bool)) Bool (=>
                                      (or (= temp___is_init_271 true)
                                      (<= 0 2147483646)) (in_range8
                                      temp___expr_274)))

(declare-sort extended_index1 0)

(define-fun in_range11 ((x Int)) Bool (and (<= (- 1) x) (<= x 2147483647)))

(define-fun bool_eq11 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq13 (extended_index1 extended_index1) Bool)

(declare-fun dummy15 () extended_index1)

(declare-datatypes ()
((extended_index__ref1
 (mk_extended_index__ref1 (extended_index__content1 extended_index1)))))
(define-fun extended_index__ref___projection ((a extended_index__ref1)) extended_index1 
  (extended_index__content1 a))

(define-fun dynamic_invariant8 ((temp___expr_292 Int)
  (temp___is_init_289 Bool) (temp___skip_constant_290 Bool)
  (temp___do_toplevel_291 Bool)) Bool (=>
                                      (or (= temp___is_init_289 true)
                                      (<= (- 1) 2147483647)) (in_range11
                                      temp___expr_292)))

(define-fun dynamic_invariant9 ((temp___expr_298 Int)
  (temp___is_init_295 Bool) (temp___skip_constant_296 Bool)
  (temp___do_toplevel_297 Bool)) Bool (=>
                                      (or (= temp___is_init_295 true)
                                      (<= 0 2147483647)) (in_range2
                                      temp___expr_298)))

(define-fun capacity ((container us_rep)) Int (ite (= (of_int 0) true)
                                              (to_rep
                                              (rec__names__data__char_tables__vector__capacity
                                              (us_split_discrs1 container)))
                                              2147483647))

(declare-fun capacity__function_guard (Int us_rep) Bool)

(declare-fun length2 (us_rep) Int)

(declare-fun length__function_guard2 (Int us_rep) Bool)

;; length__post_axiom
  (assert
  (forall ((container us_rep))
  (! (let ((result (length2 container)))
     (and (<= result (capacity container)) (dynamic_invariant9 result true
     false true))) :pattern ((length2 container)) )))

(declare-fun get1 (us_rep4 Int) Int)

(declare-fun get__function_guard1 (Int us_rep4 Int) Bool)

(define-fun oeq ((left us_rep4)
  (right us_rep4)) Bool (and (= (length1 left) (length1 right)) (ite 
                                                                (forall
                                                                ((n Int))
                                                                (=>
                                                                (and (<= 0 n)
                                                                (<= n 
                                                                (last1 left)))
                                                                (= (get1 left
                                                                   n) 
                                                                (get1 right
                                                                n)))) true
                                                                false)))

(declare-fun oeq__function_guard (Bool us_rep4 us_rep4) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep4) (b us_rep4))
  (! (= (user_eq11 a b) (oeq a b)) :pattern ((user_eq11 a b)) )))

(define-fun default_initial_assumption2 ((temp___expr_328 us_rep4)
  (temp___skip_top_level_329 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_329 true))
                                         (= (length1 temp___expr_328) 0)))

;; model____post_axiom
  (assert
  (forall ((container us_rep))
  (! (= (length1 (model__1 container)) (length2 container)) :pattern (
  (model__1 container)) )))

;; is_empty__post_axiom
  (assert
  (forall ((container us_rep))
  (! (= (= (is_empty container) true) (= (length2 container) 0)) :pattern (
  (is_empty container)) )))

(declare-sort extended_index2 0)

(define-fun in_range12 ((x Int)) Bool (and (<= (- 1) x) (<= x 2147483646)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq14 (extended_index2 extended_index2) Bool)

(declare-fun dummy16 () extended_index2)

(declare-datatypes ()
((extended_index__ref2
 (mk_extended_index__ref2 (extended_index__content2 extended_index2)))))
(define-fun extended_index__ref_2__projection ((a extended_index__ref2)) extended_index2 
  (extended_index__content2 a))

(define-fun dynamic_invariant10 ((temp___expr_321 Int)
  (temp___is_init_318 Bool) (temp___skip_constant_319 Bool)
  (temp___do_toplevel_320 Bool)) Bool (=>
                                      (or (= temp___is_init_318 true)
                                      (<= (- 1) 2147483646)) (in_range12
                                      temp___expr_321)))

;; length__post_axiom
  (assert
  (forall ((container us_rep4))
  (! (let ((result (length1 container)))
     (and (<= (+ (- 1) result) 2147483646) (dynamic_invariant6 result true
     false true))) :pattern ((length1 container)) )))

(declare-sort element_type 0)

(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq13 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq15 (element_type element_type) Bool)

(declare-fun dummy17 () element_type)

(declare-datatypes ()
((element_type__ref2
 (mk_element_type__ref2 (element_type__content2 element_type)))))
(define-fun element_type__ref_2__projection ((a element_type__ref2)) element_type 
  (element_type__content2 a))

(define-fun dynamic_invariant11 ((temp___expr_315 Int)
  (temp___is_init_312 Bool) (temp___skip_constant_313 Bool)
  (temp___do_toplevel_314 Bool)) Bool (=>
                                      (or (= temp___is_init_312 true)
                                      (<= 0 255)) (in_range13
                                      temp___expr_315)))

;; get__post_axiom
  (assert
  (forall ((container us_rep4))
  (forall ((position Int))
  (! (=>
     (and (dynamic_invariant10 position true true true)
     (and (<= 0 position) (<= position (last1 container))))
     (dynamic_invariant11 (get1 container position) true false true)) :pattern (
  (get1 container position)) ))))

(define-fun dynamic_invariant12 ((temp___expr_364 Int)
  (temp___is_init_361 Bool) (temp___skip_constant_362 Bool)
  (temp___do_toplevel_363 Bool)) Bool (=>
                                      (or (= temp___is_init_361 true)
                                      (<= 0 2147483647)) (in_range4
                                      temp___expr_364)))

(define-fun capacity1 ((container us_rep1)) Int (ite (= (of_int 0) true)
                                                (to_rep1
                                                (rec__names__data__entry_tables__vector__capacity
                                                (us_split_discrs3 container)))
                                                2147483647))

(declare-fun capacity__function_guard1 (Int us_rep1) Bool)

(declare-fun length3 (us_rep1) Int)

(declare-fun length__function_guard3 (Int us_rep1) Bool)

;; length__post_axiom
  (assert
  (forall ((container us_rep1))
  (! (let ((result (length3 container)))
     (and (<= result (capacity1 container)) (dynamic_invariant12 result true
     false true))) :pattern ((length3 container)) )))

(define-fun oeq1 ((left us_rep3)
  (right us_rep3)) Bool (and (= (length left) (length right)) (ite (forall
                                                                   ((n Int))
                                                                   (=>
                                                                   (and
                                                                   (<= 1 n)
                                                                   (<= n 
                                                                   (last
                                                                   left)))
                                                                   (= 
                                                                   (bool_eq6
                                                                   (get left
                                                                   n)
                                                                   (get right
                                                                   n)) true)))
                                                              true false)))

(declare-fun oeq__function_guard1 (Bool us_rep3 us_rep3) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep3) (b us_rep3))
  (! (= (user_eq9 a b) (oeq1 a b)) :pattern ((user_eq9 a b)) )))

(define-fun default_initial_assumption3 ((temp___expr_397 us_rep3)
  (temp___skip_top_level_398 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_398 true))
                                         (= (length temp___expr_397) 0)))

;; model____post_axiom
  (assert
  (forall ((container us_rep1))
  (! (= (length (model__ container)) (length3 container)) :pattern ((model__
                                                                    container)) )))

;; is_empty__post_axiom
  (assert
  (forall ((container us_rep1))
  (! (= (= (is_empty1 container) true) (= (length3 container) 0)) :pattern (
  (is_empty1 container)) )))

(declare-sort extended_index3 0)

(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq14 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq16 (extended_index3 extended_index3) Bool)

(declare-fun dummy18 () extended_index3)

(declare-datatypes ()
((extended_index__ref3
 (mk_extended_index__ref3 (extended_index__content3 extended_index3)))))
(define-fun extended_index__ref_4__projection ((a extended_index__ref3)) extended_index3 
  (extended_index__content3 a))

(define-fun dynamic_invariant13 ((temp___expr_390 Int)
  (temp___is_init_387 Bool) (temp___skip_constant_388 Bool)
  (temp___do_toplevel_389 Bool)) Bool (=>
                                      (or (= temp___is_init_387 true)
                                      (<= 0 2147483647)) (in_range14
                                      temp___expr_390)))

;; length__post_axiom
  (assert
  (forall ((container us_rep3))
  (! (let ((result (length container)))
     (and (<= (+ 0 result) 2147483647) (dynamic_invariant6 result true false
     true))) :pattern ((length container)) )))

;; get__post_axiom
  (assert true)

(declare-fun char_table__split_fields () us_main_type)

(declare-fun entry_table__split_fields () us_main_type1)

(declare-fun i () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Bool)

(declare-fun o3 () Bool)

(declare-fun result () Bool)

;; H
  (assert
  (= 1024 (to_rep
          (rec__names__data__char_tables__vector__capacity
          char_table__split_discrs))))

;; H
  (assert
  (= 256 (to_rep1
         (rec__names__data__entry_tables__vector__capacity
         entry_table__split_discrs))))

;; H
  (assert (valid_tables__function_guard
  (valid_tables (mk___split_fields char_table__split_fields)
  (mk___split_fields1 entry_table__split_fields))
  (mk___split_fields char_table__split_fields)
  (mk___split_fields1 entry_table__split_fields)))

;; H
  (assert
  (= (valid_tables (mk___split_fields char_table__split_fields)
     (mk___split_fields1 entry_table__split_fields)) true))

;; H
  (assert
  (and
  (= o1 (last
        (model__
        (mk___rep1 entry_table__split_discrs
        (mk___split_fields1 entry_table__split_fields)))))
  (and (in_range9 o1)
  (= o1 (last
        (model__
        (mk___rep1 entry_table__split_discrs
        (mk___split_fields1 entry_table__split_fields))))))))

;; H
  (assert (= o2 (ite (<= i o1) true false)))

;; H
  (assert (and (= o 1) (and (in_range6 o) (= o 1))))

;; H
  (assert (= o3 (ite (<= o i) true false)))

;; H
  (assert (= result (ite (= o3 true) o2 false)))

;; H
  (assert (= result true))

(assert
;; WP_parameter_def
 ;; File "names.adb", line 64, characters 0-0
  (not (in_range6 i)))
(check-sat)
