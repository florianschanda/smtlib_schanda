;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 8)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 256)) (= (bv2nat ((_ int2bv 8) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvlshr x n) (lsr x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvashr x n) (asr x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvshl x n) (lsl x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_left1 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_right1 v (bv2nat n)))))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (nth x (bv2nat i)) (nth_bv x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 8)) (i Int))
  (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i)))
  (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun to_int2 ((_ BitVec 16)) Int)

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 65536)) (= (bv2nat ((_ int2bv 16) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvlshr x n) (lsr1 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvashr x n) (asr1 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvshl x n) (lsl1 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_left2 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_right2 v (bv2nat n)))))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (nth1 x (bv2nat i)) (nth_bv1 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 16)) (i Int))
  (=> (and (<= 0 i) (< i 65536))
  (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i)))
  (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))

(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(define-fun to_int3 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort tdigit_count_typeB 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-fun dummy () tdigit_count_typeB)

(declare-datatypes ()
((tdigit_count_typeB__ref
 (mk_tdigit_count_typeB__ref
 (tdigit_count_typeB__content tdigit_count_typeB)))))
(define-fun tdigit_count_typeB__ref___projection ((a tdigit_count_typeB__ref)) tdigit_count_typeB 
  (tdigit_count_typeB__content a))

(declare-sort digit_index_type 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 65536)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (digit_index_type digit_index_type) Bool)

(declare-fun dummy1 () digit_index_type)

(declare-datatypes ()
((digit_index_type__ref
 (mk_digit_index_type__ref (digit_index_type__content digit_index_type)))))
(define-fun digit_index_type__ref___projection ((a digit_index_type__ref)) digit_index_type 
  (digit_index_type__content a))

(define-fun dynamic_invariant ((temp___expr_204 Int)
  (temp___is_init_201 Bool) (temp___skip_constant_202 Bool)
  (temp___do_toplevel_203 Bool)) Bool (=>
                                      (or (= temp___is_init_201 true)
                                      (<= 1 65536)) (in_range2
                                      temp___expr_204)))

(declare-fun to_rep (digit_index_type) Int)

(declare-fun of_rep (Int) digit_index_type)

;; inversion_axiom
  (assert
  (forall ((x digit_index_type))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x digit_index_type)) (! (in_range2
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort octet 0)

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 8))

(define-fun bool_eq2 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))

(declare-fun user_eq2 (octet octet) Bool)

(declare-fun dummy2 () octet)

(declare-datatypes () ((octet__ref (mk_octet__ref (octet__content octet)))))
(define-fun octet__ref___projection ((a octet__ref)) octet (octet__content a))

(declare-fun to_rep1 (octet) (_ BitVec 8))

(declare-fun of_rep1 ((_ BitVec 8)) octet)

;; inversion_axiom
  (assert
  (forall ((x octet))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))) )))

(define-fun to_int4 ((x octet)) Int (bv2nat (to_rep1 x)))

;; range_int_axiom
  (assert
  (forall ((x octet)) (! (uint_in_range
  (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int octet))))))
(declare-fun slide ((Array Int octet) Int Int) (Array Int octet))

;; slide_eq
  (assert
  (forall ((a (Array Int octet)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int octet)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int octet) Int Int (Array Int octet) Int
  Int) (Array Int octet))

;; concat_def
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (octet Int) (Array Int octet))

;; singleton_def
  (assert
  (forall ((v octet))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int octet)) (a__first Int) (a__last Int)
  (b (Array Int octet)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int octet) Int Int (Array Int octet) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (bvult (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (bvugt (to_rep1 (select a (+ j 1))) (to_rep1 (select b (+ i 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep2 (tdigit_count_typeB) Int)

(declare-fun of_rep2 (Int) tdigit_count_typeB)

;; inversion_axiom
  (assert
  (forall ((x tdigit_count_typeB))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x tdigit_count_typeB)) (! (in_range1
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-fun last () Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq4 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-fun dummy3 () tdigit_count_typeB)

(declare-datatypes ()
((t17s__ref (mk_t17s__ref (t17s__content tdigit_count_typeB)))))
(define-fun t17s__ref___projection ((a t17s__ref)) tdigit_count_typeB 
  (t17s__content a))

(declare-sort t 0)

(declare-fun first (t) tdigit_count_typeB)

(declare-fun last1 (t) tdigit_count_typeB)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last1 (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property range_first range_last low)
                   (dynamic_property range_first range_last high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int octet))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int octet) (elts a))

(define-fun of_array ((a (Array Int octet)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))

(define-fun last2 ((a us_t)) Int (to_rep2 (last1 (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last2 a))
                                  (+ (- (last2 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int octet)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int octet)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment a))))

(define-fun bool_eq5 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep2 (first (rt x)))
                 (to_rep2 (last1 (rt x))) (elts y) (to_rep2 (first (rt y)))
                 (to_rep2 (last1 (rt y)))))

(declare-fun user_eq4 (us_t us_t) Bool)

(declare-fun dummy4 () us_t)

(declare-datatypes () ((t18s__ref (mk_t18s__ref (t18s__content us_t)))))
(define-fun t18s__ref___projection ((a t18s__ref)) us_t (t18s__content a))

(declare-datatypes ()
((us_split_discrs
 (mk___split_discrs (rec__very_longs__very_long__length digit_index_type)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) digit_index_type 
  (rec__very_longs__very_long__length a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields (rec__very_longs__very_long__long_digits us_t)))))
(define-fun us_split_fields_Long_Digits__projection ((a us_split_fields)) us_t 
  (rec__very_longs__very_long__long_digits a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep_2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(define-fun bool_eq6 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep
                           (rec__very_longs__very_long__length
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__very_longs__very_long__length
                                                  (us_split_discrs1 b))))
                        (= (bool_eq5
                           (rec__very_longs__very_long__long_digits
                           (us_split_fields1 a))
                           (rec__very_longs__very_long__long_digits
                           (us_split_fields1 b))) true))
                   true false))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun very_longs__very_long__length__first__bit () Int)

(declare-fun very_longs__very_long__length__last__bit () Int)

(declare-fun very_longs__very_long__length__position () Int)

;; very_longs__very_long__length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__length__first__bit))

;; very_longs__very_long__length__last__bit_axiom
  (assert
  (< very_longs__very_long__length__first__bit very_longs__very_long__length__last__bit))

;; very_longs__very_long__length__position_axiom
  (assert (<= 0 very_longs__very_long__length__position))

(declare-fun very_longs__very_long__long_digits__first__bit () Int)

(declare-fun very_longs__very_long__long_digits__last__bit () Int)

(declare-fun very_longs__very_long__long_digits__position () Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit very_longs__very_long__long_digits__last__bit))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position))

(declare-fun dummy5 () us_rep)

(declare-datatypes ()
((very_long__ref (mk_very_long__ref (very_long__content us_rep)))))
(define-fun very_long__ref___projection ((a very_long__ref)) us_rep (very_long__content
                                                                    a))

(define-fun dynamic_invariant1 ((temp___expr_221 us_rep)
  (temp___is_init_218 Bool) (temp___skip_constant_219 Bool)
  (temp___do_toplevel_220 Bool)) Bool (let ((temp___222 (rec__very_longs__very_long__length
                                                        (us_split_discrs1
                                                        temp___expr_221))))
                                      (and (dynamic_property1 1
                                      (to_rep temp___222)
                                      (first1
                                      (rec__very_longs__very_long__long_digits
                                      (us_split_fields1 temp___expr_221)))
                                      (last2
                                      (rec__very_longs__very_long__long_digits
                                      (us_split_fields1 temp___expr_221))))
                                      (and
                                      (= (first1
                                         (rec__very_longs__very_long__long_digits
                                         (us_split_fields1 temp___expr_221))) 1)
                                      (= (last2
                                         (rec__very_longs__very_long__long_digits
                                         (us_split_fields1 temp___expr_221))) 
                                      (to_rep temp___222))))))

(declare-fun number_of_digits (us_rep) Int)

(declare-fun number_of_digits__function_guard (Int us_rep) Bool)

(declare-fun number_of_digits1 (us_rep) Int)

(declare-fun number_of_digits__function_guard1 (Int us_rep) Bool)

(declare-sort digit_count_type 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 65536)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (digit_count_type digit_count_type) Bool)

(declare-fun dummy6 () digit_count_type)

(declare-datatypes ()
((digit_count_type__ref
 (mk_digit_count_type__ref (digit_count_type__content digit_count_type)))))
(define-fun digit_count_type__ref___projection ((a digit_count_type__ref)) digit_count_type 
  (digit_count_type__content a))

(define-fun dynamic_invariant2 ((temp___expr_198 Int)
  (temp___is_init_195 Bool) (temp___skip_constant_196 Bool)
  (temp___do_toplevel_197 Bool)) Bool (=>
                                      (or (= temp___is_init_195 true)
                                      (<= 0 65536)) (in_range3
                                      temp___expr_198)))

;; number_of_digits__post_axiom
  (assert
  (forall ((number us_rep))
  (! (=> (dynamic_invariant1 number true true true)
     (let ((result (number_of_digits number)))
     (=> (number_of_digits__function_guard result number) (dynamic_invariant2
     result true false true)))) :pattern ((number_of_digits number)) )))

;; number_of_digits__post_refine_axiom
  (assert
  (forall ((number us_rep))
  (! (=> (dynamic_invariant1 number true true true)
     (let ((result (number_of_digits1 number)))
     (=> (number_of_digits__function_guard1 result number)
     (and
     (and
     (=> (< 0 result)
     (not
     (= (to_rep1
        (let ((temp___273 (rec__very_longs__very_long__long_digits
                          (us_split_fields1 number))))
        (select (to_array temp___273) result))) ((_ int2bv 8) 0))))
     (forall ((i Int))
     (=>
     (and (<= (+ result 1) i)
     (<= i (last2
           (rec__very_longs__very_long__long_digits
           (us_split_fields1 number)))))
     (= (to_rep1
        (let ((temp___274 (rec__very_longs__very_long__long_digits
                          (us_split_fields1 number))))
        (select (to_array temp___274) i))) ((_ int2bv 8) 0)))))
     (dynamic_invariant2 result true false true))))) :pattern ((number_of_digits1
                                                               number)) )))

(declare-fun dividend () us_rep)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun divisor () us_rep)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun quotient__split_discrs () us_split_discrs)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun remainder__split_discrs () us_split_discrs)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-sort double_octet 0)

(declare-fun attr__ATTRIBUTE_MODULUS1 () (_ BitVec 16))

(define-fun bool_eq8 ((x (_ BitVec 16))
  (y (_ BitVec 16))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 16))

(declare-fun user_eq7 (double_octet double_octet) Bool)

(declare-fun dummy7 () double_octet)

(declare-datatypes ()
((double_octet__ref
 (mk_double_octet__ref (double_octet__content double_octet)))))
(define-fun double_octet__ref___projection ((a double_octet__ref)) double_octet 
  (double_octet__content a))

(define-fun dynamic_invariant3 ((temp___expr_313 (_ BitVec 16))
  (temp___is_init_310 Bool) (temp___skip_constant_311 Bool)
  (temp___do_toplevel_312 Bool)) Bool true)

(declare-fun last3 () Int)

(define-fun dynamic_property2 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-fun dummy8 () tdigit_count_typeB)

(declare-datatypes ()
((divisor_digits_count_type__ref
 (mk_divisor_digits_count_type__ref
 (divisor_digits_count_type__content tdigit_count_typeB)))))
(define-fun divisor_digits_count_type__ref___projection ((a divisor_digits_count_type__ref)) tdigit_count_typeB 
  (divisor_digits_count_type__content a))

(define-fun dynamic_invariant4 ((temp___expr_691 Int)
  (temp___is_init_688 Bool) (temp___skip_constant_689 Bool)
  (temp___do_toplevel_690 Bool)) Bool (=>
                                      (or (= temp___is_init_688 true)
                                      (<= 1 last3)) (dynamic_property2 1
                                      last3 temp___expr_691)))

;; last__def_axiom
  (assert
  (= last3 (to_rep
           (rec__very_longs__very_long__length (us_split_discrs1 divisor)))))

(declare-fun first2 () Int)

(declare-fun last4 () Int)

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-fun dummy9 () tdigit_count_typeB)

(declare-datatypes ()
((quotient_digits_count_type__ref
 (mk_quotient_digits_count_type__ref
 (quotient_digits_count_type__content tdigit_count_typeB)))))
(define-fun quotient_digits_count_type__ref___projection ((a quotient_digits_count_type__ref)) tdigit_count_typeB 
  (quotient_digits_count_type__content a))

(define-fun dynamic_invariant5 ((temp___expr_697 Int)
  (temp___is_init_694 Bool) (temp___skip_constant_695 Bool)
  (temp___do_toplevel_696 Bool)) Bool (=>
                                      (or (= temp___is_init_694 true)
                                      (<= first2 last4)) (dynamic_property3
                                      first2 last4 temp___expr_697)))

;; first__def_axiom
  (assert
  (= first2 (to_rep
            (rec__very_longs__very_long__length (us_split_discrs1 divisor)))))

;; last__def_axiom
  (assert
  (= last4 (- (* 2 (to_rep
                   (rec__very_longs__very_long__length
                   (us_split_discrs1 divisor)))) 1)))

(declare-sort shift_type 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 7)))

(define-fun bool_eq11 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq10 (shift_type shift_type) Bool)

(declare-fun dummy10 () shift_type)

(declare-datatypes ()
((shift_type__ref (mk_shift_type__ref (shift_type__content shift_type)))))
(define-fun shift_type__ref___projection ((a shift_type__ref)) shift_type 
  (shift_type__content a))

(define-fun dynamic_invariant6 ((temp___expr_703 Int)
  (temp___is_init_700 Bool) (temp___skip_constant_701 Bool)
  (temp___do_toplevel_702 Bool)) Bool (=>
                                      (or (= temp___is_init_700 true)
                                      (<= 0 7)) (in_range4 temp___expr_703)))

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun last5 () Int)

(define-fun dynamic_property4 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq11 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-fun dummy11 () tdigit_count_typeB)

(declare-datatypes ()
((tT108bP1__ref (mk_tT108bP1__ref (tT108bP1__content tdigit_count_typeB)))))
(define-fun tT108bP1__ref___projection ((a tT108bP1__ref)) tdigit_count_typeB 
  (tT108bP1__content a))

(declare-sort t1 0)

(declare-fun first3 (t1) tdigit_count_typeB)

(declare-fun last6 (t1) tdigit_count_typeB)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep2 (first3 (mk1 f l))) f)
     (= (to_rep2 (last6 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property4 range_first range_last low)
                   (dynamic_property4 range_first range_last high))))))

(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int octet))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int octet) (elts1 a))

(define-fun of_array1 ((a (Array Int octet)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first4 ((a us_t1)) Int (to_rep2 (first3 (rt1 a))))

(define-fun last7 ((a us_t1)) Int (to_rep2 (last6 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first4 a) (last7 a))
                                    (+ (- (last7 a) (first4 a)) 1) 0))

(declare-fun value__size2 () Int)

(declare-fun object__size2 ((Array Int octet)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int octet)) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment2 a))))

(define-fun bool_eq13 ((x us_t1)
  (y us_t1)) Bool (bool_eq3 (elts1 x) (to_rep2 (first3 (rt1 x)))
                  (to_rep2 (last6 (rt1 x))) (elts1 y)
                  (to_rep2 (first3 (rt1 y))) (to_rep2 (last6 (rt1 y)))))

(declare-fun user_eq12 (us_t1 us_t1) Bool)

(declare-fun dummy12 () us_t1)

(declare-datatypes () ((t108b__ref (mk_t108b__ref (t108b__content us_t1)))))
(define-fun t108b__ref___projection ((a t108b__ref)) us_t1 (t108b__content a))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1 (rec__very_longs__very_long__long_digits1 us_t1)))))
(define-fun us_split_fields_Long_Digits30__projection ((a us_split_fields2)) us_t1 
  (rec__very_longs__very_long__long_digits1 a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_30__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1
 (mk___rep1
 (us_split_discrs2 us_split_discrs)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep_59__projection ((a us_rep1)) us_split_discrs (us_split_discrs2
                                                                a))

(define-fun us_rep_60__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                 a))

(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a)
                                         (mk___split_fields
                                         (let ((temp___190 (rec__very_longs__very_long__long_digits1
                                                           (us_split_fields3
                                                           a))))
                                         (of_array (to_array1 temp___190)
                                         (first4 temp___190)
                                         (last7 temp___190))))))

(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r)
                                         (mk___split_fields1
                                         (let ((temp___189 (rec__very_longs__very_long__long_digits
                                                           (us_split_fields1
                                                           r))))
                                         (of_array1 (to_array temp___189)
                                         (first1 temp___189)
                                         (last2 temp___189))))))

(define-fun bool_eq14 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep
                            (rec__very_longs__very_long__length
                            (us_split_discrs2 a))) (to_rep
                                                   (rec__very_longs__very_long__length
                                                   (us_split_discrs2 b))))
                         (= (bool_eq13
                            (rec__very_longs__very_long__long_digits1
                            (us_split_fields3 a))
                            (rec__very_longs__very_long__long_digits1
                            (us_split_fields3 b))) true))
                    true false))

(declare-fun user_eq13 (us_rep1 us_rep1) Bool)

(define-fun in_range5 ((rec__very_longs__very_long__length1 Int)
  (a us_rep)) Bool (= rec__very_longs__very_long__length1 (to_rep
                                                          (rec__very_longs__very_long__length
                                                          (us_split_discrs1
                                                          a)))))

(declare-fun value__size3 () Int)

(declare-fun object__size3 (us_rep1) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))

(declare-fun very_longs__very_long__length__first__bit1 () Int)

(declare-fun very_longs__very_long__length__last__bit1 () Int)

(declare-fun very_longs__very_long__length__position1 () Int)

;; very_longs__very_long__length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__length__first__bit1))

;; very_longs__very_long__length__last__bit_axiom
  (assert
  (< very_longs__very_long__length__first__bit1 very_longs__very_long__length__last__bit1))

;; very_longs__very_long__length__position_axiom
  (assert (<= 0 very_longs__very_long__length__position1))

(declare-fun very_longs__very_long__long_digits__first__bit1 () Int)

(declare-fun very_longs__very_long__long_digits__last__bit1 () Int)

(declare-fun very_longs__very_long__long_digits__position1 () Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit1))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit1 very_longs__very_long__long_digits__last__bit1))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position1))

(declare-fun dummy13 () us_rep1)

(declare-datatypes () ((tuS__ref (mk_tuS__ref (tuS__content us_rep1)))))
(define-fun tuS__ref___projection ((a tuS__ref)) us_rep1 (tuS__content a))

(define-fun dynamic_invariant7 ((temp___expr_709 us_rep1)
  (temp___is_init_706 Bool) (temp___skip_constant_707 Bool)
  (temp___do_toplevel_708 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_707 true))
                                      (in_range5
                                      (+ (to_rep
                                         (rec__very_longs__very_long__length
                                         (us_split_discrs1 dividend))) 1)
                                      (to_base temp___expr_709)))
                                      (and (dynamic_property5 1
                                      (+ (to_rep
                                         (rec__very_longs__very_long__length
                                         (us_split_discrs1 dividend))) 1)
                                      (first4
                                      (rec__very_longs__very_long__long_digits1
                                      (us_split_fields3 temp___expr_709)))
                                      (last7
                                      (rec__very_longs__very_long__long_digits1
                                      (us_split_fields3 temp___expr_709))))
                                      (and
                                      (= (first4
                                         (rec__very_longs__very_long__long_digits1
                                         (us_split_fields3 temp___expr_709))) 1)
                                      (= (last7
                                         (rec__very_longs__very_long__long_digits1
                                         (us_split_fields3 temp___expr_709))) (+ 
                                      (to_rep
                                      (rec__very_longs__very_long__length
                                      (us_split_discrs1 dividend))) 1))))))

(define-fun default_initial_assumption ((temp___expr_712 us_rep1)
  (temp___skip_top_level_713 Bool)) Bool (= (to_rep
                                            (rec__very_longs__very_long__length
                                            (us_split_discrs2
                                            temp___expr_712))) (+ (to_rep
                                                                  (rec__very_longs__very_long__length
                                                                  (us_split_discrs1
                                                                  dividend))) 1)))

(declare-fun u__split_discrs () us_split_discrs)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun last8 () Int)

(define-fun dynamic_property6 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq15 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq14 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-fun dummy14 () tdigit_count_typeB)

(declare-datatypes ()
((tT109bP1__ref (mk_tT109bP1__ref (tT109bP1__content tdigit_count_typeB)))))
(define-fun tT109bP1__ref___projection ((a tT109bP1__ref)) tdigit_count_typeB 
  (tT109bP1__content a))

(declare-sort t2 0)

(declare-fun first5 (t2) tdigit_count_typeB)

(declare-fun last9 (t2) tdigit_count_typeB)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep2 (first5 (mk2 f l))) f)
     (= (to_rep2 (last9 (mk2 f l))) l)))) :pattern ((mk2 f l)) )))

(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property6 range_first range_last low)
                   (dynamic_property6 range_first range_last high))))))

(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int octet))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int octet) (elts2 a))

(define-fun of_array2 ((a (Array Int octet)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first6 ((a us_t2)) Int (to_rep2 (first5 (rt2 a))))

(define-fun last10 ((a us_t2)) Int (to_rep2 (last9 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first6 a) (last10 a))
                                    (+ (- (last10 a) (first6 a)) 1) 0))

(declare-fun value__size4 () Int)

(declare-fun object__size4 ((Array Int octet)) Int)

(declare-fun value__component__size2 () Int)

(declare-fun object__component__size2 ((Array Int octet)) Int)

(declare-fun value__alignment4 () Int)

(declare-fun object__alignment4 ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size4 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment4 a))))

(define-fun bool_eq16 ((x us_t2)
  (y us_t2)) Bool (bool_eq3 (elts2 x) (to_rep2 (first5 (rt2 x)))
                  (to_rep2 (last9 (rt2 x))) (elts2 y)
                  (to_rep2 (first5 (rt2 y))) (to_rep2 (last9 (rt2 y)))))

(declare-fun user_eq15 (us_t2 us_t2) Bool)

(declare-fun dummy15 () us_t2)

(declare-datatypes () ((t109b__ref (mk_t109b__ref (t109b__content us_t2)))))
(define-fun t109b__ref___projection ((a t109b__ref)) us_t2 (t109b__content a))

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2 (rec__very_longs__very_long__long_digits2 us_t2)))))
(define-fun us_split_fields_Long_Digits31__projection ((a us_split_fields4)) us_t2 
  (rec__very_longs__very_long__long_digits2 a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref_31__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2
 (mk___rep2
 (us_split_discrs3 us_split_discrs)(us_split_fields5 us_split_fields4)))))
(define-fun us_rep_61__projection ((a us_rep2)) us_split_discrs (us_split_discrs3
                                                                a))

(define-fun us_rep_62__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                 a))

(define-fun to_base1 ((a us_rep2)) us_rep (mk___rep (us_split_discrs3 a)
                                          (mk___split_fields
                                          (let ((temp___192 (rec__very_longs__very_long__long_digits2
                                                            (us_split_fields5
                                                            a))))
                                          (of_array (to_array2 temp___192)
                                          (first6 temp___192)
                                          (last10 temp___192))))))

(define-fun of_base1 ((r us_rep)) us_rep2 (mk___rep2 (us_split_discrs1 r)
                                          (mk___split_fields2
                                          (let ((temp___191 (rec__very_longs__very_long__long_digits
                                                            (us_split_fields1
                                                            r))))
                                          (of_array2 (to_array temp___191)
                                          (first1 temp___191)
                                          (last2 temp___191))))))

(define-fun bool_eq17 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (to_rep
                            (rec__very_longs__very_long__length
                            (us_split_discrs3 a))) (to_rep
                                                   (rec__very_longs__very_long__length
                                                   (us_split_discrs3 b))))
                         (= (bool_eq16
                            (rec__very_longs__very_long__long_digits2
                            (us_split_fields5 a))
                            (rec__very_longs__very_long__long_digits2
                            (us_split_fields5 b))) true))
                    true false))

(declare-fun user_eq16 (us_rep2 us_rep2) Bool)

(define-fun in_range6 ((rec__very_longs__very_long__length1 Int)
  (a us_rep)) Bool (= rec__very_longs__very_long__length1 (to_rep
                                                          (rec__very_longs__very_long__length
                                                          (us_split_discrs1
                                                          a)))))

(declare-fun value__size5 () Int)

(declare-fun object__size5 (us_rep2) Int)

(declare-fun value__alignment5 () Int)

(declare-fun object__alignment5 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))

(declare-fun very_longs__very_long__length__first__bit2 () Int)

(declare-fun very_longs__very_long__length__last__bit2 () Int)

(declare-fun very_longs__very_long__length__position2 () Int)

;; very_longs__very_long__length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__length__first__bit2))

;; very_longs__very_long__length__last__bit_axiom
  (assert
  (< very_longs__very_long__length__first__bit2 very_longs__very_long__length__last__bit2))

;; very_longs__very_long__length__position_axiom
  (assert (<= 0 very_longs__very_long__length__position2))

(declare-fun very_longs__very_long__long_digits__first__bit2 () Int)

(declare-fun very_longs__very_long__long_digits__last__bit2 () Int)

(declare-fun very_longs__very_long__long_digits__position2 () Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit2))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit2 very_longs__very_long__long_digits__last__bit2))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position2))

(declare-fun dummy16 () us_rep2)

(declare-datatypes () ((tvS__ref (mk_tvS__ref (tvS__content us_rep2)))))
(define-fun tvS__ref___projection ((a tvS__ref)) us_rep2 (tvS__content a))

(define-fun dynamic_invariant8 ((temp___expr_721 us_rep2)
  (temp___is_init_718 Bool) (temp___skip_constant_719 Bool)
  (temp___do_toplevel_720 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_719 true))
                                      (in_range6
                                      (to_rep
                                      (rec__very_longs__very_long__length
                                      (us_split_discrs1 divisor)))
                                      (to_base1 temp___expr_721)))
                                      (and (dynamic_property7 1
                                      (to_rep
                                      (rec__very_longs__very_long__length
                                      (us_split_discrs1 divisor)))
                                      (first6
                                      (rec__very_longs__very_long__long_digits2
                                      (us_split_fields5 temp___expr_721)))
                                      (last10
                                      (rec__very_longs__very_long__long_digits2
                                      (us_split_fields5 temp___expr_721))))
                                      (and
                                      (= (first6
                                         (rec__very_longs__very_long__long_digits2
                                         (us_split_fields5 temp___expr_721))) 1)
                                      (= (last10
                                         (rec__very_longs__very_long__long_digits2
                                         (us_split_fields5 temp___expr_721))) 
                                      (to_rep
                                      (rec__very_longs__very_long__length
                                      (us_split_discrs1 divisor))))))))

(define-fun default_initial_assumption1 ((temp___expr_724 us_rep2)
  (temp___skip_top_level_725 Bool)) Bool (= (to_rep
                                            (rec__very_longs__very_long__length
                                            (us_split_discrs3
                                            temp___expr_724))) (to_rep
                                                               (rec__very_longs__very_long__length
                                                               (us_split_discrs1
                                                               divisor)))))

(declare-fun v__split_discrs () us_split_discrs)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(define-fun dynamic_invariant9 ((temp___expr_210 (_ BitVec 8))
  (temp___is_init_207 Bool) (temp___skip_constant_208 Bool)
  (temp___do_toplevel_209 Bool)) Bool true)

(declare-fun get_shift_distance ((_ BitVec 8)) Int)

(declare-fun get_shift_distance__function_guard (Int (_ BitVec 8)) Bool)

;; get_shift_distance__post_axiom
  (assert
  (forall ((digit (_ BitVec 8)))
  (! (=>
     (and (dynamic_invariant9 digit true true true)
     (not (= digit ((_ int2bv 8) 0))))
     (let ((result (get_shift_distance digit)))
     (=> (get_shift_distance__function_guard result digit)
     (dynamic_invariant6 result true false true)))) :pattern ((get_shift_distance
                                                              digit)) )))

(declare-fun r130b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(declare-fun last11 () Int)

(define-fun dynamic_property8 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq18 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq17 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-fun dummy17 () tdigit_count_typeB)

(declare-datatypes ()
((tS129bP1__ref (mk_tS129bP1__ref (tS129bP1__content tdigit_count_typeB)))))
(define-fun tS129bP1__ref___projection ((a tS129bP1__ref)) tdigit_count_typeB 
  (tS129bP1__content a))

(declare-sort t3 0)

(declare-fun first7 (t3) tdigit_count_typeB)

(declare-fun last12 (t3) tdigit_count_typeB)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep2 (first7 (mk3 f l))) f)
     (= (to_rep2 (last12 (mk3 f l))) l)))) :pattern ((mk3 f l)) )))

(define-fun dynamic_property9 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property8 range_first range_last low)
                   (dynamic_property8 range_first range_last high))))))

(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int octet))(rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int octet) (elts3 a))

(define-fun of_array3 ((a (Array Int octet)) (f Int)
  (l Int)) us_t3 (mk___t3 a (mk3 f l)))

(define-fun first8 ((a us_t3)) Int (to_rep2 (first7 (rt3 a))))

(define-fun last13 ((a us_t3)) Int (to_rep2 (last12 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first8 a) (last13 a))
                                    (+ (- (last13 a) (first8 a)) 1) 0))

(declare-fun value__size6 () Int)

(declare-fun object__size6 ((Array Int octet)) Int)

(declare-fun value__component__size3 () Int)

(declare-fun object__component__size3 ((Array Int octet)) Int)

(declare-fun value__alignment6 () Int)

(declare-fun object__alignment6 ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size6 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment6 a))))

(define-fun bool_eq19 ((x us_t3)
  (y us_t3)) Bool (bool_eq3 (elts3 x) (to_rep2 (first7 (rt3 x)))
                  (to_rep2 (last12 (rt3 x))) (elts3 y)
                  (to_rep2 (first7 (rt3 y))) (to_rep2 (last12 (rt3 y)))))

(declare-fun user_eq18 (us_t3 us_t3) Bool)

(declare-fun dummy18 () us_t3)

(declare-datatypes () ((s129b__ref (mk_s129b__ref (s129b__content us_t3)))))
(define-fun s129b__ref___projection ((a s129b__ref)) us_t3 (s129b__content a))

(declare-fun last14 () Int)

(define-fun dynamic_property10 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq20 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)

(declare-fun user_eq19 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-fun dummy19 () tdigit_count_typeB)

(declare-datatypes ()
((t131b__ref (mk_t131b__ref (t131b__content tdigit_count_typeB)))))
(define-fun t131b__ref___projection ((a t131b__ref)) tdigit_count_typeB 
  (t131b__content a))

(declare-sort t4 0)

(declare-fun first9 (t4) tdigit_count_typeB)

(declare-fun last15 (t4) tdigit_count_typeB)

(declare-fun mk4 (Int Int) t4)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep2 (first9 (mk4 f l))) f)
     (= (to_rep2 (last15 (mk4 f l))) l)))) :pattern ((mk4 f l)) )))

(define-fun dynamic_property11 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property10 range_first range_last low)
                   (dynamic_property10 range_first range_last high))))))

(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int octet))(rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int octet) (elts4 a))

(define-fun of_array4 ((a (Array Int octet)) (f Int)
  (l Int)) us_t4 (mk___t4 a (mk4 f l)))

(define-fun first10 ((a us_t4)) Int (to_rep2 (first9 (rt4 a))))

(define-fun last16 ((a us_t4)) Int (to_rep2 (last15 (rt4 a))))

(define-fun length4 ((a us_t4)) Int (ite (<= (first10 a) (last16 a))
                                    (+ (- (last16 a) (first10 a)) 1) 0))

(declare-fun value__size7 () Int)

(declare-fun object__size7 ((Array Int octet)) Int)

(declare-fun value__component__size4 () Int)

(declare-fun object__component__size4 ((Array Int octet)) Int)

(declare-fun value__alignment7 () Int)

(declare-fun object__alignment7 ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size7 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size4))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment7))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment7 a))))

(define-fun bool_eq21 ((x us_t4)
  (y us_t4)) Bool (bool_eq3 (elts4 x) (to_rep2 (first9 (rt4 x)))
                  (to_rep2 (last15 (rt4 x))) (elts4 y)
                  (to_rep2 (first9 (rt4 y))) (to_rep2 (last15 (rt4 y)))))

(declare-fun user_eq20 (us_t4 us_t4) Bool)

(declare-fun dummy20 () us_t4)

(declare-datatypes () ((t132b__ref (mk_t132b__ref (t132b__content us_t4)))))
(define-fun t132b__ref___projection ((a t132b__ref)) us_t4 (t132b__content a))

(declare-fun r134b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS12 () Int)

(declare-fun last17 () Int)

(define-fun dynamic_property12 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq22 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)

(declare-fun user_eq21 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-fun dummy21 () tdigit_count_typeB)

(declare-datatypes ()
((tS133bP1__ref (mk_tS133bP1__ref (tS133bP1__content tdigit_count_typeB)))))
(define-fun tS133bP1__ref___projection ((a tS133bP1__ref)) tdigit_count_typeB 
  (tS133bP1__content a))

(declare-sort t5 0)

(declare-fun first11 (t5) tdigit_count_typeB)

(declare-fun last18 (t5) tdigit_count_typeB)

(declare-fun mk5 (Int Int) t5)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep2 (first11 (mk5 f l))) f)
     (= (to_rep2 (last18 (mk5 f l))) l)))) :pattern ((mk5 f l)) )))

(define-fun dynamic_property13 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property12 range_first range_last low)
                   (dynamic_property12 range_first range_last high))))))

(declare-datatypes () ((us_t5 (mk___t5 (elts5 (Array Int octet))(rt5 t5)))))
(define-fun to_array5 ((a us_t5)) (Array Int octet) (elts5 a))

(define-fun of_array5 ((a (Array Int octet)) (f Int)
  (l Int)) us_t5 (mk___t5 a (mk5 f l)))

(define-fun first12 ((a us_t5)) Int (to_rep2 (first11 (rt5 a))))

(define-fun last19 ((a us_t5)) Int (to_rep2 (last18 (rt5 a))))

(define-fun length5 ((a us_t5)) Int (ite (<= (first12 a) (last19 a))
                                    (+ (- (last19 a) (first12 a)) 1) 0))

(declare-fun value__size8 () Int)

(declare-fun object__size8 ((Array Int octet)) Int)

(declare-fun value__component__size5 () Int)

(declare-fun object__component__size5 ((Array Int octet)) Int)

(declare-fun value__alignment8 () Int)

(declare-fun object__alignment8 ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size8 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size5))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment8))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment8 a))))

(define-fun bool_eq23 ((x us_t5)
  (y us_t5)) Bool (bool_eq3 (elts5 x) (to_rep2 (first11 (rt5 x)))
                  (to_rep2 (last18 (rt5 x))) (elts5 y)
                  (to_rep2 (first11 (rt5 y))) (to_rep2 (last18 (rt5 y)))))

(declare-fun user_eq22 (us_t5 us_t5) Bool)

(declare-fun dummy22 () us_t5)

(declare-datatypes () ((s133b__ref (mk_s133b__ref (s133b__content us_t5)))))
(define-fun s133b__ref___projection ((a s133b__ref)) us_t5 (s133b__content a))

(declare-fun last20 () Int)

(define-fun dynamic_property14 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq24 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)

(declare-fun user_eq23 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-fun dummy23 () tdigit_count_typeB)

(declare-datatypes ()
((t135b__ref (mk_t135b__ref (t135b__content tdigit_count_typeB)))))
(define-fun t135b__ref___projection ((a t135b__ref)) tdigit_count_typeB 
  (t135b__content a))

(declare-sort t6 0)

(declare-fun first13 (t6) tdigit_count_typeB)

(declare-fun last21 (t6) tdigit_count_typeB)

(declare-fun mk6 (Int Int) t6)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep2 (first13 (mk6 f l))) f)
     (= (to_rep2 (last21 (mk6 f l))) l)))) :pattern ((mk6 f l)) )))

(define-fun dynamic_property15 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property14 range_first range_last low)
                   (dynamic_property14 range_first range_last high))))))

(declare-datatypes () ((us_t6 (mk___t6 (elts6 (Array Int octet))(rt6 t6)))))
(define-fun to_array6 ((a us_t6)) (Array Int octet) (elts6 a))

(define-fun of_array6 ((a (Array Int octet)) (f Int)
  (l Int)) us_t6 (mk___t6 a (mk6 f l)))

(define-fun first14 ((a us_t6)) Int (to_rep2 (first13 (rt6 a))))

(define-fun last22 ((a us_t6)) Int (to_rep2 (last21 (rt6 a))))

(define-fun length6 ((a us_t6)) Int (ite (<= (first14 a) (last22 a))
                                    (+ (- (last22 a) (first14 a)) 1) 0))

(declare-fun value__size9 () Int)

(declare-fun object__size9 ((Array Int octet)) Int)

(declare-fun value__component__size6 () Int)

(declare-fun object__component__size6 ((Array Int octet)) Int)

(declare-fun value__alignment9 () Int)

(declare-fun object__alignment9 ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size9))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size9 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size6))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size6 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment9))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment9 a))))

(define-fun bool_eq25 ((x us_t6)
  (y us_t6)) Bool (bool_eq3 (elts6 x) (to_rep2 (first13 (rt6 x)))
                  (to_rep2 (last21 (rt6 x))) (elts6 y)
                  (to_rep2 (first13 (rt6 y))) (to_rep2 (last21 (rt6 y)))))

(declare-fun user_eq24 (us_t6 us_t6) Bool)

(declare-fun dummy24 () us_t6)

(declare-datatypes () ((t136b__ref (mk_t136b__ref (t136b__content us_t6)))))
(define-fun t136b__ref___projection ((a t136b__ref)) us_t6 (t136b__content a))

(declare-fun r137b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS13 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS14 () Int)

(declare-fun r139b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS15 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS16 () Int)

(declare-sort t7 0)

(declare-fun first15 (t7) tdigit_count_typeB)

(declare-fun last23 (t7) tdigit_count_typeB)

(declare-fun mk7 (Int Int) t7)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep2 (first15 (mk7 f l))) f)
     (= (to_rep2 (last23 (mk7 f l))) l)))) :pattern ((mk7 f l)) )))

(define-fun dynamic_property16 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t7 (mk___t7 (elts7 (Array Int octet))(rt7 t7)))))
(define-fun to_array7 ((a us_t7)) (Array Int octet) (elts7 a))

(define-fun of_array7 ((a (Array Int octet)) (f Int)
  (l Int)) us_t7 (mk___t7 a (mk7 f l)))

(define-fun first16 ((a us_t7)) Int (to_rep2 (first15 (rt7 a))))

(define-fun last24 ((a us_t7)) Int (to_rep2 (last23 (rt7 a))))

(define-fun length7 ((a us_t7)) Int (ite (<= (first16 a) (last24 a))
                                    (+ (- (last24 a) (first16 a)) 1) 0))

(declare-fun value__size10 () Int)

(declare-fun object__size10 ((Array Int octet)) Int)

(declare-fun value__component__size7 () Int)

(declare-fun object__component__size7 ((Array Int octet)) Int)

(declare-fun value__alignment10 () Int)

(declare-fun object__alignment10 ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size10))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size10 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size7))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size7 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment10))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment10 a))))

(define-fun bool_eq26 ((x us_t7)
  (y us_t7)) Bool (bool_eq3 (elts7 x) (to_rep2 (first15 (rt7 x)))
                  (to_rep2 (last23 (rt7 x))) (elts7 y)
                  (to_rep2 (first15 (rt7 y))) (to_rep2 (last23 (rt7 y)))))

(declare-fun user_eq25 (us_t7 us_t7) Bool)

(declare-fun dummy25 () us_t7)

(declare-datatypes ()
((digits_array_type__ref
 (mk_digits_array_type__ref (digits_array_type__content us_t7)))))
(define-fun digits_array_type__ref___projection ((a digits_array_type__ref)) us_t7 
  (digits_array_type__content a))

(declare-fun temp___1068 ((_ BitVec 8) Int Int) us_t4)

;; def_axiom
  (assert
  (forall ((temp___1070 (_ BitVec 8)))
  (forall ((temp___1071 Int) (temp___1072 Int))
  (let ((temp___1069 (temp___1068 temp___1070 temp___1071 temp___1072)))
  (and
  (=> (dynamic_property16 1 65536 temp___1071 temp___1072)
  (and (= (first10 temp___1069) temp___1071)
  (= (last16 temp___1069) temp___1072)))
  (forall ((temp___1073 Int))
  (= (select (to_array4 temp___1069) temp___1073) (of_rep1 temp___1070))))))))

(declare-fun temp___1081 ((_ BitVec 8) Int Int) us_t6)

;; def_axiom
  (assert
  (forall ((temp___1083 (_ BitVec 8)))
  (forall ((temp___1084 Int) (temp___1085 Int))
  (let ((temp___1082 (temp___1081 temp___1083 temp___1084 temp___1085)))
  (and
  (=> (dynamic_property16 1 65536 temp___1084 temp___1085)
  (and (= (first14 temp___1082) temp___1084)
  (= (last22 temp___1082) temp___1085)))
  (forall ((temp___1086 Int))
  (= (select (to_array6 temp___1082) temp___1086) (of_rep1 temp___1083))))))))

(define-fun dynamic_invariant10 ((temp___expr_774 us_t3)
  (temp___is_init_771 Bool) (temp___skip_constant_772 Bool)
  (temp___do_toplevel_773 Bool)) Bool (=>
                                      (not (= temp___skip_constant_772 true))
                                      (and (dynamic_property9 1 r130b
                                      (first8 temp___expr_774)
                                      (last13 temp___expr_774))
                                      (and (= (first8 temp___expr_774) 1)
                                      (= (last13 temp___expr_774) r130b)))))

(define-fun dynamic_invariant11 ((temp___expr_783 us_t5)
  (temp___is_init_780 Bool) (temp___skip_constant_781 Bool)
  (temp___do_toplevel_782 Bool)) Bool (=>
                                      (not (= temp___skip_constant_781 true))
                                      (and (dynamic_property13 1 r134b
                                      (first12 temp___expr_783)
                                      (last19 temp___expr_783))
                                      (and (= (first12 temp___expr_783) 1)
                                      (= (last19 temp___expr_783) r134b)))))

(declare-fun quotient__split_fields () (Array Int octet))

(declare-fun quotient__split_fields1 () t)

(declare-fun remainder__split_fields () (Array Int octet))

(declare-fun remainder__split_fields1 () t)

(declare-fun n () Int)

(declare-fun m () Int)

(declare-fun shift_distance () Int)

(declare-fun u__split_fields () (Array Int octet))

(declare-fun u__split_fields1 () t1)

(declare-fun v__split_fields () (Array Int octet))

(declare-fun v__split_fields1 () t2)

(declare-fun j () Int)

(declare-fun us () Int)

(declare-fun us1 () Int)

(declare-fun us2 () Int)

(declare-fun us3 () Int)

(declare-fun temp___1075 () (Array Int octet))

(declare-fun temp___10751 () t4)

(declare-fun temp___1076 () (Array Int octet))

(declare-fun temp___10761 () t3)

(declare-fun temp___1078 () us_t3)

(declare-fun o () us_t)

(declare-fun o1 () us_split_fields)

(declare-fun temp___1080 () us_rep)

(declare-fun temp___1088 () us_t6)

(declare-fun temp___1089 () us_t5)

(declare-fun temp___1091 () us_t5)

(declare-fun o2 () us_t)

(declare-fun o3 () us_split_fields)

(declare-fun temp___1093 () us_rep)

(declare-fun temp___1094 () Int)

(declare-fun us4 () Int)

(declare-fun o4 () Int)

(declare-fun us5 () Int)

(declare-fun o5 () Int)

(declare-fun o6 () Int)

(declare-fun o7 () octet)

(declare-fun o8 () (_ BitVec 8))

(declare-fun o9 () Int)

(declare-fun very_longs__divide__L_19__R137b__assume () Int)

(declare-fun result () us_split_fields__ref)

(declare-fun quotient__split_fields2 () us_split_fields)

(declare-fun result1 () us_split_fields__ref)

(declare-fun remainder__split_fields2 () us_split_fields)

(declare-fun result2 () int__ref)

(declare-fun n1 () Int)

(declare-fun result3 () int__ref)

(declare-fun m1 () Int)

(declare-fun result4 () int__ref)

(declare-fun shift_distance1 () Int)

(declare-fun very_longs__divide__full_left_shift__result__fields () us_split_fields)

(declare-fun result5 () us_split_fields__ref1)

(declare-fun u__split_fields2 () us_split_fields2)

(declare-fun result6 () us_split_fields__ref2)

(declare-fun v__split_fields2 () us_split_fields4)

(declare-fun very_longs__divide__left_shift__number__fields () us_split_fields)

(declare-fun result7 () us_split_fields__ref2)

(declare-fun v__split_fields3 () us_split_fields4)

(declare-fun result8 () int__ref)

(declare-fun j1 () Int)

(declare-fun quotient__split_fields3 () us_split_fields)

(declare-fun u__split_fields3 () us_split_fields2)

(declare-fun j2 () Int)

;; H
  (assert (dynamic_invariant1 dividend true false true))

;; H
  (assert (dynamic_invariant1 divisor true false true))

;; H
  (assert (dynamic_invariant1
  (mk___rep quotient__split_discrs
  (mk___split_fields (mk___t quotient__split_fields quotient__split_fields1)))
  false false true))

;; H
  (assert (dynamic_invariant1
  (mk___rep remainder__split_discrs
  (mk___split_fields
  (mk___t remainder__split_fields remainder__split_fields1))) false false
  true))

;; H
  (assert (number_of_digits__function_guard1 (number_of_digits1 divisor)
  divisor))

;; H
  (assert
  (and
  (and
  (and (< 1 (number_of_digits1 divisor))
  (= (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor))) 
  (to_rep (rec__very_longs__very_long__length remainder__split_discrs))))
  (= (to_rep
     (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 
  (to_rep (rec__very_longs__very_long__length quotient__split_discrs))))
  (= (to_rep
     (rec__very_longs__very_long__length (us_split_discrs1 dividend))) (* 2 
  (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor)))))))

;; H
  (assert
  (and
  (= us (to_rep
        (rec__very_longs__very_long__length (us_split_discrs1 divisor))))
  (in_range2
  (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor))))))

;; H
  (assert
  (and
  (= us1 (to_rep
         (rec__very_longs__very_long__length (us_split_discrs1 dividend))))
  (in_range2
  (to_rep (rec__very_longs__very_long__length (us_split_discrs1 dividend))))))

;; H
  (assert (=> (<= 1 last3) (dynamic_property2 1 last3 n)))

;; H
  (assert (=> (<= first2 last4) (dynamic_property3 first2 last4 m)))

;; H
  (assert (=> (<= 0 7) (in_range4 shift_distance)))

;; H
  (assert
  (and
  (= us2 (+ (to_rep
            (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 1))
  (in_range2
  (+ (to_rep
     (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 1))))

;; H
  (assert
  (= (to_rep (rec__very_longs__very_long__length u__split_discrs)) (+ 
  (to_rep (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 1)))

;; H
  (assert (dynamic_invariant7
  (mk___rep1 u__split_discrs
  (mk___split_fields1 (mk___t1 u__split_fields u__split_fields1))) false
  false true))

;; H
  (assert
  (and
  (= us3 (to_rep
         (rec__very_longs__very_long__length (us_split_discrs1 divisor))))
  (in_range2
  (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor))))))

;; H
  (assert
  (= (to_rep (rec__very_longs__very_long__length v__split_discrs)) (to_rep
                                                                   (rec__very_longs__very_long__length
                                                                   (us_split_discrs1
                                                                   divisor)))))

;; H
  (assert (dynamic_invariant8
  (mk___rep2 v__split_discrs
  (mk___split_fields2 (mk___t2 v__split_fields v__split_fields1))) false
  false true))

;; H
  (assert
  (= (to_rep (rec__very_longs__very_long__length quotient__split_discrs)) 
  r130b))

;; H
  (assert (in_range2 r130b))

;; H
  (assert
  (= (to_rep2 (first9 (rt4 (temp___1068 ((_ int2bv 8) 0) 1 r130b)))) 1))

;; H
  (assert
  (= (to_rep2 (last15 (rt4 (temp___1068 ((_ int2bv 8) 0) 1 r130b)))) 
  r130b))

;; H
  (assert
  (= (mk___t4 temp___1075 temp___10751) (temp___1068 ((_ int2bv 8) 0) 1
                                        r130b)))

;; H
  (assert
  (= (ite (<= (to_rep2 (first9 temp___10751)) (to_rep2 (last15 temp___10751)))
     (+ (- (to_rep2 (last15 temp___10751)) (to_rep2 (first9 temp___10751))) 1)
     0) (ite (<= 1 r130b) (+ (- r130b 1) 1) 0)))

;; H
  (assert (= temp___1075 temp___1076))

;; H
  (assert
  (= (mk3 (to_rep2 (first9 temp___10751)) (to_rep2 (last15 temp___10751))) 
  temp___10761))

;; H
  (assert
  (= (ite (<= (to_rep2 (first7 temp___10761)) (to_rep2 (last12 temp___10761)))
     (+ (- (to_rep2 (last12 temp___10761)) (to_rep2 (first7 temp___10761))) 1)
     0) (ite (<= (to_rep2 (first quotient__split_fields1)) (to_rep2
                                                           (last1
                                                           quotient__split_fields1)))
        (+ (- (to_rep2 (last1 quotient__split_fields1)) (to_rep2
                                                        (first
                                                        quotient__split_fields1))) 1)
        0)))

;; H
  (assert (= temp___1078 (mk___t3 temp___1076 temp___10761)))

;; H
  (assert
  (= o (mk___t (elts3 temp___1078)
       (mk (to_rep2 (first7 (rt3 temp___1078)))
       (to_rep2 (last12 (rt3 temp___1078)))))))

;; H
  (assert (= o1 (mk___split_fields o)))

;; H
  (assert (= temp___1080 (mk___rep quotient__split_discrs o1)))

;; H
  (assert
  (= result (mk___split_fields__ref
            (mk___split_fields
            (mk___t quotient__split_fields quotient__split_fields1)))))

;; H
  (assert (= quotient__split_fields2 (us_split_fields1 temp___1080)))

;; H
  (assert (= quotient__split_discrs (us_split_discrs1 temp___1080)))

;; H
  (assert
  (= (to_rep (rec__very_longs__very_long__length remainder__split_discrs)) 
  r134b))

;; H
  (assert (in_range2 r134b))

;; H
  (assert
  (= (to_rep2 (first13 (rt6 (temp___1081 ((_ int2bv 8) 0) 1 r134b)))) 1))

;; H
  (assert
  (= (to_rep2 (last21 (rt6 (temp___1081 ((_ int2bv 8) 0) 1 r134b)))) 
  r134b))

;; H
  (assert (= temp___1088 (temp___1081 ((_ int2bv 8) 0) 1 r134b)))

;; H
  (assert
  (= (ite (<= (to_rep2 (first13 (rt6 temp___1088))) (to_rep2
                                                    (last21
                                                    (rt6 temp___1088))))
     (+ (- (to_rep2 (last21 (rt6 temp___1088))) (to_rep2
                                                (first13 (rt6 temp___1088)))) 1)
     0) (ite (<= 1 r134b) (+ (- r134b 1) 1) 0)))

;; H
  (assert
  (= temp___1089 (mk___t5 (elts6 temp___1088)
                 (mk5 (to_rep2 (first13 (rt6 temp___1088)))
                 (to_rep2 (last21 (rt6 temp___1088)))))))

;; H
  (assert
  (= (ite (<= (to_rep2 (first11 (rt5 temp___1089))) (to_rep2
                                                    (last18
                                                    (rt5 temp___1089))))
     (+ (- (to_rep2 (last18 (rt5 temp___1089))) (to_rep2
                                                (first11 (rt5 temp___1089)))) 1)
     0) (ite (<= (to_rep2 (first remainder__split_fields1)) (to_rep2
                                                            (last1
                                                            remainder__split_fields1)))
        (+ (- (to_rep2 (last1 remainder__split_fields1)) (to_rep2
                                                         (first
                                                         remainder__split_fields1))) 1)
        0)))

;; H
  (assert (= temp___1091 temp___1089))

;; H
  (assert
  (= o2 (mk___t (elts5 temp___1091)
        (mk (to_rep2 (first11 (rt5 temp___1091)))
        (to_rep2 (last18 (rt5 temp___1091)))))))

;; H
  (assert (= o3 (mk___split_fields o2)))

;; H
  (assert (= temp___1093 (mk___rep remainder__split_discrs o3)))

;; H
  (assert
  (= result1 (mk___split_fields__ref
             (mk___split_fields
             (mk___t remainder__split_fields remainder__split_fields1)))))

;; H
  (assert (= remainder__split_fields2 (us_split_fields1 temp___1093)))

;; H
  (assert (= remainder__split_discrs (us_split_discrs1 temp___1093)))

;; H
  (assert
  (and
  (and (= temp___1094 (number_of_digits1 divisor))
  (number_of_digits__function_guard1 temp___1094 divisor))
  (and (in_range3 temp___1094)
  (and
  (=> (< 0 temp___1094)
  (not
  (= (to_rep1
     (select (elts
             (rec__very_longs__very_long__long_digits
             (us_split_fields1 divisor))) temp___1094)) ((_ int2bv 8) 0))))
  (forall ((i Int))
  (=>
  (and (<= (+ temp___1094 1) i)
  (<= i (to_rep2
        (last1
        (rt
        (rec__very_longs__very_long__long_digits (us_split_fields1 divisor)))))))
  (= (to_rep1
     (select (elts
             (rec__very_longs__very_long__long_digits
             (us_split_fields1 divisor))) i)) ((_ int2bv 8) 0))))))))

;; H
  (assert (and (= us4 temp___1094) (dynamic_property2 1 last3 temp___1094)))

;; H
  (assert (= o4 temp___1094))

;; H
  (assert (= result2 (mk_int__ref n)))

;; H
  (assert (= n1 o4))

;; H
  (assert
  (and
  (= us5 (- (to_rep
            (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 
  n1)) (dynamic_property3 first2 last4
  (- (to_rep
     (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 
  n1))))

;; H
  (assert
  (= o5 (- (to_rep
           (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 
  n1)))

;; H
  (assert (= result3 (mk_int__ref m)))

;; H
  (assert (= m1 o5))

;; H
  (assert
  (and
  (<= (to_rep2
      (first
      (rt
      (rec__very_longs__very_long__long_digits (us_split_fields1 divisor))))) 
  n1)
  (<= n1 (to_rep2
         (last1
         (rt
         (rec__very_longs__very_long__long_digits (us_split_fields1 divisor))))))))

;; H
  (assert (= o6 n1))

;; H
  (assert
  (= o7 (select (elts
                (rec__very_longs__very_long__long_digits
                (us_split_fields1 divisor))) o6)))

;; H
  (assert (= o8 (to_rep1 o7)))

;; H
  (assert
  (and
  (and (= o9 (get_shift_distance o8)) (get_shift_distance__function_guard 
  o9 o8)) (in_range4 o9)))

;; H
  (assert (= result4 (mk_int__ref shift_distance)))

;; H
  (assert (= shift_distance1 o9))

;; H
  (assert (dynamic_invariant1
  (mk___rep u__split_discrs
  very_longs__divide__full_left_shift__result__fields) true true true))

;; H
  (assert
  (= result5 (mk___split_fields__ref1
             (mk___split_fields1 (mk___t1 u__split_fields u__split_fields1)))))

;; H
  (assert
  (= u__split_fields2 (us_split_fields3
                      (of_base
                      (mk___rep u__split_discrs
                      very_longs__divide__full_left_shift__result__fields)))))

;; H
  (assert
  (= u__split_discrs (us_split_discrs2
                     (of_base
                     (mk___rep u__split_discrs
                     very_longs__divide__full_left_shift__result__fields)))))

;; H
  (assert
  (= result6 (mk___split_fields__ref2
             (mk___split_fields2 (mk___t2 v__split_fields v__split_fields1)))))

;; H
  (assert (= v__split_fields2 (us_split_fields5 (of_base1 divisor))))

;; H
  (assert (= v__split_discrs (us_split_discrs3 (of_base1 divisor))))

;; H
  (assert (dynamic_invariant1
  (mk___rep v__split_discrs very_longs__divide__left_shift__number__fields)
  true true true))

;; H
  (assert (= result7 (mk___split_fields__ref2 v__split_fields2)))

;; H
  (assert
  (= v__split_fields3 (us_split_fields5
                      (of_base1
                      (mk___rep v__split_discrs
                      very_longs__divide__left_shift__number__fields)))))

;; H
  (assert
  (= v__split_discrs (us_split_discrs3
                     (of_base1
                     (mk___rep v__split_discrs
                     very_longs__divide__left_shift__number__fields)))))

;; H
  (assert
  (and (= very_longs__divide__L_19__R137b__assume (+ m1 1)) (in_range1
  (+ m1 1))))

;; H
  (assert (= very_longs__divide__L_19__R137b__assume r137b))

;; H
  (assert (in_range1 r137b))

;; H
  (assert (= result8 (mk_int__ref j)))

;; H
  (assert (= j1 r137b))

;; H
  (assert (<= 1 j1))

;; H
  (assert (<= j1 r137b))

;; H
  (assert
  (and
  (and (dynamic_invariant7 (mk___rep1 u__split_discrs u__split_fields3) false
  true true) (dynamic_invariant1
  (mk___rep quotient__split_discrs quotient__split_fields3) false true true))
  (and (<= 1 j2) (<= j2 r137b))))

(assert
;; WP_parameter_def
 ;; File "very_longs.ads", line 84, characters 0-0
  (not (in_range2 j2)))
(check-sat)
