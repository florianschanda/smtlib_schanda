;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-sort natural 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (natural natural) Bool)

(declare-fun dummy4 () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant1 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(declare-fun is_subsequence (us_t us_t) Bool)

(declare-fun is_subsequence__function_guard (Bool us_t us_t) Bool)

(declare-fun head (us_t) Int)

(declare-fun head__function_guard (Int us_t) Bool)

(declare-fun tail (us_t) us_t)

(declare-fun tail__function_guard (us_t us_t) Bool)

(declare-fun temp___String_Literal_146 (tuple0) (Array Int character))

;; temp___String_Literal_146__def_axiom
  (assert true)

(declare-fun temp___String_Literal_148 (tuple0) (Array Int character))

;; temp___String_Literal_148__def_axiom
  (assert true)

;; is_subsequence__def_axiom
  (assert
  (forall ((subseq us_t) (seq us_t))
  (! (= (= (is_subsequence subseq seq) true)
     (=>
     (not
     (= (let ((temp___153 (temp___String_Literal_148 Tuple0)))
        (bool_eq3 (to_array subseq) (first1 subseq) (last1 subseq) temp___153
        1 0)) true))
     (and
     (not
     (= (let ((temp___152 (temp___String_Literal_146 Tuple0)))
        (bool_eq3 (to_array seq) (first1 seq) (last1 seq) temp___152 1 0)) true))
     (ite (= (head subseq) (head seq))
     (= (is_subsequence (tail subseq) (tail seq)) true)
     (= (is_subsequence subseq (tail seq)) true))))) :pattern ((is_subsequence
                                                               subseq seq)) )))

(declare-fun slow_lcs_length (us_t us_t) Int)

(declare-fun slow_lcs_length__function_guard (Int us_t us_t) Bool)

(define-fun dynamic_invariant2 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_33)))

(declare-fun temp___String_Literal_154 (tuple0) (Array Int character))

;; temp___String_Literal_154__def_axiom
  (assert true)

(declare-fun temp___String_Literal_156 (tuple0) (Array Int character))

;; temp___String_Literal_156__def_axiom
  (assert true)

;; slow_lcs_length__def_axiom
  (assert
  (forall ((s1 us_t) (s2 us_t))
  (! (=>
     (and (dynamic_invariant1 s1 true true true) (dynamic_invariant1 s2 true
     true true))
     (= (slow_lcs_length s1 s2) (ite (or
                                     (= (let ((temp___160 (temp___String_Literal_154
                                                          Tuple0)))
                                        (bool_eq3 (to_array s1) (first1 s1)
                                        (last1 s1) temp___160 1 0)) true)
                                     (= (let ((temp___161 (temp___String_Literal_156
                                                          Tuple0)))
                                        (bool_eq3 (to_array s2) (first1 s2)
                                        (last1 s2) temp___161 1 0)) true))
                                0
                                (ite (= (head s1) (head s2))
                                (+ 1 (slow_lcs_length (tail s1) (tail s2)))
                                (ite (< (slow_lcs_length s1 (tail s2)) 
                                (slow_lcs_length (tail s1) s2)) (slow_lcs_length
                                                                (tail s1) s2) 
                                (slow_lcs_length s1 (tail s2))))))) :pattern (
  (slow_lcs_length s1 s2)) )))

(declare-fun s1 () us_t)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun s2 () us_t)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun first2 () Int)

(declare-fun last2 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (integer integer) Bool)

(declare-fun dummy5 () integer)

(declare-datatypes ()
((s1_index__ref (mk_s1_index__ref (s1_index__content integer)))))
(define-fun s1_index__ref___projection ((a s1_index__ref)) integer (s1_index__content
                                                                   a))

(define-fun dynamic_invariant3 ((temp___expr_186 Int)
  (temp___is_init_183 Bool) (temp___skip_constant_184 Bool)
  (temp___do_toplevel_185 Bool)) Bool (=>
                                      (or (= temp___is_init_183 true)
                                      (<= first2 last2)) (dynamic_property1
                                      first2 last2 temp___expr_186)))

;; first__def_axiom
  (assert (= first2 (first1 s1)))

;; last__def_axiom
  (assert (= last2 (last1 s1)))

(declare-fun first3 () Int)

(declare-fun last3 () Int)

(define-fun dynamic_property2 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (integer integer) Bool)

(declare-fun dummy6 () integer)

(declare-datatypes ()
((s2_index__ref (mk_s2_index__ref (s2_index__content integer)))))
(define-fun s2_index__ref___projection ((a s2_index__ref)) integer (s2_index__content
                                                                   a))

(define-fun dynamic_invariant4 ((temp___expr_192 Int)
  (temp___is_init_189 Bool) (temp___skip_constant_190 Bool)
  (temp___do_toplevel_191 Bool)) Bool (=>
                                      (or (= temp___is_init_189 true)
                                      (<= first3 last3)) (dynamic_property2
                                      first3 last3 temp___expr_192)))

;; first__def_axiom
  (assert (= first3 (first1 s2)))

;; last__def_axiom
  (assert (= last3 (last1 s2)))

(declare-sort tseq_lengthB 0)

(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq7 (tseq_lengthB tseq_lengthB) Bool)

(declare-fun dummy7 () tseq_lengthB)

(declare-datatypes ()
((tseq_lengthB__ref
 (mk_tseq_lengthB__ref (tseq_lengthB__content tseq_lengthB)))))
(define-fun tseq_lengthB__ref___projection ((a tseq_lengthB__ref)) tseq_lengthB 
  (tseq_lengthB__content a))

(declare-fun to_rep2 (tseq_lengthB) Int)

(declare-fun of_rep2 (Int) tseq_lengthB)

;; inversion_axiom
  (assert
  (forall ((x tseq_lengthB))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x tseq_lengthB)) (! (in_range5
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-fun last4 () Int)

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq8 (tseq_lengthB tseq_lengthB) Bool)

(declare-fun dummy8 () tseq_lengthB)

(declare-datatypes ()
((seq_length__ref (mk_seq_length__ref (seq_length__content tseq_lengthB)))))
(define-fun seq_length__ref___projection ((a seq_length__ref)) tseq_lengthB 
  (seq_length__content a))

(define-fun dynamic_invariant5 ((temp___expr_198 Int)
  (temp___is_init_195 Bool) (temp___skip_constant_196 Bool)
  (temp___do_toplevel_197 Bool)) Bool (=>
                                      (or (= temp___is_init_195 true)
                                      (<= 0 last4)) (dynamic_property3 0
                                      last4 temp___expr_198)))

;; last__def_axiom
  (assert
  (= last4 (ite (< (length s1) (length s2)) (length s2) (length s1))))

(declare-sort map1 0)

(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 map1)))))
(declare-fun get (map1 Int Int) tseq_lengthB)

(declare-fun set (map1 Int Int tseq_lengthB) map1)

;; Select_eq
  (assert
  (forall ((m map1))
  (forall ((i Int))
  (forall ((j Int))
  (forall ((a tseq_lengthB))
  (! (= (get (set m i j a) i j) a) :pattern ((set m i j a)) ))))))

;; Select_neq
  (assert
  (forall ((m map1))
  (forall ((i Int) (i2 Int))
  (forall ((j Int) (j2 Int))
  (forall ((a tseq_lengthB))
  (! (=> (not (and (= i i2) (= j j2)))
     (= (get (set m i j a) i2 j2) (get m i2 j2))) :pattern ((get
                                                            (set m i j a) i2
                                                            j2)) :pattern (
  (set m i j a) (get m i2 j2)) ))))))

(declare-fun slide1 (map1 Int Int Int Int) map1)

;; slide_def
  (assert
  (forall ((a map1))
  (forall ((new_first Int) (old_first Int))
  (forall ((new_first_2 Int) (old_first_2 Int))
  (forall ((i Int))
  (forall ((j Int))
  (! (= (get (slide1 a old_first new_first old_first_2 new_first_2) i j) 
  (get a (- i (- new_first old_first)) (- j (- new_first_2 old_first_2)))) :pattern (
  (get (slide1 a old_first new_first old_first_2 new_first_2) i j)) )))))))

(define-fun bool_eq10 ((a map1) (a__first Int) (a__last Int) (a__first_2 Int)
  (a__last_2 Int) (b map1) (b__first Int) (b__last Int) (b__first_2 Int)
  (b__last_2 Int)) Bool (ite (and
                             (and
                             (ite (<= a__first a__last)
                             (and (<= b__first b__last)
                             (= (- a__last a__first) (- b__last b__first)))
                             (< b__last b__first))
                             (ite (<= a__first_2 a__last_2)
                             (and (<= b__first_2 b__last_2)
                             (= (- a__last_2 a__first_2) (- b__last_2 b__first_2)))
                             (< b__last_2 b__first_2)))
                             (forall ((temp___idx_132 Int)
                             (temp___idx_133 Int))
                             (=>
                             (and
                             (and (<= a__first temp___idx_132)
                             (<= temp___idx_132 a__last))
                             (and (<= a__first_2 temp___idx_133)
                             (<= temp___idx_133 a__last_2)))
                             (= (to_rep2
                                (get a temp___idx_132 temp___idx_133)) 
                             (to_rep2
                             (get b (+ (- b__first a__first) temp___idx_132)
                             (+ (- b__first_2 a__first_2) temp___idx_133)))))))
                        true false))

;; bool_eq_rev
  (assert
  (forall ((a map1) (b map1))
  (forall ((a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int)
  (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int))
  (=>
  (= (bool_eq10 b b__first b__last b__first_2 b__last_2 a a__first a__last
     a__first_2 a__last_2) true)
  (and
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (ite (<= a__first_2 a__last_2)
  (and (<= b__first_2 b__last_2)
  (= (- a__last_2 a__first_2) (- b__last_2 b__first_2)))
  (< b__last_2 b__first_2)))
  (forall ((temp___idx_132 Int) (temp___idx_133 Int))
  (=>
  (and (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (and (<= a__first_2 temp___idx_133) (<= temp___idx_133 a__last_2)))
  (= (to_rep2 (get a temp___idx_132 temp___idx_133)) (to_rep2
                                                     (get b
                                                     (+ (- b__first a__first) temp___idx_132)
                                                     (+ (- b__first_2 a__first_2) temp___idx_133)))))))))))

(declare-sort t1 0)

(declare-fun first4 (t1) integer)

(declare-fun last5 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first4 (mk1 f l))) f)
     (= (to_rep1 (last5 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-sort t2 0)

(declare-fun first5 (t2) integer)

(declare-fun last6 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first5 (mk2 f l))) f)
     (= (to_rep1 (last6 (mk2 f l))) l)))) :pattern ((mk2 f l)) )))

(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property2 range_first range_last low)
                   (dynamic_property2 range_first range_last high))))))

(declare-datatypes () ((us_t1 (mk___t1 (elts1 map1)(rt1 t1)(rt_2 t2)))))
(define-fun to_array1 ((a us_t1)) map1 (elts1 a))

(define-fun of_array1 ((a map1) (f Int) (l Int) (f2 Int)
  (l2 Int)) us_t1 (mk___t1 a (mk1 f l) (mk2 f2 l2)))

(define-fun first6 ((a us_t1)) Int (to_rep1 (first4 (rt1 a))))

(define-fun last7 ((a us_t1)) Int (to_rep1 (last5 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first6 a) (last7 a))
                                    (+ (- (last7 a) (first6 a)) 1) 0))

(define-fun first_2 ((a us_t1)) Int (to_rep1 (first5 (rt_2 a))))

(define-fun last_2 ((a us_t1)) Int (to_rep1 (last6 (rt_2 a))))

(define-fun length_2 ((a us_t1)) Int (ite (<= (first_2 a) (last_2 a))
                                     (+ (- (last_2 a) (first_2 a)) 1) 0))

(define-fun dynamic_property6 ((range_first1 Int) (range_last1 Int) (f1 Int)
  (l1 Int) (range_first2 Int) (range_last2 Int) (f2 Int)
  (l2 Int)) Bool (and (dynamic_property4 range_first1 range_last1 f1 l1)
                 (dynamic_property5 range_first2 range_last2 f2 l2)))

(declare-fun value__size1 () Int)

(declare-fun object__size1 (map1) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 (map1) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (map1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a map1)) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert (forall ((a map1)) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a map1)) (<= 0 (object__alignment1 a))))

(define-fun bool_eq11 ((x us_t1)
  (y us_t1)) Bool (bool_eq10 (elts1 x) (to_rep1 (first4 (rt1 x)))
                  (to_rep1 (last5 (rt1 x))) (to_rep1 (first5 (rt_2 x)))
                  (to_rep1 (last6 (rt_2 x))) (elts1 y)
                  (to_rep1 (first4 (rt1 y))) (to_rep1 (last5 (rt1 y)))
                  (to_rep1 (first5 (rt_2 y))) (to_rep1 (last6 (rt_2 y)))))

(declare-fun user_eq9 (us_t1 us_t1) Bool)

(declare-fun dummy9 () us_t1)

(declare-datatypes ()
((tlengthsT__ref (mk_tlengthsT__ref (tlengthsT__content us_t1)))))
(define-fun tlengthsT__ref___projection ((a tlengthsT__ref)) us_t1 (tlengthsT__content
                                                                   a))

(declare-fun lengths__first () integer)

(declare-fun lengths__last () integer)

(declare-fun lengths__first_2 () integer)

(declare-fun lengths__last_2 () integer)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun get_length (Int Int map1) Int)

(declare-fun get_length__function_guard (Int Int Int map1) Bool)

;; get_length__post_axiom
  (assert
  (forall ((x1 Int) (x2 Int))
  (forall ((string_utilities__longest_common_subsequence__lengths map1))
  (! (=>
     (and
     (and (dynamic_invariant x1 true true true) (dynamic_invariant2 x2 true
     true true))
     (forall ((temp___203 Int) (temp___204 Int))
     (=>
     (and
     (and (<= (to_rep1 lengths__first) temp___203)
     (<= temp___203 (to_rep1 lengths__last)))
     (and (<= (to_rep1 lengths__first_2) temp___204)
     (<= temp___204 (to_rep1 lengths__last_2)))) (dynamic_property3 0 
     last4
     (to_rep2
     (get string_utilities__longest_common_subsequence__lengths temp___203
     temp___204)))))) (dynamic_invariant5
     (get_length x1 x2 string_utilities__longest_common_subsequence__lengths)
     true false true)) :pattern ((get_length x1 x2
                                 string_utilities__longest_common_subsequence__lengths)) ))))

;; get_length__def_axiom
  (assert
  (forall ((x1 Int) (x2 Int))
  (forall ((string_utilities__longest_common_subsequence__lengths map1))
  (! (=>
     (and
     (and (dynamic_invariant x1 true true true) (dynamic_invariant2 x2 true
     true true))
     (forall ((temp___207 Int) (temp___208 Int))
     (=>
     (and
     (and (<= (to_rep1 lengths__first) temp___207)
     (<= temp___207 (to_rep1 lengths__last)))
     (and (<= (to_rep1 lengths__first_2) temp___208)
     (<= temp___208 (to_rep1 lengths__last_2)))) (dynamic_property3 0 
     last4
     (to_rep2
     (get string_utilities__longest_common_subsequence__lengths temp___207
     temp___208))))))
     (= (get_length x1 x2
        string_utilities__longest_common_subsequence__lengths) (ite (and
                                                                    (dynamic_property1
                                                                    first2
                                                                    last2 x1)
                                                                    (dynamic_property2
                                                                    first3
                                                                    last3
                                                                    x2))
                                                               (to_rep2
                                                               (get
                                                               string_utilities__longest_common_subsequence__lengths
                                                               x1 x2)) 0))) :pattern (
  (get_length x1 x2 string_utilities__longest_common_subsequence__lengths)) ))))

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun last8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(define-fun dynamic_property7 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq10 (integer integer) Bool)

(declare-fun dummy10 () integer)

(declare-datatypes ()
((tTresultSP1__ref (mk_tTresultSP1__ref (tTresultSP1__content integer)))))
(define-fun tTresultSP1__ref___projection ((a tTresultSP1__ref)) integer 
  (tTresultSP1__content a))

(declare-sort t3 0)

(declare-fun first7 (t3) integer)

(declare-fun last9 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first7 (mk3 f l))) f)
     (= (to_rep1 (last9 (mk3 f l))) l)))) :pattern ((mk3 f l)) )))

(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property7 range_first range_last low)
                   (dynamic_property7 range_first range_last high))))))

(declare-datatypes ()
((us_t2 (mk___t2 (elts2 (Array Int character))(rt2 t3)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))

(define-fun of_array2 ((a (Array Int character)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk3 f l)))

(define-fun first8 ((a us_t2)) Int (to_rep1 (first7 (rt2 a))))

(define-fun last10 ((a us_t2)) Int (to_rep1 (last9 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first8 a) (last10 a))
                                    (+ (- (last10 a) (first8 a)) 1) 0))

(declare-fun value__size2 () Int)

(declare-fun object__size2 ((Array Int character)) Int)

(declare-fun value__component__size2 () Int)

(declare-fun object__component__size2 ((Array Int character)) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))

(define-fun bool_eq13 ((x us_t2)
  (y us_t2)) Bool (bool_eq3 (elts2 x) (to_rep1 (first7 (rt2 x)))
                  (to_rep1 (last9 (rt2 x))) (elts2 y)
                  (to_rep1 (first7 (rt2 y))) (to_rep1 (last9 (rt2 y)))))

(declare-fun user_eq11 (us_t2 us_t2) Bool)

(declare-fun dummy11 () us_t2)

(declare-datatypes ()
((tresultS__ref (mk_tresultS__ref (tresultS__content us_t2)))))
(define-fun tresultS__ref___projection ((a tresultS__ref)) us_t2 (tresultS__content
                                                                 a))

(define-fun dynamic_invariant6 ((temp___expr_220 us_t2)
  (temp___is_init_217 Bool) (temp___skip_constant_218 Bool)
  (temp___do_toplevel_219 Bool)) Bool (=>
                                      (not (= temp___skip_constant_218 true))
                                      (and (dynamic_property8 1 last8
                                      (first8 temp___expr_220)
                                      (last10 temp___expr_220))
                                      (and (= (first8 temp___expr_220) 1)
                                      (= (last10 temp___expr_220) last8)))))

(declare-fun result____first () integer)

(declare-fun result____last () integer)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun last11 () Int)

(define-fun dynamic_property9 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq14 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq12 (integer integer) Bool)

(declare-fun dummy12 () integer)

(declare-datatypes () ((trxS__ref (mk_trxS__ref (trxS__content integer)))))
(define-fun trxS__ref___projection ((a trxS__ref)) integer (trxS__content a))

(define-fun dynamic_invariant7 ((temp___expr_229 Int)
  (temp___is_init_226 Bool) (temp___skip_constant_227 Bool)
  (temp___do_toplevel_228 Bool)) Bool (=>
                                      (or (= temp___is_init_226 true)
                                      (<= 1 last11)) (dynamic_property9 1
                                      last11 temp___expr_229)))

;; last__def_axiom
  (assert (= last11 (to_rep1 result____last)))

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun temp___String_Literal_269 (tuple0) (Array Int character))

;; temp___String_Literal_269__def_axiom
  (assert true)

(define-fun dynamic_invariant8 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant9 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

;; head__post_axiom
  (assert
  (forall ((s us_t))
  (! (=> (dynamic_invariant1 s true true true) (dynamic_invariant9 (head s)
     true false true)) :pattern ((head s)) )))

;; head__def_axiom
  (assert
  (forall ((s us_t))
  (! (=> (dynamic_invariant1 s true true true)
     (= (head s) (to_rep (select (to_array s) (first1 s))))) :pattern (
  (head s)) )))

(define-fun dynamic_property10 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq15 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq13 (integer integer) Bool)

(declare-fun dummy13 () integer)

(declare-datatypes () ((t15s__ref (mk_t15s__ref (t15s__content integer)))))
(define-fun t15s__ref___projection ((a t15s__ref)) integer (t15s__content a))

(declare-sort t4 0)

(declare-fun first9 (t4) integer)

(declare-fun last12 (t4) integer)

(declare-fun mk4 (Int Int) t4)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first9 (mk4 f l))) f)
     (= (to_rep1 (last12 (mk4 f l))) l)))) :pattern ((mk4 f l)) )))

(define-fun dynamic_property11 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property10 range_first range_last low)
                   (dynamic_property10 range_first range_last high))))))

(declare-datatypes ()
((us_t3 (mk___t3 (elts3 (Array Int character))(rt3 t4)))))
(define-fun to_array3 ((a us_t3)) (Array Int character) (elts3 a))

(define-fun of_array3 ((a (Array Int character)) (f Int)
  (l Int)) us_t3 (mk___t3 a (mk4 f l)))

(define-fun first10 ((a us_t3)) Int (to_rep1 (first9 (rt3 a))))

(define-fun last13 ((a us_t3)) Int (to_rep1 (last12 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first10 a) (last13 a))
                                    (+ (- (last13 a) (first10 a)) 1) 0))

(declare-fun value__size3 () Int)

(declare-fun object__size3 ((Array Int character)) Int)

(declare-fun value__component__size3 () Int)

(declare-fun object__component__size3 ((Array Int character)) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size3 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment3 a))))

(define-fun bool_eq16 ((x us_t3)
  (y us_t3)) Bool (bool_eq3 (elts3 x) (to_rep1 (first9 (rt3 x)))
                  (to_rep1 (last12 (rt3 x))) (elts3 y)
                  (to_rep1 (first9 (rt3 y))) (to_rep1 (last12 (rt3 y)))))

(declare-fun user_eq14 (us_t3 us_t3) Bool)

(declare-fun dummy14 () us_t3)

(declare-datatypes () ((t16s__ref (mk_t16s__ref (t16s__content us_t3)))))
(define-fun t16s__ref___projection ((a t16s__ref)) us_t3 (t16s__content a))

;; tail__post_axiom
  (assert
  (forall ((s us_t))
  (! (=> (dynamic_invariant1 s true true true) (dynamic_invariant1 (tail s)
     true false true)) :pattern ((tail s)) )))

;; tail__def_axiom
  (assert
  (forall ((s us_t))
  (! (=> (dynamic_invariant1 s true true true)
     (= (tail s) (let ((temp___145 (let ((temp___144 (last1 s)))
                                   (let ((temp___143 (+ (first1 s) 1)))
                                   (of_array3 (to_array s) temp___143
                                   temp___144)))))
                 (of_array (to_array3 temp___145) (first10 temp___145)
                 (last13 temp___145))))) :pattern ((tail s)) )))

(declare-fun lengths () map1)

(declare-fun x1 () Int)

(declare-fun x2 () Int)

(declare-fun rx () Int)

(declare-fun x11 () Int)

(declare-fun x21 () Int)

(declare-fun string_utilities__longest_common_subsequence__result () (Array Int character))

(declare-fun string_utilities__longest_common_subsequence__result1 () t)

(declare-fun temp___264 () map1)

(declare-fun temp___257 () map1)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun temp___254 () Int)

(declare-fun us () Int)

(declare-fun o5 () Int)

(declare-fun o6 () tseq_lengthB)

(declare-fun o7 () map1)

(declare-fun o8 () Int)

(declare-fun o9 () Int)

(declare-fun o10 () Int)

(declare-fun o11 () Int)

(declare-fun o12 () Int)

(declare-fun o13 () Int)

(declare-fun temp___253 () Int)

(declare-fun us1 () Int)

(declare-fun o14 () Int)

(declare-fun o15 () tseq_lengthB)

(declare-fun o16 () map1)

(declare-fun o17 () Int)

(declare-fun o18 () Int)

(declare-fun o19 () Int)

(declare-fun string_utilities__longest_common_subsequence__B_4__last__assume () Int)

(declare-fun us2 () Int)

(declare-fun o20 () Int)

(declare-fun us3 () Int)

(declare-fun o21 () Int)

(declare-fun us4 () Int)

(declare-fun o22 () Int)

(declare-fun o23 () character)

(declare-fun o24 () (Array Int character))

(declare-fun us5 () Int)

(declare-fun o25 () Int)

(declare-fun temp___273 () Int)

(declare-fun lengths1 () map1)

(declare-fun x22 () Int)

(declare-fun string_utilities__longest_common_subsequence__result2 () (Array Int character))

(declare-fun string_utilities__longest_common_subsequence__result3 () t)

(declare-fun result () Int)

(declare-fun x12 () Int)

(declare-fun lengths2 () map1)

(declare-fun x13 () Int)

(declare-fun x23 () Int)

(declare-fun result1 () Int)

(declare-fun x24 () Int)

(declare-fun lengths3 () map1)

(declare-fun x25 () Int)

(declare-fun result2 () map1)

(declare-fun lengths4 () map1)

(declare-fun result3 () map1)

(declare-fun lengths5 () map1)

(declare-fun lengths6 () map1)

(declare-fun x26 () Int)

(declare-fun lengths7 () map1)

(declare-fun x27 () Int)

(declare-fun lengths8 () map1)

(declare-fun x28 () Int)

(declare-fun lengths9 () map1)

(declare-fun x29 () Int)

(declare-fun lengths10 () map__ref1)

(declare-fun x14 () int__ref)

(declare-fun x210 () int__ref)

(declare-fun lengths11 () map1)

(declare-fun x15 () Int)

(declare-fun x211 () Int)

(declare-fun lengths12 () map__ref1)

(declare-fun x16 () int__ref)

(declare-fun x212 () int__ref)

(declare-fun lengths13 () map1)

(declare-fun x17 () Int)

(declare-fun x213 () Int)

(declare-fun result4 () Bool)

(declare-fun string_utilities__longest_common_subsequence__result4 () string__ref)

(declare-fun string_utilities__longest_common_subsequence__result5 () us_t)

(declare-fun result5 () int__ref)

(declare-fun rx1 () Int)

(declare-fun result6 () int__ref)

(declare-fun x18 () Int)

(declare-fun result7 () int__ref)

(declare-fun x214 () Int)

(declare-fun result__ () (Array Int character))

(declare-fun rx2 () Int)

(declare-fun x19 () Int)

(declare-fun x215 () Int)

(declare-fun string_utilities__longest_common_subsequence__result6 () us_t)

(declare-fun result8 () map__ref)

(declare-fun result__1 () (Array Int character))

(declare-fun string_utilities__longest_common_subsequence__result7 () string__ref)

(declare-fun string_utilities__longest_common_subsequence__result8 () us_t)

(declare-fun result9 () int__ref)

(declare-fun rx3 () Int)

(define-fun x216 () int__ref (mk_int__ref x28))

(define-fun lengths14 () map__ref1 (mk_map__ref1 lengths8))

;; H
  (assert (dynamic_invariant1 s1 true false true))

;; H
  (assert (dynamic_invariant1 s2 true false true))

;; H
  (assert
  (and
  (and
  (and (dynamic_property6 first2 last2 (to_rep1 lengths__first)
  (to_rep1 lengths__last) first3 last3 (to_rep1 lengths__first_2)
  (to_rep1 lengths__last_2))
  (and (= (to_rep1 lengths__first) (to_rep1 (first (rt s1))))
  (= (to_rep1 lengths__last) (to_rep1 (last (rt s1))))))
  (and (= (to_rep1 lengths__first_2) (to_rep1 (first (rt s2))))
  (= (to_rep1 lengths__last_2) (to_rep1 (last (rt s2))))))
  (forall ((temp___251 Int) (temp___252 Int))
  (=>
  (and
  (and (<= (to_rep1 lengths__first) temp___251)
  (<= temp___251 (to_rep1 lengths__last)))
  (and (<= (to_rep1 lengths__first_2) temp___252)
  (<= temp___252 (to_rep1 lengths__last_2))))
  (=> (<= 0 last4) (dynamic_property3 0 last4
  (to_rep2 (get lengths temp___251 temp___252))))))))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref x1)))

;; H
  (assert (= x12 (to_rep1 (first (rt s1)))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= temp___264 lengths)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (and
  (and
  (forall ((temp___262 Int) (temp___263 Int))
  (=>
  (and
  (and (<= (to_rep1 lengths__first) temp___262)
  (<= temp___262 (to_rep1 lengths__last)))
  (and (<= (to_rep1 lengths__first_2) temp___263)
  (<= temp___263 (to_rep1 lengths__last_2))))
  (=> (<= 0 last4) (dynamic_property3 0 last4
  (to_rep2 (get lengths2 temp___262 temp___263))))))
  (forall ((temp___265 Int) (temp___266 Int))
  (=>
  (and
  (and (<= (to_rep1 lengths__first) temp___265)
  (<= temp___265 (to_rep1 lengths__last)))
  (and (<= (to_rep1 lengths__first_2) temp___266)
  (<= temp___266 (to_rep1 lengths__last_2))))
  (=> (<= x13 temp___265)
  (= (get lengths2 temp___265 temp___266) (get temp___264 temp___265
                                          temp___266))))))
  (and (<= (to_rep1 (first (rt s1))) x13) (<= x13 (to_rep1 (last (rt s1))))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x23 result1)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x24 (to_rep1 (first (rt s2))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (= temp___257 lengths2))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (and
  (and
  (forall ((temp___255 Int) (temp___256 Int))
  (=>
  (and
  (and (<= (to_rep1 lengths__first) temp___255)
  (<= temp___255 (to_rep1 lengths__last)))
  (and (<= (to_rep1 lengths__first_2) temp___256)
  (<= temp___256 (to_rep1 lengths__last_2))))
  (=> (<= 0 last4) (dynamic_property3 0 last4
  (to_rep2 (get lengths3 temp___255 temp___256))))))
  (forall ((temp___258 Int) (temp___259 Int))
  (=>
  (and
  (and (<= (to_rep1 lengths__first) temp___258)
  (<= temp___258 (to_rep1 lengths__last)))
  (and (<= (to_rep1 lengths__first_2) temp___259)
  (<= temp___259 (to_rep1 lengths__last_2))))
  (=> (or (<= x25 temp___259) (not (= x13 temp___258)))
  (= (get lengths3 temp___258 temp___259) (get temp___257 temp___258
                                          temp___259))))))
  (and (<= (to_rep1 (first (rt s2))) x25) (<= x25 (to_rep1 (last (rt s2)))))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (and (= o1 (- x25 1)) (in_range1 (- x25 1)))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (and (= o2 o1) (in_range4 o1))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (and (= o (- x13 1)) (in_range1 (- x13 1)))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (and (= o3 (get_length o o2 lengths3))
  (and (dynamic_property3 0 last4 o3)
  (= o3 (ite (and (dynamic_property1 first2 last2 o) (dynamic_property2
             first3 last3 o2))
        (to_rep2 (get lengths3 o o2)) 0))))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (= o4 (+ 1 o3))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (and (= temp___254 o4) (in_range5 o4))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (and (= us temp___254) (dynamic_property3 0 last4 temp___254))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (= o5 temp___254)))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (= o6 (of_rep2 o5))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (= o7 (set lengths3 x13 x25 o6))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (= lengths3 result2)))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=> (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25)))
  (= lengths4 o7)))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (and (= o10 (- x25 1)) (in_range1 (- x25 1)))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (and (= o11 o10) (in_range4 o10))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (and (= o12 (get_length x13 o11 lengths3))
  (and (dynamic_property3 0 last4 o12)
  (= o12 (ite (and (dynamic_property1 first2 last2 x13) (dynamic_property2
              first3 last3 o11))
         (to_rep2 (get lengths3 x13 o11)) 0))))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (and (= o9 x25) (in_range4 x25))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (and (= o8 (- x13 1)) (in_range1 (- x13 1)))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (and (= o13 (get_length o8 o9 lengths3))
  (and (dynamic_property3 0 last4 o13)
  (= o13 (ite (and (dynamic_property1 first2 last2 o8) (dynamic_property2
              first3 last3 o9))
         (to_rep2 (get lengths3 o8 o9)) 0))))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (= temp___253 (ite (< o13 o12) o12 o13))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (and (= us1 temp___253) (dynamic_property3 0 last4 temp___253))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (= o14 temp___253)))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (= o15 (of_rep2 o14))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (= o16 (set lengths3 x13 x25 o15))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (= lengths3 result3)))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (= lengths5 o16)))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (=>
  (not (= (to_rep (select (elts s1) x13)) (to_rep (select (elts s2) x25))))
  (= lengths4 lengths5)))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (= x25 (to_rep1 (last (rt s2)))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (= x25 x26))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (= lengths4 lengths6))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (= x27 x25))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (= lengths7 lengths4))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (= x216 (mk_int__ref x26)))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (= lengths14 (mk_map__ref1 lengths6)))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (= x29 x27))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2)))))
  (= lengths9 lengths7))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (not
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2))))))
  (= x24 x28))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (not
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2))))))
  (= lengths2 lengths8))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (not
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2))))))
  (= x29 x24))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (=>
  (not
  (and (<= (to_rep1 (first (rt s2))) x24) (<= x24 (to_rep1 (last (rt s2))))))
  (= lengths9 lengths2))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x13 (to_rep1 (last (rt s1))))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x210 x216)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x14 (mk_int__ref x13))))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= lengths10 lengths14)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x211 x29)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x15 x13)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= lengths11 lengths9)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x212 x210)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x16 x14)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= lengths12 lengths10)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x213 x211)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= x17 x15)))

;; H
  (assert
  (=>
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1)))))
  (= lengths13 lengths11)))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1))))))
  (= x212 (mk_int__ref x2))))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1))))))
  (= x16 (mk_int__ref x12))))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1))))))
  (= lengths12 (mk_map__ref1 lengths))))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1))))))
  (= x213 x22)))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1))))))
  (= x17 x12)))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s1))) x12) (<= x12 (to_rep1 (last (rt s1))))))
  (= lengths13 lengths1)))

;; H
  (assert
  (and (= o17 (to_rep1 (last (rt s2)))) (in_range4 (to_rep1 (last (rt s2))))))

;; H
  (assert
  (and
  (= o18 (get_length (to_rep1 (last (rt s1))) o17 (map__content1 lengths12)))
  (and (dynamic_property3 0 last4 o18)
  (= o18 (ite (and (dynamic_property1 first2 last2 (to_rep1 (last (rt s1))))
              (dynamic_property2 first3 last3 o17))
         (to_rep2
         (get (map__content1 lengths12) (to_rep1 (last (rt s1))) o17)) 0)))))

;; H
  (assert (= result4 (ite (= o18 0) true false)))

;; H
  (assert (not (= result4 true)))

;; H
  (assert
  (= string_utilities__longest_common_subsequence__result4 (mk_string__ref
                                                           (mk___t
                                                           string_utilities__longest_common_subsequence__result
                                                           string_utilities__longest_common_subsequence__result1))))

;; H
  (assert
  (= string_utilities__longest_common_subsequence__result5 (mk___t
                                                           string_utilities__longest_common_subsequence__result2
                                                           string_utilities__longest_common_subsequence__result3)))

;; H
  (assert
  (and (= o19 (to_rep1 (last (rt s2)))) (in_range4 (to_rep1 (last (rt s2))))))

;; H
  (assert
  (and
  (= string_utilities__longest_common_subsequence__B_4__last__assume 
  (get_length (to_rep1 (last (rt s1))) o19 (map__content1 lengths12)))
  (and (dynamic_property3 0 last4
  string_utilities__longest_common_subsequence__B_4__last__assume)
  (= string_utilities__longest_common_subsequence__B_4__last__assume 
  (ite (and (dynamic_property1 first2 last2 (to_rep1 (last (rt s1))))
       (dynamic_property2 first3 last3 o19))
  (to_rep2 (get (map__content1 lengths12) (to_rep1 (last (rt s1))) o19)) 0)))))

;; H
  (assert
  (= string_utilities__longest_common_subsequence__B_4__last__assume 
  last8))

;; H
  (assert (in_range1 last8))

;; H
  (assert
  (and (dynamic_property8 1 last8 (to_rep1 result____first)
  (to_rep1 result____last))
  (and (= (to_rep1 result____first) 1) (= (to_rep1 result____last) last8))))

;; H
  (assert
  (and (= us2 (to_rep1 result____last)) (dynamic_property9 1 last11
  (to_rep1 result____last))))

;; H
  (assert (= o20 (to_rep1 result____last)))

;; H
  (assert (= result5 (mk_int__ref rx)))

;; H
  (assert (= rx1 o20))

;; H
  (assert (dynamic_property9 1 last11 rx1))

;; H
  (assert (and (= us3 last2) (dynamic_property1 first2 last2 last2)))

;; H
  (assert (= o21 last2))

;; H
  (assert (= result6 (mk_int__ref x11)))

;; H
  (assert (= x18 o21))

;; H
  (assert (dynamic_property1 first2 last2 x18))

;; H
  (assert (and (= us4 last3) (dynamic_property2 first3 last3 last3)))

;; H
  (assert (= o22 last3))

;; H
  (assert (= result7 (mk_int__ref x21)))

;; H
  (assert (= x214 o22))

;; H
  (assert (dynamic_property2 first3 last3 x214))

;; H
  (assert
  (and
  (and (=> (<= first2 last2) (dynamic_property1 first2 last2 x19))
  (=> (<= first3 last3) (dynamic_property2 first3 last3 x215)))
  (=> (<= 1 last11) (dynamic_property9 1 last11 rx2))))

;; H
  (assert
  (= (to_rep (select (elts s1) x19)) (to_rep (select (elts s2) x215))))

;; H
  (assert (= (to_rep o23) (to_rep (select (elts s1) x19))))

;; H
  (assert (= o24 (store result__ rx2 o23)))

;; H
  (assert (= result8 (mk_map__ref result__)))

;; H
  (assert (= result__1 o24))

;; H
  (assert (not (= rx2 1)))

;; H
  (assert
  (= string_utilities__longest_common_subsequence__result7 (mk_string__ref
                                                           string_utilities__longest_common_subsequence__result6)))

;; H
  (assert
  (= string_utilities__longest_common_subsequence__result8 string_utilities__longest_common_subsequence__result6))

;; H
  (assert (and (= us5 (- rx2 1)) (dynamic_property9 1 last11 (- rx2 1))))

;; H
  (assert (= o25 (- rx2 1)))

;; H
  (assert (= result9 (mk_int__ref rx2)))

;; H
  (assert (= rx3 o25))

;; H
  (assert (and (= temp___273 (- x19 1)) (in_range1 (- x19 1))))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (dynamic_property1 first2 last2 temp___273)))
(check-sat)
