;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 8)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 256)) (= (bv2nat ((_ int2bv 8) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvlshr x n) (lsr x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvashr x n) (asr x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvshl x n) (lsl x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_left1 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_right1 v (bv2nat n)))))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (nth x (bv2nat i)) (nth_bv x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 8)) (i Int))
  (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i)))
  (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun to_int2 ((_ BitVec 16)) Int)

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 65536)) (= (bv2nat ((_ int2bv 16) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvlshr x n) (lsr1 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvashr x n) (asr1 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvshl x n) (lsl1 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_left2 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_right2 v (bv2nat n)))))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (nth1 x (bv2nat i)) (nth_bv1 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 16)) (i Int))
  (=> (and (<= 0 i) (< i 65536))
  (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i)))
  (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))

(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(define-fun to_int3 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort tdigit_index_typeB 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (tdigit_index_typeB tdigit_index_typeB) Bool)

(declare-fun dummy () tdigit_index_typeB)

(declare-datatypes ()
((tdigit_index_typeB__ref
 (mk_tdigit_index_typeB__ref
 (tdigit_index_typeB__content tdigit_index_typeB)))))
(define-fun tdigit_index_typeB__ref___projection ((a tdigit_index_typeB__ref)) tdigit_index_typeB 
  (tdigit_index_typeB__content a))

(declare-sort digit_index_type 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (digit_index_type digit_index_type) Bool)

(declare-fun dummy1 () digit_index_type)

(declare-datatypes ()
((digit_index_type__ref
 (mk_digit_index_type__ref (digit_index_type__content digit_index_type)))))
(define-fun digit_index_type__ref___projection ((a digit_index_type__ref)) digit_index_type 
  (digit_index_type__content a))

(declare-fun to_rep (digit_index_type) Int)

(declare-fun of_rep (Int) digit_index_type)

;; inversion_axiom
  (assert
  (forall ((x digit_index_type))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x digit_index_type)) (! (in_range2
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort octet 0)

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 8))

(define-fun bool_eq2 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))

(declare-fun user_eq2 (octet octet) Bool)

(declare-fun dummy2 () octet)

(declare-datatypes () ((octet__ref (mk_octet__ref (octet__content octet)))))
(define-fun octet__ref___projection ((a octet__ref)) octet (octet__content a))

(declare-fun to_rep1 (octet) (_ BitVec 8))

(declare-fun of_rep1 ((_ BitVec 8)) octet)

;; inversion_axiom
  (assert
  (forall ((x octet))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))) )))

(define-fun to_int4 ((x octet)) Int (bv2nat (to_rep1 x)))

;; range_int_axiom
  (assert
  (forall ((x octet)) (! (uint_in_range
  (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int octet))))))
(declare-fun slide ((Array Int octet) Int Int) (Array Int octet))

;; slide_eq
  (assert
  (forall ((a (Array Int octet)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int octet)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int octet) Int Int (Array Int octet) Int
  Int) (Array Int octet))

;; concat_def
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (octet Int) (Array Int octet))

;; singleton_def
  (assert
  (forall ((v octet))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int octet)) (a__first Int) (a__last Int)
  (b (Array Int octet)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int octet) Int Int (Array Int octet) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (bvult (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (bvugt (to_rep1 (select a (+ j 1))) (to_rep1 (select b (+ i 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep2 (tdigit_index_typeB) Int)

(declare-fun of_rep2 (Int) tdigit_index_typeB)

;; inversion_axiom
  (assert
  (forall ((x tdigit_index_typeB))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x tdigit_index_typeB)) (! (in_range1
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq4 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (tdigit_index_typeB tdigit_index_typeB) Bool)

(declare-fun dummy3 () tdigit_index_typeB)

(declare-datatypes ()
((t17s__ref (mk_t17s__ref (t17s__content tdigit_index_typeB)))))
(define-fun t17s__ref___projection ((a t17s__ref)) tdigit_index_typeB 
  (t17s__content a))

(declare-sort t 0)

(declare-fun first (t) tdigit_index_typeB)

(declare-fun last (t) tdigit_index_typeB)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property range_first range_last low)
                   (dynamic_property range_first range_last high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int octet))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int octet) (elts a))

(define-fun of_array ((a (Array Int octet)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep2 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int octet)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int octet)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment a))))

(define-fun bool_eq5 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep2 (first (rt x)))
                 (to_rep2 (last (rt x))) (elts y) (to_rep2 (first (rt y)))
                 (to_rep2 (last (rt y)))))

(declare-fun user_eq4 (us_t us_t) Bool)

(declare-fun dummy4 () us_t)

(declare-datatypes () ((t18s__ref (mk_t18s__ref (t18s__content us_t)))))
(define-fun t18s__ref___projection ((a t18s__ref)) us_t (t18s__content a))

(declare-datatypes ()
((us_split_discrs
 (mk___split_discrs
 (rec__very_longs__very_long__octet_length digit_index_type)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) digit_index_type 
  (rec__very_longs__very_long__octet_length a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields (rec__very_longs__very_long__long_digits us_t)))))
(define-fun us_split_fields_Long_Digits__projection ((a us_split_fields)) us_t 
  (rec__very_longs__very_long__long_digits a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep_2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(define-fun bool_eq6 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep
                           (rec__very_longs__very_long__octet_length
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__very_longs__very_long__octet_length
                                                  (us_split_discrs1 b))))
                        (= (bool_eq5
                           (rec__very_longs__very_long__long_digits
                           (us_split_fields1 a))
                           (rec__very_longs__very_long__long_digits
                           (us_split_fields1 b))) true))
                   true false))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun very_longs__very_long__octet_length__first__bit () Int)

(declare-fun very_longs__very_long__octet_length__last__bit () Int)

(declare-fun very_longs__very_long__octet_length__position () Int)

;; very_longs__very_long__octet_length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__octet_length__first__bit))

;; very_longs__very_long__octet_length__last__bit_axiom
  (assert
  (< very_longs__very_long__octet_length__first__bit very_longs__very_long__octet_length__last__bit))

;; very_longs__very_long__octet_length__position_axiom
  (assert (<= 0 very_longs__very_long__octet_length__position))

(declare-fun very_longs__very_long__long_digits__first__bit () Int)

(declare-fun very_longs__very_long__long_digits__last__bit () Int)

(declare-fun very_longs__very_long__long_digits__position () Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit very_longs__very_long__long_digits__last__bit))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position))

(declare-fun dummy5 () us_rep)

(declare-datatypes ()
((very_long__ref (mk_very_long__ref (very_long__content us_rep)))))
(define-fun very_long__ref___projection ((a very_long__ref)) us_rep (very_long__content
                                                                    a))

(define-fun dynamic_invariant ((temp___expr_217 us_rep)
  (temp___is_init_214 Bool) (temp___skip_constant_215 Bool)
  (temp___do_toplevel_216 Bool)) Bool (let ((temp___218 (rec__very_longs__very_long__octet_length
                                                        (us_split_discrs1
                                                        temp___expr_217))))
                                      (and (dynamic_property1 1
                                      (to_rep temp___218)
                                      (first1
                                      (rec__very_longs__very_long__long_digits
                                      (us_split_fields1 temp___expr_217)))
                                      (last1
                                      (rec__very_longs__very_long__long_digits
                                      (us_split_fields1 temp___expr_217))))
                                      (and
                                      (= (first1
                                         (rec__very_longs__very_long__long_digits
                                         (us_split_fields1 temp___expr_217))) 1)
                                      (= (last1
                                         (rec__very_longs__very_long__long_digits
                                         (us_split_fields1 temp___expr_217))) 
                                      (to_rep temp___218))))))

(declare-fun l () us_rep)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun r () us_rep)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-sort double_octet 0)

(declare-fun attr__ATTRIBUTE_MODULUS1 () (_ BitVec 16))

(define-fun bool_eq7 ((x (_ BitVec 16))
  (y (_ BitVec 16))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 16))

(declare-fun user_eq6 (double_octet double_octet) Bool)

(declare-fun dummy6 () double_octet)

(declare-datatypes ()
((double_octet__ref
 (mk_double_octet__ref (double_octet__content double_octet)))))
(define-fun double_octet__ref___projection ((a double_octet__ref)) double_octet 
  (double_octet__content a))

(define-fun dynamic_invariant1 ((temp___expr_320 (_ BitVec 16))
  (temp___is_init_317 Bool) (temp___skip_constant_318 Bool)
  (temp___do_toplevel_319 Bool)) Bool true)

(define-fun dynamic_invariant2 ((temp___expr_206 (_ BitVec 8))
  (temp___is_init_203 Bool) (temp___skip_constant_204 Bool)
  (temp___do_toplevel_205 Bool)) Bool true)

(declare-fun takelsb_from16 ((_ BitVec 16)) (_ BitVec 8))

(declare-fun takelsb_from16__function_guard ((_ BitVec 8)
  (_ BitVec 16)) Bool)

(declare-sort natural 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (natural natural) Bool)

(declare-fun dummy7 () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant3 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range3
                                     temp___expr_33)))

(declare-fun shift_right ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun shift_right__function_guard ((_ BitVec 16) (_ BitVec 16)
  Int) Bool)

;; shift_right__post_axiom
  (assert
  (forall ((value (_ BitVec 16)))
  (forall ((count Int))
  (! (=>
     (and (dynamic_invariant1 value true true true) (dynamic_invariant3 count
     true true true))
     (let ((result (shift_right value count)))
     (and
     (= result (bvudiv value (ite (< count 65536)
                             (bvshl ((_ int2bv 16) 1) ((_ int2bv 16) count))
                             ((_ int2bv 16) 0))))
     (dynamic_invariant1 result true false true)))) :pattern ((shift_right
                                                              value count)) ))))

(define-fun dynamic_property2 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (tdigit_index_typeB tdigit_index_typeB) Bool)

(declare-fun dummy8 () tdigit_index_typeB)

(declare-datatypes ()
((tT90bP1__ref (mk_tT90bP1__ref (tT90bP1__content tdigit_index_typeB)))))
(define-fun tT90bP1__ref___projection ((a tT90bP1__ref)) tdigit_index_typeB 
  (tT90bP1__content a))

(declare-sort t1 0)

(declare-fun first2 (t1) tdigit_index_typeB)

(declare-fun last2 (t1) tdigit_index_typeB)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l1 Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l1)
     (and (= (to_rep2 (first2 (mk1 f l1))) f)
     (= (to_rep2 (last2 (mk1 f l1))) l1)))) :pattern ((mk1 f l1)) )))

(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property2 range_first range_last low)
                   (dynamic_property2 range_first range_last high))))))

(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int octet))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int octet) (elts1 a))

(define-fun of_array1 ((a (Array Int octet)) (f Int)
  (l1 Int)) us_t1 (mk___t1 a (mk1 f l1)))

(define-fun first3 ((a us_t1)) Int (to_rep2 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep2 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-fun value__size2 () Int)

(declare-fun object__size2 ((Array Int octet)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int octet)) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment2 a))))

(define-fun bool_eq10 ((x us_t1)
  (y us_t1)) Bool (bool_eq3 (elts1 x) (to_rep2 (first2 (rt1 x)))
                  (to_rep2 (last2 (rt1 x))) (elts1 y)
                  (to_rep2 (first2 (rt1 y))) (to_rep2 (last2 (rt1 y)))))

(declare-fun user_eq9 (us_t1 us_t1) Bool)

(declare-fun dummy9 () us_t1)

(declare-datatypes () ((t90b__ref (mk_t90b__ref (t90b__content us_t1)))))
(define-fun t90b__ref___projection ((a t90b__ref)) us_t1 (t90b__content a))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1 (rec__very_longs__very_long__long_digits1 us_t1)))))
(define-fun us_split_fields_Long_Digits26__projection ((a us_split_fields2)) us_t1 
  (rec__very_longs__very_long__long_digits1 a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_26__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1
 (mk___rep1
 (us_split_discrs2 us_split_discrs)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep_51__projection ((a us_rep1)) us_split_discrs (us_split_discrs2
                                                                a))

(define-fun us_rep_52__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                 a))

(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a)
                                         (mk___split_fields
                                         (let ((temp___182 (rec__very_longs__very_long__long_digits1
                                                           (us_split_fields3
                                                           a))))
                                         (of_array (to_array1 temp___182)
                                         (first3 temp___182)
                                         (last3 temp___182))))))

(define-fun of_base ((r1 us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r1)
                                          (mk___split_fields1
                                          (let ((temp___181 (rec__very_longs__very_long__long_digits
                                                            (us_split_fields1
                                                            r1))))
                                          (of_array1 (to_array temp___181)
                                          (first1 temp___181)
                                          (last1 temp___181))))))

(define-fun bool_eq11 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep
                            (rec__very_longs__very_long__octet_length
                            (us_split_discrs2 a))) (to_rep
                                                   (rec__very_longs__very_long__octet_length
                                                   (us_split_discrs2 b))))
                         (= (bool_eq10
                            (rec__very_longs__very_long__long_digits1
                            (us_split_fields3 a))
                            (rec__very_longs__very_long__long_digits1
                            (us_split_fields3 b))) true))
                    true false))

(declare-fun user_eq10 (us_rep1 us_rep1) Bool)

(define-fun in_range4 ((rec__very_longs__very_long__octet_length1 Int)
  (a us_rep)) Bool (= rec__very_longs__very_long__octet_length1 (to_rep
                                                                (rec__very_longs__very_long__octet_length
                                                                (us_split_discrs1
                                                                a)))))

(declare-fun value__size3 () Int)

(declare-fun object__size3 (us_rep1) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))

(declare-fun very_longs__very_long__octet_length__first__bit1 () Int)

(declare-fun very_longs__very_long__octet_length__last__bit1 () Int)

(declare-fun very_longs__very_long__octet_length__position1 () Int)

;; very_longs__very_long__octet_length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__octet_length__first__bit1))

;; very_longs__very_long__octet_length__last__bit_axiom
  (assert
  (< very_longs__very_long__octet_length__first__bit1 very_longs__very_long__octet_length__last__bit1))

;; very_longs__very_long__octet_length__position_axiom
  (assert (<= 0 very_longs__very_long__octet_length__position1))

(declare-fun very_longs__very_long__long_digits__first__bit1 () Int)

(declare-fun very_longs__very_long__long_digits__last__bit1 () Int)

(declare-fun very_longs__very_long__long_digits__position1 () Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit1))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit1 very_longs__very_long__long_digits__last__bit1))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position1))

(declare-fun dummy10 () us_rep1)

(declare-datatypes ()
((tresultS__ref (mk_tresultS__ref (tresultS__content us_rep1)))))
(define-fun tresultS__ref_5__projection ((a tresultS__ref)) us_rep1 (tresultS__content
                                                                    a))

(define-fun dynamic_invariant4 ((temp___expr_650 us_rep1)
  (temp___is_init_647 Bool) (temp___skip_constant_648 Bool)
  (temp___do_toplevel_649 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_648 true))
                                      (in_range4
                                      (+ (to_rep
                                         (rec__very_longs__very_long__octet_length
                                         (us_split_discrs1 l))) (to_rep
                                                                (rec__very_longs__very_long__octet_length
                                                                (us_split_discrs1
                                                                r))))
                                      (to_base temp___expr_650)))
                                      (and (dynamic_property3 1
                                      (+ (to_rep
                                         (rec__very_longs__very_long__octet_length
                                         (us_split_discrs1 l))) (to_rep
                                                                (rec__very_longs__very_long__octet_length
                                                                (us_split_discrs1
                                                                r))))
                                      (first3
                                      (rec__very_longs__very_long__long_digits1
                                      (us_split_fields3 temp___expr_650)))
                                      (last3
                                      (rec__very_longs__very_long__long_digits1
                                      (us_split_fields3 temp___expr_650))))
                                      (and
                                      (= (first3
                                         (rec__very_longs__very_long__long_digits1
                                         (us_split_fields3 temp___expr_650))) 1)
                                      (= (last3
                                         (rec__very_longs__very_long__long_digits1
                                         (us_split_fields3 temp___expr_650))) (+ 
                                      (to_rep
                                      (rec__very_longs__very_long__octet_length
                                      (us_split_discrs1 l))) (to_rep
                                                             (rec__very_longs__very_long__octet_length
                                                             (us_split_discrs1
                                                             r)))))))))

(define-fun default_initial_assumption ((temp___expr_653 us_rep1)
  (temp___skip_top_level_654 Bool)) Bool (= (to_rep
                                            (rec__very_longs__very_long__octet_length
                                            (us_split_discrs2
                                            temp___expr_653))) (+ (to_rep
                                                                  (rec__very_longs__very_long__octet_length
                                                                  (us_split_discrs1
                                                                  l))) 
  (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 r))))))

(declare-fun result____split_discrs () us_split_discrs)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(define-fun dynamic_property4 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq11 (tdigit_index_typeB tdigit_index_typeB) Bool)

(declare-fun dummy11 () tdigit_index_typeB)

(declare-datatypes ()
((t91b__ref (mk_t91b__ref (t91b__content tdigit_index_typeB)))))
(define-fun t91b__ref___projection ((a t91b__ref)) tdigit_index_typeB 
  (t91b__content a))

(declare-sort t2 0)

(declare-fun first4 (t2) tdigit_index_typeB)

(declare-fun last4 (t2) tdigit_index_typeB)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l1 Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l1)
     (and (= (to_rep2 (first4 (mk2 f l1))) f)
     (= (to_rep2 (last4 (mk2 f l1))) l1)))) :pattern ((mk2 f l1)) )))

(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property4 range_first range_last low)
                   (dynamic_property4 range_first range_last high))))))

(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int octet))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int octet) (elts2 a))

(define-fun of_array2 ((a (Array Int octet)) (f Int)
  (l1 Int)) us_t2 (mk___t2 a (mk2 f l1)))

(define-fun first5 ((a us_t2)) Int (to_rep2 (first4 (rt2 a))))

(define-fun last5 ((a us_t2)) Int (to_rep2 (last4 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a))
                                    (+ (- (last5 a) (first5 a)) 1) 0))

(declare-fun value__size4 () Int)

(declare-fun object__size4 ((Array Int octet)) Int)

(declare-fun value__component__size2 () Int)

(declare-fun object__component__size2 ((Array Int octet)) Int)

(declare-fun value__alignment4 () Int)

(declare-fun object__alignment4 ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size4 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment4 a))))

(define-fun bool_eq13 ((x us_t2)
  (y us_t2)) Bool (bool_eq3 (elts2 x) (to_rep2 (first4 (rt2 x)))
                  (to_rep2 (last4 (rt2 x))) (elts2 y)
                  (to_rep2 (first4 (rt2 y))) (to_rep2 (last4 (rt2 y)))))

(declare-fun user_eq12 (us_t2 us_t2) Bool)

(declare-fun dummy12 () us_t2)

(declare-datatypes () ((t92b__ref (mk_t92b__ref (t92b__content us_t2)))))
(define-fun t92b__ref___projection ((a t92b__ref)) us_t2 (t92b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-sort t3 0)

(declare-fun first6 (t3) tdigit_index_typeB)

(declare-fun last6 (t3) tdigit_index_typeB)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l1 Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l1)
     (and (= (to_rep2 (first6 (mk3 f l1))) f)
     (= (to_rep2 (last6 (mk3 f l1))) l1)))) :pattern ((mk3 f l1)) )))

(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int octet))(rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int octet) (elts3 a))

(define-fun of_array3 ((a (Array Int octet)) (f Int)
  (l1 Int)) us_t3 (mk___t3 a (mk3 f l1)))

(define-fun first7 ((a us_t3)) Int (to_rep2 (first6 (rt3 a))))

(define-fun last7 ((a us_t3)) Int (to_rep2 (last6 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a))
                                    (+ (- (last7 a) (first7 a)) 1) 0))

(declare-fun value__size5 () Int)

(declare-fun object__size5 ((Array Int octet)) Int)

(declare-fun value__component__size3 () Int)

(declare-fun object__component__size3 ((Array Int octet)) Int)

(declare-fun value__alignment5 () Int)

(declare-fun object__alignment5 ((Array Int octet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__size5 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int octet))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a (Array Int octet))) (<= 0 (object__alignment5 a))))

(define-fun bool_eq14 ((x us_t3)
  (y us_t3)) Bool (bool_eq3 (elts3 x) (to_rep2 (first6 (rt3 x)))
                  (to_rep2 (last6 (rt3 x))) (elts3 y)
                  (to_rep2 (first6 (rt3 y))) (to_rep2 (last6 (rt3 y)))))

(declare-fun user_eq13 (us_t3 us_t3) Bool)

(declare-fun dummy13 () us_t3)

(declare-datatypes ()
((digits_array_type__ref
 (mk_digits_array_type__ref (digits_array_type__content us_t3)))))
(define-fun digits_array_type__ref___projection ((a digits_array_type__ref)) us_t3 
  (digits_array_type__content a))

(declare-fun temp___1020 ((_ BitVec 8) Int Int) us_t2)

;; def_axiom
  (assert
  (forall ((temp___1022 (_ BitVec 8)))
  (forall ((temp___1023 Int) (temp___1024 Int))
  (let ((temp___1021 (temp___1020 temp___1022 temp___1023 temp___1024)))
  (and
  (=> (dynamic_property6 1 2147483647 temp___1023 temp___1024)
  (and (= (first5 temp___1021) temp___1023)
  (= (last5 temp___1021) temp___1024)))
  (forall ((temp___1025 Int))
  (= (select (to_array2 temp___1021) temp___1025) (of_rep1 temp___1022))))))))

(define-fun dynamic_invariant5 ((temp___expr_200 Int)
  (temp___is_init_197 Bool) (temp___skip_constant_198 Bool)
  (temp___do_toplevel_199 Bool)) Bool (=>
                                      (or (= temp___is_init_197 true)
                                      (<= 1 2147483647)) (in_range2
                                      temp___expr_200)))

(declare-fun result____split_fields () (Array Int octet))

(declare-fun result____split_fields1 () t1)

(declare-fun j () Int)

(declare-fun us () Int)

(declare-fun us1 () Int)

(declare-fun o () Int)

(declare-fun us2 () Int)

(declare-fun temp___1027 () (Array Int octet))

(declare-fun temp___10271 () t2)

(declare-fun temp___1028 () (Array Int octet))

(declare-fun temp___10281 () t1)

(declare-fun o1 () (Array Int octet))

(declare-fun o2 () t1)

(declare-fun o3 () (Array Int octet))

(declare-fun o4 () t1)

(declare-fun temp___1031 () digit_index_type)

(declare-fun temp___10311 () (Array Int octet))

(declare-fun temp___10312 () t1)

(declare-fun temp___1047 () (_ BitVec 16))

(declare-fun temp___1046 () (_ BitVec 16))

(declare-fun temp___1045 () (_ BitVec 16))

(declare-fun temp___1044 () (_ BitVec 16))

(declare-fun temp___1041 () us_rep1)

(declare-fun temp___1040 () (_ BitVec 16))

(declare-fun o5 () Int)

(declare-fun o6 () octet)

(declare-fun o7 () (_ BitVec 8))

(declare-fun o8 () (_ BitVec 16))

(declare-fun o9 () Int)

(declare-fun o10 () octet)

(declare-fun o11 () (_ BitVec 8))

(declare-fun o12 () (_ BitVec 16))

(declare-fun o13 () Int)

(declare-fun temp___1035 () Int)

(declare-fun o14 () Int)

(declare-fun o15 () octet)

(declare-fun o16 () (_ BitVec 8))

(declare-fun o17 () (_ BitVec 16))

(declare-fun o18 () Int)

(declare-fun temp___1037 () Int)

(declare-fun o19 () (_ BitVec 8))

(declare-fun o20 () octet)

(declare-fun o21 () Int)

(declare-fun o22 () (Array Int octet))

(declare-fun o23 () us_t1)

(declare-fun o24 () us_split_fields2)

(declare-fun temp___1039 () us_rep1)

(declare-fun o25 () (_ BitVec 16))

(declare-fun o26 () (_ BitVec 8))

(declare-fun o27 () octet)

(declare-fun result () us_split_fields__ref1)

(declare-fun result____split_fields2 () us_split_fields2)

(declare-fun result1 () int__ref)

(declare-fun j1 () Int)

(declare-fun result____split_fields3 () us_split_fields2)

(declare-fun l_digit () (_ BitVec 16))

(declare-fun r_digit () (_ BitVec 16))

(declare-fun t_digit () (_ BitVec 16))

(declare-fun temp () (_ BitVec 16))

(declare-fun carry () (_ BitVec 16))

(declare-fun j2 () Int)

(declare-fun i () Int)

(declare-fun result2 () t__ref1)

(declare-fun carry1 () (_ BitVec 16))

(declare-fun result3 () int__ref)

(declare-fun i1 () Int)

(declare-fun result____split_fields4 () us_split_fields2)

(declare-fun l_digit1 () (_ BitVec 16))

(declare-fun r_digit1 () (_ BitVec 16))

(declare-fun t_digit1 () (_ BitVec 16))

(declare-fun temp1 () (_ BitVec 16))

(declare-fun carry2 () (_ BitVec 16))

(declare-fun i2 () Int)

(declare-fun result4 () t__ref1)

(declare-fun l_digit2 () (_ BitVec 16))

(declare-fun result5 () t__ref1)

(declare-fun r_digit2 () (_ BitVec 16))

(declare-fun result6 () t__ref1)

(declare-fun t_digit2 () (_ BitVec 16))

(declare-fun result7 () t__ref1)

(declare-fun temp2 () (_ BitVec 16))

(declare-fun result8 () us_split_fields__ref1)

(declare-fun result____split_fields5 () us_split_fields2)

(declare-fun result9 () t__ref1)

(declare-fun carry3 () (_ BitVec 16))

(declare-fun result____split_fields6 () us_split_fields__ref1)

(declare-fun l_digit3 () t__ref1)

(declare-fun r_digit3 () t__ref1)

(declare-fun t_digit3 () t__ref1)

(declare-fun temp3 () t__ref1)

(declare-fun carry4 () t__ref1)

(declare-fun i3 () int__ref)

(declare-fun result____split_fields7 () us_split_fields2)

(declare-fun l_digit4 () (_ BitVec 16))

(declare-fun r_digit4 () (_ BitVec 16))

(declare-fun t_digit4 () (_ BitVec 16))

(declare-fun temp4 () (_ BitVec 16))

(declare-fun carry5 () (_ BitVec 16))

(declare-fun i4 () Int)

(declare-fun result____split_fields8 () us_split_fields__ref1)

(declare-fun l_digit5 () t__ref1)

(declare-fun r_digit5 () t__ref1)

(declare-fun t_digit5 () t__ref1)

(declare-fun temp5 () t__ref1)

(declare-fun carry6 () t__ref1)

(declare-fun i5 () int__ref)

(declare-fun result____split_fields9 () us_split_fields2)

(declare-fun l_digit6 () (_ BitVec 16))

(declare-fun r_digit6 () (_ BitVec 16))

(declare-fun t_digit6 () (_ BitVec 16))

(declare-fun temp6 () (_ BitVec 16))

(declare-fun carry7 () (_ BitVec 16))

(declare-fun i6 () Int)

;; H
  (assert (dynamic_invariant l true false true))

;; H
  (assert (dynamic_invariant r true false true))

;; H
  (assert
  (and
  (= us (to_rep
        (rec__very_longs__very_long__octet_length (us_split_discrs1 r))))
  (in_range2
  (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 r))))))

;; H
  (assert
  (and
  (= us1 (to_rep
         (rec__very_longs__very_long__octet_length (us_split_discrs1 l))))
  (in_range2
  (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 l))))))

;; H
  (assert
  (and
  (= o (+ (to_rep
          (rec__very_longs__very_long__octet_length (us_split_discrs1 l))) 
  (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 r)))))
  (in_range1
  (+ (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 l))) 
  (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 r)))))))

;; H
  (assert (and (= us2 o) (in_range2 o)))

;; H
  (assert
  (= (to_rep
     (rec__very_longs__very_long__octet_length result____split_discrs)) (+ 
  (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 l))) 
  (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 r))))))

;; H
  (assert (dynamic_invariant4
  (mk___rep1 result____split_discrs
  (mk___split_fields1
  (mk___t1 result____split_fields result____split_fields1))) false false
  true))

;; H
  (assert
  (= (to_rep2
     (first4
     (rt2
     (temp___1020 ((_ int2bv 8) 0) 1
     (+ (to_rep
        (rec__very_longs__very_long__octet_length (us_split_discrs1 l))) 
     (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 r)))))))) 1))

;; H
  (assert
  (= (to_rep2
     (last4
     (rt2
     (temp___1020 ((_ int2bv 8) 0) 1
     (+ (to_rep
        (rec__very_longs__very_long__octet_length (us_split_discrs1 l))) 
     (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 r)))))))) (+ 
  (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 l))) 
  (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 r))))))

;; H
  (assert
  (= (mk___t2 temp___1027 temp___10271) (temp___1020 ((_ int2bv 8) 0) 1
                                        (+ (to_rep
                                           (rec__very_longs__very_long__octet_length
                                           (us_split_discrs1 l))) (to_rep
                                                                  (rec__very_longs__very_long__octet_length
                                                                  (us_split_discrs1
                                                                  r)))))))

;; H
  (assert
  (= (ite (<= (to_rep2 (first4 temp___10271)) (to_rep2 (last4 temp___10271)))
     (+ (- (to_rep2 (last4 temp___10271)) (to_rep2 (first4 temp___10271))) 1)
     0) (ite (<= 1 (+ (to_rep
                      (rec__very_longs__very_long__octet_length
                      (us_split_discrs1 l))) (to_rep
                                             (rec__very_longs__very_long__octet_length
                                             (us_split_discrs1 r)))))
        (+ (- (+ (to_rep
                 (rec__very_longs__very_long__octet_length
                 (us_split_discrs1 l))) (to_rep
                                        (rec__very_longs__very_long__octet_length
                                        (us_split_discrs1 r)))) 1) 1)
        0)))

;; H
  (assert (= temp___1027 temp___1028))

;; H
  (assert
  (= (mk1 (to_rep2 (first4 temp___10271)) (to_rep2 (last4 temp___10271))) 
  temp___10281))

;; H
  (assert
  (= (ite (<= (to_rep2 (first2 temp___10281)) (to_rep2 (last2 temp___10281)))
     (+ (- (to_rep2 (last2 temp___10281)) (to_rep2 (first2 temp___10281))) 1)
     0) (ite (<= (to_rep2 (first2 result____split_fields1)) (to_rep2
                                                            (last2
                                                            result____split_fields1)))
        (+ (- (to_rep2 (last2 result____split_fields1)) (to_rep2
                                                        (first2
                                                        result____split_fields1))) 1)
        0)))

;; H
  (assert (= (mk___t1 o1 o2) (mk___t1 temp___1028 temp___10281)))

;; H
  (assert (= o3 o1))

;; H
  (assert (= o4 o2))

;; H
  (assert (= result____split_discrs (mk___split_discrs temp___1031)))

;; H
  (assert (= temp___10311 o3))

;; H
  (assert (= temp___10312 o4))

;; H
  (assert
  (= result (mk___split_fields__ref1
            (mk___split_fields1
            (mk___t1 result____split_fields result____split_fields1)))))

;; H
  (assert
  (= result____split_fields2 (mk___split_fields1
                             (mk___t1 temp___10311 temp___10312))))

;; H
  (assert (= result____split_discrs (mk___split_discrs temp___1031)))

;; H
  (assert (= result1 (mk_int__ref j)))

;; H
  (assert (= j1 1))

;; H
  (assert (<= 1 j1))

;; H
  (assert
  (<= j1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))

;; H
  (assert
  (and (dynamic_invariant4
  (mk___rep1 result____split_discrs result____split_fields3) false true true)
  (and (<= 1 j2)
  (<= j2 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))))

;; H
  (assert (= result2 (mk_t__ref1 carry)))

;; H
  (assert (= carry1 ((_ int2bv 16) 0)))

;; H
  (assert (= result3 (mk_int__ref i)))

;; H
  (assert (= i1 1))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp___1047 t_digit)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp___1046 r_digit)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp___1045 l_digit)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp___1044 carry1)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp___1041 (mk___rep1 result____split_discrs result____split_fields3))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp___1040 temp)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (and (dynamic_invariant4
  (mk___rep1 result____split_discrs result____split_fields4) false true true)
  (and (<= 1 i2)
  (<= i2 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (and
  (<= (to_rep2
      (first
      (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))) 
  i2)
  (<= i2 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o5 i2)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o6 (select (elts
                (rec__very_longs__very_long__long_digits
                (us_split_fields1 l))) o5))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o7 (to_rep1 o6))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o8 ((_ zero_extend 8) o7))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result4 (mk_t__ref1 l_digit1))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= l_digit2 o8)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (and
  (<= (to_rep2
      (first
      (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))) 
  j2)
  (<= j2 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o9 j2)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o10 (select (elts
                 (rec__very_longs__very_long__long_digits
                 (us_split_fields1 r))) o9))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o11 (to_rep1 o10))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o12 ((_ zero_extend 8) o11))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result5 (mk_t__ref1 r_digit1))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= r_digit2 o12)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (and (= o13 (+ i2 j2)) (in_range1 (+ i2 j2)))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp___1035 (- o13 1))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (and
  (<= (to_rep2
      (first2
      (rt1
      (rec__very_longs__very_long__long_digits1 result____split_fields4)))) 
  temp___1035)
  (<= temp___1035 (to_rep2
                  (last2
                  (rt1
                  (rec__very_longs__very_long__long_digits1
                  result____split_fields4))))))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o14 temp___1035)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o15 (select (elts1
                 (rec__very_longs__very_long__long_digits1
                 result____split_fields4)) o14))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o16 (to_rep1 o15))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o17 ((_ zero_extend 8) o16))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result6 (mk_t__ref1 t_digit1))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= t_digit2 o17)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result7 (mk_t__ref1 temp1))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp2 (bvadd (bvadd (bvmul l_digit2 r_digit2) t_digit2) carry2))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o19 (takelsb_from16 temp2))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= (to_rep1 o20) o19)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (and (= o18 (+ i2 j2)) (in_range1 (+ i2 j2)))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp___1037 (- o18 1))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (and
  (<= (to_rep2
      (first2
      (rt1
      (rec__very_longs__very_long__long_digits1 result____split_fields4)))) 
  temp___1037)
  (<= temp___1037 (to_rep2
                  (last2
                  (rt1
                  (rec__very_longs__very_long__long_digits1
                  result____split_fields4))))))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o21 temp___1037)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o22 (store (elts1
                (rec__very_longs__very_long__long_digits1
                result____split_fields4)) o21 o20))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o23 (mk___t1 o22
         (rt1
         (rec__very_longs__very_long__long_digits1 result____split_fields4))))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= o24 (mk___split_fields1 o23))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp___1039 (mk___rep1 result____split_discrs o24))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result8 (mk___split_fields__ref1 result____split_fields4))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result____split_fields5 (us_split_fields3 temp___1039))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result____split_discrs (us_split_discrs2 temp___1039))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (and (= o25 (shift_right temp2 8))
  (= o25 (bvudiv temp2 (ite (< 8 65536)
                       (bvshl ((_ int2bv 16) 1) ((_ int2bv 16) 8))
                       ((_ int2bv 16) 0)))))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result9 (mk_t__ref1 carry2))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= carry3 o25)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= i2 (to_rep2
        (last
        (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= i3 (mk_int__ref i2))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= carry4 (mk_t__ref1 carry3))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp3 (mk_t__ref1 temp2))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= t_digit3 (mk_t__ref1 t_digit2))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= r_digit3 (mk_t__ref1 r_digit2))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= l_digit3 (mk_t__ref1 l_digit2))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result____split_fields6 (mk___split_fields__ref1
                             result____split_fields5))))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= i4 i2)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= carry5 carry3)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp4 temp2)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= t_digit4 t_digit2)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= r_digit4 r_digit2)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= l_digit4 l_digit2)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result____split_fields7 result____split_fields5)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= i5 i3)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= carry6 carry4)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp5 temp3)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= t_digit5 t_digit3)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= r_digit5 r_digit3)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= l_digit5 l_digit3)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result____split_fields8 result____split_fields6)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= i6 i4)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= carry7 carry5)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= temp6 temp4)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= t_digit6 t_digit4)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= r_digit6 r_digit4)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= l_digit6 l_digit4)))

;; H
  (assert
  (=>
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))
  (= result____split_fields9 result____split_fields7)))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= i5 (mk_int__ref i1))))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= carry6 (mk_t__ref1 carry1))))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= temp5 (mk_t__ref1 temp))))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= t_digit5 (mk_t__ref1 t_digit))))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= r_digit5 (mk_t__ref1 r_digit))))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= l_digit5 (mk_t__ref1 l_digit))))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= result____split_fields8 (mk___split_fields__ref1
                             result____split_fields3))))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= i6 i1)))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= carry7 carry1)))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= temp6 temp)))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= t_digit6 t_digit)))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= r_digit6 r_digit)))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= l_digit6 l_digit)))

;; H
  (assert
  (=>
  (not
  (and (<= 1 i1)
  (<= i1 (to_rep2
         (last
         (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))
  (= result____split_fields9 result____split_fields3)))

;; H
  (assert (= o26 (takelsb_from16 (t__content1 carry6))))

;; H
  (assert (= (to_rep1 o27) o26))

(assert
;; WP_parameter_def
 ;; File "very_longs.ads", line 85, characters 0-0
  (not (in_range1
  (+ (to_rep (rec__very_longs__very_long__octet_length (us_split_discrs1 l))) 
  j2))))
(check-sat)
