;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(declare-sort card 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 52)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (card card) Bool)

(declare-fun dummy4 () card)

(declare-datatypes () ((card__ref (mk_card__ref (card__content card)))))
(define-fun card__ref___projection ((a card__ref)) card (card__content a))

(declare-fun to_rep2 (card) Int)

(declare-fun of_rep2 (Int) card)

;; inversion_axiom
  (assert
  (forall ((x card)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x card)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-datatypes ()
((map__ref1 (mk_map__ref1 (map__content1 (Array Int card))))))
(declare-fun slide1 ((Array Int card) Int Int) (Array Int card))

;; slide_eq
  (assert
  (forall ((a (Array Int card)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int card)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array Int card) Int Int (Array Int card) Int
  Int) (Array Int card))

;; concat_def
  (assert
  (forall ((a (Array Int card)) (b (Array Int card)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 (card Int) (Array Int card))

;; singleton_def
  (assert
  (forall ((v card))
  (forall ((i Int))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq6 ((a (Array Int card)) (a__first Int) (a__last Int)
  (b (Array Int card)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_151 Int))
                           (=>
                           (and (<= a__first temp___idx_151)
                           (<= temp___idx_151 a__last))
                           (= (to_rep2 (select a temp___idx_151)) (to_rep2
                                                                  (select b (+ (- b__first a__first) temp___idx_151)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int card)) (b (Array Int card)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq6 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_151 Int))
  (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last))
  (= (to_rep2 (select a temp___idx_151)) (to_rep2
                                         (select b (+ (- b__first a__first) temp___idx_151)))))))))))

(declare-fun compare1 ((Array Int card) Int Int (Array Int card) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int card)) (b (Array Int card)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare1 a a_first a_last b b_first b_last) 0)
     (= (bool_eq6 a a_first a_last b b_first b_last) true)) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int card)) (b (Array Int card)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare1 a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq6 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep2 (select a (+ i 1))) (to_rep2 (select b (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int card)) (b (Array Int card)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare1 a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq6 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep2 (select b (+ i 1))) (to_rep2 (select a (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int card))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int card) (elts1 a))

(define-fun of_array1 ((a (Array Int card)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int card)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int card)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int card)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int card))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int card))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int card))) (<= 0 (object__alignment1 a))))

(define-fun bool_eq7 ((x us_t1)
  (y us_t1)) Bool (bool_eq6 (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last2 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))

(declare-fun user_eq5 (us_t1 us_t1) Bool)

(declare-fun dummy5 () us_t1)

(declare-datatypes ()
((cardstack__ref (mk_cardstack__ref (cardstack__content us_t1)))))
(define-fun cardstack__ref___projection ((a cardstack__ref)) us_t1 (cardstack__content
                                                                   a))

(declare-sort cardindex 0)

(define-fun in_range5 ((x Int)) Bool (and (<= (- 1) x) (<= x 100)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (cardindex cardindex) Bool)

(declare-fun dummy6 () cardindex)

(declare-datatypes ()
((cardindex__ref (mk_cardindex__ref (cardindex__content cardindex)))))
(define-fun cardindex__ref___projection ((a cardindex__ref)) cardindex 
  (cardindex__content a))

(define-fun dynamic_invariant ((temp___expr_556 Int)
  (temp___is_init_553 Bool) (temp___skip_constant_554 Bool)
  (temp___do_toplevel_555 Bool)) Bool (=>
                                      (or (= temp___is_init_553 true)
                                      (<= (- 1) 100)) (in_range5
                                      temp___expr_556)))

(declare-fun to_rep3 (cardindex) Int)

(declare-fun of_rep3 (Int) cardindex)

;; inversion_axiom
  (assert
  (forall ((x cardindex))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x cardindex)) (! (in_range5
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-sort tcardarrayD1 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 99)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (tcardarrayD1 tcardarrayD1) Bool)

(declare-fun dummy7 () tcardarrayD1)

(declare-datatypes ()
((tcardarrayD1__ref
 (mk_tcardarrayD1__ref (tcardarrayD1__content tcardarrayD1)))))
(define-fun tcardarrayD1__ref___projection ((a tcardarrayD1__ref)) tcardarrayD1 
  (tcardarrayD1__content a))

(declare-sort tindexarrayD1 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 99)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (tindexarrayD1 tindexarrayD1) Bool)

(declare-fun dummy8 () tindexarrayD1)

(declare-datatypes ()
((tindexarrayD1__ref
 (mk_tindexarrayD1__ref (tindexarrayD1__content tindexarrayD1)))))
(define-fun tindexarrayD1__ref___projection ((a tindexarrayD1__ref)) tindexarrayD1 
  (tindexarrayD1__content a))

(declare-datatypes ()
((map__ref2 (mk_map__ref2 (map__content2 (Array Int cardindex))))))
(declare-fun slide2 ((Array Int cardindex) Int Int) (Array Int cardindex))

;; slide_eq
  (assert
  (forall ((a (Array Int cardindex)))
  (forall ((first4 Int))
  (! (= (slide2 a first4 first4) a) :pattern ((slide2 a first4 first4)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int cardindex)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide2 a old_first new_first) i)) ))))))

(declare-fun concat3 ((Array Int cardindex) Int Int (Array Int cardindex) Int
  Int) (Array Int cardindex))

;; concat_def
  (assert
  (forall ((a (Array Int cardindex)) (b (Array Int cardindex)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat3 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton3 (cardindex Int) (Array Int cardindex))

;; singleton_def
  (assert
  (forall ((v cardindex))
  (forall ((i Int))
  (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i)) ))))

(define-fun bool_eq11 ((a (Array Int cardindex)) (a__first Int) (a__last Int)
  (b (Array Int cardindex)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_152 Int))
                           (=>
                           (and (<= a__first temp___idx_152)
                           (<= temp___idx_152 a__last))
                           (= (to_rep3 (select a temp___idx_152)) (to_rep3
                                                                  (select b (+ (- b__first a__first) temp___idx_152)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int cardindex)) (b (Array Int cardindex)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq11 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_152 Int))
  (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last))
  (= (to_rep3 (select a temp___idx_152)) (to_rep3
                                         (select b (+ (- b__first a__first) temp___idx_152)))))))))))

(declare-fun compare2 ((Array Int cardindex) Int Int (Array Int cardindex)
  Int Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int cardindex)) (b (Array Int cardindex)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare2 a a_first a_last b b_first b_last) 0)
     (= (bool_eq11 a a_first a_last b b_first b_last) true)) :pattern (
  (compare2 a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int cardindex)) (b (Array Int cardindex)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare2 a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq11 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep3 (select a (+ i 1))) (to_rep3 (select b (+ j 1))))))))))) :pattern (
  (compare2 a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int cardindex)) (b (Array Int cardindex)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare2 a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq11 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep3 (select b (+ i 1))) (to_rep3 (select a (+ j 1))))))))))) :pattern (
  (compare2 a a_first a_last b b_first b_last)) ))))

(declare-fun dummy9 () (Array Int cardindex))

(declare-fun value__size2 () Int)

(declare-fun object__size2 ((Array Int cardindex)) Int)

(declare-fun value__component__size2 () Int)

(declare-fun object__component__size2 ((Array Int cardindex)) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 ((Array Int cardindex)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int cardindex))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int cardindex))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int cardindex))) (<= 0 (object__alignment2 a))))

(declare-fun user_eq9 ((Array Int cardindex) (Array Int cardindex)) Bool)

(declare-datatypes ()
((map__ref3 (mk_map__ref3 (map__content3 (Array Int (Array Int cardindex)))))))
(declare-fun slide3 ((Array Int (Array Int cardindex)) Int
  Int) (Array Int (Array Int cardindex)))

;; slide_eq
  (assert
  (forall ((a (Array Int (Array Int cardindex))))
  (forall ((first4 Int))
  (! (= (slide3 a first4 first4) a) :pattern ((slide3 a first4 first4)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int (Array Int cardindex))))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide3 a old_first new_first) i)) ))))))

(declare-fun concat4 ((Array Int (Array Int cardindex)) Int Int
  (Array Int (Array Int cardindex)) Int
  Int) (Array Int (Array Int cardindex)))

;; concat_def
  (assert
  (forall ((a (Array Int (Array Int cardindex)))
  (b (Array Int (Array Int cardindex))))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat4 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton4 ((Array Int cardindex)
  Int) (Array Int (Array Int cardindex)))

;; singleton_def
  (assert
  (forall ((v (Array Int cardindex)))
  (forall ((i Int))
  (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i)) ))))

(define-fun bool_eq12 ((a (Array Int (Array Int cardindex))) (a__first Int)
  (a__last Int) (b (Array Int (Array Int cardindex))) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_153 Int))
                           (=>
                           (and (<= a__first temp___idx_153)
                           (<= temp___idx_153 a__last))
                           (= (bool_eq11 (select a temp___idx_153) 0 99
                              (select b (+ (- b__first a__first) temp___idx_153))
                              0 99) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int (Array Int cardindex)))
  (b (Array Int (Array Int cardindex))))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq12 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_153 Int))
  (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last))
  (= (bool_eq11 (select a temp___idx_153) 0 99
     (select b (+ (- b__first a__first) temp___idx_153)) 0 99) true))))))))

(declare-fun dummy10 () (Array Int card))

(declare-fun value__size3 () Int)

(declare-fun object__size3 ((Array Int card)) Int)

(declare-fun value__component__size3 () Int)

(declare-fun object__component__size3 ((Array Int card)) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 ((Array Int card)) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a (Array Int card))) (<= 0 (object__size3 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int card))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a (Array Int card))) (<= 0 (object__alignment3 a))))

(declare-fun user_eq10 ((Array Int card) (Array Int card)) Bool)

(declare-fun dummy11 () (Array Int (Array Int cardindex)))

(declare-fun value__size4 () Int)

(declare-fun object__size4 ((Array Int (Array Int cardindex))) Int)

(declare-fun value__component__size4 () Int)

(declare-fun object__component__size4 ((Array Int (Array Int cardindex))) Int)

(declare-fun value__alignment4 () Int)

(declare-fun object__alignment4 ((Array Int (Array Int cardindex))) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert
  (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__size4 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size4))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int (Array Int cardindex))))
  (<= 0 (object__component__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert
  (forall ((a (Array Int (Array Int cardindex))))
  (<= 0 (object__alignment4 a))))

(declare-fun user_eq11 ((Array Int (Array Int cardindex))
  (Array Int (Array Int cardindex))) Bool)

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__patience__state__numelts cardindex)(rec__patience__state__values (Array Int card))(rec__patience__state__numstacks cardindex)(rec__patience__state__stacksizes (Array Int cardindex))(rec__patience__state__stacks (Array Int (Array Int cardindex)))(rec__patience__state__posstack (Array Int cardindex))(rec__patience__state__posheight (Array Int cardindex))(rec__patience__state__preds (Array Int cardindex))))))
(define-fun us_split_fields_NumElts__projection ((a us_split_fields)) cardindex 
  (rec__patience__state__numelts a))

(define-fun us_split_fields_Values__projection ((a us_split_fields)) (Array Int card) 
  (rec__patience__state__values a))

(define-fun us_split_fields_NumStacks__projection ((a us_split_fields)) cardindex 
  (rec__patience__state__numstacks a))

(define-fun us_split_fields_StackSizes__projection ((a us_split_fields)) (Array Int cardindex) 
  (rec__patience__state__stacksizes a))

(define-fun us_split_fields_Stacks__projection ((a us_split_fields)) (Array Int (Array Int cardindex)) 
  (rec__patience__state__stacks a))

(define-fun us_split_fields_PosStack__projection ((a us_split_fields)) (Array Int cardindex) 
  (rec__patience__state__posstack a))

(define-fun us_split_fields_PosHeight__projection ((a us_split_fields)) (Array Int cardindex) 
  (rec__patience__state__posheight a))

(define-fun us_split_fields_Preds__projection ((a us_split_fields)) (Array Int cardindex) 
  (rec__patience__state__preds a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref_2__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep_3__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(define-fun bool_eq13 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (= (to_rep3
                           (rec__patience__state__numelts
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__patience__state__numelts
                                                  (us_split_fields1 b))))
                        (= (bool_eq6
                           (rec__patience__state__values
                           (us_split_fields1 a)) 0 99
                           (rec__patience__state__values
                           (us_split_fields1 b)) 0 99) true))
                        (= (to_rep3
                           (rec__patience__state__numstacks
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__patience__state__numstacks
                                                  (us_split_fields1 b)))))
                        (= (bool_eq11
                           (rec__patience__state__stacksizes
                           (us_split_fields1 a)) 0 99
                           (rec__patience__state__stacksizes
                           (us_split_fields1 b)) 0 99) true))
                        (= (bool_eq12
                           (rec__patience__state__stacks
                           (us_split_fields1 a)) 0 99
                           (rec__patience__state__stacks
                           (us_split_fields1 b)) 0 99) true))
                        (= (bool_eq11
                           (rec__patience__state__posstack
                           (us_split_fields1 a)) 0 99
                           (rec__patience__state__posstack
                           (us_split_fields1 b)) 0 99) true))
                        (= (bool_eq11
                           (rec__patience__state__posheight
                           (us_split_fields1 a)) 0 99
                           (rec__patience__state__posheight
                           (us_split_fields1 b)) 0 99) true))
                        (= (bool_eq11
                           (rec__patience__state__preds (us_split_fields1 a))
                           0 99
                           (rec__patience__state__preds (us_split_fields1 b))
                           0 99) true))
                   true false))

(declare-fun user_eq12 (us_rep us_rep) Bool)

(declare-fun value__size5 () Int)

(declare-fun object__size5 (us_rep) Int)

(declare-fun value__alignment5 () Int)

(declare-fun object__alignment5 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment5 a))))

(declare-fun patience__state__numelts__first__bit () Int)

(declare-fun patience__state__numelts__last__bit () Int)

(declare-fun patience__state__numelts__position () Int)

;; patience__state__numelts__first__bit_axiom
  (assert (<= 0 patience__state__numelts__first__bit))

;; patience__state__numelts__last__bit_axiom
  (assert
  (< patience__state__numelts__first__bit patience__state__numelts__last__bit))

;; patience__state__numelts__position_axiom
  (assert (<= 0 patience__state__numelts__position))

(declare-fun patience__state__values__first__bit () Int)

(declare-fun patience__state__values__last__bit () Int)

(declare-fun patience__state__values__position () Int)

;; patience__state__values__first__bit_axiom
  (assert (<= 0 patience__state__values__first__bit))

;; patience__state__values__last__bit_axiom
  (assert
  (< patience__state__values__first__bit patience__state__values__last__bit))

;; patience__state__values__position_axiom
  (assert (<= 0 patience__state__values__position))

(declare-fun patience__state__numstacks__first__bit () Int)

(declare-fun patience__state__numstacks__last__bit () Int)

(declare-fun patience__state__numstacks__position () Int)

;; patience__state__numstacks__first__bit_axiom
  (assert (<= 0 patience__state__numstacks__first__bit))

;; patience__state__numstacks__last__bit_axiom
  (assert
  (< patience__state__numstacks__first__bit patience__state__numstacks__last__bit))

;; patience__state__numstacks__position_axiom
  (assert (<= 0 patience__state__numstacks__position))

(declare-fun patience__state__stacksizes__first__bit () Int)

(declare-fun patience__state__stacksizes__last__bit () Int)

(declare-fun patience__state__stacksizes__position () Int)

;; patience__state__stacksizes__first__bit_axiom
  (assert (<= 0 patience__state__stacksizes__first__bit))

;; patience__state__stacksizes__last__bit_axiom
  (assert
  (< patience__state__stacksizes__first__bit patience__state__stacksizes__last__bit))

;; patience__state__stacksizes__position_axiom
  (assert (<= 0 patience__state__stacksizes__position))

(declare-fun patience__state__stacks__first__bit () Int)

(declare-fun patience__state__stacks__last__bit () Int)

(declare-fun patience__state__stacks__position () Int)

;; patience__state__stacks__first__bit_axiom
  (assert (<= 0 patience__state__stacks__first__bit))

;; patience__state__stacks__last__bit_axiom
  (assert
  (< patience__state__stacks__first__bit patience__state__stacks__last__bit))

;; patience__state__stacks__position_axiom
  (assert (<= 0 patience__state__stacks__position))

(declare-fun patience__state__posstack__first__bit () Int)

(declare-fun patience__state__posstack__last__bit () Int)

(declare-fun patience__state__posstack__position () Int)

;; patience__state__posstack__first__bit_axiom
  (assert (<= 0 patience__state__posstack__first__bit))

;; patience__state__posstack__last__bit_axiom
  (assert
  (< patience__state__posstack__first__bit patience__state__posstack__last__bit))

;; patience__state__posstack__position_axiom
  (assert (<= 0 patience__state__posstack__position))

(declare-fun patience__state__posheight__first__bit () Int)

(declare-fun patience__state__posheight__last__bit () Int)

(declare-fun patience__state__posheight__position () Int)

;; patience__state__posheight__first__bit_axiom
  (assert (<= 0 patience__state__posheight__first__bit))

;; patience__state__posheight__last__bit_axiom
  (assert
  (< patience__state__posheight__first__bit patience__state__posheight__last__bit))

;; patience__state__posheight__position_axiom
  (assert (<= 0 patience__state__posheight__position))

(declare-fun patience__state__preds__first__bit () Int)

(declare-fun patience__state__preds__last__bit () Int)

(declare-fun patience__state__preds__position () Int)

;; patience__state__preds__first__bit_axiom
  (assert (<= 0 patience__state__preds__first__bit))

;; patience__state__preds__last__bit_axiom
  (assert
  (< patience__state__preds__first__bit patience__state__preds__last__bit))

;; patience__state__preds__position_axiom
  (assert (<= 0 patience__state__preds__position))

(declare-fun dummy12 () us_rep)

(declare-datatypes () ((state__ref (mk_state__ref (state__content us_rep)))))
(define-fun state__ref___projection ((a state__ref)) us_rep (state__content
                                                            a))

(declare-fun inv (us_rep) Bool)

(declare-fun inv__function_guard (Bool us_rep) Bool)

(declare-fun playgame (us_t1) us_rep)

(declare-fun playgame__function_guard (us_rep us_t1) Bool)

(declare-sort t48b 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 7)))

(define-fun bool_eq14 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq13 (t48b t48b) Bool)

(declare-fun dummy13 () t48b)

(declare-datatypes () ((t48b__ref (mk_t48b__ref (t48b__content t48b)))))
(define-fun t48b__ref___projection ((a t48b__ref)) t48b (t48b__content a))

(declare-fun input__first () integer)

(declare-fun input__last () integer)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun c60b () us_rep)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun test_patience__input__aggregate_def (Int Int Int Int Int Int
  Int) (Array Int card))

;; def_axiom
  (assert
  (forall ((temp___765 Int) (temp___766 Int) (temp___767 Int)
  (temp___768 Int) (temp___769 Int) (temp___770 Int) (temp___771 Int))
  (let ((temp___764 (test_patience__input__aggregate_def temp___765
                    temp___766 temp___767 temp___768 temp___769 temp___770
                    temp___771)))
  (and
  (and
  (and
  (and
  (and
  (and (= (select temp___764 1) (of_rep2 temp___765))
  (= (select temp___764 2) (of_rep2 temp___766)))
  (= (select temp___764 3) (of_rep2 temp___767)))
  (= (select temp___764 4) (of_rep2 temp___768)))
  (= (select temp___764 5) (of_rep2 temp___769)))
  (= (select temp___764 6) (of_rep2 temp___770)))
  (= (select temp___764 7) (of_rep2 temp___771))))))

(declare-fun temp___String_Literal_776 (tuple0) (Array Int character))

;; temp___String_Literal_776__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 1)) 84)
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 2)) 101))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 3)) 115))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 4)) 116))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 5)) 32))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 6)) 111))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 7)) 102))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 9)) 97))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 11)) 112))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 12)) 97))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 13)) 116))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 14)) 105))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 15)) 101))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 16)) 110))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 17)) 99))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 18)) 101))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 19)) 32))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 20)) 103))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 21)) 97))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 22)) 109))
     (= (to_rep (select (temp___String_Literal_776 us_void_param) 23)) 101)) :pattern (
  (temp___String_Literal_776 us_void_param)) )))

(declare-fun temp___String_Literal_777 (tuple0) (Array Int character))

;; temp___String_Literal_777__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_777 us_void_param) 1)) 45)
     (= (to_rep (select (temp___String_Literal_777 us_void_param) 2)) 45))
     (= (to_rep (select (temp___String_Literal_777 us_void_param) 3)) 45))
     (= (to_rep (select (temp___String_Literal_777 us_void_param) 4)) 45))
     (= (to_rep (select (temp___String_Literal_777 us_void_param) 5)) 45))
     (= (to_rep (select (temp___String_Literal_777 us_void_param) 6)) 45))
     (= (to_rep (select (temp___String_Literal_777 us_void_param) 7)) 45))
     (= (to_rep (select (temp___String_Literal_777 us_void_param) 8)) 45)) :pattern (
  (temp___String_Literal_777 us_void_param)) )))

(declare-fun temp___String_Literal_778 (tuple0) (Array Int character))

;; temp___String_Literal_778__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 1)) 67)
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 2)) 97))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 3)) 114))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 4)) 100))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 5)) 83))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 6)) 116))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 7)) 97))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 8)) 99))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 9)) 107))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 11)) 40))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 12)) 102))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 13)) 105))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 14)) 114))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 15)) 115))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 16)) 116))
     (= (to_rep (select (temp___String_Literal_778 us_void_param) 17)) 61)) :pattern (
  (temp___String_Literal_778 us_void_param)) )))

(declare-fun temp___String_Literal_781 (tuple0) (Array Int character))

;; temp___String_Literal_781__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_781 us_void_param) 1)) 41)
     (= (to_rep (select (temp___String_Literal_781 us_void_param) 2)) 32))
     (= (to_rep (select (temp___String_Literal_781 us_void_param) 3)) 61))
     (= (to_rep (select (temp___String_Literal_781 us_void_param) 4)) 32)) :pattern (
  (temp___String_Literal_781 us_void_param)) )))

(declare-fun temp___String_Literal_784 (tuple0) (Array Int character))

;; temp___String_Literal_784__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (= (to_rep (select (temp___String_Literal_784 us_void_param) 1)) 32) :pattern (
  (temp___String_Literal_784 us_void_param)) )))

(declare-fun temp___String_Literal_789 (tuple0) (Array Int character))

;; temp___String_Literal_789__def_axiom
  (assert true)

(declare-fun temp___String_Literal_790 (tuple0) (Array Int character))

;; temp___String_Literal_790__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_790 us_void_param) 1)) 45)
     (= (to_rep (select (temp___String_Literal_790 us_void_param) 2)) 45))
     (= (to_rep (select (temp___String_Literal_790 us_void_param) 3)) 45))
     (= (to_rep (select (temp___String_Literal_790 us_void_param) 4)) 45))
     (= (to_rep (select (temp___String_Literal_790 us_void_param) 5)) 45))
     (= (to_rep (select (temp___String_Literal_790 us_void_param) 6)) 45))
     (= (to_rep (select (temp___String_Literal_790 us_void_param) 7)) 45))
     (= (to_rep (select (temp___String_Literal_790 us_void_param) 8)) 45)) :pattern (
  (temp___String_Literal_790 us_void_param)) )))

(declare-fun temp___String_Literal_792 (tuple0) (Array Int character))

;; temp___String_Literal_792__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_792 us_void_param) 1)) 45)
     (= (to_rep (select (temp___String_Literal_792 us_void_param) 2)) 45))
     (= (to_rep (select (temp___String_Literal_792 us_void_param) 3)) 45))
     (= (to_rep (select (temp___String_Literal_792 us_void_param) 4)) 45))
     (= (to_rep (select (temp___String_Literal_792 us_void_param) 5)) 45))
     (= (to_rep (select (temp___String_Literal_792 us_void_param) 6)) 45))
     (= (to_rep (select (temp___String_Literal_792 us_void_param) 7)) 45))
     (= (to_rep (select (temp___String_Literal_792 us_void_param) 8)) 45)) :pattern (
  (temp___String_Literal_792 us_void_param)) )))

(declare-fun temp___String_Literal_793 (tuple0) (Array Int character))

;; temp___String_Literal_793__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 1)) 78)
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 2)) 117))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 3)) 109))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 4)) 98))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 5)) 101))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 6)) 114))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 8)) 111))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 9)) 102))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 11)) 101))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 12)) 108))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 13)) 116))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 14)) 115))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 15)) 32))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 16)) 61))
     (= (to_rep (select (temp___String_Literal_793 us_void_param) 17)) 32)) :pattern (
  (temp___String_Literal_793 us_void_param)) )))

(declare-fun temp___String_Literal_796 (tuple0) (Array Int character))

;; temp___String_Literal_796__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 1)) 67)
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 2)) 97))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 3)) 114))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 4)) 100))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 5)) 32))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 6)) 118))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 7)) 97))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 8)) 108))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 9)) 117))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 10)) 101))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 11)) 115))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 12)) 32))
     (= (to_rep (select (temp___String_Literal_796 us_void_param) 13)) 61)) :pattern (
  (temp___String_Literal_796 us_void_param)) )))

(declare-fun temp___String_Literal_797 (tuple0) (Array Int character))

;; temp___String_Literal_797__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (= (to_rep (select (temp___String_Literal_797 us_void_param) 1)) 32) :pattern (
  (temp___String_Literal_797 us_void_param)) )))

(declare-fun temp___String_Literal_803 (tuple0) (Array Int character))

;; temp___String_Literal_803__def_axiom
  (assert true)

(declare-fun temp___String_Literal_804 (tuple0) (Array Int character))

;; temp___String_Literal_804__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 1)) 78)
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 2)) 117))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 3)) 109))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 4)) 98))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 5)) 101))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 6)) 114))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 8)) 111))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 9)) 102))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 11)) 115))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 12)) 116))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 13)) 97))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 14)) 99))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 15)) 107))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 16)) 115))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 17)) 32))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 18)) 61))
     (= (to_rep (select (temp___String_Literal_804 us_void_param) 19)) 32)) :pattern (
  (temp___String_Literal_804 us_void_param)) )))

(declare-fun temp___String_Literal_808 (tuple0) (Array Int character))

;; temp___String_Literal_808__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_808 us_void_param) 1)) 83)
     (= (to_rep (select (temp___String_Literal_808 us_void_param) 2)) 116))
     (= (to_rep (select (temp___String_Literal_808 us_void_param) 3)) 97))
     (= (to_rep (select (temp___String_Literal_808 us_void_param) 4)) 99))
     (= (to_rep (select (temp___String_Literal_808 us_void_param) 5)) 107))
     (= (to_rep (select (temp___String_Literal_808 us_void_param) 6)) 32)) :pattern (
  (temp___String_Literal_808 us_void_param)) )))

(declare-fun temp___String_Literal_811 (tuple0) (Array Int character))

;; temp___String_Literal_811__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_811 us_void_param) 1)) 32)
     (= (to_rep (select (temp___String_Literal_811 us_void_param) 2)) 104))
     (= (to_rep (select (temp___String_Literal_811 us_void_param) 3)) 97))
     (= (to_rep (select (temp___String_Literal_811 us_void_param) 4)) 115))
     (= (to_rep (select (temp___String_Literal_811 us_void_param) 5)) 32))
     (= (to_rep (select (temp___String_Literal_811 us_void_param) 6)) 115))
     (= (to_rep (select (temp___String_Literal_811 us_void_param) 7)) 105))
     (= (to_rep (select (temp___String_Literal_811 us_void_param) 8)) 122))
     (= (to_rep (select (temp___String_Literal_811 us_void_param) 9)) 101))
     (= (to_rep (select (temp___String_Literal_811 us_void_param) 10)) 32)) :pattern (
  (temp___String_Literal_811 us_void_param)) )))

(declare-fun temp___String_Literal_817 (tuple0) (Array Int character))

;; temp___String_Literal_817__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_817 us_void_param) 1)) 32)
     (= (to_rep (select (temp___String_Literal_817 us_void_param) 2)) 58)) :pattern (
  (temp___String_Literal_817 us_void_param)) )))

(declare-fun temp___String_Literal_822 (tuple0) (Array Int character))

;; temp___String_Literal_822__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (= (to_rep (select (temp___String_Literal_822 us_void_param) 1)) 32) :pattern (
  (temp___String_Literal_822 us_void_param)) )))

(declare-fun temp___String_Literal_825 (tuple0) (Array Int character))

;; temp___String_Literal_825__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_825 us_void_param) 1)) 32)
     (= (to_rep (select (temp___String_Literal_825 us_void_param) 2)) 61))
     (= (to_rep (select (temp___String_Literal_825 us_void_param) 3)) 62)) :pattern (
  (temp___String_Literal_825 us_void_param)) )))

(declare-fun temp___String_Literal_836 (tuple0) (Array Int character))

;; temp___String_Literal_836__def_axiom
  (assert true)

(declare-fun temp___String_Literal_839 (tuple0) (Array Int character))

;; temp___String_Literal_839__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_839 us_void_param) 1)) 45)
     (= (to_rep (select (temp___String_Literal_839 us_void_param) 2)) 45))
     (= (to_rep (select (temp___String_Literal_839 us_void_param) 3)) 45))
     (= (to_rep (select (temp___String_Literal_839 us_void_param) 4)) 45))
     (= (to_rep (select (temp___String_Literal_839 us_void_param) 5)) 45))
     (= (to_rep (select (temp___String_Literal_839 us_void_param) 6)) 45))
     (= (to_rep (select (temp___String_Literal_839 us_void_param) 7)) 45))
     (= (to_rep (select (temp___String_Literal_839 us_void_param) 8)) 45)) :pattern (
  (temp___String_Literal_839 us_void_param)) )))

(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant3 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant4 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(define-fun dynamic_invariant5 ((temp___expr_545 Int)
  (temp___is_init_542 Bool) (temp___skip_constant_543 Bool)
  (temp___do_toplevel_544 Bool)) Bool (=>
                                      (or (= temp___is_init_542 true)
                                      (<= 1 52)) (in_range4 temp___expr_545)))

(define-fun dynamic_invariant6 ((temp___expr_551 us_t1)
  (temp___is_init_548 Bool) (temp___skip_constant_549 Bool)
  (temp___do_toplevel_550 Bool)) Bool (=>
                                      (not (= temp___skip_constant_549 true))
                                      (dynamic_property1 1 2147483647
                                      (first3 temp___expr_551)
                                      (last3 temp___expr_551))))

;; inv__post_axiom
  (assert true)

;; inv__def_axiom
  (assert
  (forall ((s us_rep))
  (! (= (= (inv s) true)
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (<= 0 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s))))
     (<= (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s))) 
     (to_rep3 (rec__patience__state__numelts (us_split_fields1 s)))))
     (<= (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))) 100))
     (or (= (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))) 0)
     (< 0 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s))))))
     (forall ((i Int))
     (=>
     (and (<= 0 i)
     (<= i (- (to_rep3
              (rec__patience__state__numstacks (us_split_fields1 s))) 1)))
     (and
     (and
     (<= 1 (to_rep3
           (let ((temp___685 (rec__patience__state__stacksizes
                             (us_split_fields1 s))))
           (select temp___685 i))))
     (<= (to_rep3
         (let ((temp___686 (rec__patience__state__stacksizes
                           (us_split_fields1 s))))
         (select temp___686 i))) (to_rep3
                                 (rec__patience__state__numelts
                                 (us_split_fields1 s)))))
     (forall ((j Int))
     (=>
     (and (<= 0 j)
     (<= j (- (to_rep3
              (let ((temp___687 (rec__patience__state__stacksizes
                                (us_split_fields1 s))))
              (select temp___687 i))) 1)))
     (and
     (<= 0 (to_rep3
           (let ((temp___689 (let ((temp___688 (rec__patience__state__stacks
                                               (us_split_fields1 s))))
                             (select temp___688 i))))
           (select temp___689 j))))
     (< (to_rep3
        (let ((temp___691 (let ((temp___690 (rec__patience__state__stacks
                                            (us_split_fields1 s))))
                          (select temp___690 i))))
        (select temp___691 j))) (to_rep3
                                (rec__patience__state__numelts
                                (us_split_fields1 s)))))))))))
     (forall ((i Int))
     (=>
     (and (<= 0 i)
     (<= i (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))) 1)))
     (and
     (and
     (and
     (<= 0 (to_rep3
           (let ((temp___692 (rec__patience__state__posstack
                             (us_split_fields1 s))))
           (select temp___692 i))))
     (<= (to_rep3
         (let ((temp___692 (rec__patience__state__posstack
                           (us_split_fields1 s))))
         (select temp___692 i))) (- (to_rep3
                                    (rec__patience__state__numstacks
                                    (us_split_fields1 s))) 1)))
     (and
     (<= 0 (to_rep3
           (let ((temp___693 (rec__patience__state__posheight
                             (us_split_fields1 s))))
           (select temp___693 i))))
     (<= (to_rep3
         (let ((temp___693 (rec__patience__state__posheight
                           (us_split_fields1 s))))
         (select temp___693 i))) (- (to_rep3
                                    (let ((temp___694 (rec__patience__state__stacksizes
                                                      (us_split_fields1 s))))
                                    (select temp___694 (to_rep3
                                                       (let ((temp___695 
                                                       (rec__patience__state__posstack
                                                       (us_split_fields1 s))))
                                                       (select temp___695 i)))))) 1))))
     (= (to_rep3
        (let ((temp___698 (let ((temp___696 (rec__patience__state__stacks
                                            (us_split_fields1 s))))
                          (select temp___696 (to_rep3
                                             (let ((temp___697 (rec__patience__state__posstack
                                                               (us_split_fields1
                                                               s))))
                                             (select temp___697 i)))))))
        (select temp___698 (to_rep3
                           (let ((temp___699 (rec__patience__state__posheight
                                             (us_split_fields1 s))))
                           (select temp___699 i)))))) i)))))
     (forall ((ist Int))
     (=>
     (and (<= 0 ist)
     (<= ist (- (to_rep3
                (rec__patience__state__numstacks (us_split_fields1 s))) 1)))
     (forall ((ip Int))
     (=>
     (and (<= 0 ip)
     (<= ip (- (to_rep3
               (let ((temp___700 (rec__patience__state__stacksizes
                                 (us_split_fields1 s))))
               (select temp___700 ist))) 1)))
     (and
     (= ist (to_rep3
            (let ((temp___701 (rec__patience__state__posstack
                              (us_split_fields1 s))))
            (select temp___701 (to_rep3
                               (let ((temp___703 (let ((temp___702 (rec__patience__state__stacks
                                                                   (us_split_fields1
                                                                   s))))
                                                 (select temp___702 ist))))
                               (select temp___703 ip)))))))
     (= ip (to_rep3
           (let ((temp___704 (rec__patience__state__posheight
                             (us_split_fields1 s))))
           (select temp___704 (to_rep3
                              (let ((temp___706 (let ((temp___705 (rec__patience__state__stacks
                                                                  (us_split_fields1
                                                                  s))))
                                                (select temp___705 ist))))
                              (select temp___706 ip)))))))))))))
     (forall ((i Int))
     (=>
     (and (<= 0 i)
     (<= i (- (to_rep3
              (rec__patience__state__numstacks (us_split_fields1 s))) 1)))
     (forall ((j Int))
     (=>
     (and (<= 0 j)
     (<= j (- (to_rep3
              (let ((temp___707 (rec__patience__state__stacksizes
                                (us_split_fields1 s))))
              (select temp___707 i))) 2)))
     (forall ((k Int))
     (=>
     (and (<= (+ j 1) k)
     (<= k (- (to_rep3
              (let ((temp___708 (rec__patience__state__stacksizes
                                (us_split_fields1 s))))
              (select temp___708 i))) 1)))
     (< (to_rep3
        (let ((temp___710 (let ((temp___709 (rec__patience__state__stacks
                                            (us_split_fields1 s))))
                          (select temp___709 i))))
        (select temp___710 j))) (to_rep3
                                (let ((temp___712 (let ((temp___711 (rec__patience__state__stacks
                                                                    (us_split_fields1
                                                                    s))))
                                                  (select temp___711 i))))
                                (select temp___712 k)))))))))))
     (forall ((i Int))
     (=>
     (and (<= 0 i)
     (<= i (- (to_rep3
              (rec__patience__state__numstacks (us_split_fields1 s))) 1)))
     (forall ((j Int))
     (=>
     (and (<= 0 j)
     (<= j (- (to_rep3
              (let ((temp___713 (rec__patience__state__stacksizes
                                (us_split_fields1 s))))
              (select temp___713 i))) 2)))
     (forall ((k Int))
     (=>
     (and (<= (+ j 1) k)
     (<= k (- (to_rep3
              (let ((temp___714 (rec__patience__state__stacksizes
                                (us_split_fields1 s))))
              (select temp___714 i))) 1)))
     (<= (to_rep2
         (let ((temp___718 (rec__patience__state__values
                           (us_split_fields1 s))))
         (select temp___718 (to_rep3
                            (let ((temp___720 (let ((temp___719 (rec__patience__state__stacks
                                                                (us_split_fields1
                                                                s))))
                                              (select temp___719 i))))
                            (select temp___720 k)))))) (to_rep2
                                                       (let ((temp___715 
                                                       (rec__patience__state__values
                                                       (us_split_fields1 s))))
                                                       (select temp___715 
                                                       (to_rep3
                                                       (let ((temp___717 
                                                       (let ((temp___716 
                                                       (rec__patience__state__stacks
                                                       (us_split_fields1 s))))
                                                       (select temp___716 i))))
                                                       (select temp___717 j))))))))))))))
     (forall ((i Int))
     (=>
     (and (<= 0 i)
     (<= i (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))) 1)))
     (and
     (and
     (and
     (<= (- 1) (to_rep3
               (let ((temp___721 (rec__patience__state__preds
                                 (us_split_fields1 s))))
               (select temp___721 i))))
     (<= (to_rep3
         (let ((temp___721 (rec__patience__state__preds (us_split_fields1 s))))
         (select temp___721 i))) (- (to_rep3
                                    (rec__patience__state__numelts
                                    (us_split_fields1 s))) 1)))
     (< (to_rep3
        (let ((temp___722 (rec__patience__state__preds (us_split_fields1 s))))
        (select temp___722 i))) i))
     (ite (< (to_rep3
             (let ((temp___731 (rec__patience__state__preds
                               (us_split_fields1 s))))
             (select temp___731 i))) 0)
     (= (to_rep3
        (let ((temp___723 (rec__patience__state__posstack
                          (us_split_fields1 s))))
        (select temp___723 i))) 0)
     (and
     (and
     (< (to_rep2
        (let ((temp___724 (rec__patience__state__values (us_split_fields1 s))))
        (select temp___724 (to_rep3
                           (let ((temp___725 (rec__patience__state__preds
                                             (us_split_fields1 s))))
                           (select temp___725 i)))))) (to_rep2
                                                      (let ((temp___726 
                                                      (rec__patience__state__values
                                                      (us_split_fields1 s))))
                                                      (select temp___726 i))))
     (< 0 (to_rep3
          (let ((temp___727 (rec__patience__state__posstack
                            (us_split_fields1 s))))
          (select temp___727 i)))))
     (= (to_rep3
        (let ((temp___728 (rec__patience__state__posstack
                          (us_split_fields1 s))))
        (select temp___728 (to_rep3
                           (let ((temp___729 (rec__patience__state__preds
                                             (us_split_fields1 s))))
                           (select temp___729 i)))))) (- (to_rep3
                                                         (let ((temp___730 
                                                         (rec__patience__state__posstack
                                                         (us_split_fields1 s))))
                                                         (select temp___730 i))) 1))))))))) :pattern (
  (inv s)) )))

(declare-fun input () (Array Int card))

(declare-fun s__split_fields () cardindex)

(declare-fun s__split_fields1 () (Array Int card))

(declare-fun s__split_fields2 () cardindex)

(declare-fun s__split_fields3 () (Array Int cardindex))

(declare-fun s__split_fields4 () (Array Int (Array Int cardindex)))

(declare-fun s__split_fields5 () (Array Int cardindex))

(declare-fun s__split_fields6 () (Array Int cardindex))

(declare-fun s__split_fields7 () (Array Int cardindex))

(declare-fun i () Int)

(declare-fun i1 () Int)

(declare-fun i2 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Int)

(declare-fun temp___782 () (Array Int character))

(declare-fun temp___7821 () t)

(declare-fun o6 () Int)

(declare-fun o7 () Int)

(declare-fun o8 () Int)

(declare-fun o9 () Int)

(declare-fun o10 () Int)

(declare-fun o11 () Int)

(declare-fun o12 () (Array Int character))

(declare-fun o13 () t)

(declare-fun o14 () Int)

(declare-fun o15 () card)

(declare-fun o16 () Int)

(declare-fun o17 () us_image)

(declare-fun temp___786 () (Array Int character))

(declare-fun temp___7861 () t)

(declare-fun o18 () Int)

(declare-fun o19 () Int)

(declare-fun o20 () Int)

(declare-fun o21 () Int)

(declare-fun o22 () Int)

(declare-fun o23 () Int)

(declare-fun o24 () (Array Int character))

(declare-fun o25 () t)

(declare-fun temp___791 () cardindex)

(declare-fun temp___7911 () (Array Int card))

(declare-fun temp___7912 () cardindex)

(declare-fun temp___7913 () (Array Int cardindex))

(declare-fun temp___7914 () (Array Int (Array Int cardindex)))

(declare-fun temp___7915 () (Array Int cardindex))

(declare-fun temp___7916 () (Array Int cardindex))

(declare-fun temp___7917 () (Array Int cardindex))

(declare-fun o26 () Int)

(declare-fun o27 () Int)

(declare-fun o28 () Int)

(declare-fun o29 () Int)

(declare-fun o30 () Int)

(declare-fun o31 () Int)

(declare-fun o32 () (Array Int character))

(declare-fun o33 () t)

(declare-fun o34 () Int)

(declare-fun o35 () Int)

(declare-fun o36 () Int)

(declare-fun o37 () Int)

(declare-fun o38 () Int)

(declare-fun o39 () Int)

(declare-fun o40 () (Array Int character))

(declare-fun o41 () t)

(declare-fun o42 () Int)

(declare-fun o43 () Int)

(declare-fun o44 () Int)

(declare-fun o45 () Int)

(declare-fun o46 () Int)

(declare-fun o47 () Int)

(declare-fun o48 () (Array Int character))

(declare-fun o49 () t)

(declare-fun o50 () Int)

(declare-fun o51 () Int)

(declare-fun o52 () Int)

(declare-fun o53 () Int)

(declare-fun o54 () Int)

(declare-fun o55 () Int)

(declare-fun temp___812 () (Array Int character))

(declare-fun temp___8121 () t)

(declare-fun o56 () Int)

(declare-fun o57 () Int)

(declare-fun o58 () Int)

(declare-fun o59 () Int)

(declare-fun o60 () Int)

(declare-fun o61 () Int)

(declare-fun temp___815 () (Array Int character))

(declare-fun temp___8151 () t)

(declare-fun o62 () Int)

(declare-fun o63 () Int)

(declare-fun o64 () Int)

(declare-fun o65 () Int)

(declare-fun o66 () Int)

(declare-fun o67 () Int)

(declare-fun temp___818 () (Array Int character))

(declare-fun temp___8181 () t)

(declare-fun o68 () Int)

(declare-fun o69 () Int)

(declare-fun o70 () Int)

(declare-fun o71 () Int)

(declare-fun o72 () Int)

(declare-fun o73 () Int)

(declare-fun o74 () us_t)

(declare-fun o75 () Int)

(declare-fun o76 () cardindex)

(declare-fun o77 () Int)

(declare-fun o78 () Int)

(declare-fun o79 () card)

(declare-fun o80 () Int)

(declare-fun o81 () us_image)

(declare-fun temp___830 () us_t)

(declare-fun o82 () Int)

(declare-fun o83 () Int)

(declare-fun o84 () Int)

(declare-fun o85 () Int)

(declare-fun o86 () Int)

(declare-fun o87 () Int)

(declare-fun temp___826 () us_t)

(declare-fun o88 () Int)

(declare-fun o89 () Int)

(declare-fun o90 () Int)

(declare-fun o91 () Int)

(declare-fun o92 () Int)

(declare-fun o93 () Int)

(declare-fun temp___829 () us_t)

(declare-fun o94 () Int)

(declare-fun o95 () Int)

(declare-fun o96 () Int)

(declare-fun o97 () Int)

(declare-fun o98 () Int)

(declare-fun result () map__ref1)

(declare-fun input1 () (Array Int card))

(declare-fun result1 () int__ref)

(declare-fun i3 () Int)

(declare-fun i4 () Int)

(declare-fun i5 () int__ref)

(declare-fun i6 () Int)

(declare-fun i7 () int__ref)

(declare-fun i8 () Int)

(declare-fun result2 () us_split_fields__ref)

(declare-fun s__split_fields8 () us_split_fields)

(declare-fun result3 () int__ref)

(declare-fun i9 () Int)

(declare-fun i10 () Int)

(declare-fun i11 () int__ref)

(declare-fun i12 () Int)

(declare-fun i13 () int__ref)

(declare-fun i14 () Int)

(declare-fun result4 () int__ref)

(declare-fun i15 () Int)

(declare-fun i16 () Int)

(declare-fun size () Int)

(declare-fun idx () Int)

(declare-fun j () Int)

(declare-fun result5 () int__ref)

(declare-fun size1 () Int)

(declare-fun result6 () int__ref)

(declare-fun j1 () Int)

(declare-fun idx1 () Int)

(declare-fun j2 () Int)

(declare-fun result7 () int__ref)

(declare-fun idx2 () Int)

(define-fun temp___7918 () us_rep (mk___rep
                                  (mk___split_fields temp___791 temp___7911
                                  temp___7912 temp___7913 temp___7914
                                  temp___7915 temp___7916 temp___7917)))

;; H
  (assert (= result (mk_map__ref1 input)))

;; H
  (assert (= input1 (test_patience__input__aggregate_def 9 7 10 9 5 4 10)))

;; H
  (assert (= (to_rep1 input__first) (to_rep1 (first2 (mk1 1 7)))))

;; H
  (assert (= (to_rep1 input__last) (to_rep1 (last2 (mk1 1 7)))))

;; H
  (assert (dynamic_property1 1 2147483647 (to_rep1 input__first)
  (to_rep1 input__last)))

;; H
  (assert
  (=>
  (<= (to_rep1
      (first
      (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) 
  (to_rep1
  (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))))
  (= o (+ (- (to_rep1
             (last
             (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) 
  (to_rep1
  (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1
      (first
      (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) 
  (to_rep1
  (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))))))
  (= o 0)))

;; H
  (assert (=> (<= 1 17) (= o1 (+ (- 17 1) 1))))

;; H
  (assert (=> (not (<= 1 17)) (= o1 0)))

;; H
  (assert (= o2 (+ o1 o)))

;; H
  (assert (= o3 (+ 1 o2)))

;; H
  (assert (= o4 (- o3 1)))

;; H
  (assert (and (= o5 o4) (in_range2 o4)))

;; H
  (assert
  (= (concat1 (temp___String_Literal_778 Tuple0) 1 17
     (elts (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))
     (to_rep1
     (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))))
     (to_rep1
     (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))))) 
  temp___782))

;; H
  (assert (= (mk 1 o5) temp___7821))

;; H
  (assert
  (=> (= (length (mk___t temp___782 temp___7821)) 0)
  (= (temp___String_Literal_781 Tuple0) o12)))

;; H
  (assert
  (=> (= (length (mk___t temp___782 temp___7821)) 0) (= (mk 1 4) o13)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___782 temp___7821)) 0))
  (=> (<= 1 4) (= o6 (+ (- 4 1) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___782 temp___7821)) 0))
  (=> (not (<= 1 4)) (= o6 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___782 temp___7821)) 0))
  (=> (<= (to_rep1 (first temp___7821)) (to_rep1 (last temp___7821)))
  (= o7 (+ (- (to_rep1 (last temp___7821)) (to_rep1 (first temp___7821))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___782 temp___7821)) 0))
  (=> (not (<= (to_rep1 (first temp___7821)) (to_rep1 (last temp___7821))))
  (= o7 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (= o8 (+ o7 o6))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___782 temp___7821)) 0))
  (= o9 (+ (to_rep1 (first temp___7821)) o8))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (= o10 (- o9 1))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___782 temp___7821)) 0))
  (and (= o11 o10) (in_range2 o10))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___782 temp___7821)) 0))
  (= (concat1 temp___782 (to_rep1 (first temp___7821))
     (to_rep1 (last temp___7821)) (temp___String_Literal_781 Tuple0) 1 4) 
  o12)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___782 temp___7821)) 0))
  (= (mk (to_rep1 (first temp___7821)) o11) o13)))

;; H
  (assert (= result1 (mk_int__ref i)))

;; H
  (assert (= i3 (to_rep1 input__first)))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (and (<= (to_rep1 input__first) i4) (<= i4 (to_rep1 input__last)))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (and (<= (to_rep1 input__first) i4) (<= i4 (to_rep1 input__last)))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= o14 i4)))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= o15 (select input1 o14))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= o16 (to_rep2 o15))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= o17 (attr__ATTRIBUTE_IMAGE4 o16))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= (mk___t temp___786 temp___7861) (to_string o17))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (=> (<= (to_rep1 (first temp___7861)) (to_rep1 (last temp___7861)))
  (= o18 (+ (- (to_rep1 (last temp___7861)) (to_rep1 (first temp___7861))) 1)))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (=> (not (<= (to_rep1 (first temp___7861)) (to_rep1 (last temp___7861))))
  (= o18 0))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (=> (<= 1 1) (= o19 (+ (- 1 1) 1)))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (=> (not (<= 1 1)) (= o19 0))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= o20 (+ o19 o18))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= o21 (+ 1 o20))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= o22 (- o21 1))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (and (= o23 o22) (in_range2 o22))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= o24 (concat1 (temp___String_Literal_784 Tuple0) 1 1 temp___786
         (to_rep1 (first temp___7861)) (to_rep1 (last temp___7861))))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= o25 (mk 1 o23))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= i4 (to_rep1 input__last))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= i5 (mk_int__ref i4))))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= i6 i4)))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= i7 i5)))

;; H
  (assert
  (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))
  (= i8 i6)))

;; H
  (assert
  (=>
  (not (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))))
  (= i7 (mk_int__ref i3))))

;; H
  (assert
  (=>
  (not (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))))
  (= i8 i3)))

;; H
  (assert
  (and
  (= temp___7918 (playgame
                 (mk___t1 input1
                 (mk1 (to_rep1 input__first) (to_rep1 input__last)))))
  (= (inv temp___7918) true)))

;; H
  (assert
  (= result2 (mk___split_fields__ref
             (mk___split_fields s__split_fields s__split_fields1
             s__split_fields2 s__split_fields3 s__split_fields4
             s__split_fields5 s__split_fields6 s__split_fields7))))

;; H
  (assert
  (= s__split_fields8 (mk___split_fields temp___791 temp___7911 temp___7912
                      temp___7913 temp___7914 temp___7915 temp___7916
                      temp___7917)))

;; H
  (assert (= (mk___rep s__split_fields8) c60b))

;; H
  (assert
  (=>
  (<= (to_rep1
      (first
      (rt
      (to_string
      (attr__ATTRIBUTE_IMAGE5
      (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))))) 
  (to_rep1
  (last
  (rt
  (to_string
  (attr__ATTRIBUTE_IMAGE5
  (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))))))
  (= o26 (+ (- (to_rep1
               (last
               (rt
               (to_string
               (attr__ATTRIBUTE_IMAGE5
               (to_rep3
               (rec__patience__state__numelts (us_split_fields1 c60b)))))))) 
  (to_rep1
  (first
  (rt
  (to_string
  (attr__ATTRIBUTE_IMAGE5
  (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))))))))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1
      (first
      (rt
      (to_string
      (attr__ATTRIBUTE_IMAGE5
      (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))))) 
  (to_rep1
  (last
  (rt
  (to_string
  (attr__ATTRIBUTE_IMAGE5
  (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))))))))))
  (= o26 0)))

;; H
  (assert (=> (<= 1 17) (= o27 (+ (- 17 1) 1))))

;; H
  (assert (=> (not (<= 1 17)) (= o27 0)))

;; H
  (assert (= o28 (+ o27 o26)))

;; H
  (assert (= o29 (+ 1 o28)))

;; H
  (assert (= o30 (- o29 1)))

;; H
  (assert (and (= o31 o30) (in_range2 o30)))

;; H
  (assert
  (= o32 (concat1 (temp___String_Literal_793 Tuple0) 1 17
         (elts
         (to_string
         (attr__ATTRIBUTE_IMAGE5
         (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))))))
         (to_rep1
         (first
         (rt
         (to_string
         (attr__ATTRIBUTE_IMAGE5
         (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))))))))
         (to_rep1
         (last
         (rt
         (to_string
         (attr__ATTRIBUTE_IMAGE5
         (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))))))))

;; H
  (assert (= o33 (mk 1 o31)))

;; H
  (assert (= result3 (mk_int__ref i1)))

;; H
  (assert (= i9 0))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (and (<= 0 i10)
  (<= i10 (- (to_rep3
             (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (=>
  (<= (to_rep1
      (first
      (rt
      (to_string
      (attr__ATTRIBUTE_IMAGE4
      (to_rep2
      (select (rec__patience__state__values (us_split_fields1 c60b)) 
      i10))))))) (to_rep1
                 (last
                 (rt
                 (to_string
                 (attr__ATTRIBUTE_IMAGE4
                 (to_rep2
                 (select (rec__patience__state__values
                         (us_split_fields1 c60b)) i10))))))))
  (= o34 (+ (- (to_rep1
               (last
               (rt
               (to_string
               (attr__ATTRIBUTE_IMAGE4
               (to_rep2
               (select (rec__patience__state__values (us_split_fields1 c60b)) 
               i10))))))) (to_rep1
                          (first
                          (rt
                          (to_string
                          (attr__ATTRIBUTE_IMAGE4
                          (to_rep2
                          (select (rec__patience__state__values
                                  (us_split_fields1 c60b)) i10)))))))) 1)))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (=>
  (not
  (<= (to_rep1
      (first
      (rt
      (to_string
      (attr__ATTRIBUTE_IMAGE4
      (to_rep2
      (select (rec__patience__state__values (us_split_fields1 c60b)) 
      i10))))))) (to_rep1
                 (last
                 (rt
                 (to_string
                 (attr__ATTRIBUTE_IMAGE4
                 (to_rep2
                 (select (rec__patience__state__values
                         (us_split_fields1 c60b)) i10)))))))))
  (= o34 0))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (=> (<= 1 1) (= o35 (+ (- 1 1) 1)))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (=> (not (<= 1 1)) (= o35 0))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (= o36 (+ o35 o34))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (= o37 (+ 1 o36))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (= o38 (- o37 1))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (and (= o39 o38) (in_range2 o38))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (= o40 (concat1 (temp___String_Literal_797 Tuple0) 1 1
         (elts
         (to_string
         (attr__ATTRIBUTE_IMAGE4
         (to_rep2
         (select (rec__patience__state__values (us_split_fields1 c60b)) 
         i10)))))
         (to_rep1
         (first
         (rt
         (to_string
         (attr__ATTRIBUTE_IMAGE4
         (to_rep2
         (select (rec__patience__state__values (us_split_fields1 c60b)) 
         i10)))))))
         (to_rep1
         (last
         (rt
         (to_string
         (attr__ATTRIBUTE_IMAGE4
         (to_rep2
         (select (rec__patience__state__values (us_split_fields1 c60b)) 
         i10)))))))))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (= o41 (mk 1 o39))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (= i10 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (= i11 (mk_int__ref i10))))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (= i12 i10)))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (= i13 i11)))

;; H
  (assert
  (=>
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
  (= i14 i12)))

;; H
  (assert
  (=>
  (not
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))))
  (= i13 (mk_int__ref i9))))

;; H
  (assert
  (=>
  (not
  (and (<= 0 i9)
  (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))))
  (= i14 i9)))

;; H
  (assert
  (=>
  (<= (to_rep1
      (first
      (rt
      (to_string
      (attr__ATTRIBUTE_IMAGE5
      (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))))) 
  (to_rep1
  (last
  (rt
  (to_string
  (attr__ATTRIBUTE_IMAGE5
  (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))))))
  (= o42 (+ (- (to_rep1
               (last
               (rt
               (to_string
               (attr__ATTRIBUTE_IMAGE5
               (to_rep3
               (rec__patience__state__numstacks (us_split_fields1 c60b)))))))) 
  (to_rep1
  (first
  (rt
  (to_string
  (attr__ATTRIBUTE_IMAGE5
  (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b))))))))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1
      (first
      (rt
      (to_string
      (attr__ATTRIBUTE_IMAGE5
      (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))))) 
  (to_rep1
  (last
  (rt
  (to_string
  (attr__ATTRIBUTE_IMAGE5
  (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b))))))))))
  (= o42 0)))

;; H
  (assert (=> (<= 1 19) (= o43 (+ (- 19 1) 1))))

;; H
  (assert (=> (not (<= 1 19)) (= o43 0)))

;; H
  (assert (= o44 (+ o43 o42)))

;; H
  (assert (= o45 (+ 1 o44)))

;; H
  (assert (= o46 (- o45 1)))

;; H
  (assert (and (= o47 o46) (in_range2 o46)))

;; H
  (assert
  (= o48 (concat1 (temp___String_Literal_804 Tuple0) 1 19
         (elts
         (to_string
         (attr__ATTRIBUTE_IMAGE5
         (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b))))))
         (to_rep1
         (first
         (rt
         (to_string
         (attr__ATTRIBUTE_IMAGE5
         (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b))))))))
         (to_rep1
         (last
         (rt
         (to_string
         (attr__ATTRIBUTE_IMAGE5
         (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))))))))

;; H
  (assert (= o49 (mk 1 o47)))

;; H
  (assert (= result4 (mk_int__ref i2)))

;; H
  (assert (= i15 0))

;; H
  (assert (<= 0 i15))

;; H
  (assert
  (<= i15 (- (to_rep3
             (rec__patience__state__numstacks (us_split_fields1 c60b))) 1)))

;; H
  (assert
  (and (<= 0 i16)
  (<= i16 (- (to_rep3
             (rec__patience__state__numstacks (us_split_fields1 c60b))) 1))))

;; H
  (assert (= result5 (mk_int__ref size)))

;; H
  (assert
  (= size1 (to_rep3
           (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) 
           i16))))

;; H
  (assert (in_range5 size1))

;; H
  (assert (=> (<= (- 1) 100) (in_range5 idx)))

;; H
  (assert
  (=>
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16))))) 
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16))))))
  (= o50 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16))))) 
  (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16)))))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16))))) 
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16))))))) (= 
  o50 0)))

;; H
  (assert (=> (<= 1 6) (= o51 (+ (- 6 1) 1))))

;; H
  (assert (=> (not (<= 1 6)) (= o51 0)))

;; H
  (assert (= o52 (+ o51 o50)))

;; H
  (assert (= o53 (+ 1 o52)))

;; H
  (assert (= o54 (- o53 1)))

;; H
  (assert (and (= o55 o54) (in_range2 o54)))

;; H
  (assert
  (= (concat1 (temp___String_Literal_808 Tuple0) 1 6
     (elts (to_string (attr__ATTRIBUTE_IMAGE5 i16)))
     (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16)))))
     (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16)))))) 
  temp___812))

;; H
  (assert (= (mk 1 o55) temp___8121))

;; H
  (assert
  (=> (= (length (mk___t temp___812 temp___8121)) 0)
  (= (temp___String_Literal_811 Tuple0) temp___815)))

;; H
  (assert
  (=> (= (length (mk___t temp___812 temp___8121)) 0)
  (= (mk 1 10) temp___8151)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___812 temp___8121)) 0))
  (=> (<= 1 10) (= o56 (+ (- 10 1) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___812 temp___8121)) 0))
  (=> (not (<= 1 10)) (= o56 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___812 temp___8121)) 0))
  (=> (<= (to_rep1 (first temp___8121)) (to_rep1 (last temp___8121)))
  (= o57 (+ (- (to_rep1 (last temp___8121)) (to_rep1 (first temp___8121))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___812 temp___8121)) 0))
  (=> (not (<= (to_rep1 (first temp___8121)) (to_rep1 (last temp___8121))))
  (= o57 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___812 temp___8121)) 0))
  (= o58 (+ o57 o56))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___812 temp___8121)) 0))
  (= o59 (+ (to_rep1 (first temp___8121)) o58))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (= o60 (- o59 1))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___812 temp___8121)) 0))
  (and (= o61 o60) (in_range2 o60))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___812 temp___8121)) 0))
  (= (concat1 temp___812 (to_rep1 (first temp___8121))
     (to_rep1 (last temp___8121)) (temp___String_Literal_811 Tuple0) 1 10) 
  temp___815)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___812 temp___8121)) 0))
  (= (mk (to_rep1 (first temp___8121)) o61) temp___8151)))

;; H
  (assert
  (=> (= (length (mk___t temp___815 temp___8151)) 0)
  (= (elts
     (to_string
     (attr__ATTRIBUTE_IMAGE5
     (to_rep3
     (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) 
     i16))))) temp___818)))

;; H
  (assert
  (=> (= (length (mk___t temp___815 temp___8151)) 0)
  (= (mk
     (to_rep1
     (first
     (rt
     (to_string
     (attr__ATTRIBUTE_IMAGE5
     (to_rep3
     (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) 
     i16)))))))
     (to_rep1
     (last
     (rt
     (to_string
     (attr__ATTRIBUTE_IMAGE5
     (to_rep3
     (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) 
     i16)))))))) temp___8181)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___815 temp___8151)) 0))
  (=>
  (<= (to_rep1
      (first
      (rt
      (to_string
      (attr__ATTRIBUTE_IMAGE5
      (to_rep3
      (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) 
      i16))))))) (to_rep1
                 (last
                 (rt
                 (to_string
                 (attr__ATTRIBUTE_IMAGE5
                 (to_rep3
                 (select (rec__patience__state__stacksizes
                         (us_split_fields1 c60b)) i16))))))))
  (= o62 (+ (- (to_rep1
               (last
               (rt
               (to_string
               (attr__ATTRIBUTE_IMAGE5
               (to_rep3
               (select (rec__patience__state__stacksizes
                       (us_split_fields1 c60b)) i16))))))) (to_rep1
                                                           (first
                                                           (rt
                                                           (to_string
                                                           (attr__ATTRIBUTE_IMAGE5
                                                           (to_rep3
                                                           (select (rec__patience__state__stacksizes
                                                                   (us_split_fields1
                                                                   c60b)) 
                                                           i16)))))))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___815 temp___8151)) 0))
  (=>
  (not
  (<= (to_rep1
      (first
      (rt
      (to_string
      (attr__ATTRIBUTE_IMAGE5
      (to_rep3
      (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) 
      i16))))))) (to_rep1
                 (last
                 (rt
                 (to_string
                 (attr__ATTRIBUTE_IMAGE5
                 (to_rep3
                 (select (rec__patience__state__stacksizes
                         (us_split_fields1 c60b)) i16)))))))))
  (= o62 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___815 temp___8151)) 0))
  (=> (<= (to_rep1 (first temp___8151)) (to_rep1 (last temp___8151)))
  (= o63 (+ (- (to_rep1 (last temp___8151)) (to_rep1 (first temp___8151))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___815 temp___8151)) 0))
  (=> (not (<= (to_rep1 (first temp___8151)) (to_rep1 (last temp___8151))))
  (= o63 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___815 temp___8151)) 0))
  (= o64 (+ o63 o62))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___815 temp___8151)) 0))
  (= o65 (+ (to_rep1 (first temp___8151)) o64))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (= o66 (- o65 1))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___815 temp___8151)) 0))
  (and (= o67 o66) (in_range2 o66))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___815 temp___8151)) 0))
  (= (concat1 temp___815 (to_rep1 (first temp___8151))
     (to_rep1 (last temp___8151))
     (elts
     (to_string
     (attr__ATTRIBUTE_IMAGE5
     (to_rep3
     (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) 
     i16)))))
     (to_rep1
     (first
     (rt
     (to_string
     (attr__ATTRIBUTE_IMAGE5
     (to_rep3
     (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) 
     i16)))))))
     (to_rep1
     (last
     (rt
     (to_string
     (attr__ATTRIBUTE_IMAGE5
     (to_rep3
     (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) 
     i16)))))))) temp___818)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___815 temp___8151)) 0))
  (= (mk (to_rep1 (first temp___8151)) o67) temp___8181)))

;; H
  (assert
  (=> (= (length (mk___t temp___818 temp___8181)) 0)
  (= o74 (mk___t (temp___String_Literal_817 Tuple0) (mk 1 2)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___818 temp___8181)) 0))
  (=> (<= 1 2) (= o68 (+ (- 2 1) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___818 temp___8181)) 0))
  (=> (not (<= 1 2)) (= o68 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___818 temp___8181)) 0))
  (=> (<= (to_rep1 (first temp___8181)) (to_rep1 (last temp___8181)))
  (= o69 (+ (- (to_rep1 (last temp___8181)) (to_rep1 (first temp___8181))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___818 temp___8181)) 0))
  (=> (not (<= (to_rep1 (first temp___8181)) (to_rep1 (last temp___8181))))
  (= o69 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___818 temp___8181)) 0))
  (= o70 (+ o69 o68))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___818 temp___8181)) 0))
  (= o71 (+ (to_rep1 (first temp___8181)) o70))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___818 temp___8181)) 0)) (= o72 (- o71 1))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___818 temp___8181)) 0))
  (and (= o73 o72) (in_range2 o72))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___818 temp___8181)) 0))
  (= o74 (mk___t
         (concat1 temp___818 (to_rep1 (first temp___8181))
         (to_rep1 (last temp___8181)) (temp___String_Literal_817 Tuple0) 1 2)
         (mk (to_rep1 (first temp___8181)) o73)))))

;; H
  (assert (= result6 (mk_int__ref j)))

;; H
  (assert (= j1 0))

;; H
  (assert (<= 0 j1))

;; H
  (assert
  (<= j1 (- (to_rep3
            (select (rec__patience__state__stacksizes
                    (us_split_fields1 c60b)) i16)) 1)))

;; H
  (assert
  (and (=> (<= (- 1) 100) (in_range5 idx1))
  (and (<= 0 j2)
  (<= j2 (- (to_rep3
            (select (rec__patience__state__stacksizes
                    (us_split_fields1 c60b)) i16)) 1)))))

;; H
  (assert (and (<= 0 j2) (<= j2 99)))

;; H
  (assert (= o75 j2))

;; H
  (assert
  (= o76 (select (select (rec__patience__state__stacks
                         (us_split_fields1 c60b)) i16) o75)))

;; H
  (assert (= o77 (to_rep3 o76)))

;; H
  (assert (= result7 (mk_int__ref idx1)))

;; H
  (assert (= idx2 o77))

;; H
  (assert (and (<= 0 idx2) (<= idx2 99)))

;; H
  (assert (= o78 idx2))

;; H
  (assert
  (= o79 (select (rec__patience__state__values (us_split_fields1 c60b)) 
  o78)))

;; H
  (assert (= o80 (to_rep2 o79)))

;; H
  (assert (= o81 (attr__ATTRIBUTE_IMAGE4 o80)))

;; H
  (assert (= temp___830 (to_string o81)))

;; H
  (assert
  (=>
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2))))) 
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2))))))
  (= o82 (+ (- (to_rep1
               (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2))))) 
  (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2)))))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2))))) 
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2)))))))
  (= o82 0)))

;; H
  (assert (=> (<= 1 1) (= o83 (+ (- 1 1) 1))))

;; H
  (assert (=> (not (<= 1 1)) (= o83 0)))

;; H
  (assert (= o84 (+ o83 o82)))

;; H
  (assert (= o85 (+ 1 o84)))

;; H
  (assert (= o86 (- o85 1)))

;; H
  (assert (and (= o87 o86) (in_range2 o86)))

;; H
  (assert
  (= temp___826 (mk___t
                (concat1 (temp___String_Literal_822 Tuple0) 1 1
                (elts (to_string (attr__ATTRIBUTE_IMAGE5 idx2)))
                (to_rep1
                (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2)))))
                (to_rep1
                (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2))))))
                (mk 1 o87))))

;; H
  (assert
  (=> (= (length temp___826) 0)
  (= temp___829 (mk___t (temp___String_Literal_825 Tuple0) (mk 1 3)))))

;; H
  (assert
  (=> (not (= (length temp___826) 0)) (=> (<= 1 3) (= o88 (+ (- 3 1) 1)))))

;; H
  (assert (=> (not (= (length temp___826) 0)) (=> (not (<= 1 3)) (= o88 0))))

;; H
  (assert
  (=> (not (= (length temp___826) 0))
  (=> (<= (to_rep1 (first (rt temp___826))) (to_rep1 (last (rt temp___826))))
  (= o89 (+ (- (to_rep1 (last (rt temp___826))) (to_rep1
                                                (first (rt temp___826)))) 1)))))

;; H
  (assert
  (=> (not (= (length temp___826) 0))
  (=>
  (not
  (<= (to_rep1 (first (rt temp___826))) (to_rep1 (last (rt temp___826)))))
  (= o89 0))))

;; H
  (assert (=> (not (= (length temp___826) 0)) (= o90 (+ o89 o88))))

;; H
  (assert
  (=> (not (= (length temp___826) 0))
  (= o91 (+ (to_rep1 (first (rt temp___826))) o90))))

;; H
  (assert (=> (not (= (length temp___826) 0)) (= o92 (- o91 1))))

;; H
  (assert
  (=> (not (= (length temp___826) 0)) (and (= o93 o92) (in_range2 o92))))

;; H
  (assert
  (=> (not (= (length temp___826) 0))
  (= temp___829 (mk___t
                (concat1 (elts temp___826) (to_rep1 (first (rt temp___826)))
                (to_rep1 (last (rt temp___826)))
                (temp___String_Literal_825 Tuple0) 1 3)
                (mk (to_rep1 (first (rt temp___826))) o93)))))

;; H
  (assert (not (= (length temp___829) 0)))

;; H
  (assert
  (=> (<= (to_rep1 (first (rt temp___830))) (to_rep1 (last (rt temp___830))))
  (= o94 (+ (- (to_rep1 (last (rt temp___830))) (to_rep1
                                                (first (rt temp___830)))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1 (first (rt temp___830))) (to_rep1 (last (rt temp___830)))))
  (= o94 0)))

;; H
  (assert
  (=> (<= (to_rep1 (first (rt temp___829))) (to_rep1 (last (rt temp___829))))
  (= o95 (+ (- (to_rep1 (last (rt temp___829))) (to_rep1
                                                (first (rt temp___829)))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1 (first (rt temp___829))) (to_rep1 (last (rt temp___829)))))
  (= o95 0)))

;; H
  (assert (= o96 (+ o95 o94)))

;; H
  (assert (= o97 (+ (to_rep1 (first (rt temp___829))) o96)))

;; H
  (assert (= o98 (- o97 1)))

(assert
;; WP_parameter_def
 ;; File "test_patience.adb", line 5, characters 0-0
  (not (in_range2 o98)))
(check-sat)
