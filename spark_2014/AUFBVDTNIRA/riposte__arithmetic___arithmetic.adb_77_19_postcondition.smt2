;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun a () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-fun last () Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-fun dummy1 () integer)

(declare-datatypes () ((t21b__ref (mk_t21b__ref (t21b__content integer)))))
(define-fun t21b__ref___projection ((a1 t21b__ref)) integer (t21b__content
                                                            a1))

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun first () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-fun dummy2 () integer)

(declare-datatypes () ((t22b__ref (mk_t22b__ref (t22b__content integer)))))
(define-fun t22b__ref___projection ((a1 t22b__ref)) integer (t22b__content
                                                            a1))

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun r () Int)

(declare-fun i () Int)

(declare-fun i1 () Int)

(declare-fun arithmetic__plus__result () Int)

(declare-fun temp___167 () Int)

(declare-fun temp___166 () Int)

(declare-fun temp___168 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun temp___162 () Int)

(declare-fun temp___161 () Int)

(declare-fun temp___163 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun i2 () Int)

(declare-fun i3 () Int)

(declare-fun result () Int)

(declare-fun r1 () Int)

(declare-fun result1 () Int)

(declare-fun i4 () Int)

(declare-fun result2 () Int)

(declare-fun r2 () Int)

(declare-fun r3 () Int)

(declare-fun i5 () Int)

(declare-fun r4 () Int)

(declare-fun i6 () Int)

(declare-fun r5 () Int)

(declare-fun i7 () Int)

(declare-fun r6 () Int)

(declare-fun i8 () Int)

(declare-fun r7 () Int)

(declare-fun i9 () Int)

(declare-fun result3 () Int)

(declare-fun i10 () Int)

(declare-fun result4 () Int)

(declare-fun r8 () Int)

(declare-fun r9 () Int)

(declare-fun i11 () Int)

(declare-fun r10 () int__ref)

(declare-fun i12 () int__ref)

(declare-fun r11 () Int)

(declare-fun i13 () Int)

(declare-fun r12 () int__ref)

(declare-fun i14 () int__ref)

(declare-fun r13 () Int)

(declare-fun i15 () Int)

(declare-fun r14 () int__ref)

(declare-fun i16 () int__ref)

(declare-fun i17 () int__ref)

(declare-fun r15 () Int)

(declare-fun i18 () Int)

(declare-fun i19 () Int)

(declare-fun result5 () int__ref)

(declare-fun arithmetic__plus__result1 () Int)

(declare-fun arithmetic__plus__result2 () int__ref)

(declare-fun arithmetic__plus__result3 () Int)

(declare-fun r16 () int__ref)

(declare-fun i20 () int__ref)

(declare-fun i21 () int__ref)

(declare-fun arithmetic__plus__result4 () int__ref)

(declare-fun r17 () Int)

(declare-fun i22 () Int)

(declare-fun i23 () Int)

(declare-fun arithmetic__plus__result5 () Int)

(define-fun i24 () int__ref (mk_int__ref i8))

(define-fun r18 () int__ref (mk_int__ref r6))

(define-fun i25 () int__ref (mk_int__ref i1))

(define-fun i26 () int__ref (mk_int__ref i))

(declare-fun result6 () Int)

;; H
  (assert (in_range1 a))

;; H
  (assert (in_range1 b))

;; H
  (assert (in_range1 (+ a b)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 r)))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref r)))

;; H
  (assert (= r1 a))

;; H
  (assert (=> (<= 0 b) (= (mk_int__ref result1) i26)))

;; H
  (assert (=> (<= 0 b) (= i4 1)))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= temp___167 i4))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= temp___166 r1))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= temp___168 b))))

;; H
  (assert
  (=> (<= 0 b)
  (=> (and (<= 1 i4) (<= i4 b)) (and (= o r1) (not (= r1 2147483647))))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= o1 (+ o 1)))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= r1 result2))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= r2 o1))))

;; H
  (assert
  (=> (<= 0 b)
  (=> (and (<= 1 i4) (<= i4 b)) (and (= r3 (+ a i5)) (= b temp___168)))))

;; H
  (assert
  (=> (<= 0 b)
  (=> (and (<= 1 i4) (<= i4 b))
  (and
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 r3))
  (=> (<= 1 b) (dynamic_property 1 b i5))) (and (<= 1 i5) (<= i5 b))))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= i5 b))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= i5 i6))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= r3 r4))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= i7 i5))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= r5 r3))))

;; H
  (assert
  (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= i24 (mk_int__ref i6)))))

;; H
  (assert
  (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= r18 (mk_int__ref r4)))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= i9 i7))))

;; H
  (assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= r7 r5))))

;; H
  (assert (=> (<= 0 b) (=> (not (and (<= 1 i4) (<= i4 b))) (= i4 i8))))

;; H
  (assert (=> (<= 0 b) (=> (not (and (<= 1 i4) (<= i4 b))) (= r1 r6))))

;; H
  (assert (=> (<= 0 b) (=> (not (and (<= 1 i4) (<= i4 b))) (= i9 i4))))

;; H
  (assert (=> (<= 0 b) (=> (not (and (<= 1 i4) (<= i4 b))) (= r7 r1))))

;; H
  (assert (=> (<= 0 b) (= i17 i25)))

;; H
  (assert (=> (<= 0 b) (= i16 i24)))

;; H
  (assert (=> (<= 0 b) (= r14 r18)))

;; H
  (assert (=> (<= 0 b) (= i19 i3)))

;; H
  (assert (=> (<= 0 b) (= i18 i9)))

;; H
  (assert (=> (<= 0 b) (= r15 r7)))

;; H
  (assert (=> (not (<= 0 b)) (= (mk_int__ref result3) i25)))

;; H
  (assert (=> (not (<= 0 b)) (= i10 (- 1))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= temp___162 i10))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= temp___161 r1))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= temp___163 b))))

;; H
  (assert
  (=> (not (<= 0 b))
  (=> (and (<= b i10) (<= i10 (- 1)))
  (and (= o2 r1) (not (= r1 (- 2147483648)))))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= o3 (- o2 1)))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= r1 result4))))

;; H
  (assert (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= r8 o3))))

;; H
  (assert
  (=> (not (<= 0 b))
  (=> (and (<= b i10) (<= i10 (- 1)))
  (and (= r9 (+ a i11)) (= b temp___163)))))

;; H
  (assert
  (=> (not (<= 0 b))
  (=> (and (<= b i10) (<= i10 (- 1)))
  (and
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 r9))
  (=> (<= b (- 1)) (dynamic_property1 b (- 1) i11)))
  (and (<= b i11) (<= i11 (- 1)))))))

;; H
  (assert (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= i11 b))))

;; H
  (assert
  (=> (not (<= 0 b))
  (=> (and (<= b i10) (<= i10 (- 1))) (= i12 (mk_int__ref i11)))))

;; H
  (assert
  (=> (not (<= 0 b))
  (=> (and (<= b i10) (<= i10 (- 1))) (= r10 (mk_int__ref r9)))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= i13 i11))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= r11 r9))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= i14 i12))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= r12 r10))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= i15 i13))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (and (<= b i10) (<= i10 (- 1))) (= r13 r11))))

;; H
  (assert
  (=> (not (<= 0 b))
  (=> (not (and (<= b i10) (<= i10 (- 1)))) (= i14 (mk_int__ref i10)))))

;; H
  (assert
  (=> (not (<= 0 b))
  (=> (not (and (<= b i10) (<= i10 (- 1)))) (= r12 (mk_int__ref r1)))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (not (and (<= b i10) (<= i10 (- 1)))) (= i15 i10))))

;; H
  (assert
  (=> (not (<= 0 b)) (=> (not (and (<= b i10) (<= i10 (- 1)))) (= r13 r1))))

;; H
  (assert (=> (not (<= 0 b)) (= i17 i14)))

;; H
  (assert (=> (not (<= 0 b)) (= i16 i26)))

;; H
  (assert (=> (not (<= 0 b)) (= r14 r12)))

;; H
  (assert (=> (not (<= 0 b)) (= i19 i15)))

;; H
  (assert (=> (not (<= 0 b)) (= i18 i2)))

;; H
  (assert (=> (not (<= 0 b)) (= r15 r13)))

;; H
  (assert
  (= arithmetic__plus__result2 (mk_int__ref arithmetic__plus__result1)))

;; H
  (assert (= arithmetic__plus__result3 arithmetic__plus__result1))

;; H
  (assert (= result5 (mk_int__ref arithmetic__plus__result)))

;; H
  (assert (= arithmetic__plus__result1 (int__content r14)))

;; H
  (assert (= arithmetic__plus__result4 arithmetic__plus__result2))

;; H
  (assert (= i21 i17))

;; H
  (assert (= i20 i16))

;; H
  (assert (= r16 r14))

;; H
  (assert (= arithmetic__plus__result5 arithmetic__plus__result3))

;; H
  (assert (= i23 i19))

;; H
  (assert (= i22 i18))

;; H
  (assert (= r17 r15))

;; H
  (assert (= result6 (int__content arithmetic__plus__result4)))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (= (int__content arithmetic__plus__result4) (+ a b))))
(check-sat)
