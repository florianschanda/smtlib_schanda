;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int
  Int) (Array Int integer))

;; concat_def
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (integer Int) (Array Int integer))

;; singleton_def
  (assert
  (forall ((v integer))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq1 ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq1 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq1 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq1 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-sort ta2D1 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (ta2D1 ta2D1) Bool)

(declare-fun dummy1 () ta2D1)

(declare-datatypes () ((ta2D1__ref (mk_ta2D1__ref (ta2D1__content ta2D1)))))
(define-fun ta2D1__ref___projection ((a ta2D1__ref)) ta2D1 (ta2D1__content a))

(declare-sort ta3D1 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq3 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (ta3D1 ta3D1) Bool)

(declare-fun dummy2 () ta3D1)

(declare-datatypes () ((ta3D1__ref (mk_ta3D1__ref (ta3D1__content ta3D1)))))
(define-fun ta3D1__ref___projection ((a ta3D1__ref)) ta3D1 (ta3D1__content a))

(declare-fun dummy3 () (Array Int integer))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int integer)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int integer)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))

(declare-fun user_eq3 ((Array Int integer) (Array Int integer)) Bool)

(declare-datatypes ()
((map__ref1 (mk_map__ref1 (map__content1 (Array Int (Array Int integer)))))))
(declare-fun slide1 ((Array Int (Array Int integer)) Int
  Int) (Array Int (Array Int integer)))

;; slide_eq
  (assert
  (forall ((a (Array Int (Array Int integer))))
  (forall ((first Int))
  (! (= (slide1 a first first) a) :pattern ((slide1 a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int (Array Int integer))))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array Int (Array Int integer)) Int Int
  (Array Int (Array Int integer)) Int Int) (Array Int (Array Int integer)))

;; concat_def
  (assert
  (forall ((a (Array Int (Array Int integer)))
  (b (Array Int (Array Int integer))))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 ((Array Int integer)
  Int) (Array Int (Array Int integer)))

;; singleton_def
  (assert
  (forall ((v (Array Int integer)))
  (forall ((i Int))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq4 ((a (Array Int (Array Int integer))) (a__first Int)
  (a__last Int) (b (Array Int (Array Int integer))) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_133 Int))
                           (=>
                           (and (<= a__first temp___idx_133)
                           (<= temp___idx_133 a__last))
                           (= (bool_eq1 (select a temp___idx_133) 1 2
                              (select b (+ (- b__first a__first) temp___idx_133))
                              1 2) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int (Array Int integer)))
  (b (Array Int (Array Int integer))))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq4 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_133 Int))
  (=> (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last))
  (= (bool_eq1 (select a temp___idx_133) 1 2
     (select b (+ (- b__first a__first) temp___idx_133)) 1 2) true))))))))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-sort t19b 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (t19b t19b) Bool)

(declare-fun dummy4 () t19b)

(declare-datatypes () ((t19b__ref (mk_t19b__ref (t19b__content t19b)))))
(define-fun t19b__ref___projection ((a t19b__ref)) t19b (t19b__content a))

(declare-sort t15b 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (t15b t15b) Bool)

(declare-fun dummy5 () t15b)

(declare-datatypes () ((t15b__ref (mk_t15b__ref (t15b__content t15b)))))
(define-fun t15b__ref___projection ((a t15b__ref)) t15b (t15b__content a))

(declare-sort t17b 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (t17b t17b) Bool)

(declare-fun dummy6 () t17b)

(declare-datatypes () ((t17b__ref (mk_t17b__ref (t17b__content t17b)))))
(define-fun t17b__ref___projection ((a t17b__ref)) t17b (t17b__content a))

(declare-sort t25b 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq7 (t25b t25b) Bool)

(declare-fun dummy7 () t25b)

(declare-datatypes () ((t25b__ref (mk_t25b__ref (t25b__content t25b)))))
(define-fun t25b__ref___projection ((a t25b__ref)) t25b (t25b__content a))

(declare-sort t21b 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq8 (t21b t21b) Bool)

(declare-fun dummy8 () t21b)

(declare-datatypes () ((t21b__ref (mk_t21b__ref (t21b__content t21b)))))
(define-fun t21b__ref___projection ((a t21b__ref)) t21b (t21b__content a))

(declare-sort t23b 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq9 (t23b t23b) Bool)

(declare-fun dummy9 () t23b)

(declare-datatypes () ((t23b__ref (mk_t23b__ref (t23b__content t23b)))))
(define-fun t23b__ref___projection ((a t23b__ref)) t23b (t23b__content a))

(declare-sort t31b 0)

(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq11 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq10 (t31b t31b) Bool)

(declare-fun dummy10 () t31b)

(declare-datatypes () ((t31b__ref (mk_t31b__ref (t31b__content t31b)))))
(define-fun t31b__ref___projection ((a t31b__ref)) t31b (t31b__content a))

(declare-sort t27b 0)

(define-fun in_range11 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq11 (t27b t27b) Bool)

(declare-fun dummy11 () t27b)

(declare-datatypes () ((t27b__ref (mk_t27b__ref (t27b__content t27b)))))
(define-fun t27b__ref___projection ((a t27b__ref)) t27b (t27b__content a))

(declare-sort t29b 0)

(define-fun in_range12 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq13 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq12 (t29b t29b) Bool)

(declare-fun dummy12 () t29b)

(declare-datatypes () ((t29b__ref (mk_t29b__ref (t29b__content t29b)))))
(define-fun t29b__ref___projection ((a t29b__ref)) t29b (t29b__content a))

(declare-sort t37b 0)

(define-fun in_range13 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq14 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)

(declare-fun user_eq13 (t37b t37b) Bool)

(declare-fun dummy13 () t37b)

(declare-datatypes () ((t37b__ref (mk_t37b__ref (t37b__content t37b)))))
(define-fun t37b__ref___projection ((a t37b__ref)) t37b (t37b__content a))

(declare-sort t33b 0)

(define-fun in_range14 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq15 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)

(declare-fun user_eq14 (t33b t33b) Bool)

(declare-fun dummy14 () t33b)

(declare-datatypes () ((t33b__ref (mk_t33b__ref (t33b__content t33b)))))
(define-fun t33b__ref___projection ((a t33b__ref)) t33b (t33b__content a))

(declare-sort t35b 0)

(define-fun in_range15 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq16 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)

(declare-fun user_eq15 (t35b t35b) Bool)

(declare-fun dummy15 () t35b)

(declare-datatypes () ((t35b__ref (mk_t35b__ref (t35b__content t35b)))))
(define-fun t35b__ref___projection ((a t35b__ref)) t35b (t35b__content a))

(declare-sort t43b 0)

(define-fun in_range16 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq17 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)

(declare-fun user_eq16 (t43b t43b) Bool)

(declare-fun dummy16 () t43b)

(declare-datatypes () ((t43b__ref (mk_t43b__ref (t43b__content t43b)))))
(define-fun t43b__ref___projection ((a t43b__ref)) t43b (t43b__content a))

(declare-sort t39b 0)

(define-fun in_range17 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq18 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)

(declare-fun user_eq17 (t39b t39b) Bool)

(declare-fun dummy17 () t39b)

(declare-datatypes () ((t39b__ref (mk_t39b__ref (t39b__content t39b)))))
(define-fun t39b__ref___projection ((a t39b__ref)) t39b (t39b__content a))

(declare-sort t41b 0)

(define-fun in_range18 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq19 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)

(declare-fun user_eq18 (t41b t41b) Bool)

(declare-fun dummy18 () t41b)

(declare-datatypes () ((t41b__ref (mk_t41b__ref (t41b__content t41b)))))
(define-fun t41b__ref___projection ((a t41b__ref)) t41b (t41b__content a))

(declare-fun temp___347 ((Array Int integer)
  (Array Int integer)) (Array Int (Array Int integer)))

;; def_axiom
  (assert
  (forall ((temp___349 (Array Int integer)) (temp___350 (Array Int integer)))
  (let ((temp___348 (temp___347 temp___349 temp___350)))
  (and (= (select temp___348 1) temp___349)
  (= (select temp___348 2) temp___350)))))

(declare-fun temp___352 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___354 Int) (temp___355 Int))
  (let ((temp___353 (temp___352 temp___354 temp___355)))
  (and (= (select temp___353 1) (of_rep temp___354))
  (= (select temp___353 2) (of_rep temp___355))))))

(declare-fun temp___357 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___359 Int) (temp___360 Int))
  (let ((temp___358 (temp___357 temp___359 temp___360)))
  (and (= (select temp___358 1) (of_rep temp___359))
  (= (select temp___358 2) (of_rep temp___360))))))

(declare-fun temp___362 ((Array Int integer)
  (Array Int integer)) (Array Int (Array Int integer)))

;; def_axiom
  (assert
  (forall ((temp___364 (Array Int integer)) (temp___365 (Array Int integer)))
  (let ((temp___363 (temp___362 temp___364 temp___365)))
  (forall ((temp___366 Int))
  (ite (= temp___366 2) (= (select temp___363 temp___366) temp___364)
  (= (select temp___363 temp___366) temp___365))))))

(declare-fun temp___367 (Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___369 Int))
  (forall ((temp___370 Int))
  (= (select (temp___367 temp___369) temp___370) (of_rep temp___369)))))

(declare-fun temp___371 (Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___373 Int))
  (forall ((temp___374 Int))
  (= (select (temp___371 temp___373) temp___374) (of_rep temp___373)))))

(declare-fun temp___375 ((Array Int integer)
  (Array Int integer)) (Array Int (Array Int integer)))

;; def_axiom
  (assert
  (forall ((temp___377 (Array Int integer)) (temp___378 (Array Int integer)))
  (let ((temp___376 (temp___375 temp___377 temp___378)))
  (and (= (select temp___376 1) temp___377)
  (= (select temp___376 2) temp___378)))))

(declare-fun temp___380 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___382 Int) (temp___383 Int))
  (let ((temp___381 (temp___380 temp___382 temp___383)))
  (forall ((temp___384 Int))
  (ite (= temp___384 1)
  (= (select temp___381 temp___384) (of_rep temp___382))
  (= (select temp___381 temp___384) (of_rep temp___383)))))))

(declare-fun temp___385 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___387 Int) (temp___388 Int))
  (let ((temp___386 (temp___385 temp___387 temp___388)))
  (forall ((temp___389 Int))
  (ite (= temp___389 1)
  (= (select temp___386 temp___389) (of_rep temp___387))
  (= (select temp___386 temp___389) (of_rep temp___388)))))))

(declare-fun temp___390 ((Array Int integer)
  (Array Int integer)) (Array Int (Array Int integer)))

;; def_axiom
  (assert
  (forall ((temp___392 (Array Int integer)) (temp___393 (Array Int integer)))
  (let ((temp___391 (temp___390 temp___392 temp___393)))
  (and (= (select temp___391 1) temp___392)
  (= (select temp___391 2) temp___393)))))

(declare-fun temp___395 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___397 Int) (temp___398 Int))
  (let ((temp___396 (temp___395 temp___397 temp___398)))
  (forall ((temp___399 Int))
  (ite (= temp___399 1)
  (= (select temp___396 temp___399) (of_rep temp___397))
  (= (select temp___396 temp___399) (of_rep temp___398)))))))

(declare-fun temp___400 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___402 Int) (temp___403 Int))
  (let ((temp___401 (temp___400 temp___402 temp___403)))
  (forall ((temp___404 Int))
  (ite (= temp___404 1)
  (= (select temp___401 temp___404) (of_rep temp___402))
  (= (select temp___401 temp___404) (of_rep temp___403)))))))

(declare-fun temp___405 ((Array Int integer)
  (Array Int integer)) (Array Int (Array Int integer)))

;; def_axiom
  (assert
  (forall ((temp___407 (Array Int integer)) (temp___408 (Array Int integer)))
  (let ((temp___406 (temp___405 temp___407 temp___408)))
  (and (= (select temp___406 2) temp___407)
  (= (select temp___406 1) temp___408)))))

(declare-fun temp___410 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___412 Int) (temp___413 Int))
  (let ((temp___411 (temp___410 temp___412 temp___413)))
  (forall ((temp___414 Int))
  (ite (= temp___414 1)
  (= (select temp___411 temp___414) (of_rep temp___412))
  (= (select temp___411 temp___414) (of_rep temp___413)))))))

(declare-fun temp___415 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___417 Int) (temp___418 Int))
  (let ((temp___416 (temp___415 temp___417 temp___418)))
  (forall ((temp___419 Int))
  (ite (= temp___419 2)
  (= (select temp___416 temp___419) (of_rep temp___417))
  (= (select temp___416 temp___419) (of_rep temp___418)))))))

(declare-fun one () Int)

(declare-fun a () (Array Int (Array Int integer)))

(declare-fun o () (Array Int integer))

(declare-fun o1 () (Array Int integer))

(declare-fun o2 () (Array Int (Array Int integer)))

(declare-fun o3 () (Array Int integer))

(declare-fun o4 () (Array Int integer))

(declare-fun o5 () (Array Int (Array Int integer)))

(declare-fun o6 () (Array Int integer))

(declare-fun o7 () (Array Int integer))

(declare-fun o8 () (Array Int (Array Int integer)))

(declare-fun o9 () (Array Int integer))

(declare-fun o10 () (Array Int integer))

(declare-fun o11 () (Array Int (Array Int integer)))

(declare-fun o12 () (Array Int integer))

(declare-fun o13 () (Array Int integer))

(declare-fun o14 () (Array Int (Array Int integer)))

(declare-fun result () (Array Int (Array Int integer)))

(declare-fun a1 () (Array Int (Array Int integer)))

(declare-fun result1 () (Array Int (Array Int integer)))

(declare-fun a2 () (Array Int (Array Int integer)))

(declare-fun result2 () (Array Int (Array Int integer)))

(declare-fun a3 () (Array Int (Array Int integer)))

(declare-fun result3 () (Array Int (Array Int integer)))

(declare-fun a4 () (Array Int (Array Int integer)))

(declare-fun result4 () (Array Int (Array Int integer)))

(declare-fun a5 () (Array Int (Array Int integer)))

(declare-fun a6 () (Array Int (Array Int integer)))

(declare-fun a7 () (Array Int (Array Int integer)))

(define-fun a8 () map__ref1 (mk_map__ref1 a))

;; H
  (assert (in_range1 one))

;; H
  (assert (in_range1 b))

;; H
  (assert (= one 1))

;; H
  (assert (=> (= b 1) (= o (temp___357 one 2))))

;; H
  (assert (=> (= b 1) (= o1 (temp___352 one 2))))

;; H
  (assert (=> (= b 1) (= o2 (temp___347 o1 o))))

;; H
  (assert (=> (= b 1) (= (mk_map__ref1 result) a8)))

;; H
  (assert (=> (= b 1) (= a1 o2)))

;; H
  (assert (=> (not (= b 1)) (=> (= b 2) (= o3 (temp___371 one)))))

;; H
  (assert (=> (not (= b 1)) (=> (= b 2) (= o4 (temp___367 one)))))

;; H
  (assert (=> (not (= b 1)) (=> (= b 2) (= o5 (temp___362 o4 o3)))))

;; H
  (assert (=> (not (= b 1)) (=> (= b 2) (= (mk_map__ref1 result1) a8))))

;; H
  (assert (=> (not (= b 1)) (=> (= b 2) (= a2 o5))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2)) (=> (= b 3) (= o6 (temp___385 1 one))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2)) (=> (= b 3) (= o7 (temp___380 one one))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2)) (=> (= b 3) (= o8 (temp___375 o7 o6))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2)) (=> (= b 3) (= (mk_map__ref1 result2) a8)))))

;; H
  (assert (=> (not (= b 1)) (=> (not (= b 2)) (=> (= b 3) (= a3 o8)))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2))
  (=> (not (= b 3)) (=> (= b 4) (= o9 (temp___400 2 one)))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2))
  (=> (not (= b 3)) (=> (= b 4) (= o10 (temp___395 2 one)))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2))
  (=> (not (= b 3)) (=> (= b 4) (= o11 (temp___390 o10 o9)))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2))
  (=> (not (= b 3)) (=> (= b 4) (= (mk_map__ref1 result3) a8))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2)) (=> (not (= b 3)) (=> (= b 4) (= a4 o11))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2))
  (=> (not (= b 3)) (=> (not (= b 4)) (= o12 (temp___415 2 one)))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2))
  (=> (not (= b 3)) (=> (not (= b 4)) (= o13 (temp___410 2 one)))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2))
  (=> (not (= b 3)) (=> (not (= b 4)) (= o14 (temp___405 o13 o12)))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2))
  (=> (not (= b 3)) (=> (not (= b 4)) (= (mk_map__ref1 result4) a8))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2)) (=> (not (= b 3)) (=> (not (= b 4)) (= a5 o14))))))

;; H
  (assert
  (=> (not (= b 1))
  (=> (not (= b 2)) (=> (not (= b 3)) (=> (not (= b 4)) (= a4 a5))))))

;; H
  (assert (=> (not (= b 1)) (=> (not (= b 2)) (=> (not (= b 3)) (= a3 a4)))))

;; H
  (assert (=> (not (= b 1)) (=> (not (= b 2)) (= a2 a3))))

;; H
  (assert (=> (not (= b 1)) (= a1 a2)))

;; H
  (assert (= a1 a6))

;; H
  (assert (= a7 a1))

;; H
  (assert (= b 1))

(declare-fun j () Int)

;; H
  (assert (<= 1 j))

;; H
  (assert (<= j 2))

(assert
;; WP_parameter_def
 ;; File "arr_aggregate.ads", line 4, characters 0-0
  (not (= (to_rep (select (select a6 j) one)) one)))
(check-sat)
