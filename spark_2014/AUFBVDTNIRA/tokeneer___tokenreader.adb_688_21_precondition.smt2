;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(declare-sort unsigned32t 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (unsigned32t unsigned32t) Bool)

(declare-fun dummy4 () unsigned32t)

(declare-datatypes ()
((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t 
  (unsigned32t__content a))

(define-fun dynamic_invariant ((temp___expr_179 Int)
  (temp___is_init_176 Bool) (temp___skip_constant_177 Bool)
  (temp___do_toplevel_178 Bool)) Bool (=>
                                      (or (= temp___is_init_176 true)
                                      (<= 0 4294967295)) (in_range4
                                      temp___expr_179)))

(declare-fun to_rep2 (unsigned32t) Int)

(declare-fun of_rep2 (Int) unsigned32t)

;; inversion_axiom
  (assert
  (forall ((x unsigned32t))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x unsigned32t)) (! (in_range4
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort descriptioni 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 150)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (descriptioni descriptioni) Bool)

(declare-fun dummy5 () descriptioni)

(declare-datatypes ()
((descriptioni__ref
 (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni 
  (descriptioni__content a))

(declare-fun nouser () (Array Int character))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun temp___String_Literal_141 (tuple0) (Array Int character))

;; temp___String_Literal_141__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 1)) 78)
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 3)) 85))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 4)) 115))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 5)) 101))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 6)) 114))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 11)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 12)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 13)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 14)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 15)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 16)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 17)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 18)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 19)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 20)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 22)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 23)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 24)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 25)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 26)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 27)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 28)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 29)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 30)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 31)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 32)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 33)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 34)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 35)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 36)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 37)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 38)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 39)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 40)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 41)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 42)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 43)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 44)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 45)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 46)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 47)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 48)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 49)) 32))
     (= (to_rep (select (temp___String_Literal_141 us_void_param) 50)) 32)) :pattern (
  (temp___String_Literal_141 us_void_param)) )))

(declare-fun valid_numberlogentries (us_private) Bool)

(declare-fun valid_numberlogentries__function_guard (Bool us_private) Bool)

(declare-sort readert 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (readert readert) Bool)

(declare-fun dummy6 () readert)

(declare-datatypes ()
((readert__ref (mk_readert__ref (readert__content readert)))))
(define-fun readert__ref___projection ((a readert__ref)) readert (readert__content
                                                                 a))

(define-fun dynamic_invariant1 ((temp___expr_957 Int)
  (temp___is_init_954 Bool) (temp___skip_constant_955 Bool)
  (temp___do_toplevel_956 Bool)) Bool (=>
                                      (or (= temp___is_init_954 true)
                                      (<= 0 1)) (in_range6 temp___expr_957)))

(declare-sort tokenidt 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq7 (tokenidt tokenidt) Bool)

(declare-fun dummy7 () tokenidt)

(declare-datatypes ()
((tokenidt__ref (mk_tokenidt__ref (tokenidt__content tokenidt)))))
(define-fun tokenidt__ref___projection ((a tokenidt__ref)) tokenidt (tokenidt__content
                                                                    a))

(declare-fun to_rep3 (tokenidt) Int)

(declare-fun of_rep3 (Int) tokenidt)

;; inversion_axiom
  (assert
  (forall ((x tokenidt))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x tokenidt)) (! (in_range7 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range7 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-sort tryt 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq8 (tryt tryt) Bool)

(declare-fun dummy8 () tryt)

(declare-datatypes () ((tryt__ref (mk_tryt__ref (tryt__content tryt)))))
(define-fun tryt__ref___projection ((a tryt__ref)) tryt (tryt__content a))

(declare-fun to_rep4 (tryt) Int)

(declare-fun of_rep4 (Int) tryt)

;; inversion_axiom
  (assert
  (forall ((x tryt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x tryt)) (! (in_range8 (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range8 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-sort cardhandlet 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq9 (cardhandlet cardhandlet) Bool)

(declare-fun dummy9 () cardhandlet)

(declare-datatypes ()
((cardhandlet__ref (mk_cardhandlet__ref (cardhandlet__content cardhandlet)))))
(define-fun cardhandlet__ref___projection ((a cardhandlet__ref)) cardhandlet 
  (cardhandlet__content a))

(declare-fun to_rep5 (cardhandlet) Int)

(declare-fun of_rep5 (Int) cardhandlet)

;; inversion_axiom
  (assert
  (forall ((x cardhandlet))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x cardhandlet)) (! (in_range9
  (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range9 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                              (of_rep5 x))) )))

(declare-fun dummy10 () (Array Int character))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int character)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int character)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))

(declare-fun user_eq10 ((Array Int character) (Array Int character)) Bool)

(declare-sort validreaderstatet 0)

(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 6)))

(define-fun bool_eq11 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq11 (validreaderstatet validreaderstatet) Bool)

(declare-fun dummy11 () validreaderstatet)

(declare-datatypes ()
((validreaderstatet__ref
 (mk_validreaderstatet__ref (validreaderstatet__content validreaderstatet)))))
(define-fun validreaderstatet__ref___projection ((a validreaderstatet__ref)) validreaderstatet 
  (validreaderstatet__content a))

(declare-fun to_rep6 (validreaderstatet) Int)

(declare-fun of_rep6 (Int) validreaderstatet)

;; inversion_axiom
  (assert
  (forall ((x validreaderstatet))
  (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; range_axiom
  (assert
  (forall ((x validreaderstatet)) (! (in_range10
  (to_rep6 x)) :pattern ((to_rep6 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range10 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6
                                                               (of_rep6 x))) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__tokenreader__readerinfot__name (Array Int character))(rec__tokenreader__readerinfot__tokentry tryt)(rec__tokenreader__readerinfot__tokenid tokenidt)(rec__tokenreader__readerinfot__tokenconnected Bool)(rec__tokenreader__readerinfot__tokenhandle cardhandlet)(rec__tokenreader__readerinfot__currentstatus validreaderstatet)(rec__tokenreader__readerinfot__lastfault unsigned32t)))))
(define-fun us_split_fields_Name2__projection ((a us_split_fields)) (Array Int character) 
  (rec__tokenreader__readerinfot__name a))

(define-fun us_split_fields_TokenTry__projection ((a us_split_fields)) tryt 
  (rec__tokenreader__readerinfot__tokentry a))

(define-fun us_split_fields_TokenID__projection ((a us_split_fields)) tokenidt 
  (rec__tokenreader__readerinfot__tokenid a))

(define-fun us_split_fields_TokenConnected__projection ((a us_split_fields)) Bool 
  (rec__tokenreader__readerinfot__tokenconnected a))

(define-fun us_split_fields_TokenHandle__projection ((a us_split_fields)) cardhandlet 
  (rec__tokenreader__readerinfot__tokenhandle a))

(define-fun us_split_fields_CurrentStatus__projection ((a us_split_fields)) validreaderstatet 
  (rec__tokenreader__readerinfot__currentstatus a))

(define-fun us_split_fields_LastFault__projection ((a us_split_fields)) unsigned32t 
  (rec__tokenreader__readerinfot__lastfault a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref_10__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep_11__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                               a))

(define-fun bool_eq12 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (= (bool_eq3
                           (rec__tokenreader__readerinfot__name
                           (us_split_fields1 a)) 1 8
                           (rec__tokenreader__readerinfot__name
                           (us_split_fields1 b)) 1 8) true)
                        (= (to_rep4
                           (rec__tokenreader__readerinfot__tokentry
                           (us_split_fields1 a))) (to_rep4
                                                  (rec__tokenreader__readerinfot__tokentry
                                                  (us_split_fields1 b)))))
                        (= (to_rep3
                           (rec__tokenreader__readerinfot__tokenid
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__tokenreader__readerinfot__tokenid
                                                  (us_split_fields1 b)))))
                        (= (rec__tokenreader__readerinfot__tokenconnected
                           (us_split_fields1 a)) (rec__tokenreader__readerinfot__tokenconnected
                                                 (us_split_fields1 b))))
                        (= (to_rep5
                           (rec__tokenreader__readerinfot__tokenhandle
                           (us_split_fields1 a))) (to_rep5
                                                  (rec__tokenreader__readerinfot__tokenhandle
                                                  (us_split_fields1 b)))))
                        (= (to_rep6
                           (rec__tokenreader__readerinfot__currentstatus
                           (us_split_fields1 a))) (to_rep6
                                                  (rec__tokenreader__readerinfot__currentstatus
                                                  (us_split_fields1 b)))))
                        (= (to_rep2
                           (rec__tokenreader__readerinfot__lastfault
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__tokenreader__readerinfot__lastfault
                                                  (us_split_fields1 b)))))
                   true false))

(declare-fun user_eq12 (us_rep us_rep) Bool)

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))

(declare-fun tokenreader__readerinfot__name__first__bit () Int)

(declare-fun tokenreader__readerinfot__name__last__bit () Int)

(declare-fun tokenreader__readerinfot__name__position () Int)

;; tokenreader__readerinfot__name__first__bit_axiom
  (assert (<= 0 tokenreader__readerinfot__name__first__bit))

;; tokenreader__readerinfot__name__last__bit_axiom
  (assert
  (< tokenreader__readerinfot__name__first__bit tokenreader__readerinfot__name__last__bit))

;; tokenreader__readerinfot__name__position_axiom
  (assert (<= 0 tokenreader__readerinfot__name__position))

(declare-fun tokenreader__readerinfot__tokentry__first__bit () Int)

(declare-fun tokenreader__readerinfot__tokentry__last__bit () Int)

(declare-fun tokenreader__readerinfot__tokentry__position () Int)

;; tokenreader__readerinfot__tokentry__first__bit_axiom
  (assert (<= 0 tokenreader__readerinfot__tokentry__first__bit))

;; tokenreader__readerinfot__tokentry__last__bit_axiom
  (assert
  (< tokenreader__readerinfot__tokentry__first__bit tokenreader__readerinfot__tokentry__last__bit))

;; tokenreader__readerinfot__tokentry__position_axiom
  (assert (<= 0 tokenreader__readerinfot__tokentry__position))

(declare-fun tokenreader__readerinfot__tokenid__first__bit () Int)

(declare-fun tokenreader__readerinfot__tokenid__last__bit () Int)

(declare-fun tokenreader__readerinfot__tokenid__position () Int)

;; tokenreader__readerinfot__tokenid__first__bit_axiom
  (assert (<= 0 tokenreader__readerinfot__tokenid__first__bit))

;; tokenreader__readerinfot__tokenid__last__bit_axiom
  (assert
  (< tokenreader__readerinfot__tokenid__first__bit tokenreader__readerinfot__tokenid__last__bit))

;; tokenreader__readerinfot__tokenid__position_axiom
  (assert (<= 0 tokenreader__readerinfot__tokenid__position))

(declare-fun tokenreader__readerinfot__tokenconnected__first__bit () Int)

(declare-fun tokenreader__readerinfot__tokenconnected__last__bit () Int)

(declare-fun tokenreader__readerinfot__tokenconnected__position () Int)

;; tokenreader__readerinfot__tokenconnected__first__bit_axiom
  (assert (<= 0 tokenreader__readerinfot__tokenconnected__first__bit))

;; tokenreader__readerinfot__tokenconnected__last__bit_axiom
  (assert
  (< tokenreader__readerinfot__tokenconnected__first__bit tokenreader__readerinfot__tokenconnected__last__bit))

;; tokenreader__readerinfot__tokenconnected__position_axiom
  (assert (<= 0 tokenreader__readerinfot__tokenconnected__position))

(declare-fun tokenreader__readerinfot__tokenhandle__first__bit () Int)

(declare-fun tokenreader__readerinfot__tokenhandle__last__bit () Int)

(declare-fun tokenreader__readerinfot__tokenhandle__position () Int)

;; tokenreader__readerinfot__tokenhandle__first__bit_axiom
  (assert (<= 0 tokenreader__readerinfot__tokenhandle__first__bit))

;; tokenreader__readerinfot__tokenhandle__last__bit_axiom
  (assert
  (< tokenreader__readerinfot__tokenhandle__first__bit tokenreader__readerinfot__tokenhandle__last__bit))

;; tokenreader__readerinfot__tokenhandle__position_axiom
  (assert (<= 0 tokenreader__readerinfot__tokenhandle__position))

(declare-fun tokenreader__readerinfot__currentstatus__first__bit () Int)

(declare-fun tokenreader__readerinfot__currentstatus__last__bit () Int)

(declare-fun tokenreader__readerinfot__currentstatus__position () Int)

;; tokenreader__readerinfot__currentstatus__first__bit_axiom
  (assert (<= 0 tokenreader__readerinfot__currentstatus__first__bit))

;; tokenreader__readerinfot__currentstatus__last__bit_axiom
  (assert
  (< tokenreader__readerinfot__currentstatus__first__bit tokenreader__readerinfot__currentstatus__last__bit))

;; tokenreader__readerinfot__currentstatus__position_axiom
  (assert (<= 0 tokenreader__readerinfot__currentstatus__position))

(declare-fun tokenreader__readerinfot__lastfault__first__bit () Int)

(declare-fun tokenreader__readerinfot__lastfault__last__bit () Int)

(declare-fun tokenreader__readerinfot__lastfault__position () Int)

;; tokenreader__readerinfot__lastfault__first__bit_axiom
  (assert (<= 0 tokenreader__readerinfot__lastfault__first__bit))

;; tokenreader__readerinfot__lastfault__last__bit_axiom
  (assert
  (< tokenreader__readerinfot__lastfault__first__bit tokenreader__readerinfot__lastfault__last__bit))

;; tokenreader__readerinfot__lastfault__position_axiom
  (assert (<= 0 tokenreader__readerinfot__lastfault__position))

(declare-fun dummy12 () us_rep)

(declare-datatypes ()
((readerinfot__ref (mk_readerinfot__ref (readerinfot__content us_rep)))))
(define-fun readerinfot__ref___projection ((a readerinfot__ref)) us_rep 
  (readerinfot__content a))

(declare-datatypes ()
((map__ref1 (mk_map__ref1 (map__content1 (Array Int us_rep))))))
(declare-fun slide1 ((Array Int us_rep) Int Int) (Array Int us_rep))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array Int us_rep) Int Int (Array Int us_rep) Int
  Int) (Array Int us_rep))

;; concat_def
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 (us_rep Int) (Array Int us_rep))

;; singleton_def
  (assert
  (forall ((v us_rep))
  (forall ((i Int))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq13 ((a (Array Int us_rep)) (a__first Int) (a__last Int)
  (b (Array Int us_rep)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (bool_eq12 (select a temp___idx_154)
                              (select b (+ (- b__first a__first) temp___idx_154))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq13 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (bool_eq12 (select a temp___idx_154)
     (select b (+ (- b__first a__first) temp___idx_154))) true))))))))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun reader () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-sort readerstatet 0)

(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 6)))

(define-fun bool_eq14 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq13 (readerstatet readerstatet) Bool)

(declare-fun dummy13 () readerstatet)

(declare-datatypes ()
((readerstatet__ref
 (mk_readerstatet__ref (readerstatet__content readerstatet)))))
(define-fun readerstatet__ref___projection ((a readerstatet__ref)) readerstatet 
  (readerstatet__content a))

(define-fun dynamic_invariant2 ((temp___expr_1038 Int)
  (temp___is_init_1035 Bool) (temp___skip_constant_1036 Bool)
  (temp___do_toplevel_1037 Bool)) Bool (=>
                                       (or (= temp___is_init_1035 true)
                                       (<= 0 6)) (in_range11
                                       temp___expr_1038)))

(declare-fun getreaderstate (Int) Int)

(declare-fun getreaderstate__function_guard (Int Int) Bool)

;; getreaderstate__post_axiom
  (assert
  (forall ((readerstate Int))
  (! (=> (dynamic_invariant readerstate true true true)
     (let ((result (getreaderstate readerstate)))
     (=> (getreaderstate__function_guard result readerstate)
     (dynamic_invariant2 result true false true)))) :pattern ((getreaderstate
                                                              readerstate)) )))

;; getreaderstate__def_axiom
  (assert
  (forall ((readerstate Int))
  (! (=>
     (and (dynamic_invariant readerstate true true true)
     (getreaderstate__function_guard (getreaderstate readerstate)
     readerstate))
     (= (getreaderstate readerstate) (ite (and (<= 0 readerstate)
                                          (<= readerstate 6))
                                     readerstate 0))) :pattern ((getreaderstate
                                                                readerstate)) )))

(define-fun dynamic_invariant3 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(declare-fun makedescription (us_t Int) (Array Int character))

(declare-fun makedescription__function_guard ((Array Int character) us_t
  Int) Bool)

;; makedescription__post_axiom
  (assert true)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun temp___String_Literal_1172 (tuple0) (Array Int character))

;; temp___String_Literal_1172__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 1)) 84)
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 3)) 107))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 4)) 101))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 5)) 110))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 6)) 32))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 7)) 82))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 8)) 101))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 9)) 97))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 10)) 100))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 11)) 101))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 12)) 114))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 13)) 32))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 14)) 115))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 15)) 116))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 16)) 97))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 17)) 116))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 18)) 117))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 19)) 115))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 20)) 32))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 21)) 99))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 22)) 104))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 23)) 97))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 24)) 110))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 25)) 103))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 26)) 101))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 27)) 32))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 28)) 102))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 29)) 97))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 30)) 105))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 31)) 108))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 32)) 117))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 33)) 114))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 34)) 101))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 35)) 32))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 36)) 58))
     (= (to_rep (select (temp___String_Literal_1172 us_void_param) 37)) 32)) :pattern (
  (temp___String_Literal_1172 us_void_param)) )))

(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant5 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant6 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

;; valid_numberlogentries__post_axiom
  (assert true)

(define-fun dynamic_invariant7 ((temp___expr_383 Int)
  (temp___is_init_380 Bool) (temp___skip_constant_381 Bool)
  (temp___do_toplevel_382 Bool)) Bool (=>
                                      (or (= temp___is_init_380 true)
                                      (<= 1 150)) (in_range5
                                      temp___expr_383)))

;; nouser__def_axiom
  (assert (= nouser (temp___String_Literal_141 Tuple0)))

(define-fun dynamic_invariant8 ((temp___expr_353 Int)
  (temp___is_init_350 Bool) (temp___skip_constant_351 Bool)
  (temp___do_toplevel_352 Bool)) Bool (=>
                                      (or (= temp___is_init_350 true)
                                      (<= 0 4294967295)) (in_range7
                                      temp___expr_353)))

(define-fun dynamic_invariant9 ((temp___expr_359 Int)
  (temp___is_init_356 Bool) (temp___skip_constant_357 Bool)
  (temp___do_toplevel_358 Bool)) Bool (=>
                                      (or (= temp___is_init_356 true)
                                      (<= 0 2)) (in_range8 temp___expr_359)))

(define-fun dynamic_invariant10 ((temp___expr_1044 Int)
  (temp___is_init_1041 Bool) (temp___skip_constant_1042 Bool)
  (temp___do_toplevel_1043 Bool)) Bool (=>
                                       (or (= temp___is_init_1041 true)
                                       (<= 1 6)) (in_range10
                                       temp___expr_1044)))

(define-fun dynamic_invariant11 ((temp___expr_987 Int)
  (temp___is_init_984 Bool) (temp___skip_constant_985 Bool)
  (temp___do_toplevel_986 Bool)) Bool (=>
                                      (or (= temp___is_init_984 true)
                                      (<= 0 4294967295)) (in_range9
                                      temp___expr_987)))

(declare-fun state () us_private)

(declare-fun responsecode () Int)

(declare-fun rawnewstate () Int)

(declare-fun newstate () Int)

(declare-fun o () (Array Int character))

(declare-fun o1 () (Array Int character))

(declare-fun o2 () t)

(declare-fun responsecode1 () Int)

(declare-fun rawnewstate1 () Int)

(declare-fun readerstatus () (Array Int us_rep))

;; H
  (assert (= (temp___String_Literal_141 Tuple0) nouser))

;; H
  (assert (in_range6 reader))

;; H
  (assert (=> (<= 0 4294967295) (in_range4 responsecode)))

;; H
  (assert (=> (<= 0 4294967295) (in_range4 rawnewstate)))

;; H
  (assert (=> (<= 0 6) (in_range11 newstate)))

;; H
  (assert (and (in_range4 rawnewstate1) (in_range4 responsecode1)))

;; H
  (assert (not (= responsecode1 0)))

;; H
  (assert (not (= responsecode1 7)))

;; H
  (assert
  (not
  (= (to_rep2
     (rec__tokenreader__readerinfot__lastfault
     (us_split_fields1 (select readerstatus reader)))) responsecode1)))

;; H
  (assert
  (and
  (= o (makedescription
       (mk___t (temp___String_Literal_1172 Tuple0) (mk 1 37)) responsecode1))
  (makedescription__function_guard o
  (mk___t (temp___String_Literal_1172 Tuple0) (mk 1 37)) responsecode1)))

;; H
  (assert (= o o1))

;; H
  (assert (= (mk 1 150) o2))

;; H
  (assert (valid_numberlogentries__function_guard
  (valid_numberlogentries state) state))

(assert
;; WP_parameter_def
 ;; File "tokenreader.adb", line 203, characters 0-0
  (not (= (valid_numberlogentries state) true)))
(check-sat)
