;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq1 (us_rep us_rep) Bool)

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun dummy1 () us_rep)

(declare-datatypes ()
((cursor__ref (mk_cursor__ref (cursor__content us_rep)))))
(define-fun cursor__ref___projection ((a cursor__ref)) us_rep (cursor__content
                                                              a))

(declare-sort us_main_type1 0)

(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)

(declare-sort us_rep1 0)

(declare-fun bool_eq2 (us_rep1 us_rep1) Bool)

(declare-fun user_eq2 (us_rep1 us_rep1) Bool)

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep1) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))

(declare-fun dummy2 () us_rep1)

(declare-datatypes ()
((trace__ref (mk_trace__ref (trace__content us_rep1)))))
(define-fun trace__ref___projection ((a trace__ref)) us_rep1 (trace__content
                                                             a))

(declare-fun empty (tuple0) us_rep1)

(declare-fun empty__function_guard (us_rep1 tuple0) Bool)

;; empty__post_axiom
  (assert true)

(declare-sort element_type 0)

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq3 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq3 (element_type element_type) Bool)

(declare-fun dummy3 () element_type)

(declare-datatypes ()
((element_type__ref
 (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type 
  (element_type__content a))

(define-fun dynamic_invariant ((temp___expr_135 Int)
  (temp___is_init_132 Bool) (temp___skip_constant_133 Bool)
  (temp___do_toplevel_134 Bool)) Bool (=>
                                      (or (= temp___is_init_132 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range2 temp___expr_135)))

(declare-fun append (us_rep1 Int) us_rep1)

(declare-fun append__function_guard (us_rep1 us_rep1 Int) Bool)

;; append__post_axiom
  (assert true)

(declare-fun element (us_rep1 us_rep) Int)

(declare-fun element__function_guard (Int us_rep1 us_rep) Bool)

;; element__post_axiom
  (assert
  (forall ((t us_rep1))
  (forall ((c us_rep))
  (! (let ((result (element t c)))
     (=> (element__function_guard result t c) (dynamic_invariant result true
     false true))) :pattern ((element t c)) ))))

(declare-fun has_element (us_rep1 us_rep) Bool)

(declare-fun has_element__function_guard (Bool us_rep1 us_rep) Bool)

;; has_element__post_axiom
  (assert true)

(declare-fun previous (us_rep1 us_rep) us_rep)

(declare-fun previous__function_guard (us_rep us_rep1 us_rep) Bool)

;; previous__post_axiom
  (assert true)

(declare-fun is_first (us_rep1 us_rep) Bool)

(declare-fun is_first__function_guard (Bool us_rep1 us_rep) Bool)

;; is_first__post_axiom
  (assert true)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun trace () us_rep1)

(declare-fun i () Int)

(declare-fun o () us_rep1)

(declare-fun temp___158 () us_rep1)

(declare-fun o1 () us_rep1)

(declare-fun result () us_rep1)

(declare-fun trace1 () us_rep1)

(declare-fun state () us_private)

(declare-fun result1 () Int)

(declare-fun i1 () Int)

(declare-fun trace2 () us_rep1)

(declare-fun i2 () Int)

(declare-fun result2 () us_rep1)

(declare-fun trace3 () us_rep1)

(declare-fun state1 () us_private)

(declare-fun state2 () us_private)

(declare-fun trace4 () us_rep1)

(declare-fun i3 () Int)

(declare-fun state3 () us_private)

(declare-fun trace5 () us_rep1)

(declare-fun i4 () Int)

(declare-fun state4 () us_private)

(declare-fun trace6 () us_rep1)

(declare-fun i5 () Int)

(declare-fun state5 () us_private)

(declare-fun trace7 () us_rep1)

(declare-fun i6 () Int)

(declare-fun state6 () us_private)

(declare-fun trace8 () us_rep1)

(declare-fun i7 () Int)

(declare-fun state7 () us_private)

(declare-fun trace9 () us_rep1)

(declare-fun i8 () Int)

(define-fun i9 () int__ref (mk_int__ref i5))

(define-fun trace10 () trace__ref (mk_trace__ref trace6))

(define-fun state8 () us_private__ref (mk___private__ref state4))

;; H
  (assert (and (= o (empty Tuple0)) (empty__function_guard o Tuple0)))

;; H
  (assert (= (mk_trace__ref result) (mk_trace__ref trace)))

;; H
  (assert (= trace1 o))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref i)))

;; H
  (assert (= i1 1))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= temp___158 trace1)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (and (<= 1 i2) (<= i2 100))))

;; H
  (assert
  (=> (and (<= 1 i1) (<= i1 100))
  (and (= o1 (append trace2 i2)) (append__function_guard o1 trace2 i2))))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= trace2 result2)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= trace3 o1)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= i2 100)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= i2 i3)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= trace3 trace4)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= state1 state2)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= i4 i2)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= trace5 trace3)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= state3 state1)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= i9 (mk_int__ref i3))))

;; H
  (assert
  (=> (and (<= 1 i1) (<= i1 100)) (= trace10 (mk_trace__ref trace4))))

;; H
  (assert
  (=> (and (<= 1 i1) (<= i1 100)) (= state8 (mk___private__ref state2))))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= i6 i4)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= trace7 trace5)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 100)) (= state5 state3)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 100))) (= i1 i5)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 100))) (= trace1 trace6)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 100))) (= state state4)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 100))) (= i6 i1)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 100))) (= trace7 trace1)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 100))) (= state5 state)))

;; H
  (assert (= (mk_int__ref i7) i9))

;; H
  (assert (= (mk_trace__ref trace8) trace10))

;; H
  (assert (= (mk___private__ref state6) state8))

;; H
  (assert (= i8 i6))

;; H
  (assert (= trace9 trace7))

;; H
  (assert (= state7 state5))

(declare-fun c () us_rep)

;; H
  (assert (has_element__function_guard (has_element trace8 c) trace8 c))

;; H
  (assert (= (has_element trace8 c) true))

;; H
  (assert (is_first__function_guard (is_first trace8 c) trace8 c))

;; H
  (assert (not (= (is_first trace8 c) true)))

;; H
  (assert (element__function_guard (element trace8 c) trace8 c))

;; H
  (assert (previous__function_guard (previous trace8 c) trace8 c))

;; H
  (assert (previous__function_guard (previous trace8 c) trace8 c))

;; H
  (assert (element__function_guard (element trace8 (previous trace8 c))
  trace8 (previous trace8 c)))

(assert
;; WP_parameter_def
 ;; File "traces.ads", line 37, characters 0-0
  (not (= (element trace8 c) (+ (element trace8 (previous trace8 c)) 1))))
(check-sat)
