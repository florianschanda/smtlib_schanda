;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-sort t1b 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 5)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (t1b t1b) Bool)

(declare-fun dummy1 () t1b)

(declare-datatypes () ((t1b__ref (mk_t1b__ref (t1b__content t1b)))))
(define-fun t1b__ref___projection ((a t1b__ref)) t1b (t1b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-fun last (Int) Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-fun dummy2 () integer)

(declare-datatypes () ((t2b__ref (mk_t2b__ref (t2b__content integer)))))
(define-fun t2b__ref___projection ((a t2b__ref)) integer (t2b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun count () Int)

(declare-fun i () Int)

(declare-fun temp___169 () Int)

(declare-fun temp___168 () Int)

(declare-fun o () Int)

(declare-fun result () Int)

(declare-fun count1 () Int)

(declare-fun result1 () Int)

(declare-fun i1 () Int)

(declare-fun count2 () Int)

(declare-fun i2 () Int)

(declare-fun k () Int)

(declare-fun result2 () Int)

(declare-fun count3 () Int)

(declare-fun result3 () Int)

(declare-fun k1 () Int)

(declare-fun result4 () Int)

(declare-fun count4 () Int)

(declare-fun count5 () Int)

(declare-fun k2 () Int)

(declare-fun count6 () Int)

(declare-fun k3 () Int)

(declare-fun count7 () Int)

(declare-fun k4 () Int)

(declare-fun count8 () Int)

(declare-fun k5 () Int)

(declare-fun count9 () Int)

(declare-fun k6 () Int)

(declare-fun result5 () Int)

(declare-fun i3 () Int)

(declare-fun count10 () Int)

(declare-fun i4 () Int)

(declare-fun k7 () Int)

(declare-fun count11 () Int)

(declare-fun i5 () Int)

(declare-fun k8 () Int)

(define-fun count12 () int__ref (mk_int__ref count8))

;; H
  (assert (= result count))

;; H
  (assert (= count1 0))

;; H
  (assert (in_range1 count1))

;; H
  (assert (= result1 i))

;; H
  (assert (= i1 1))

;; H
  (assert (<= 1 i1))

;; H
  (assert (<= i1 5))

;; H
  (assert (= count2 (- i2 1)))

;; H
  (assert
  (and
  (and (=> (<= 1 5) (in_range2 i2))
  (=> (<= (- 2147483648) 2147483647) (in_range1 count2)))
  (and (<= 1 i2) (<= i2 5))))

;; H
  (assert (= count2 result2))

;; H
  (assert (= count3 0))

;; H
  (assert (= k result3))

;; H
  (assert (= k1 1))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= temp___169 count3)))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= temp___168 k1)))

;; H
  (assert
  (=> (and (<= 1 k1) (<= k1 i2))
  (and (= o (+ count3 1)) (in_range1 (+ count3 1)))))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= count3 result4)))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= count4 o)))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= count5 k2)))

;; H
  (assert
  (=> (and (<= 1 k1) (<= k1 i2))
  (and
  (and (=> (<= 1 i2) (dynamic_property 1 i2 k2))
  (=> (<= (- 2147483648) 2147483647) (in_range1 count5)))
  (and (<= 1 k2) (<= k2 i2)))))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= k2 i2)))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= k2 k3)))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= count5 count6)))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= k4 k2)))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= count7 count5)))

;; H
  (assert
  (=> (and (<= 1 k1) (<= k1 i2)) (= (mk_int__ref k5) (mk_int__ref k3))))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= count12 (mk_int__ref count6))))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= k6 k4)))

;; H
  (assert (=> (and (<= 1 k1) (<= k1 i2)) (= count9 count7)))

;; H
  (assert (=> (not (and (<= 1 k1) (<= k1 i2))) (= k1 k5)))

;; H
  (assert (=> (not (and (<= 1 k1) (<= k1 i2))) (= count3 count8)))

;; H
  (assert (=> (not (and (<= 1 k1) (<= k1 i2))) (= k6 k1)))

;; H
  (assert (=> (not (and (<= 1 k1) (<= k1 i2))) (= count9 count3)))

;; H
  (assert (not (= i2 5)))

;; H
  (assert (= result5 i2))

;; H
  (assert (= i3 (+ i2 1)))

;; H
  (assert (= k7 k5))

;; H
  (assert (= i3 i4))

;; H
  (assert (= (mk_int__ref count10) count12))

;; H
  (assert (= k8 k6))

;; H
  (assert (= i5 i3))

;; H
  (assert (= count11 count9))

(assert
;; WP_parameter_def
 ;; File "loops.adb", line 1, characters 0-0
  (not (= count10 (- i4 1))))
(check-sat)
