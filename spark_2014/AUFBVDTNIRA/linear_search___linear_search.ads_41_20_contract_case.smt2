;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort tindexB 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 128) x) (<= x 127)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (tindexB tindexB) Bool)

(declare-fun dummy () tindexB)

(declare-datatypes ()
((tindexB__ref (mk_tindexB__ref (tindexB__content tindexB)))))
(define-fun tindexB__ref___projection ((a tindexB__ref)) tindexB (tindexB__content
                                                                 a))

(declare-sort index 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (index index) Bool)

(declare-fun dummy1 () index)

(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))

(declare-fun to_rep (index) Int)

(declare-fun of_rep (Int) index)

;; inversion_axiom
  (assert
  (forall ((x index)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x index)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort element 0)

(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (element element) Bool)

(declare-fun dummy2 () element)

(declare-datatypes ()
((element__ref (mk_element__ref (element__content element)))))
(define-fun element__ref___projection ((a element__ref)) element (element__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_142 Int)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (=>
                                      (or (= temp___is_init_139 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range3 temp___expr_142)))

(declare-fun to_rep1 (element) Int)

(declare-fun of_rep1 (Int) element)

;; inversion_axiom
  (assert
  (forall ((x element))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x element)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int element))))))
(declare-fun slide ((Array Int element) Int Int) (Array Int element))

;; slide_eq
  (assert
  (forall ((a (Array Int element)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int element)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int element) Int Int (Array Int element) Int
  Int) (Array Int element))

;; concat_def
  (assert
  (forall ((a (Array Int element)) (b (Array Int element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (element Int) (Array Int element))

;; singleton_def
  (assert
  (forall ((v element))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int element)) (a__first Int) (a__last Int)
  (b (Array Int element)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int element)) (b (Array Int element)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int element) Int Int (Array Int element) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int element)) (b (Array Int element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int element)) (b (Array Int element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int element)) (b (Array Int element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-datatypes ()
((us_split_discrs
 (mk___split_discrs (rec__linear_search__search_result__found Bool)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) Bool (rec__linear_search__search_result__found
                                                                    a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields (rec__linear_search__search_result__at_index index)))))
(define-fun us_split_fields_At_Index__projection ((a us_split_fields)) index 
  (rec__linear_search__search_result__at_index a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)(attr__constrained Bool)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep_2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(define-fun us_rep_3__projection ((a us_rep)) Bool (attr__constrained a))

(define-fun linear_search__search_result__at_index__pred ((a us_rep)) Bool (= 
  (to_int1 (rec__linear_search__search_result__found (us_split_discrs1 a))) 1))

(define-fun bool_eq4 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (rec__linear_search__search_result__found
                           (us_split_discrs1 a)) (rec__linear_search__search_result__found
                                                 (us_split_discrs1 b)))
                        (=> (linear_search__search_result__at_index__pred a)
                        (= (to_rep
                           (rec__linear_search__search_result__at_index
                           (us_split_fields1 a))) (to_rep
                                                  (rec__linear_search__search_result__at_index
                                                  (us_split_fields1 b))))))
                   true false))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun linear_search__search_result__found__first__bit () Int)

(declare-fun linear_search__search_result__found__last__bit () Int)

(declare-fun linear_search__search_result__found__position () Int)

;; linear_search__search_result__found__first__bit_axiom
  (assert (<= 0 linear_search__search_result__found__first__bit))

;; linear_search__search_result__found__last__bit_axiom
  (assert
  (< linear_search__search_result__found__first__bit linear_search__search_result__found__last__bit))

;; linear_search__search_result__found__position_axiom
  (assert (<= 0 linear_search__search_result__found__position))

(declare-fun linear_search__search_result__at_index__first__bit () Int)

(declare-fun linear_search__search_result__at_index__last__bit () Int)

(declare-fun linear_search__search_result__at_index__position () Int)

;; linear_search__search_result__at_index__first__bit_axiom
  (assert (<= 0 linear_search__search_result__at_index__first__bit))

;; linear_search__search_result__at_index__last__bit_axiom
  (assert
  (< linear_search__search_result__at_index__first__bit linear_search__search_result__at_index__last__bit))

;; linear_search__search_result__at_index__position_axiom
  (assert (<= 0 linear_search__search_result__at_index__position))

(declare-fun dummy3 () us_rep)

(declare-datatypes ()
((search_result__ref (mk_search_result__ref (search_result__content us_rep)))))
(define-fun search_result__ref___projection ((a search_result__ref)) us_rep 
  (search_result__content a))

(define-fun default_initial_assumption ((temp___expr_159 us_rep)
  (temp___skip_top_level_160 Bool)) Bool (and
                                         (= (attr__constrained
                                            temp___expr_159) false)
                                         (= (rec__linear_search__search_result__found
                                            (us_split_discrs1
                                            temp___expr_159)) (of_int 0))))

(declare-fun value_found_in_range ((Array Int element) Int Int Int) Bool)

(declare-fun value_found_in_range__function_guard (Bool (Array Int element)
  Int Int Int) Bool)

(define-fun dynamic_invariant1 ((temp___expr_136 Int)
  (temp___is_init_133 Bool) (temp___skip_constant_134 Bool)
  (temp___do_toplevel_135 Bool)) Bool (=>
                                      (or (= temp___is_init_133 true)
                                      (<= 1 10)) (in_range2 temp___expr_136)))

;; value_found_in_range__post_axiom
  (assert true)

;; value_found_in_range__def_axiom
  (assert
  (forall ((a (Array Int element)))
  (forall ((val__ Int) (low Int) (up Int))
  (! (=> (value_found_in_range__function_guard
     (value_found_in_range a val__ low up) a val__ low up)
     (= (= (value_found_in_range a val__ low up) true)
     (exists ((j Int))
     (and (and (<= low j) (<= j up)) (= (to_rep1 (select a j)) val__))))) :pattern (
  (value_found_in_range a val__ low up)) ))))

(declare-fun a () (Array Int element))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun val__ () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun res__attr__constrained () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(define-fun in_range4 ((rec__linear_search__search_result__found1 Bool)
  (a1 us_rep)) Bool (= rec__linear_search__search_result__found1 (rec__linear_search__search_result__found
                                                                 (us_split_discrs1
                                                                 a1))))

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a1 us_rep)) (<= 0 (object__size1 a1))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a1 us_rep)) (<= 0 (object__alignment1 a1))))

(declare-fun linear_search__search_result__found__first__bit1 () Int)

(declare-fun linear_search__search_result__found__last__bit1 () Int)

(declare-fun linear_search__search_result__found__position1 () Int)

;; linear_search__search_result__found__first__bit_axiom
  (assert (<= 0 linear_search__search_result__found__first__bit1))

;; linear_search__search_result__found__last__bit_axiom
  (assert
  (< linear_search__search_result__found__first__bit1 linear_search__search_result__found__last__bit1))

;; linear_search__search_result__found__position_axiom
  (assert (<= 0 linear_search__search_result__found__position1))

(declare-fun linear_search__search_result__at_index__first__bit1 () Int)

(declare-fun linear_search__search_result__at_index__last__bit1 () Int)

(declare-fun linear_search__search_result__at_index__position1 () Int)

;; linear_search__search_result__at_index__first__bit_axiom
  (assert (<= 0 linear_search__search_result__at_index__first__bit1))

;; linear_search__search_result__at_index__last__bit_axiom
  (assert
  (< linear_search__search_result__at_index__first__bit1 linear_search__search_result__at_index__last__bit1))

;; linear_search__search_result__at_index__position_axiom
  (assert (<= 0 linear_search__search_result__at_index__position1))

(declare-fun dummy4 () us_rep)

(declare-datatypes () ((t1b__ref (mk_t1b__ref (t1b__content us_rep)))))
(define-fun t1b__ref___projection ((a1 t1b__ref)) us_rep (t1b__content a1))

(define-fun in_range5 ((rec__linear_search__search_result__found1 Bool)
  (a1 us_rep)) Bool (= rec__linear_search__search_result__found1 (rec__linear_search__search_result__found
                                                                 (us_split_discrs1
                                                                 a1))))

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a1 us_rep)) (<= 0 (object__size2 a1))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a1 us_rep)) (<= 0 (object__alignment2 a1))))

(declare-fun linear_search__search_result__found__first__bit2 () Int)

(declare-fun linear_search__search_result__found__last__bit2 () Int)

(declare-fun linear_search__search_result__found__position2 () Int)

;; linear_search__search_result__found__first__bit_axiom
  (assert (<= 0 linear_search__search_result__found__first__bit2))

;; linear_search__search_result__found__last__bit_axiom
  (assert
  (< linear_search__search_result__found__first__bit2 linear_search__search_result__found__last__bit2))

;; linear_search__search_result__found__position_axiom
  (assert (<= 0 linear_search__search_result__found__position2))

(declare-fun linear_search__search_result__at_index__first__bit2 () Int)

(declare-fun linear_search__search_result__at_index__last__bit2 () Int)

(declare-fun linear_search__search_result__at_index__position2 () Int)

;; linear_search__search_result__at_index__first__bit_axiom
  (assert (<= 0 linear_search__search_result__at_index__first__bit2))

;; linear_search__search_result__at_index__last__bit_axiom
  (assert
  (< linear_search__search_result__at_index__first__bit2 linear_search__search_result__at_index__last__bit2))

;; linear_search__search_result__at_index__position_axiom
  (assert (<= 0 linear_search__search_result__at_index__position2))

(declare-fun dummy5 () us_rep)

(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content us_rep)))))
(define-fun t3b__ref___projection ((a1 t3b__ref)) us_rep (t3b__content a1))

(declare-fun pos () Int)

(declare-fun res__split_fields () index)

(declare-fun res__split_discrs () Bool)

(declare-fun linear_search__search__result () Bool)

(declare-fun linear_search__search__result1 () index)

(declare-fun linear_search__search__result2 () Bool)

(declare-fun temp___183 () Bool)

(declare-fun temp___1831 () index)

(declare-fun temp___1832 () Bool)

(declare-fun temp___182 () Int)

(declare-fun temp___185 () Int)

(declare-fun o () Int)

(declare-fun o1 () element)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () index)

(declare-fun o5 () index)

(declare-fun temp___179 () Bool)

(declare-fun temp___1791 () index)

(declare-fun temp___1792 () Bool)

(declare-fun usq_ () Bool)

(declare-fun usq_1 () index)

(declare-fun usq_2 () Bool)

(declare-fun temp___181 () Bool)

(declare-fun temp___1811 () index)

(declare-fun temp___1812 () Bool)

(declare-fun o6 () Int)

(declare-fun o7 () Int)

(declare-fun o8 () element)

(declare-fun o9 () Int)

(declare-fun o10 () Int)

(declare-fun o11 () index)

(declare-fun o12 () us_split_fields)

(declare-fun temp___1793 () us_rep)

(declare-fun usq_3 () us_rep)

(declare-fun temp___1813 () us_rep)

(declare-fun usq_4 () us_rep)

(declare-fun temp___188 () us_rep)

(declare-fun res__split_fields1 () us_split_fields)

(declare-fun res__split_discrs1 () us_split_discrs)

(declare-fun linear_search__search__result3 () us_rep)

(declare-fun result () int__ref)

(declare-fun pos1 () Int)

(declare-fun temp___1851 () Int)

(declare-fun result1 () Bool)

(declare-fun result2 () us_split_fields__ref)

(declare-fun res__split_fields2 () us_split_fields)

(declare-fun result3 () us_split_discrs__ref)

(declare-fun res__split_discrs2 () us_split_discrs)

(declare-fun result4 () search_result__ref)

(declare-fun linear_search__search__result4 () us_rep)

(declare-fun pos2 () Int)

(declare-fun res__split_fields3 () us_split_fields)

(declare-fun res__split_discrs3 () us_split_discrs)

(declare-fun linear_search__search__result5 () us_rep)

(declare-fun temp___1852 () Int)

(declare-fun result5 () int__ref)

(declare-fun temp___1853 () Int)

(declare-fun result6 () int__ref)

(declare-fun pos3 () Int)

(declare-fun result7 () Bool)

(declare-fun result8 () us_split_fields__ref)

(declare-fun res__split_fields4 () us_split_fields)

(declare-fun result9 () us_split_discrs__ref)

(declare-fun res__split_discrs4 () us_split_discrs)

(declare-fun result10 () search_result__ref)

(declare-fun linear_search__search__result6 () us_rep)

(declare-fun pos4 () int__ref)

(declare-fun res__split_fields5 () us_split_fields__ref)

(declare-fun res__split_discrs5 () us_split_discrs__ref)

(declare-fun linear_search__search__result7 () search_result__ref)

(declare-fun temp___1854 () int__ref)

(declare-fun pos5 () Int)

(declare-fun res__split_fields6 () us_split_fields)

(declare-fun res__split_discrs6 () us_split_discrs)

(declare-fun linear_search__search__result8 () us_rep)

(declare-fun temp___1855 () Int)

(declare-fun pos6 () int__ref)

(declare-fun res__split_fields7 () us_split_fields__ref)

(declare-fun res__split_discrs7 () us_split_discrs__ref)

(declare-fun linear_search__search__result9 () search_result__ref)

(declare-fun pos7 () Int)

(declare-fun res__split_fields8 () us_split_fields)

(declare-fun res__split_discrs8 () us_split_discrs)

(declare-fun linear_search__search__result10 () us_rep)

(declare-fun pos8 () int__ref)

(declare-fun res__split_fields9 () us_split_fields__ref)

(declare-fun res__split_discrs9 () us_split_discrs__ref)

(declare-fun linear_search__search__result11 () search_result__ref)

(declare-fun pos9 () Int)

(declare-fun res__split_fields10 () us_split_fields)

(declare-fun res__split_discrs10 () us_split_discrs)

(declare-fun linear_search__search__result12 () us_rep)

(declare-fun result11 () us_split_fields__ref)

(declare-fun res__split_fields11 () us_split_fields)

(declare-fun result12 () us_split_discrs__ref)

(declare-fun res__split_discrs11 () us_split_discrs)

(declare-fun result13 () search_result__ref)

(declare-fun linear_search__search__result13 () us_rep)

(declare-fun linear_search__search__result14 () search_result__ref)

(declare-fun linear_search__search__result15 () us_rep)

(declare-fun pos10 () int__ref)

(declare-fun res__split_fields12 () us_split_fields__ref)

(declare-fun res__split_discrs12 () us_split_discrs__ref)

(declare-fun linear_search__search__result16 () search_result__ref)

(declare-fun pos11 () Int)

(declare-fun res__split_fields13 () us_split_fields)

(declare-fun res__split_discrs13 () us_split_discrs)

(declare-fun linear_search__search__result17 () us_rep)

(declare-fun pos12 () int__ref)

(declare-fun res__split_fields14 () us_split_fields__ref)

(declare-fun res__split_discrs14 () us_split_discrs__ref)

(declare-fun linear_search__search__result18 () search_result__ref)

(declare-fun pos13 () Int)

(declare-fun res__split_fields15 () us_split_fields)

(declare-fun res__split_discrs15 () us_split_discrs)

(declare-fun linear_search__search__result19 () us_rep)

(define-fun linear_search__search__result20 () search_result__ref (mk_search_result__ref
                                                                  (mk___rep
                                                                  (mk___split_discrs
                                                                  linear_search__search__result)
                                                                  (mk___split_fields
                                                                  linear_search__search__result1)
                                                                  linear_search__search__result2)))

(define-fun res__split_discrs16 () us_split_discrs__ref (mk___split_discrs__ref
                                                        (mk___split_discrs
                                                        res__split_discrs)))

(define-fun res__split_fields16 () us_split_fields__ref (mk___split_fields__ref
                                                        (mk___split_fields
                                                        res__split_fields)))

;; H
  (assert (in_range3 val__))

;; H
  (assert (<= 0 val__))

;; H
  (assert (value_found_in_range__function_guard
  (value_found_in_range a val__ 1 pos2) a val__ 1 pos2))

;; H
  (assert (value_found_in_range__function_guard
  (value_found_in_range a val__ 1 pos2) a val__ 1 pos2))

;; H
  (assert (value_found_in_range__function_guard
  (value_found_in_range a val__ 1 pos2) a val__ 1 pos2))

;; H
  (assert (= result (mk_int__ref pos)))

;; H
  (assert (= pos1 1))

;; H
  (assert (in_range1 pos1))

;; H
  (assert
  (and (= res__attr__constrained false) (= res__split_discrs (of_int 0))))

;; H
  (assert
  (or
  (and
  (and
  (and (= linear_search__search__result16 linear_search__search__result7)
  (and (= res__split_discrs12 res__split_discrs5)
  (and (= res__split_fields12 res__split_fields5) (= pos10 pos4))))
  (and (= linear_search__search__result17 linear_search__search__result8)
  (and (= res__split_discrs13 res__split_discrs6)
  (and (= res__split_fields13 res__split_fields6) (= pos11 pos5)))))
  (and (<= pos1 10)
  (and
  (and (= res__split_discrs temp___183)
  (and (= res__split_fields temp___1831)
  (= res__attr__constrained temp___1832)))
  (and (= temp___182 pos1)
  (and (= 0 temp___185)
  (or
  (and
  (and
  (and (= temp___1854 (mk_int__ref temp___185))
  (and
  (= linear_search__search__result7 (mk_search_result__ref
                                    linear_search__search__result4))
  (and (= res__split_discrs5 (mk___split_discrs__ref res__split_discrs2))
  (and (= res__split_fields5 (mk___split_fields__ref res__split_fields2))
  (= pos4 (mk_int__ref pos1))))))
  (and (= temp___1855 temp___1851)
  (and (= linear_search__search__result8 linear_search__search__result4)
  (and (= res__split_discrs6 res__split_discrs2)
  (and (= res__split_fields6 res__split_fields2) (= pos5 pos1))))))
  (and
  (and
  (and
  (and (and (and (<= 1 pos1) (<= pos1 10)) (= o pos1)) (= o1 (select a o)))
  (= o2 (to_rep1 o1))) (= result1 (ite (= o2 val__) true false)))
  (and (= result1 true)
  (and
  (and
  (and
  (and
  (and
  (and (and (and (= o3 pos1) (in_range2 pos1)) (= (to_rep o4) o3)) (= o4 o5))
  (and (= (of_int 1) temp___179)
  (and (= temp___1791 o5) (= true temp___1792))))
  (and (=> (= res__attr__constrained true) (= temp___179 res__split_discrs))
  (= (mk___rep (mk___split_discrs usq_) (mk___split_fields usq_1) usq_2) 
  (mk___rep (mk___split_discrs temp___179) (mk___split_fields temp___1791)
  temp___1792))))
  (and (= usq_ temp___181)
  (and (= usq_1 temp___1811) (= res__attr__constrained temp___1812))))
  (and
  (and (= result2 res__split_fields16)
  (= res__split_fields2 (mk___split_fields temp___1811)))
  (and (= result3 res__split_discrs16)
  (= res__split_discrs2 (mk___split_discrs temp___181)))))
  (and (= result4 linear_search__search__result20)
  (= linear_search__search__result4 (mk___rep res__split_discrs2
                                    res__split_fields2
                                    res__attr__constrained)))))))
  (and
  (and
  (and
  (and
  (and (and (and (<= 1 pos1) (<= pos1 10)) (= o pos1)) (= o1 (select a o)))
  (= o2 (to_rep1 o1))) (= result1 (ite (= o2 val__) true false)))
  (and (not (= result1 true))
  (and
  (and
  (= linear_search__search__result4 (mk___rep
                                    (mk___split_discrs
                                    linear_search__search__result)
                                    (mk___split_fields
                                    linear_search__search__result1)
                                    linear_search__search__result2))
  (and (= res__split_discrs2 (mk___split_discrs res__split_discrs))
  (= res__split_fields2 (mk___split_fields res__split_fields))))
  (and (= linear_search__search__result4 linear_search__search__result3)
  (and (= res__split_discrs2 res__split_discrs1)
  (= res__split_fields2 res__split_fields1))))))
  (and
  (and
  (and (= temp___1854 (mk_int__ref temp___1853))
  (and
  (= linear_search__search__result7 (mk_search_result__ref
                                    linear_search__search__result6))
  (and (= res__split_discrs5 (mk___split_discrs__ref res__split_discrs4))
  (and (= res__split_fields5 (mk___split_fields__ref res__split_fields4))
  (= pos4 (mk_int__ref pos3))))))
  (and (= temp___1855 temp___1853)
  (and (= linear_search__search__result8 linear_search__search__result6)
  (and (= res__split_discrs6 res__split_discrs4)
  (and (= res__split_fields6 res__split_fields4) (= pos5 pos3))))))
  (and
  (and (and (<= 1 pos2) (<= pos2 10))
  (not (= (value_found_in_range a val__ 1 pos2) true)))
  (and (=> (<= (- 128) 127) (in_range1 pos2))
  (and (and (= result5 (mk_int__ref temp___1852)) (= temp___1853 pos2))
  (and
  (and (and (= o6 (+ pos2 1)) (in_range1 (+ pos2 1)))
  (and (= result6 (mk_int__ref pos2)) (= pos3 o6)))
  (and (<= pos3 10)
  (and
  (and
  (and
  (and (and (and (<= 1 pos3) (<= pos3 10)) (= o7 pos3)) (= o8 (select a o7)))
  (= o9 (to_rep1 o8))) (= result7 (ite (= o9 val__) true false)))
  (and (= result7 true)
  (and
  (and
  (and
  (and
  (and
  (and (and (and (= o10 pos3) (in_range2 pos3)) (= (to_rep o11) o10))
  (= o12 (mk___split_fields o11)))
  (= temp___1793 (mk___rep (mk___split_discrs (of_int 1)) o12 true)))
  (and
  (=> (= res__attr__constrained true)
  (= (rec__linear_search__search_result__found
     (us_split_discrs1 temp___1793)) (rec__linear_search__search_result__found
                                     res__split_discrs3)))
  (= usq_3 temp___1793)))
  (= temp___1813 (mk___rep (us_split_discrs1 usq_3) (us_split_fields1 usq_3)
                 res__attr__constrained)))
  (and
  (and (= result8 (mk___split_fields__ref res__split_fields3))
  (= res__split_fields4 (us_split_fields1 temp___1813)))
  (and (= result9 (mk___split_discrs__ref res__split_discrs3))
  (= res__split_discrs4 (us_split_discrs1 temp___1813)))))
  (and (= result10 (mk_search_result__ref linear_search__search__result5))
  (= linear_search__search__result6 (mk___rep res__split_discrs4
                                    res__split_fields4
                                    res__attr__constrained)))))))))))))))))))
  (and
  (ite (<= pos1 10)
  (and
  (and
  (and
  (and (= res__split_discrs temp___183)
  (and (= res__split_fields temp___1831)
  (= res__attr__constrained temp___1832)))
  (and (= temp___182 pos1)
  (and (= 0 temp___185)
  (and
  (and
  (and
  (and
  (and (and (and (<= 1 pos1) (<= pos1 10)) (= o pos1)) (= o1 (select a o)))
  (= o2 (to_rep1 o1))) (= result1 (ite (= o2 val__) true false)))
  (and (not (= result1 true))
  (and
  (and
  (= linear_search__search__result4 (mk___rep
                                    (mk___split_discrs
                                    linear_search__search__result)
                                    (mk___split_fields
                                    linear_search__search__result1)
                                    linear_search__search__result2))
  (and (= res__split_discrs2 (mk___split_discrs res__split_discrs))
  (= res__split_fields2 (mk___split_fields res__split_fields))))
  (and (= linear_search__search__result4 linear_search__search__result3)
  (and (= res__split_discrs2 res__split_discrs1)
  (= res__split_fields2 res__split_fields1))))))
  (and
  (and (and (<= 1 pos2) (<= pos2 10))
  (not (= (value_found_in_range a val__ 1 pos2) true)))
  (and (=> (<= (- 128) 127) (in_range1 pos2))
  (and (and (= result5 (mk_int__ref temp___1852)) (= temp___1853 pos2))
  (and
  (and (and (= o6 (+ pos2 1)) (in_range1 (+ pos2 1)))
  (and (= result6 (mk_int__ref pos2)) (= pos3 o6))) (not (<= pos3 10))))))))))
  (and
  (and
  (= linear_search__search__result9 (mk_search_result__ref
                                    linear_search__search__result5))
  (and (= res__split_discrs7 (mk___split_discrs__ref res__split_discrs3))
  (and (= res__split_fields7 (mk___split_fields__ref res__split_fields3))
  (= pos6 (mk_int__ref pos3)))))
  (and (= linear_search__search__result10 linear_search__search__result5)
  (and (= res__split_discrs8 res__split_discrs3)
  (and (= res__split_fields8 res__split_fields3) (= pos7 pos3))))))
  (and
  (and (= linear_search__search__result11 linear_search__search__result9)
  (and (= res__split_discrs9 res__split_discrs7)
  (and (= res__split_fields9 res__split_fields7) (= pos8 pos6))))
  (and (= linear_search__search__result12 linear_search__search__result10)
  (and (= res__split_discrs10 res__split_discrs8)
  (and (= res__split_fields10 res__split_fields8) (= pos9 pos7))))))
  (and
  (and (= linear_search__search__result11 linear_search__search__result20)
  (and (= res__split_discrs9 res__split_discrs16)
  (and (= res__split_fields9 res__split_fields16)
  (= pos8 (mk_int__ref pos1)))))
  (and (= linear_search__search__result12 linear_search__search__result3)
  (and (= res__split_discrs10 res__split_discrs1)
  (and (= res__split_fields10 res__split_fields1) (= pos9 pos1))))))
  (and
  (and
  (and (= linear_search__search__result16 linear_search__search__result14)
  (and (= res__split_discrs12 (mk___split_discrs__ref res__split_discrs11))
  (and (= res__split_fields12 (mk___split_fields__ref res__split_fields11))
  (= pos10 pos8))))
  (and (= linear_search__search__result17 linear_search__search__result15)
  (and (= res__split_discrs13 res__split_discrs11)
  (and (= res__split_fields13 res__split_fields11) (= pos11 pos9)))))
  (and
  (and
  (and
  (and
  (=> (= res__attr__constrained true)
  (= (of_int 0) (rec__linear_search__search_result__found
                (us_split_discrs__content res__split_discrs9))))
  (= usq_4 (mk___rep (mk___split_discrs (of_int 0))
           (mk___split_fields dummy1) true)))
  (= temp___188 (mk___rep (us_split_discrs1 usq_4) (us_split_fields1 usq_4)
                res__attr__constrained)))
  (and
  (and (= result11 res__split_fields9)
  (= res__split_fields11 (us_split_fields1 temp___188)))
  (and (= result12 res__split_discrs9)
  (= res__split_discrs11 (us_split_discrs1 temp___188)))))
  (and
  (and
  (= linear_search__search__result14 (mk_search_result__ref
                                     linear_search__search__result13))
  (= linear_search__search__result15 linear_search__search__result13))
  (and (= result13 linear_search__search__result11)
  (= linear_search__search__result13 (mk___rep res__split_discrs11
                                     res__split_fields11
                                     res__attr__constrained)))))))))

;; H
  (assert
  (= linear_search__search__result18 linear_search__search__result16))

;; H
  (assert (= res__split_discrs14 res__split_discrs12))

;; H
  (assert (= res__split_fields14 res__split_fields12))

;; H
  (assert (= pos12 pos10))

;; H
  (assert
  (= linear_search__search__result19 linear_search__search__result17))

;; H
  (assert (= res__split_discrs15 res__split_discrs13))

;; H
  (assert (= res__split_fields15 res__split_fields13))

;; H
  (assert (= pos13 pos11))

;; H
  (assert (= (= (to_rep1 (select a 1)) val__) true))

(assert
;; WP_parameter_def
 ;; File "linear_search.ads", line 18, characters 0-0
  (not
  (= (to_rep
     (rec__linear_search__search_result__at_index
     (us_split_fields1
     (search_result__content linear_search__search__result18)))) 1)))
(check-sat)
