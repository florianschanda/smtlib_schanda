;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort ta_tD1 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (ta_tD1 ta_tD1) Bool)

(declare-fun dummy1 () ta_tD1)

(declare-datatypes ()
((ta_tD1__ref (mk_ta_tD1__ref (ta_tD1__content ta_tD1)))))
(define-fun ta_tD1__ref___projection ((a ta_tD1__ref)) ta_tD1 (ta_tD1__content
                                                              a))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int
  Int) (Array Int integer))

;; concat_def
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (integer Int) (Array Int integer))

;; singleton_def
  (assert
  (forall ((v integer))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq2 ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq2 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq2 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq2 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq2 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int integer))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))

(define-fun of_array ((a (Array Int integer)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int integer)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int integer)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))

(define-fun bool_eq3 ((x us_t)
  (y us_t)) Bool (bool_eq2 (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq2 (us_t us_t) Bool)

(declare-fun dummy2 () us_t)

(declare-datatypes () ((ta_tB__ref (mk_ta_tB__ref (ta_tB__content us_t)))))
(define-fun ta_tB__ref___projection ((a ta_tB__ref)) us_t (ta_tB__content a))

(declare-sort tb_tD1 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq4 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (tb_tD1 tb_tD1) Bool)

(declare-fun dummy3 () tb_tD1)

(declare-datatypes ()
((tb_tD1__ref (mk_tb_tD1__ref (tb_tD1__content tb_tD1)))))
(define-fun tb_tD1__ref___projection ((a tb_tD1__ref)) tb_tD1 (tb_tD1__content
                                                              a))

(declare-fun dummy4 () (Array Int integer))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int integer)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int integer)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))

(declare-fun user_eq4 ((Array Int integer) (Array Int integer)) Bool)

(declare-datatypes ()
((map__ref1 (mk_map__ref1 (map__content1 (Array Int (Array Int integer)))))))
(declare-fun slide1 ((Array Int (Array Int integer)) Int
  Int) (Array Int (Array Int integer)))

;; slide_eq
  (assert
  (forall ((a (Array Int (Array Int integer))))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int (Array Int integer))))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array Int (Array Int integer)) Int Int
  (Array Int (Array Int integer)) Int Int) (Array Int (Array Int integer)))

;; concat_def
  (assert
  (forall ((a (Array Int (Array Int integer)))
  (b (Array Int (Array Int integer))))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 ((Array Int integer)
  Int) (Array Int (Array Int integer)))

;; singleton_def
  (assert
  (forall ((v (Array Int integer)))
  (forall ((i Int))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq5 ((a (Array Int (Array Int integer))) (a__first Int)
  (a__last Int) (b (Array Int (Array Int integer))) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_133 Int))
                           (=>
                           (and (<= a__first temp___idx_133)
                           (<= temp___idx_133 a__last))
                           (= (bool_eq2 (select a temp___idx_133) 1 2
                              (select b (+ (- b__first a__first) temp___idx_133))
                              1 2) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int (Array Int integer)))
  (b (Array Int (Array Int integer))))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq5 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_133 Int))
  (=> (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last))
  (= (bool_eq2 (select a temp___idx_133) 1 2
     (select b (+ (- b__first a__first) temp___idx_133)) 1 2) true))))))))

(declare-sort t5b 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (t5b t5b) Bool)

(declare-fun dummy5 () t5b)

(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content t5b)))))
(define-fun t5b__ref___projection ((a t5b__ref)) t5b (t5b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun o_a () (Array Int integer))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-sort t11b 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (t11b t11b) Bool)

(declare-fun dummy6 () t11b)

(declare-datatypes () ((t11b__ref (mk_t11b__ref (t11b__content t11b)))))
(define-fun t11b__ref___projection ((a t11b__ref)) t11b (t11b__content a))

(declare-sort t7b 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (t7b t7b) Bool)

(declare-fun dummy7 () t7b)

(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content t7b)))))
(define-fun t7b__ref___projection ((a t7b__ref)) t7b (t7b__content a))

(declare-sort t9b 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (t9b t9b) Bool)

(declare-fun dummy8 () t9b)

(declare-datatypes () ((t9b__ref (mk_t9b__ref (t9b__content t9b)))))
(define-fun t9b__ref___projection ((a t9b__ref)) t9b (t9b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun o_b () (Array Int (Array Int integer)))

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-sort t13b 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (t13b t13b) Bool)

(declare-fun dummy9 () t13b)

(declare-datatypes () ((t13b__ref (mk_t13b__ref (t13b__content t13b)))))
(define-fun t13b__ref___projection ((a t13b__ref)) t13b (t13b__content a))

(declare-sort t15b 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq11 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq10 (t15b t15b) Bool)

(declare-fun dummy10 () t15b)

(declare-datatypes () ((t15b__ref (mk_t15b__ref (t15b__content t15b)))))
(define-fun t15b__ref___projection ((a t15b__ref)) t15b (t15b__content a))

(declare-sort t17b 0)

(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq11 (t17b t17b) Bool)

(declare-fun dummy11 () t17b)

(declare-datatypes () ((t17b__ref (mk_t17b__ref (t17b__content t17b)))))
(define-fun t17b__ref___projection ((a t17b__ref)) t17b (t17b__content a))

(declare-sort t21b 0)

(define-fun in_range11 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq13 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq12 (t21b t21b) Bool)

(declare-fun dummy12 () t21b)

(declare-datatypes () ((t21b__ref (mk_t21b__ref (t21b__content t21b)))))
(define-fun t21b__ref___projection ((a t21b__ref)) t21b (t21b__content a))

(declare-fun temp___191 ((Array Int integer) Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___193 (Array Int integer)))
  (forall ((temp___194 Int) (temp___195 Int))
  (let ((temp___192 (temp___191 temp___193 temp___194 temp___195)))
  (forall ((temp___196 Int))
  (ite (= temp___196 temp___194)
  (= (select temp___192 temp___196) (of_rep temp___195))
  (= (select temp___192 temp___196) (select temp___193 temp___196))))))))

(declare-fun update_proof__B_1__a__aggregate_def (Int
  Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___200 Int) (temp___201 Int))
  (let ((temp___199 (update_proof__B_1__a__aggregate_def temp___200
                    temp___201)))
  (and (= (select temp___199 1) (of_rep temp___200))
  (= (select temp___199 2) (of_rep temp___201))))))

(declare-fun temp___203 (Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___205 Int))
  (forall ((temp___206 Int))
  (= (select (temp___203 temp___205) temp___206) (of_rep temp___205)))))

(declare-fun temp___211 (Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___213 Int))
  (forall ((temp___214 Int))
  (= (select (temp___211 temp___213) temp___214) (of_rep temp___213)))))

(declare-fun temp___219 ((Array Int (Array Int integer)) Int
  (Array Int integer)) (Array Int (Array Int integer)))

;; def_axiom
  (assert
  (forall ((temp___221 (Array Int (Array Int integer))))
  (forall ((temp___222 Int))
  (forall ((temp___223 (Array Int integer)))
  (let ((temp___220 (temp___219 temp___221 temp___222 temp___223)))
  (forall ((temp___224 Int))
  (ite (= temp___224 temp___222)
  (= (select temp___220 temp___224) temp___223)
  (= (select temp___220 temp___224) (select temp___221 temp___224)))))))))

(declare-fun temp___225 (Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___227 Int))
  (forall ((temp___228 Int))
  (= (select (temp___225 temp___227) temp___228) (of_rep temp___227)))))

(declare-fun temp___231 (Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___233 Int))
  (forall ((temp___234 Int))
  (= (select (temp___231 temp___233) temp___234) (of_rep temp___233)))))

(declare-fun update_proof__B_2__b__aggregate_def ((Array Int integer)
  (Array Int integer)) (Array Int (Array Int integer)))

;; def_axiom
  (assert
  (forall ((temp___242 (Array Int integer)) (temp___243 (Array Int integer)))
  (let ((temp___241 (update_proof__B_2__b__aggregate_def temp___242
                    temp___243)))
  (and (= (select temp___241 1) temp___242)
  (= (select temp___241 2) temp___243)))))

(declare-fun temp___245 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___247 Int) (temp___248 Int))
  (let ((temp___246 (temp___245 temp___247 temp___248)))
  (and (= (select temp___246 1) (of_rep temp___247))
  (= (select temp___246 2) (of_rep temp___248))))))

(declare-fun temp___250 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___252 Int) (temp___253 Int))
  (let ((temp___251 (temp___250 temp___252 temp___253)))
  (and (= (select temp___251 1) (of_rep temp___252))
  (= (select temp___251 2) (of_rep temp___253))))))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun a () (Array Int integer))

(declare-fun o () (Array Int integer))

(declare-fun o1 () integer)

(declare-fun o2 () (Array Int integer))

(declare-fun result () (Array Int integer))

(declare-fun a1 () (Array Int integer))

(declare-fun result1 () (Array Int integer))

(declare-fun a2 () (Array Int integer))

;; H
  (assert (= o (update_proof__B_1__a__aggregate_def 1 2)))

;; H
  (assert (= (mk_map__ref result) (mk_map__ref a)))

;; H
  (assert (= a1 o))

;; H
  (assert (= a1 o_a))

;; H
  (assert (= (to_rep o1) 0))

;; H
  (assert (= o2 (store a1 2 o1)))

;; H
  (assert (= a1 result1))

;; H
  (assert (= a2 o2))

;; H
  (assert (= (to_rep (select a2 1)) (to_rep (select o_a 1))))

;; H
  (assert (= (to_rep (select a2 2)) 0))

(assert
;; WP_parameter_def
 ;; File "update_proof.adb", line 1, characters 0-0
  (not (= (bool_eq2 a2 1 2 (temp___191 o_a 2 0) 1 2) true)))
(check-sat)
