;; produced by z3_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 32) Int) Bool)

(declare-fun lsr ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 32)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun nth_bv ((_ BitVec 32) (_ BitVec 32)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 32))))))
(declare-fun power ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-sort unsigned_32 0)

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_IMAGE ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) (_ BitVec 32))

(declare-fun user_eq (unsigned_32 unsigned_32) Bool)

(declare-fun dummy () unsigned_32)

(declare-datatypes ()
((unsigned_32__ref (mk_unsigned_32__ref (unsigned_32__content unsigned_32)))))
(define-fun unsigned_32__ref___projection ((a unsigned_32__ref)) unsigned_32
  (unsigned_32__content a))

(define-fun dynamic_invariant ((temp___expr_177 (_ BitVec 32))
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)) Bool true)

(declare-sort unsigned_32_m1_0_m100_0 0)

(declare-fun attr__ATTRIBUTE_MODULUS1 () (_ BitVec 32))

(define-fun in_range ((x (_ BitVec 32))) Bool (and
                                              (bvule ((_ int2bv 32) 1) x)
                                              (bvule x ((_ int2bv 32) 100))))

(define-fun in_range_int ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 32))

(declare-fun user_eq1 (unsigned_32_m1_0_m100_0 unsigned_32_m1_0_m100_0) Bool)

(declare-fun dummy1 () unsigned_32_m1_0_m100_0)

(declare-datatypes ()
((unsigned_32_m1_0_m100_0__ref
 (mk_unsigned_32_m1_0_m100_0__ref
 (unsigned_32_m1_0_m100_0__content unsigned_32_m1_0_m100_0)))))
(define-fun unsigned_32_m1_0_m100_0__ref___projection ((a unsigned_32_m1_0_m100_0__ref)) unsigned_32_m1_0_m100_0
  (unsigned_32_m1_0_m100_0__content a))

(define-fun dynamic_invariant1 ((temp___expr_201 (_ BitVec 32))
  (temp___is_init_198 Bool) (temp___skip_constant_199 Bool)
  (temp___do_toplevel_200 Bool)) Bool (=>
                                      (or (= temp___is_init_198 true)
                                      (bvule ((_ int2bv 32) 1) ((_ int2bv 32) 100)))
                                      (in_range temp___expr_201)))

(declare-fun value () (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun max () (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun min () (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun saturated_value () (_ BitVec 32))

(declare-fun saturation_dynamic_out1 () (_ BitVec 32))

(declare-fun result () (_ BitVec 32))

(declare-fun saturation_dynamic_out11 () (_ BitVec 32))

(declare-fun result1 () (_ BitVec 32))

(declare-fun saturation_dynamic_out12 () (_ BitVec 32))

(declare-fun result2 () (_ BitVec 32))

(declare-fun saturation_dynamic_out13 () (_ BitVec 32))

(declare-fun result3 () (_ BitVec 32))

(declare-fun saturated_value1 () (_ BitVec 32))

;; H
  (assert (in_range value))

;; H
  (assert (in_range max))

;; H
  (assert (in_range min))

;; H
  (assert true)

;; H
  (assert (bvuge max min))

;; H
  (assert true)

;; H
  (assert (=> (bvult value min) (= result saturation_dynamic_out1)))

;; H
  (assert (=> (bvult value min) (= saturation_dynamic_out11 min)))

;; H
  (assert
  (=> (not (bvult value min))
  (=> (bvugt value max) (= result1 saturation_dynamic_out1))))

;; H
  (assert
  (=> (not (bvult value min))
  (=> (bvugt value max) (= saturation_dynamic_out12 max))))

;; H
  (assert
  (=> (not (bvult value min))
  (=> (not (bvugt value max)) (= result2 saturation_dynamic_out1))))

;; H
  (assert
  (=> (not (bvult value min))
  (=> (not (bvugt value max)) (= saturation_dynamic_out13 value))))

;; H
  (assert
  (=> (not (bvult value min))
  (=> (not (bvugt value max))
  (= saturation_dynamic_out12 saturation_dynamic_out13))))

;; H
  (assert
  (=> (not (bvult value min))
  (= saturation_dynamic_out11 saturation_dynamic_out12)))

;; H
  (assert (= result3 saturated_value))

;; H
  (assert (= saturated_value1 saturation_dynamic_out11))

;; H
  (assert
  (and (bvule saturation_dynamic_out11 max)
  (bvuge saturation_dynamic_out11 min)))

(assert
;; WP_parameter_def
 ;; File "dynamicsaturateassert.ads", line 23, characters 0-0
  (not (bvuge max min)))
(check-sat)
(exit)
