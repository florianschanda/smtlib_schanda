;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
;;; SMT-LIB2: real arithmetic
(define-fun fp.isFinite32 ((x Float32)) Bool (not (or (fp.isInfinite x) (fp.isNaN x))))
(define-fun fp.isIntegral32 ((x Float32)) Bool (or (fp.isZero x) (and (fp.isNormal x) (= x (fp.roundToIntegral RNE x)))))
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun pow2 (Int) Int)

(define-fun is_plus_infinity ((x Float32)) Bool (and (fp.isInfinite x)
                                                (fp.isPositive x)))

(define-fun is_minus_infinity ((x Float32)) Bool (and (fp.isInfinite x)
                                                 (fp.isNegative x)))

(define-fun is_plus_zero ((x Float32)) Bool (and (fp.isZero x)
                                            (fp.isPositive x)))

(define-fun is_minus_zero ((x Float32)) Bool (and (fp.isZero x)
                                             (fp.isNegative x)))

(declare-const max_int Int)

(define-fun in_int_range ((i Int)) Bool (and (<= (- max_int) i)
                                        (<= i max_int)))

(define-fun in_safe_int_range ((i Int)) Bool (and (<= (- 16777216) i)
                                             (<= i 16777216)))

(define-fun same_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive x) (fp.isPositive y))
                    (and (fp.isNegative x) (fp.isNegative y))))

(define-fun diff_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive x) (fp.isNegative y))
                    (and (fp.isNegative x) (fp.isPositive y))))

(define-fun product_sign ((z Float32) (x Float32)
  (y Float32)) Bool (and (=> (same_sign x y) (fp.isPositive z))
                    (=> (diff_sign x y) (fp.isNegative z))))

(define-fun sqr ((x Real)) Real (* x x))

(declare-fun sqrt1 (Real) Real)

(define-fun same_sign_real ((x Float32)
  (r Real)) Bool (or (and (fp.isPositive x) (< 0.0 r))
                 (and (fp.isNegative x) (< r 0.0))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content Float32)))))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort float 0)

(declare-fun user_eq (float float) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE1 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Float32)

(declare-const dummy float)

(declare-datatypes () ((float__ref (mk_float__ref (float__content float)))))
(define-fun float__ref___projection ((a float__ref)) float (float__content a))

(declare-fun to_rep (float) Float32)

(declare-fun of_rep (Float32) float)

;; inversion_axiom
  (assert
  (forall ((x float)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x float)) (! (fp.isFinite32 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Float32))
  (! (=> (fp.isFinite32 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

(declare-fun min (Float32 Float32) Float32)

(declare-fun min__function_guard (Float32 Float32 Float32) Bool)

(define-fun dynamic_invariant ((temp___expr_60 Float32)
  (temp___is_init_56 Bool) (temp___skip_constant_57 Bool)
  (temp___do_toplevel_58 Bool)
  (temp___do_typ_inv_59 Bool)) Bool (=>
                                    (or (= temp___is_init_56 true)
                                    (fp.leq (fp.neg (fp #b0 #b11111110 #b11111111111111111111111)) (fp #b0 #b11111110 #b11111111111111111111111)))
                                    (fp.isFinite32 temp___expr_60)))

;; min__post_axiom
  (assert
  (forall ((x1 Float32) (x2 Float32))
  (! (=>
     (and (dynamic_invariant x1 true true true true) (dynamic_invariant x2
     true true true true))
     (let ((result (min x1 x2)))
     (and (ite (fp.leq x1 x2) (fp.eq result x1) (fp.eq result x2))
     (dynamic_invariant result true false true true)))) :pattern ((min x1 x2)) )))

(declare-sort num_delimiters_range 0)

(declare-fun num_delimiters_rangeqtint (num_delimiters_range) Int)

;; num_delimiters_range'axiom
  (assert
  (forall ((i num_delimiters_range))
  (and (<= 0 (num_delimiters_rangeqtint i))
  (<= (num_delimiters_rangeqtint i) 10))))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (num_delimiters_range num_delimiters_range) Bool)

(declare-const dummy1 num_delimiters_range)

(declare-datatypes ()
((num_delimiters_range__ref
 (mk_num_delimiters_range__ref
 (num_delimiters_range__content num_delimiters_range)))))
(define-fun num_delimiters_range__ref___projection ((a num_delimiters_range__ref)) num_delimiters_range
  (num_delimiters_range__content a))

(define-fun to_rep1 ((x num_delimiters_range)) Int (num_delimiters_rangeqtint
                                                   x))

(declare-fun of_rep1 (Int) num_delimiters_range)

;; inversion_axiom
  (assert
  (forall ((x num_delimiters_range))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x num_delimiters_range)) (! (in_range1
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort function_range 0)

(declare-fun function_rangeqtint (function_range) Int)

;; function_range'axiom
  (assert
  (forall ((i function_range))
  (and (<= 0 (function_rangeqtint i))
  (<= (function_rangeqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (function_range function_range) Bool)

(declare-const dummy2 function_range)

(declare-datatypes ()
((function_range__ref
 (mk_function_range__ref (function_range__content function_range)))))
(define-fun function_range__ref___projection ((a function_range__ref)) function_range
  (function_range__content a))

(define-fun to_rep2 ((x function_range)) Int (function_rangeqtint x))

(declare-fun of_rep2 (Int) function_range)

;; inversion_axiom
  (assert
  (forall ((x function_range))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x function_range)) (! (in_range2
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__step_function__delimiter_entry__delimiter function_range)(rec__step_function__delimiter_entry__value float)))))
(define-fun us_split_fields_Delimiter__projection ((a us_split_fields)) function_range
  (rec__step_function__delimiter_entry__delimiter a))

(define-fun us_split_fields_Value__projection ((a us_split_fields)) float
  (rec__step_function__delimiter_entry__value a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep2
                           (rec__step_function__delimiter_entry__delimiter
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__step_function__delimiter_entry__delimiter
                                                  (us_split_fields1 b))))
                        (= (to_rep
                           (rec__step_function__delimiter_entry__value
                           (us_split_fields1 a))) (to_rep
                                                  (rec__step_function__delimiter_entry__value
                                                  (us_split_fields1 b)))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const step_function__delimiter_entry__delimiter__first__bit Int)

(declare-const step_function__delimiter_entry__delimiter__last__bit Int)

(declare-const step_function__delimiter_entry__delimiter__position Int)

;; step_function__delimiter_entry__delimiter__first__bit_axiom
  (assert (<= 0 step_function__delimiter_entry__delimiter__first__bit))

;; step_function__delimiter_entry__delimiter__last__bit_axiom
  (assert
  (< step_function__delimiter_entry__delimiter__first__bit step_function__delimiter_entry__delimiter__last__bit))

;; step_function__delimiter_entry__delimiter__position_axiom
  (assert (<= 0 step_function__delimiter_entry__delimiter__position))

(declare-const step_function__delimiter_entry__value__first__bit Int)

(declare-const step_function__delimiter_entry__value__last__bit Int)

(declare-const step_function__delimiter_entry__value__position Int)

;; step_function__delimiter_entry__value__first__bit_axiom
  (assert (<= 0 step_function__delimiter_entry__value__first__bit))

;; step_function__delimiter_entry__value__last__bit_axiom
  (assert
  (< step_function__delimiter_entry__value__first__bit step_function__delimiter_entry__value__last__bit))

;; step_function__delimiter_entry__value__position_axiom
  (assert (<= 0 step_function__delimiter_entry__value__position))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy3 us_rep)

(declare-datatypes ()
((delimiter_entry__ref
 (mk_delimiter_entry__ref (delimiter_entry__content us_rep)))))
(define-fun delimiter_entry__ref___projection ((a delimiter_entry__ref)) us_rep
  (delimiter_entry__content a))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int)
  (b (Array Int us_rep)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (bool_eq (select a temp___idx_154)
                              (select b (+ (- b__first a__first) temp___idx_154))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (bool_eq (select a temp___idx_154)
     (select b (+ (- b__first a__first) temp___idx_154))) true))))))))

(declare-const dummy4 (Array Int us_rep))

(declare-const value__size1 Int)

(declare-fun object__size1 ((Array Int us_rep)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int us_rep)) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 ((Array Int us_rep)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int us_rep))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment1 a))))

(declare-fun user_eq4 ((Array Int us_rep) (Array Int us_rep)) Bool)

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__step_function__step_function_t__number_of_delimiters num_delimiters_range)(rec__step_function__step_function_t__step (Array Int us_rep))))))
(define-fun us_split_fields_Number_Of_Delimiters__projection ((a us_split_fields2)) num_delimiters_range
  (rec__step_function__step_function_t__number_of_delimiters a))

(define-fun us_split_fields_Step__projection ((a us_split_fields2)) (Array Int us_rep)
  (rec__step_function__step_function_t__step a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                  a))

(define-fun bool_eq2 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep1
                            (rec__step_function__step_function_t__number_of_delimiters
                            (us_split_fields3 a))) (to_rep1
                                                   (rec__step_function__step_function_t__number_of_delimiters
                                                   (us_split_fields3 b))))
                         (= (bool_eq1
                            (rec__step_function__step_function_t__step
                            (us_split_fields3 a)) 0 10
                            (rec__step_function__step_function_t__step
                            (us_split_fields3 b)) 0 10) true))
                    true false))

(declare-const value__size2 Int)

(declare-fun object__size2 (us_rep1) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))

(declare-const step_function__step_function_t__number_of_delimiters__first__bit Int)

(declare-const step_function__step_function_t__number_of_delimiters__last__bit Int)

(declare-const step_function__step_function_t__number_of_delimiters__position Int)

;; step_function__step_function_t__number_of_delimiters__first__bit_axiom
  (assert
  (<= 0 step_function__step_function_t__number_of_delimiters__first__bit))

;; step_function__step_function_t__number_of_delimiters__last__bit_axiom
  (assert
  (< step_function__step_function_t__number_of_delimiters__first__bit
  step_function__step_function_t__number_of_delimiters__last__bit))

;; step_function__step_function_t__number_of_delimiters__position_axiom
  (assert
  (<= 0 step_function__step_function_t__number_of_delimiters__position))

(declare-const step_function__step_function_t__step__first__bit Int)

(declare-const step_function__step_function_t__step__last__bit Int)

(declare-const step_function__step_function_t__step__position Int)

;; step_function__step_function_t__step__first__bit_axiom
  (assert (<= 0 step_function__step_function_t__step__first__bit))

;; step_function__step_function_t__step__last__bit_axiom
  (assert
  (< step_function__step_function_t__step__first__bit step_function__step_function_t__step__last__bit))

;; step_function__step_function_t__step__position_axiom
  (assert (<= 0 step_function__step_function_t__step__position))

(declare-fun user_eq5 (us_rep1 us_rep1) Bool)

(declare-const dummy5 us_rep1)

(declare-datatypes ()
((step_function_t__ref
 (mk_step_function_t__ref (step_function_t__content us_rep1)))))
(define-fun step_function_t__ref___projection ((a step_function_t__ref)) us_rep1
  (step_function_t__content a))

(declare-fun is_valid (us_rep1) Bool)

(declare-fun is_valid__function_guard (Bool us_rep1) Bool)

;; is_valid__post_axiom
  (assert true)

;; is_valid__def_axiom
  (assert
  (forall ((sfun us_rep1))
  (! (= (= (is_valid sfun) true)
     (and
     (= (to_rep2
        (rec__step_function__delimiter_entry__delimiter
        (us_split_fields1
        (let ((temp___209 (rec__step_function__step_function_t__step
                          (us_split_fields3 sfun))))
        (select temp___209 0))))) 0)
     (forall ((i Int))
     (=>
     (and (<= 0 i)
     (<= i (- (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun))) 1)))
     (< (to_rep2
        (rec__step_function__delimiter_entry__delimiter
        (us_split_fields1
        (let ((temp___211 (rec__step_function__step_function_t__step
                          (us_split_fields3 sfun))))
        (select temp___211 i))))) (to_rep2
                                  (rec__step_function__delimiter_entry__delimiter
                                  (us_split_fields1
                                  (let ((temp___210 (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun))))
                                  (select temp___210 (+ i 1))))))))))) :pattern (
  (is_valid sfun)) )))

(declare-fun get_value (us_rep1 Int) Float32)

(declare-fun get_value__function_guard (Float32 us_rep1 Int) Bool)

(define-fun dynamic_invariant1 ((temp___expr_166 Int)
  (temp___is_init_162 Bool) (temp___skip_constant_163 Bool)
  (temp___do_toplevel_164 Bool)
  (temp___do_typ_inv_165 Bool)) Bool (=>
                                     (or (= temp___is_init_162 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_166)))

;; get_value__post_axiom
  (assert
  (forall ((sfun us_rep1))
  (forall ((x Int))
  (! (=>
     (and (dynamic_invariant1 x true true true true)
     (= (is_valid sfun) true))
     (let ((result (get_value sfun x)))
     (and
     (or
     (exists ((i Int))
     (and
     (and (<= 0 i)
     (<= i (- (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun))) 1)))
     (and
     (and
     (<= (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (let ((temp___226 (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun))))
         (select temp___226 i))))) x)
     (< x (to_rep2
          (rec__step_function__delimiter_entry__delimiter
          (us_split_fields1
          (let ((temp___227 (rec__step_function__step_function_t__step
                            (us_split_fields3 sfun))))
          (select temp___227 (+ i 1))))))))
     (fp.eq result (to_rep
                   (rec__step_function__delimiter_entry__value
                   (us_split_fields1
                   (let ((temp___228 (rec__step_function__step_function_t__step
                                     (us_split_fields3 sfun))))
                   (select temp___228 i)))))))))
     (and
     (<= (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (let ((temp___229 (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun))))
         (select temp___229 (to_rep1
                            (rec__step_function__step_function_t__number_of_delimiters
                            (us_split_fields3 sfun)))))))) x)
     (fp.eq result (to_rep
                   (rec__step_function__delimiter_entry__value
                   (us_split_fields1
                   (let ((temp___230 (rec__step_function__step_function_t__step
                                     (us_split_fields3 sfun))))
                   (select temp___230 (to_rep1
                                      (rec__step_function__step_function_t__number_of_delimiters
                                      (us_split_fields3 sfun)))))))))))
     (dynamic_invariant result true false true true)))) :pattern ((get_value
                                                                  sfun x)) ))))

(define-fun dynamic_invariant2 ((temp___expr_159 Int)
  (temp___is_init_155 Bool) (temp___skip_constant_156 Bool)
  (temp___do_toplevel_157 Bool)
  (temp___do_typ_inv_158 Bool)) Bool (=>
                                     (or (= temp___is_init_155 true)
                                     (<= 0 10)) (in_range1 temp___expr_159)))

(declare-const sfun1 us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const sfun2 us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const rliteral function_range)

;; rliteral_axiom
  (assert (= (function_rangeqtint rliteral) 0))

(declare-const merge__split_fields num_delimiters_range)

(declare-const merge__split_fields1 (Array Int us_rep))

(declare-const i1 Int)

(declare-const i2 Int)

(declare-const im Int)

(declare-const scan_sfun1 Bool)

(declare-const scan_sfun2 Bool)

(declare-const temp___416 Bool)

(declare-const temp___414 num_delimiters_range)

(declare-const temp___4141 (Array Int us_rep))

(declare-const temp___413 Bool)

(declare-const temp___412 Int)

(declare-const temp___411 Int)

(declare-const temp___410 Int)

(declare-const o float)

(declare-const o1 function_range)

(declare-const o2 float)

(declare-const o3 function_range)

(declare-const o4 float)

(declare-const o5 (Array Int us_rep))

(declare-const o6 num_delimiters_range)

(declare-const o7 (Array Int us_rep))

(declare-const temp___340 num_delimiters_range)

(declare-const temp___3401 (Array Int us_rep))

(declare-const o8 function_range)

(declare-const o9 us_split_fields)

(declare-const o10 us_rep)

(declare-const o11 (Array Int us_rep))

(declare-const o12 us_split_fields2)

(declare-const temp___402 us_rep1)

(declare-const o13 Float32)

(declare-const o14 Float32)

(declare-const o15 Float32)

(declare-const o16 float)

(declare-const o17 us_split_fields)

(declare-const o18 us_rep)

(declare-const o19 (Array Int us_rep))

(declare-const o20 us_split_fields2)

(declare-const temp___409 us_rep1)

(declare-const o21 function_range)

(declare-const o22 us_split_fields)

(declare-const o23 us_rep)

(declare-const o24 (Array Int us_rep))

(declare-const o25 us_split_fields2)

(declare-const temp___387 us_rep1)

(declare-const o26 Float32)

(declare-const o27 Float32)

(declare-const o28 Float32)

(declare-const o29 float)

(declare-const o30 us_split_fields)

(declare-const o31 us_rep)

(declare-const o32 (Array Int us_rep))

(declare-const o33 us_split_fields2)

(declare-const temp___394 us_rep1)

(declare-const o34 function_range)

(declare-const o35 us_split_fields)

(declare-const o36 us_rep)

(declare-const o37 (Array Int us_rep))

(declare-const o38 us_split_fields2)

(declare-const temp___372 us_rep1)

(declare-const o39 Float32)

(declare-const o40 Float32)

(declare-const o41 Float32)

(declare-const o42 float)

(declare-const o43 us_split_fields)

(declare-const o44 us_rep)

(declare-const o45 (Array Int us_rep))

(declare-const o46 us_split_fields2)

(declare-const temp___379 us_rep1)

(declare-const o47 function_range)

(declare-const o48 us_split_fields)

(declare-const o49 us_rep)

(declare-const o50 (Array Int us_rep))

(declare-const o51 us_split_fields2)

(declare-const temp___359 us_rep1)

(declare-const o52 Float32)

(declare-const o53 Float32)

(declare-const o54 Float32)

(declare-const o55 float)

(declare-const o56 us_split_fields)

(declare-const o57 us_rep)

(declare-const o58 (Array Int us_rep))

(declare-const o59 us_split_fields2)

(declare-const temp___366 us_rep1)

(declare-const o60 function_range)

(declare-const o61 us_split_fields)

(declare-const o62 us_rep)

(declare-const o63 (Array Int us_rep))

(declare-const o64 us_split_fields2)

(declare-const temp___346 us_rep1)

(declare-const o65 Float32)

(declare-const o66 Float32)

(declare-const o67 Float32)

(declare-const o68 float)

(declare-const o69 us_split_fields)

(declare-const o70 us_rep)

(declare-const o71 (Array Int us_rep))

(declare-const o72 us_split_fields2)

(declare-const temp___353 us_rep1)

(declare-const o73 num_delimiters_range)

(declare-const o74 us_split_fields2)

(declare-const temp___478 us_rep1)

(declare-const i Int)

(declare-const result int__ref)

(declare-const i11 Int)

(declare-const result1 int__ref)

(declare-const i21 Int)

(declare-const result2 int__ref)

(declare-const im1 Int)

(declare-const result3 bool__ref)

(declare-const scan_sfun11 Bool)

(declare-const result4 bool__ref)

(declare-const scan_sfun21 Bool)

(declare-const result5 us_split_fields__ref1)

(declare-const merge__split_fields2 us_split_fields2)

(declare-const merge__split_fields3 us_split_fields2)

(declare-const i12 Int)

(declare-const i22 Int)

(declare-const im2 Int)

(declare-const scan_sfun12 Bool)

(declare-const scan_sfun22 Bool)

(declare-const result6 us_split_fields__ref1)

(declare-const merge__split_fields4 us_split_fields2)

(declare-const result7 us_split_fields__ref1)

(declare-const merge__split_fields5 us_split_fields2)

(declare-const i13 Int)

(declare-const scan_sfun13 Bool)

(declare-const result8 us_split_fields__ref1)

(declare-const merge__split_fields6 us_split_fields2)

(declare-const result9 us_split_fields__ref1)

(declare-const merge__split_fields7 us_split_fields2)

(declare-const i23 Int)

(declare-const scan_sfun23 Bool)

(declare-const result10 us_split_fields__ref1)

(declare-const merge__split_fields8 us_split_fields2)

(declare-const result11 us_split_fields__ref1)

(declare-const merge__split_fields9 us_split_fields2)

(declare-const i14 Int)

(declare-const scan_sfun14 Bool)

(declare-const i24 Int)

(declare-const scan_sfun24 Bool)

(declare-const result12 us_split_fields__ref1)

(declare-const merge__split_fields10 us_split_fields2)

(declare-const result13 us_split_fields__ref1)

(declare-const merge__split_fields11 us_split_fields2)

(declare-const i15 Int)

(declare-const scan_sfun15 Bool)

(declare-const result14 us_split_fields__ref1)

(declare-const merge__split_fields12 us_split_fields2)

(declare-const result15 us_split_fields__ref1)

(declare-const merge__split_fields13 us_split_fields2)

(declare-const i25 Int)

(declare-const scan_sfun25 Bool)

(declare-const im3 int__ref)

(declare-const im4 Int)

(declare-const merge__split_fields14 us_split_fields__ref1)

(declare-const i16 int__ref)

(declare-const i26 int__ref)

(declare-const im5 int__ref)

(declare-const scan_sfun16 bool__ref)

(declare-const scan_sfun26 bool__ref)

(declare-const merge__split_fields15 us_split_fields2)

(declare-const i17 Int)

(declare-const i27 Int)

(declare-const im6 Int)

(declare-const scan_sfun17 Bool)

(declare-const scan_sfun27 Bool)

(declare-const merge__split_fields16 us_split_fields__ref1)

(declare-const i18 int__ref)

(declare-const i28 int__ref)

(declare-const im7 int__ref)

(declare-const scan_sfun18 bool__ref)

(declare-const scan_sfun28 bool__ref)

(declare-const merge__split_fields17 us_split_fields2)

(declare-const i19 Int)

(declare-const i29 Int)

(declare-const im8 Int)

(declare-const scan_sfun19 Bool)

(declare-const scan_sfun29 Bool)

(declare-const result16 us_split_fields__ref1)

(declare-const merge__split_fields18 us_split_fields2)

(declare-const merge__split_fields19 us_split_fields__ref1)

(declare-const i110 int__ref)

(declare-const i210 int__ref)

(declare-const im9 int__ref)

(declare-const scan_sfun110 bool__ref)

(declare-const scan_sfun210 bool__ref)

(declare-const merge__split_fields20 us_split_fields2)

(declare-const i111 Int)

(declare-const i211 Int)

(declare-const im10 Int)

(declare-const scan_sfun111 Bool)

(declare-const scan_sfun211 Bool)

;; H
  (assert
  (and (and (= (is_valid sfun1) true) (= (is_valid sfun2) true))
  (<= (+ (to_rep1
         (rec__step_function__step_function_t__number_of_delimiters
         (us_split_fields3 sfun1))) (to_rep1
                                    (rec__step_function__step_function_t__number_of_delimiters
                                    (us_split_fields3 sfun2)))) 10)))

;; H
  (assert (= result (mk_int__ref i1)))

;; H
  (assert (= i11 0))

;; H
  (assert (in_range1 i11))

;; H
  (assert (= result1 (mk_int__ref i2)))

;; H
  (assert (= i21 0))

;; H
  (assert (in_range1 i21))

;; H
  (assert (= result2 (mk_int__ref im)))

;; H
  (assert (= im1 0))

;; H
  (assert (in_range1 im1))

;; H
  (assert (= result3 (mk_bool__ref scan_sfun1)))

;; H
  (assert (= scan_sfun11 (distinct 1 0)))

;; H
  (assert (= result4 (mk_bool__ref scan_sfun2)))

;; H
  (assert (= scan_sfun21 (distinct 1 0)))

;; H
  (assert (= temp___416 scan_sfun21))

;; H
  (assert
  (and (= merge__split_fields temp___414)
  (= merge__split_fields1 temp___4141)))

;; H
  (assert (= temp___413 scan_sfun11))

;; H
  (assert (= temp___412 im1))

;; H
  (assert (= temp___411 i21))

;; H
  (assert (= temp___410 i11))

;; H
  (assert (= (to_rep o) (fp #b0 #b00000000 #b00000000000000000000000)))

;; H
  (assert (= rliteral o1))

;; H
  (assert (= o o2))

;; H
  (assert (= o3 o1))

;; H
  (assert (= o4 o2))

;; H
  (assert
  (= o5 (store merge__split_fields1 im1 (mk___rep (mk___split_fields o3 o4)))))

;; H
  (assert (= merge__split_fields o6))

;; H
  (assert (= o5 o7))

;; H
  (assert (= temp___340 o6))

;; H
  (assert (= temp___3401 o7))

;; H
  (assert
  (= result5 (mk___split_fields__ref1
             (mk___split_fields1 merge__split_fields merge__split_fields1))))

;; H
  (assert
  (= merge__split_fields2 (mk___split_fields1 temp___340 temp___3401)))

;; H
  (assert (<= 0 i12))

;; H
  (assert (<= 0 i22))

;; H
  (assert (<= 0 im2))

;; H
  (assert
  (<= i12 (to_rep1
          (rec__step_function__step_function_t__number_of_delimiters
          (us_split_fields3 sfun1)))))

;; H
  (assert
  (<= i22 (to_rep1
          (rec__step_function__step_function_t__number_of_delimiters
          (us_split_fields3 sfun2)))))

;; H
  (assert (<= im2 10))

;; H
  (assert (or (= scan_sfun12 true) (= scan_sfun22 true)))

;; H
  (assert
  (or (and (and (= i12 0) (= i22 0)) (= im2 0))
  (and
  (and (or (< 0 i12) (not (= scan_sfun12 true)))
  (or (< 0 i22) (not (= scan_sfun22 true)))) (< 0 im2))))

;; H
  (assert
  (ite (and (and (< 0 im2) (= scan_sfun12 true)) (= scan_sfun22 true))
  (< im2 (+ i12 i22)) (<= im2 (+ i12 i22))))

;; H
  (assert
  (=> (< 0 im2)
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) 0)))) 0)))

;; H
  (assert
  (=> (and (< 0 im2) (= scan_sfun12 true))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) (-
     im2 1))))) (to_rep2
                (rec__step_function__delimiter_entry__delimiter
                (us_split_fields1
                (select (rec__step_function__step_function_t__step
                        (us_split_fields3 sfun1)) i12)))))))

;; H
  (assert
  (=> (and (< 0 im2) (= scan_sfun22 true))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) (-
     im2 1))))) (to_rep2
                (rec__step_function__delimiter_entry__delimiter
                (us_split_fields1
                (select (rec__step_function__step_function_t__step
                        (us_split_fields3 sfun2)) i22)))))))

;; H
  (assert
  (forall ((i3 Int))
  (=> (and (<= 1 i3) (<= i3 (- im2 1)))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) (- i3 1)))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields3) i3))))))))

;; H
  (assert
  (forall ((i3 Int))
  (=> (and (<= 0 i3) (<= i3 (- i12 1)))
  (exists ((j Int))
  (and (and (<= 0 j) (<= j (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i3)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields3) j))))))))))

;; H
  (assert
  (=> (not (= scan_sfun12 true))
  (forall ((i3 Int))
  (=>
  (and (<= 0 i3)
  (<= i3 (to_rep1
         (rec__step_function__step_function_t__number_of_delimiters
         (us_split_fields3 sfun1)))))
  (exists ((j Int))
  (and (and (<= 0 j) (<= j (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i3)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields3) j)))))))))))

;; H
  (assert
  (forall ((i3 Int))
  (=> (and (<= 0 i3) (<= i3 (- i22 1)))
  (exists ((j Int))
  (and (and (<= 0 j) (<= j (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i3)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields3) j))))))))))

;; H
  (assert
  (=> (not (= scan_sfun22 true))
  (forall ((i3 Int))
  (=>
  (and (<= 0 i3)
  (<= i3 (to_rep1
         (rec__step_function__step_function_t__number_of_delimiters
         (us_split_fields3 sfun2)))))
  (exists ((j Int))
  (and (and (<= 0 j) (<= j (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i3)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields3) j)))))))))))

;; H
  (assert
  (forall ((i3 Int))
  (=> (and (<= 0 i3) (<= i3 (- im2 1)))
  (fp.eq (to_rep
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) i3)))) (min
                                              (get_value sfun1
                                              (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields3) i3)))))
                                              (get_value sfun2
                                              (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields3) i3))))))))))

;; H
  (assert
  (and
  (and (and (=> (<= 0 10) (in_range1 i12)) (=> (<= 0 10) (in_range1 i22)))
  (=> (<= 0 10) (in_range1 im2)))
  (= (rec__step_function__step_function_t__number_of_delimiters
     merge__split_fields3) temp___414)))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= (to_rep2 o8) (to_rep2
                  (rec__step_function__delimiter_entry__delimiter
                  (us_split_fields1
                  (select (rec__step_function__step_function_t__step
                          (us_split_fields3 sfun1)) i12))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o9 (mk___split_fields o8
        (rec__step_function__delimiter_entry__value
        (us_split_fields1
        (select (rec__step_function__step_function_t__step
                merge__split_fields3) im2))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o10 (mk___rep o9)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o11 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o10)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o12 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o11)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= temp___402 (mk___rep1 o12)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= result6 (mk___split_fields__ref1 merge__split_fields3)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= merge__split_fields4 (us_split_fields3 temp___402)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and
  (= o14 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields4) im2))))))
  (and (fp.isFinite32 o14)
  (or
  (exists ((i3 Int))
  (and
  (and (<= 0 i3)
  (<= i3 (- (to_rep1
            (rec__step_function__step_function_t__number_of_delimiters
            (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i3)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields4)
                                               im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields4)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (+ i3 1)))))))
  (fp.eq o14 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i3))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields4)
  im2)))))
  (fp.eq o14 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2)))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and
  (= o13 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields4) im2))))))
  (and (fp.isFinite32 o13)
  (or
  (exists ((i3 Int))
  (and
  (and (<= 0 i3)
  (<= i3 (- (to_rep1
            (rec__step_function__step_function_t__number_of_delimiters
            (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i3)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields4)
                                               im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields4)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (+ i3 1)))))))
  (fp.eq o13 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i3))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields4)
  im2)))))
  (fp.eq o13 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1)))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and (= o15 (min o13 o14))
  (and (fp.isFinite32 o15)
  (ite (fp.leq o13 o14) (fp.eq o15 o13) (fp.eq o15 o14)))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= (to_rep o16) o15))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o17 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields4) im2)))
         o16)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o18 (mk___rep o17)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o19 (store (rec__step_function__step_function_t__step
                merge__split_fields4) im2 o18)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o20 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields4) o19)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= temp___409 (mk___rep1 o20)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= result7 (mk___split_fields__ref1 merge__split_fields4)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= merge__split_fields5 (us_split_fields3 temp___409)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and
  (ite (< i12 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun1))))
  (and (= i13 (+ i12 1)) (= (= scan_sfun13 true) (= scan_sfun12 true)))
  (and (= i13 i12) (not (= scan_sfun13 true)))) (in_range1 i13)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= scan_sfun23 scan_sfun22))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= i23 i22))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= (to_rep2 o21) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun2)) i22)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o22 (mk___split_fields o21
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o23 (mk___rep o22))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o24 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o23))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o25 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o24))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= temp___387 (mk___rep1 o25))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= result8 (mk___split_fields__ref1 merge__split_fields3))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= merge__split_fields6 (us_split_fields3 temp___387))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and
  (= o27 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields6) im2))))))
  (and (fp.isFinite32 o27)
  (or
  (exists ((i3 Int))
  (and
  (and (<= 0 i3)
  (<= i3 (- (to_rep1
            (rec__step_function__step_function_t__number_of_delimiters
            (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i3)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields6)
                                               im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields6)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (+ i3 1)))))))
  (fp.eq o27 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i3))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields6)
  im2)))))
  (fp.eq o27 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and
  (= o26 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields6) im2))))))
  (and (fp.isFinite32 o26)
  (or
  (exists ((i3 Int))
  (and
  (and (<= 0 i3)
  (<= i3 (- (to_rep1
            (rec__step_function__step_function_t__number_of_delimiters
            (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i3)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields6)
                                               im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields6)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (+ i3 1)))))))
  (fp.eq o26 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i3))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields6)
  im2)))))
  (fp.eq o26 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and (= o28 (min o26 o27))
  (and (fp.isFinite32 o28)
  (ite (fp.leq o26 o27) (fp.eq o28 o26) (fp.eq o28 o27))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= (to_rep o29) o28)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o30 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields6) im2)))
         o29))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o31 (mk___rep o30))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o32 (store (rec__step_function__step_function_t__step
                merge__split_fields6) im2 o31))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o33 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields6) o32))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= temp___394 (mk___rep1 o33))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= result9 (mk___split_fields__ref1 merge__split_fields6))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= merge__split_fields7 (us_split_fields3 temp___394))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and
  (ite (< i22 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun2))))
  (and (= i23 (+ i22 1)) (= (= scan_sfun23 true) (= scan_sfun22 true)))
  (and (= i23 i22) (not (= scan_sfun23 true)))) (in_range1 i23))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= scan_sfun14 scan_sfun12)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= i14 i12)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= (to_rep2 o34) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun1)) i12)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o35 (mk___split_fields o34
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o36 (mk___rep o35))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o37 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o36))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o38 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o37))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= temp___372 (mk___rep1 o38))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= result10 (mk___split_fields__ref1 merge__split_fields3))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= merge__split_fields8 (us_split_fields3 temp___372))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (= o40 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields8) im2))))))
  (and (fp.isFinite32 o40)
  (or
  (exists ((i3 Int))
  (and
  (and (<= 0 i3)
  (<= i3 (- (to_rep1
            (rec__step_function__step_function_t__number_of_delimiters
            (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i3)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields8)
                                               im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields8)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (+ i3 1)))))))
  (fp.eq o40 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i3))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields8)
  im2)))))
  (fp.eq o40 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (= o39 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields8) im2))))))
  (and (fp.isFinite32 o39)
  (or
  (exists ((i3 Int))
  (and
  (and (<= 0 i3)
  (<= i3 (- (to_rep1
            (rec__step_function__step_function_t__number_of_delimiters
            (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i3)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields8)
                                               im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields8)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (+ i3 1)))))))
  (fp.eq o39 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i3))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields8)
  im2)))))
  (fp.eq o39 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and (= o41 (min o39 o40))
  (and (fp.isFinite32 o41)
  (ite (fp.leq o39 o40) (fp.eq o41 o39) (fp.eq o41 o40))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= (to_rep o42) o41)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o43 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields8) im2)))
         o42))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o44 (mk___rep o43))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o45 (store (rec__step_function__step_function_t__step
                merge__split_fields8) im2 o44))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o46 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields8) o45))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= temp___379 (mk___rep1 o46))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= result11 (mk___split_fields__ref1 merge__split_fields8))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= merge__split_fields9 (us_split_fields3 temp___379))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (ite (< i12 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun1))))
  (and (= i14 (+ i12 1)) (= (= scan_sfun14 true) (= scan_sfun12 true)))
  (and (= i14 i12) (not (= scan_sfun14 true)))) (in_range1 i14))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (ite (< i22 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun2))))
  (and (= i24 (+ i22 1)) (= (= scan_sfun24 true) (= scan_sfun22 true)))
  (and (= i24 i22) (not (= scan_sfun24 true)))) (in_range1 i24))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= scan_sfun23 scan_sfun24)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= i23 i24)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= merge__split_fields7 merge__split_fields9)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (= scan_sfun13 scan_sfun14))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (= i13 i14))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (= merge__split_fields5 merge__split_fields7))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= (to_rep2 o47) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun1)) i12))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o48 (mk___split_fields o47
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= o49 (mk___rep o48)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o50 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o49)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o51 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o50)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= temp___359 (mk___rep1 o51)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= result12 (mk___split_fields__ref1 merge__split_fields3)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= merge__split_fields10 (us_split_fields3 temp___359)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and
  (= o53 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields10) im2))))))
  (and (fp.isFinite32 o53)
  (or
  (exists ((i3 Int))
  (and
  (and (<= 0 i3)
  (<= i3 (- (to_rep1
            (rec__step_function__step_function_t__number_of_delimiters
            (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i3)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields10)
                                               im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields10) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun2)) (+ i3 1)))))))
  (fp.eq o53 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i3))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields10)
  im2)))))
  (fp.eq o53 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and
  (= o52 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields10) im2))))))
  (and (fp.isFinite32 o52)
  (or
  (exists ((i3 Int))
  (and
  (and (<= 0 i3)
  (<= i3 (- (to_rep1
            (rec__step_function__step_function_t__number_of_delimiters
            (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i3)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields10)
                                               im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields10) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun1)) (+ i3 1)))))))
  (fp.eq o52 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i3))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields10)
  im2)))))
  (fp.eq o52 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and (= o54 (min o52 o53))
  (and (fp.isFinite32 o54)
  (ite (fp.leq o52 o53) (fp.eq o54 o52) (fp.eq o54 o53)))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= (to_rep o55) o54))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o56 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields10) im2)))
         o55)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= o57 (mk___rep o56)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o58 (store (rec__step_function__step_function_t__step
                merge__split_fields10) im2 o57)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o59 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields10) o58)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= temp___366 (mk___rep1 o59)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= result13 (mk___split_fields__ref1 merge__split_fields10)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= merge__split_fields11 (us_split_fields3 temp___366)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and
  (ite (< i12 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun1))))
  (and (= i15 (+ i12 1)) (= (= scan_sfun15 true) (= scan_sfun12 true)))
  (and (= i15 i12) (not (= scan_sfun15 true)))) (in_range1 i15)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= scan_sfun25 scan_sfun22))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= i25 i22))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= (to_rep2 o60) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun2)) i22))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o61 (mk___split_fields o60
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= o62 (mk___rep o61)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o63 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o62)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o64 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o63)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= temp___346 (mk___rep1 o64)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= result14 (mk___split_fields__ref1 merge__split_fields3)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= merge__split_fields12 (us_split_fields3 temp___346)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and
  (= o66 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields12) im2))))))
  (and (fp.isFinite32 o66)
  (or
  (exists ((i3 Int))
  (and
  (and (<= 0 i3)
  (<= i3 (- (to_rep1
            (rec__step_function__step_function_t__number_of_delimiters
            (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i3)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields12)
                                               im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields12) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun2)) (+ i3 1)))))))
  (fp.eq o66 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i3))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields12)
  im2)))))
  (fp.eq o66 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and
  (= o65 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields12) im2))))))
  (and (fp.isFinite32 o65)
  (or
  (exists ((i3 Int))
  (and
  (and (<= 0 i3)
  (<= i3 (- (to_rep1
            (rec__step_function__step_function_t__number_of_delimiters
            (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i3)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields12)
                                               im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields12) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun1)) (+ i3 1)))))))
  (fp.eq o65 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i3))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields12)
  im2)))))
  (fp.eq o65 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and (= o67 (min o65 o66))
  (and (fp.isFinite32 o67)
  (ite (fp.leq o65 o66) (fp.eq o67 o65) (fp.eq o67 o66)))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= (to_rep o68) o67))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o69 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields12) im2)))
         o68)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= o70 (mk___rep o69)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o71 (store (rec__step_function__step_function_t__step
                merge__split_fields12) im2 o70)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o72 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields12) o71)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= temp___353 (mk___rep1 o72)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= result15 (mk___split_fields__ref1 merge__split_fields12)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= merge__split_fields13 (us_split_fields3 temp___353)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and
  (ite (< i22 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun2))))
  (and (= i25 (+ i22 1)) (= (= scan_sfun25 true) (= scan_sfun22 true)))
  (and (= i25 i22) (not (= scan_sfun25 true)))) (in_range1 i25)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= scan_sfun15 scan_sfun12))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= i15 i12))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= merge__split_fields11 merge__split_fields13))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (= scan_sfun23 scan_sfun25)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (= scan_sfun13 scan_sfun15)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true))) (= i23 i25)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true))) (= i13 i15)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (= merge__split_fields5 merge__split_fields11)))

;; H
  (assert (= im3 (mk_int__ref im2)))

;; H
  (assert (= im4 im2))

;; H
  (assert (not (= (ite (= scan_sfun13 false) scan_sfun23 true) true)))

;; H
  (assert (= scan_sfun26 (mk_bool__ref scan_sfun23)))

;; H
  (assert (= scan_sfun16 (mk_bool__ref scan_sfun13)))

;; H
  (assert (= im5 im3))

;; H
  (assert (= i26 (mk_int__ref i23)))

;; H
  (assert (= i16 (mk_int__ref i13)))

;; H
  (assert
  (= merge__split_fields14 (mk___split_fields__ref1 merge__split_fields5)))

;; H
  (assert (= scan_sfun27 scan_sfun23))

;; H
  (assert (= scan_sfun17 scan_sfun13))

;; H
  (assert (= im6 im4))

;; H
  (assert (= i27 i23))

;; H
  (assert (= i17 i13))

;; H
  (assert (= merge__split_fields15 merge__split_fields5))

;; H
  (assert (= scan_sfun28 scan_sfun26))

;; H
  (assert (= scan_sfun18 scan_sfun16))

;; H
  (assert (= im7 im5))

;; H
  (assert (= i28 i26))

;; H
  (assert (= i18 i16))

;; H
  (assert (= merge__split_fields16 merge__split_fields14))

;; H
  (assert (= scan_sfun29 scan_sfun27))

;; H
  (assert (= scan_sfun19 scan_sfun17))

;; H
  (assert (= im8 im6))

;; H
  (assert (= i29 i27))

;; H
  (assert (= i19 i17))

;; H
  (assert (= merge__split_fields17 merge__split_fields15))

;; H
  (assert (= (to_rep1 o73) (int__content im7)))

;; H
  (assert
  (= o74 (mk___split_fields1 o73
         (rec__step_function__step_function_t__step
         (us_split_fields__content1 merge__split_fields16)))))

;; H
  (assert (= temp___478 (mk___rep1 o74)))

;; H
  (assert (= result16 merge__split_fields16))

;; H
  (assert (= merge__split_fields18 (us_split_fields3 temp___478)))

;; H
  (assert (= scan_sfun210 scan_sfun28))

;; H
  (assert (= scan_sfun110 scan_sfun18))

;; H
  (assert (= im9 im7))

;; H
  (assert (= i210 i28))

;; H
  (assert (= i110 i18))

;; H
  (assert
  (= merge__split_fields19 (mk___split_fields__ref1 merge__split_fields18)))

;; H
  (assert (= scan_sfun211 scan_sfun29))

;; H
  (assert (= scan_sfun111 scan_sfun19))

;; H
  (assert (= im10 im8))

;; H
  (assert (= i211 i29))

;; H
  (assert (= i111 i19))

;; H
  (assert (= merge__split_fields20 merge__split_fields18))

;; H
  (assert (<= 0 i))

;; H
  (assert
  (<= i (to_rep1
        (rec__step_function__step_function_t__number_of_delimiters
        (us_split_fields__content1 merge__split_fields19)))))

(assert
;; WP_parameter_def
 ;; File "step_function.ads", line 89, characters 0-0
  (not (<= 0 i)))
(check-sat)
(exit)
