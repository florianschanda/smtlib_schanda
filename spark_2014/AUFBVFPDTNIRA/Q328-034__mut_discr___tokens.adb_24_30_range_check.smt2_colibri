;; produced by colibri_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-fun value__size () Int)

(declare-fun value__component__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(define-fun dynamic_invariant1 ((temp___expr_153 Int)
  (temp___is_init_150 Bool) (temp___skip_constant_151 Bool)
  (temp___do_toplevel_152 Bool)) Bool (=>
                                      (or (= temp___is_init_150 true)
                                      (<= 0 2)) (in_range4 temp___expr_153)))

(declare-fun value__size1 () Int)

(declare-fun value__alignment1 () Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

(declare-fun types__value__e__first__bit () Int)

(declare-fun types__value__e__last__bit () Int)

(declare-fun types__value__e__position () Int)

;; types__value__e__first__bit_axiom
  (assert (<= 0 types__value__e__first__bit))

;; types__value__e__last__bit_axiom
  (assert (< types__value__e__first__bit types__value__e__last__bit))

;; types__value__e__position_axiom
  (assert (<= 0 types__value__e__position))

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(define-fun dynamic_invariant2 ((temp___expr_177 Int)
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)) Bool (=>
                                      (or (= temp___is_init_174 true)
                                      (<= 0 3)) (in_range5 temp___expr_177)))

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(define-fun dynamic_invariant3 ((temp___expr_185 Int)
  (temp___is_init_182 Bool) (temp___skip_constant_183 Bool)
  (temp___do_toplevel_184 Bool)) Bool (=>
                                      (or (= temp___is_init_182 true)
                                      (<= 0 2)) (in_range6 temp___expr_185)))

(declare-fun value__size2 () Int)

(declare-fun value__alignment2 () Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

(declare-fun tokens__token__kind__first__bit () Int)

(declare-fun tokens__token__kind__last__bit () Int)

(declare-fun tokens__token__kind__position () Int)

;; tokens__token__kind__first__bit_axiom
  (assert (<= 0 tokens__token__kind__first__bit))

;; tokens__token__kind__last__bit_axiom
  (assert (< tokens__token__kind__first__bit tokens__token__kind__last__bit))

;; tokens__token__kind__position_axiom
  (assert (<= 0 tokens__token__kind__position))

(declare-fun tokens__token__val__first__bit () Int)

(declare-fun tokens__token__val__last__bit () Int)

(declare-fun tokens__token__val__position () Int)

;; tokens__token__val__first__bit_axiom
  (assert (<= 0 tokens__token__val__first__bit))

;; tokens__token__val__last__bit_axiom
  (assert (< tokens__token__val__first__bit tokens__token__val__last__bit))

;; tokens__token__val__position_axiom
  (assert (<= 0 tokens__token__val__position))

(declare-fun tokens__token__op__first__bit () Int)

(declare-fun tokens__token__op__last__bit () Int)

(declare-fun tokens__token__op__position () Int)

;; tokens__token__op__first__bit_axiom
  (assert (<= 0 tokens__token__op__first__bit))

;; tokens__token__op__last__bit_axiom
  (assert (< tokens__token__op__first__bit tokens__token__op__last__bit))

;; tokens__token__op__position_axiom
  (assert (<= 0 tokens__token__op__position))

(declare-fun tokens__token__instr__first__bit () Int)

(declare-fun tokens__token__instr__last__bit () Int)

(declare-fun tokens__token__instr__position () Int)

;; tokens__token__instr__first__bit_axiom
  (assert (<= 0 tokens__token__instr__first__bit))

;; tokens__token__instr__last__bit_axiom
  (assert
  (< tokens__token__instr__first__bit tokens__token__instr__last__bit))

;; tokens__token__instr__position_axiom
  (assert (<= 0 tokens__token__instr__position))

(declare-fun v__attr__constrained () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 1024)))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun r1b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-fun value__size3 () Int)

(declare-fun value__component__size1 () Int)

(declare-fun value__alignment3 () Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun r5b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun value__size4 () Int)

(declare-fun value__alignment4 () Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

(declare-fun tokens__token__kind__first__bit1 () Int)

(declare-fun tokens__token__kind__last__bit1 () Int)

(declare-fun tokens__token__kind__position1 () Int)

;; tokens__token__kind__first__bit_axiom
  (assert (<= 0 tokens__token__kind__first__bit1))

;; tokens__token__kind__last__bit_axiom
  (assert
  (< tokens__token__kind__first__bit1 tokens__token__kind__last__bit1))

;; tokens__token__kind__position_axiom
  (assert (<= 0 tokens__token__kind__position1))

(declare-fun tokens__token__op__first__bit1 () Int)

(declare-fun tokens__token__op__last__bit1 () Int)

(declare-fun tokens__token__op__position1 () Int)

;; tokens__token__op__first__bit_axiom
  (assert (<= 0 tokens__token__op__first__bit1))

;; tokens__token__op__last__bit_axiom
  (assert (< tokens__token__op__first__bit1 tokens__token__op__last__bit1))

;; tokens__token__op__position_axiom
  (assert (<= 0 tokens__token__op__position1))

(declare-fun tokens__token__instr__first__bit1 () Int)

(declare-fun tokens__token__instr__last__bit1 () Int)

(declare-fun tokens__token__instr__position1 () Int)

;; tokens__token__instr__first__bit_axiom
  (assert (<= 0 tokens__token__instr__first__bit1))

;; tokens__token__instr__last__bit_axiom
  (assert
  (< tokens__token__instr__first__bit1 tokens__token__instr__last__bit1))

;; tokens__token__instr__position_axiom
  (assert (<= 0 tokens__token__instr__position1))

(declare-fun tokens__token__val__first__bit1 () Int)

(declare-fun tokens__token__val__last__bit1 () Int)

(declare-fun tokens__token__val__position1 () Int)

;; tokens__token__val__first__bit_axiom
  (assert (<= 0 tokens__token__val__first__bit1))

;; tokens__token__val__last__bit_axiom
  (assert (< tokens__token__val__first__bit1 tokens__token__val__last__bit1))

;; tokens__token__val__position_axiom
  (assert (<= 0 tokens__token__val__position1))

(declare-fun r9b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun value__size5 () Int)

(declare-fun value__alignment5 () Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

(declare-fun tokens__token__kind__first__bit2 () Int)

(declare-fun tokens__token__kind__last__bit2 () Int)

(declare-fun tokens__token__kind__position2 () Int)

;; tokens__token__kind__first__bit_axiom
  (assert (<= 0 tokens__token__kind__first__bit2))

;; tokens__token__kind__last__bit_axiom
  (assert
  (< tokens__token__kind__first__bit2 tokens__token__kind__last__bit2))

;; tokens__token__kind__position_axiom
  (assert (<= 0 tokens__token__kind__position2))

(declare-fun tokens__token__val__first__bit2 () Int)

(declare-fun tokens__token__val__last__bit2 () Int)

(declare-fun tokens__token__val__position2 () Int)

;; tokens__token__val__first__bit_axiom
  (assert (<= 0 tokens__token__val__first__bit2))

;; tokens__token__val__last__bit_axiom
  (assert (< tokens__token__val__first__bit2 tokens__token__val__last__bit2))

;; tokens__token__val__position_axiom
  (assert (<= 0 tokens__token__val__position2))

(declare-fun tokens__token__instr__first__bit2 () Int)

(declare-fun tokens__token__instr__last__bit2 () Int)

(declare-fun tokens__token__instr__position2 () Int)

;; tokens__token__instr__first__bit_axiom
  (assert (<= 0 tokens__token__instr__first__bit2))

;; tokens__token__instr__last__bit_axiom
  (assert
  (< tokens__token__instr__first__bit2 tokens__token__instr__last__bit2))

;; tokens__token__instr__position_axiom
  (assert (<= 0 tokens__token__instr__position2))

(declare-fun tokens__token__op__first__bit2 () Int)

(declare-fun tokens__token__op__last__bit2 () Int)

(declare-fun tokens__token__op__position2 () Int)

;; tokens__token__op__first__bit_axiom
  (assert (<= 0 tokens__token__op__first__bit2))

;; tokens__token__op__last__bit_axiom
  (assert (< tokens__token__op__first__bit2 tokens__token__op__last__bit2))

;; tokens__token__op__position_axiom
  (assert (<= 0 tokens__token__op__position2))

(declare-fun r13b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun value__size6 () Int)

(declare-fun value__alignment6 () Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

(declare-fun tokens__token__kind__first__bit3 () Int)

(declare-fun tokens__token__kind__last__bit3 () Int)

(declare-fun tokens__token__kind__position3 () Int)

;; tokens__token__kind__first__bit_axiom
  (assert (<= 0 tokens__token__kind__first__bit3))

;; tokens__token__kind__last__bit_axiom
  (assert
  (< tokens__token__kind__first__bit3 tokens__token__kind__last__bit3))

;; tokens__token__kind__position_axiom
  (assert (<= 0 tokens__token__kind__position3))

(declare-fun tokens__token__op__first__bit3 () Int)

(declare-fun tokens__token__op__last__bit3 () Int)

(declare-fun tokens__token__op__position3 () Int)

;; tokens__token__op__first__bit_axiom
  (assert (<= 0 tokens__token__op__first__bit3))

;; tokens__token__op__last__bit_axiom
  (assert (< tokens__token__op__first__bit3 tokens__token__op__last__bit3))

;; tokens__token__op__position_axiom
  (assert (<= 0 tokens__token__op__position3))

(declare-fun tokens__token__instr__first__bit3 () Int)

(declare-fun tokens__token__instr__last__bit3 () Int)

(declare-fun tokens__token__instr__position3 () Int)

;; tokens__token__instr__first__bit_axiom
  (assert (<= 0 tokens__token__instr__first__bit3))

;; tokens__token__instr__last__bit_axiom
  (assert
  (< tokens__token__instr__first__bit3 tokens__token__instr__last__bit3))

;; tokens__token__instr__position_axiom
  (assert (<= 0 tokens__token__instr__position3))

(declare-fun tokens__token__val__first__bit3 () Int)

(declare-fun tokens__token__val__last__bit3 () Int)

(declare-fun tokens__token__val__position3 () Int)

;; tokens__token__val__first__bit_axiom
  (assert (<= 0 tokens__token__val__first__bit3))

;; tokens__token__val__last__bit_axiom
  (assert (< tokens__token__val__first__bit3 tokens__token__val__last__bit3))

;; tokens__token__val__position_axiom
  (assert (<= 0 tokens__token__val__position3))

(declare-fun r17b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun value__size7 () Int)

(declare-fun value__alignment7 () Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; value__alignment_axiom
  (assert (<= 0 value__alignment7))

(declare-fun tokens__token__kind__first__bit4 () Int)

(declare-fun tokens__token__kind__last__bit4 () Int)

(declare-fun tokens__token__kind__position4 () Int)

;; tokens__token__kind__first__bit_axiom
  (assert (<= 0 tokens__token__kind__first__bit4))

;; tokens__token__kind__last__bit_axiom
  (assert
  (< tokens__token__kind__first__bit4 tokens__token__kind__last__bit4))

;; tokens__token__kind__position_axiom
  (assert (<= 0 tokens__token__kind__position4))

(declare-fun tokens__token__val__first__bit4 () Int)

(declare-fun tokens__token__val__last__bit4 () Int)

(declare-fun tokens__token__val__position4 () Int)

;; tokens__token__val__first__bit_axiom
  (assert (<= 0 tokens__token__val__first__bit4))

;; tokens__token__val__last__bit_axiom
  (assert (< tokens__token__val__first__bit4 tokens__token__val__last__bit4))

;; tokens__token__val__position_axiom
  (assert (<= 0 tokens__token__val__position4))

(declare-fun tokens__token__instr__first__bit4 () Int)

(declare-fun tokens__token__instr__last__bit4 () Int)

(declare-fun tokens__token__instr__position4 () Int)

;; tokens__token__instr__first__bit_axiom
  (assert (<= 0 tokens__token__instr__first__bit4))

;; tokens__token__instr__last__bit_axiom
  (assert
  (< tokens__token__instr__first__bit4 tokens__token__instr__last__bit4))

;; tokens__token__instr__position_axiom
  (assert (<= 0 tokens__token__instr__position4))

(declare-fun tokens__token__op__first__bit4 () Int)

(declare-fun tokens__token__op__last__bit4 () Int)

(declare-fun tokens__token__op__position4 () Int)

;; tokens__token__op__first__bit_axiom
  (assert (<= 0 tokens__token__op__first__bit4))

;; tokens__token__op__last__bit_axiom
  (assert (< tokens__token__op__first__bit4 tokens__token__op__last__bit4))

;; tokens__token__op__position_axiom
  (assert (<= 0 tokens__token__op__position4))

(declare-fun r21b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun value__size8 () Int)

(declare-fun value__alignment8 () Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; value__alignment_axiom
  (assert (<= 0 value__alignment8))

(declare-fun tokens__token__kind__first__bit5 () Int)

(declare-fun tokens__token__kind__last__bit5 () Int)

(declare-fun tokens__token__kind__position5 () Int)

;; tokens__token__kind__first__bit_axiom
  (assert (<= 0 tokens__token__kind__first__bit5))

;; tokens__token__kind__last__bit_axiom
  (assert
  (< tokens__token__kind__first__bit5 tokens__token__kind__last__bit5))

;; tokens__token__kind__position_axiom
  (assert (<= 0 tokens__token__kind__position5))

(declare-fun tokens__token__val__first__bit5 () Int)

(declare-fun tokens__token__val__last__bit5 () Int)

(declare-fun tokens__token__val__position5 () Int)

;; tokens__token__val__first__bit_axiom
  (assert (<= 0 tokens__token__val__first__bit5))

;; tokens__token__val__last__bit_axiom
  (assert (< tokens__token__val__first__bit5 tokens__token__val__last__bit5))

;; tokens__token__val__position_axiom
  (assert (<= 0 tokens__token__val__position5))

(declare-fun tokens__token__op__first__bit5 () Int)

(declare-fun tokens__token__op__last__bit5 () Int)

(declare-fun tokens__token__op__position5 () Int)

;; tokens__token__op__first__bit_axiom
  (assert (<= 0 tokens__token__op__first__bit5))

;; tokens__token__op__last__bit_axiom
  (assert (< tokens__token__op__first__bit5 tokens__token__op__last__bit5))

;; tokens__token__op__position_axiom
  (assert (<= 0 tokens__token__op__position5))

(declare-fun tokens__token__instr__first__bit5 () Int)

(declare-fun tokens__token__instr__last__bit5 () Int)

(declare-fun tokens__token__instr__position5 () Int)

;; tokens__token__instr__first__bit_axiom
  (assert (<= 0 tokens__token__instr__first__bit5))

;; tokens__token__instr__last__bit_axiom
  (assert
  (< tokens__token__instr__first__bit5 tokens__token__instr__last__bit5))

;; tokens__token__instr__position_axiom
  (assert (<= 0 tokens__token__instr__position5))

(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant5 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(declare-fun word_size () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Bool)

(declare-fun o6 () Bool)

(declare-fun o7 () Int)

(declare-fun o8 () Int)

(declare-fun o9 () Bool)

(declare-fun o10 () Bool)

(declare-fun temp___232 () Bool)

(declare-fun o11 () Int)

(declare-fun o12 () Int)

(declare-fun o13 () Int)

(declare-fun o14 () Int)

(declare-fun o15 () Bool)

(declare-fun o16 () Bool)

(declare-fun o17 () Int)

(declare-fun o18 () Int)

(declare-fun o19 () Bool)

(declare-fun o20 () Bool)

(declare-fun o21 () Int)

(declare-fun o22 () Int)

(declare-fun o23 () Int)

(declare-fun o24 () Int)

(declare-fun o25 () Int)

(declare-fun o26 () Int)

(declare-fun o27 () Int)

(declare-fun o28 () Int)

(declare-fun o29 () Int)

(declare-fun o30 () Bool)

(declare-fun o31 () Bool)

(declare-fun o32 () Int)

(declare-fun o33 () Int)

(declare-fun o34 () Int)

(declare-fun o35 () Int)

(declare-fun o36 () Bool)

(declare-fun o37 () Bool)

(declare-fun o38 () Bool)

(declare-fun o39 () Bool)

(declare-fun o40 () Int)

(declare-fun word_size1 () Int)

(declare-fun word_size2 () Int)

(declare-fun result () Bool)

(declare-fun result1 () Bool)

(declare-fun result2 () Bool)

(declare-fun result3 () Bool)

(declare-fun result4 () Bool)

(declare-fun result5 () Bool)

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 word_size)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 word_size1)))

;; H
  (assert (and (<= word_size2 1024) (in_range1 word_size2)))

;; H
  (assert (= word_size2 r1b))

;; H
  (assert (in_range1 r1b))

;; H
  (assert (<= 1 r1b))

(assert
;; WP_parameter_def
 ;; File "tokens.ads", line 14, characters 0-0
  (not (<= 1 1)))
(check-sat)
(exit)
