;; produced by colibri_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun mod1 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_178 Int)
  (temp___is_init_175 Bool) (temp___skip_constant_176 Bool)
  (temp___do_toplevel_177 Bool)) Bool (=>
                                      (or (= temp___is_init_175 true)
                                      (<= 0 2147483647)) (in_range1
                                      temp___expr_178)))

(declare-fun left () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun right () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun dynamic_invariant1 ((temp___expr_206 Int)
  (temp___is_init_203 Bool) (temp___skip_constant_204 Bool)
  (temp___do_toplevel_205 Bool)) Bool (=>
                                      (or (= temp___is_init_203 true)
                                      (<= 1 2147483647)) (in_range2
                                      temp___expr_206)))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun dynamic_invariant2 ((temp___expr_212 Int)
  (temp___is_init_209 Bool) (temp___skip_constant_210 Bool)
  (temp___do_toplevel_211 Bool)) Bool (=>
                                      (or (= temp___is_init_209 true)
                                      (<= 1 2147483647)) (in_range3
                                      temp___expr_212)))

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant3 ((temp___expr_218 Int)
  (temp___is_init_215 Bool) (temp___skip_constant_216 Bool)
  (temp___do_toplevel_217 Bool)) Bool (=>
                                      (or (= temp___is_init_215 true)
                                      (<= 0 2147483647)) (in_range4
                                      temp___expr_218)))

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun a () Int)

(declare-fun b () Int)

(declare-fun r () Int)

(declare-fun test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun temp___249 () Int)

(declare-fun temp___248 () Int)

(declare-fun temp___247 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun a1 () Int)

(declare-fun b1 () Int)

(declare-fun r1 () Int)

(declare-fun test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result1 () Int)

(declare-fun result () Int)

(declare-fun test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result2 () Int)

(declare-fun result1 () Int)

(declare-fun test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result3 () Int)

(declare-fun test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result4 () Int)

(declare-fun test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result5 () Int)

(declare-fun result2 () Int)

(declare-fun a2 () Int)

(declare-fun result3 () Int)

(declare-fun b2 () Int)

(declare-fun a3 () Int)

(declare-fun b3 () Int)

(declare-fun r2 () Int)

(declare-fun result4 () Int)

(declare-fun r3 () Int)

(declare-fun result5 () Int)

(declare-fun a4 () Int)

(declare-fun result6 () Int)

(declare-fun b4 () Int)

(declare-fun a5 () Int)

(declare-fun b5 () Int)

(declare-fun a6 () Int)

(declare-fun b6 () Int)

(declare-fun a7 () Int)

(declare-fun b7 () Int)

(declare-fun r4 () Int)

(declare-fun a8 () Int)

(declare-fun b8 () Int)

(declare-fun r5 () Int)

(declare-fun a9 () Int)

(declare-fun a10 () Int)

(declare-fun b9 () Int)

(declare-fun r6 () Int)

(declare-fun test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result6 () Int)

(declare-fun test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result7 () Int)

(declare-fun a11 () Int)

(declare-fun b10 () Int)

(declare-fun r7 () Int)

(declare-fun test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result8 () Int)

(declare-fun a12 () Int)

(declare-fun b11 () Int)

(declare-fun r8 () Int)

(declare-fun test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result9 () Int)

;; H
  (assert (in_range1 left))

;; H
  (assert (in_range1 right))

;; H
  (assert (and (<= 2 left) (<= 0 right)))

;; H
  (assert (=> (<= 1 2147483647) (in_range2 a)))

;; H
  (assert (=> (<= 1 2147483647) (in_range3 b)))

;; H
  (assert (=> (<= 0 2147483647) (in_range4 r)))

;; H
  (assert (not (= left 0)))

;; H
  (assert (not (= right 0)))

;; H
  (assert
  (= test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result3
  test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result))

;; H
  (assert
  (= test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result3
  test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result1))

;; H
  (assert
  (= test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result2
  test_prime_and_coprime_numbers__p__initialize_coprime_list__euclid__result3))

;; H
  (assert (and (= o left) (in_range2 left)))

;; H
  (assert (= a2 o))

;; H
  (assert (and (= o1 right) (in_range3 right)))

;; H
  (assert (= b2 o1))

;; H
  (assert (and (< 0 a3) (< 0 b3)))

;; H
  (assert (not (and (= a3 1) (= b3 1))))

(declare-fun abstr () Bool)

(declare-fun abstr1 () Bool)

;; H
  (assert (= (= abstr1 true) (= abstr true)))

;; H
  (assert
  (and
  (and (=> (<= 1 2147483647) (in_range2 a3))
  (=> (<= 1 2147483647) (in_range3 b3)))
  (=> (<= 0 2147483647) (in_range4 r2))))

;; H
  (assert (and (= o2 (mod1 a3 b3)) (in_range4 (mod1 a3 b3))))

;; H
  (assert (= r2 result4))

;; H
  (assert (= r3 o2))

;; H
  (assert (not (= r3 0)))

(declare-fun abstr2 () Bool)

;; H
  (assert (= (= abstr1 true) (= abstr2 true)))

;; H
  (assert (= a3 result5))

;; H
  (assert (= a4 b3))

;; H
  (assert (and (= o3 r3) (in_range3 r3)))

;; H
  (assert (= b3 result6))

;; H
  (assert (= b4 o3))

(assert
;; WP_parameter_def
 ;; File "prime_and_coprime_numbers.ads", line 3, characters 0-0
  (not (< 0 a4)))
(check-sat)
(exit)
