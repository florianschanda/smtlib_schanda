;; produced by colibri_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun in_range ((x Int)) Bool (and (<= 65 x) (<= x 90)))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun dynamic_invariant ((temp___expr_165 Int)
  (temp___is_init_162 Bool) (temp___skip_constant_163 Bool)
  (temp___do_toplevel_164 Bool)) Bool (=>
                                      (or (= temp___is_init_162 true)
                                      (<= 65 90)) (in_range temp___expr_165)))

(define-fun dynamic_invariant1 ((temp___expr_171 Int)
  (temp___is_init_168 Bool) (temp___skip_constant_169 Bool)
  (temp___do_toplevel_170 Bool)) Bool (and
                                      (=>
                                      (or (= temp___is_init_168 true)
                                      (<= 1 2147483647)) (in_range1
                                      temp___expr_171))
                                      (=> (= temp___do_toplevel_170 true)
                                      (=> (= temp___is_init_168 true)
                                      (or
                                      (and (<= 1 temp___expr_171)
                                      (<= temp___expr_171 5))
                                      (or
                                      (and (<= 8 temp___expr_171)
                                      (<= temp___expr_171 8))
                                      (and (<= 10 temp___expr_171)
                                      (<= temp___expr_171 10))))))))

(define-fun dynamic_predicate ((temp___175 Int)) Bool (or
                                                      (and (<= 1 temp___175)
                                                      (<= temp___175 5))
                                                      (or
                                                      (and (<= 8 temp___175)
                                                      (<= temp___175 8))
                                                      (and (<= 10 temp___175)
                                                      (<= temp___175 10)))))

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Int)

(declare-fun o6 () Int)

(declare-fun o7 () Int)

(declare-fun o8 () Int)

(declare-fun o9 () Int)

(declare-fun o10 () Int)

(declare-fun o11 () Int)

(declare-fun o12 () Int)

(declare-fun o13 () Int)

(declare-fun o14 () Int)

(declare-fun o15 () Int)

(declare-fun o16 () Int)

(declare-fun o17 () Int)

(declare-fun o18 () Int)

(declare-fun o19 () Int)

(declare-fun o20 () Int)

(declare-fun o21 () Int)

(declare-fun o22 () Int)

(declare-fun o23 () Int)

(declare-fun o24 () Int)

;; H
  (assert
  (or (and (<= 1 10) (<= 10 5)) (or (and (<= 8 10) (<= 10 8)) (<= 10 10))))

;; H
  (assert (= o 10))

;; H
  (assert
  (or (and (<= 1 4) (<= 4 5))
  (or (and (<= 8 4) (<= 4 8)) (and (<= 10 4) (<= 4 10)))))

;; H
  (assert (= o1 4))

;; H
  (assert
  (or (and (<= 1 8) (<= 8 5)) (or (<= 8 8) (and (<= 10 8) (<= 8 10)))))

;; H
  (assert (= o2 8))

;; H
  (assert
  (or (and (<= 1 4) (<= 4 5))
  (or (and (<= 8 4) (<= 4 8)) (and (<= 10 4) (<= 4 10)))))

;; H
  (assert (= o3 4))

;; H
  (assert
  (or (and (<= 1 4) (<= 4 5))
  (or (and (<= 8 4) (<= 4 8)) (and (<= 10 4) (<= 4 10)))))

;; H
  (assert (= o4 4))

;; H
  (assert
  (or (and (<= 1 1) (<= 1 5))
  (or (and (<= 8 1) (<= 1 8)) (and (<= 10 1) (<= 1 10)))))

;; H
  (assert (= o5 1))

;; H
  (assert
  (or (and (<= 1 1) (<= 1 5))
  (or (and (<= 8 1) (<= 1 8)) (and (<= 10 1) (<= 1 10)))))

;; H
  (assert (= o6 1))

;; H
  (assert
  (or (and (<= 1 1) (<= 1 5))
  (or (and (<= 8 1) (<= 1 8)) (and (<= 10 1) (<= 1 10)))))

;; H
  (assert (= o7 1))

;; H
  (assert
  (or (and (<= 1 1) (<= 1 5))
  (or (and (<= 8 1) (<= 1 8)) (and (<= 10 1) (<= 1 10)))))

;; H
  (assert (= o8 1))

;; H
  (assert
  (or (and (<= 1 10) (<= 10 5)) (or (and (<= 8 10) (<= 10 8)) (<= 10 10))))

;; H
  (assert (= o9 10))

;; H
  (assert
  (or (and (<= 1 3) (<= 3 5))
  (or (and (<= 8 3) (<= 3 8)) (and (<= 10 3) (<= 3 10)))))

;; H
  (assert (= o10 3))

;; H
  (assert
  (or (and (<= 1 1) (<= 1 5))
  (or (and (<= 8 1) (<= 1 8)) (and (<= 10 1) (<= 1 10)))))

;; H
  (assert (= o11 1))

;; H
  (assert
  (or (and (<= 1 1) (<= 1 5))
  (or (and (<= 8 1) (<= 1 8)) (and (<= 10 1) (<= 1 10)))))

;; H
  (assert (= o12 1))

;; H
  (assert
  (or (and (<= 1 3) (<= 3 5))
  (or (and (<= 8 3) (<= 3 8)) (and (<= 10 3) (<= 3 10)))))

;; H
  (assert (= o13 3))

;; H
  (assert
  (or (and (<= 1 1) (<= 1 5))
  (or (and (<= 8 1) (<= 1 8)) (and (<= 10 1) (<= 1 10)))))

;; H
  (assert (= o14 1))

;; H
  (assert
  (or (and (<= 1 5) (<= 5 5))
  (or (and (<= 8 5) (<= 5 8)) (and (<= 10 5) (<= 5 10)))))

;; H
  (assert (= o15 5))

;; H
  (assert
  (or (and (<= 1 8) (<= 8 5)) (or (<= 8 8) (and (<= 10 8) (<= 8 10)))))

;; H
  (assert (= o16 8))

;; H
  (assert
  (or (and (<= 1 1) (<= 1 5))
  (or (and (<= 8 1) (<= 1 8)) (and (<= 10 1) (<= 1 10)))))

;; H
  (assert (= o17 1))

;; H
  (assert
  (or (and (<= 1 4) (<= 4 5))
  (or (and (<= 8 4) (<= 4 8)) (and (<= 10 4) (<= 4 10)))))

;; H
  (assert (= o18 4))

;; H
  (assert
  (or (and (<= 1 2) (<= 2 5))
  (or (and (<= 8 2) (<= 2 8)) (and (<= 10 2) (<= 2 10)))))

;; H
  (assert (= o19 2))

;; H
  (assert
  (or (and (<= 1 4) (<= 4 5))
  (or (and (<= 8 4) (<= 4 8)) (and (<= 10 4) (<= 4 10)))))

;; H
  (assert (= o20 4))

(assert
;; WP_parameter_def
 ;; File "scrabble.ads", line 12, characters 0-0
  (not
  (or (and (<= 1 1) (<= 1 5))
  (or (and (<= 8 1) (<= 1 8)) (and (<= 10 1) (<= 1 10))))))
(check-sat)
(exit)
