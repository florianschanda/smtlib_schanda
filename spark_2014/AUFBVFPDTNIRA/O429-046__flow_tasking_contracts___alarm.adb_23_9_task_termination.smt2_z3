;; produced by z3_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort priority 0)

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 97)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (priority priority) Bool)

(declare-fun dummy () priority)

(declare-datatypes ()
((priority__ref (mk_priority__ref (priority__content priority)))))
(define-fun priority__ref___projection ((a priority__ref)) priority (priority__content
                                                                    a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__alarm__the_light Bool)(rec__alarm__blinken_poT__blinken_state Bool)))))
(define-fun us_split_fields_The_Light__projection ((a us_split_fields)) Bool 
  (rec__alarm__the_light a))

(define-fun us_split_fields_Blinken_State__projection ((a us_split_fields)) Bool 
  (rec__alarm__blinken_poT__blinken_state a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun alarm__blinken_poT__blinken_state__first__bit () Int)

(declare-fun alarm__blinken_poT__blinken_state__last__bit () Int)

(declare-fun alarm__blinken_poT__blinken_state__position () Int)

;; alarm__blinken_poT__blinken_state__first__bit_axiom
  (assert (<= 0 alarm__blinken_poT__blinken_state__first__bit))

;; alarm__blinken_poT__blinken_state__last__bit_axiom
  (assert
  (< alarm__blinken_poT__blinken_state__first__bit alarm__blinken_poT__blinken_state__last__bit))

;; alarm__blinken_poT__blinken_state__position_axiom
  (assert (<= 0 alarm__blinken_poT__blinken_state__position))

(declare-datatypes ()
((blinken_poT__ref (mk_blinken_poT__ref (blinken_poT__content us_rep)))))
(define-fun blinken_poT__ref___projection ((a blinken_poT__ref)) us_rep 
  (blinken_poT__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range1 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Bool)

(define-fun default_initial_assumption ((temp___expr_202 us_rep)
  (temp___skip_top_level_203 Bool)) Bool (and
                                         (= (rec__alarm__the_light
                                            (us_split_fields1
                                            temp___expr_202)) (of_int 0))
                                         (= (rec__alarm__blinken_poT__blinken_state
                                            (us_split_fields1
                                            temp___expr_202)) (of_int 0))))

(define-fun dynamic_invariant ((temp___expr_160 Int)
  (temp___is_init_157 Bool) (temp___skip_constant_158 Bool)
  (temp___do_toplevel_159 Bool)) Bool (=>
                                      (or (= temp___is_init_157 true)
                                      (<= 0 97)) (in_range temp___expr_160)))

;; H
  (assert false)

(assert
;; WP_parameter_def
 ;; File "alarm.adb", line 55, characters 0-0
  (not false))
(check-sat)
