(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
(* this is a prelude for Alt-Ergo real arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

axiom add_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x + y) / z) = ((x / z) + (y / z)))))

axiom sub_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x - y) / z) = ((x / z) - (y / z)))))

axiom neg_div :
  (forall x:real. forall y:real. ((not (y = 0.0)) ->
  (((-x) / y) = (-(x / y)))))

axiom assoc_mul_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x * y) / z) = (x * (y / z)))))

axiom assoc_div_mul :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> (((x / y) / z) = (x / (y * z)))))

axiom assoc_div_div :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> ((x / (y / z)) = ((x * z) / y))))

type t

logic tqtreal : t -> real

logic tqtisFinite : t -> prop

axiom tqtaxiom :
  (forall x:t. (tqtisFinite(x) -> (((-0xFFFFFF.0p104) <= tqtreal(x)) and
  (tqtreal(x) <= 0xFFFFFF.0p104))))

logic pow2 : int -> int

axiom Power_0 : (pow2(0) = 1)

axiom Power_s : (forall n:int. ((0 <= n) -> (pow2((n + 1)) = (2 * pow2(n)))))

axiom Power_1 : (pow2(1) = 2)

axiom Power_sum :
  (forall n:int. forall m:int. (((0 <= n) and (0 <= m)) ->
  (pow2((n + m)) = (pow2(n) * pow2(m)))))

axiom pow2pos : (forall i:int. ((0 <= i) -> (0 <  pow2(i))))

axiom pow2_0 : (pow2(0) = 1)

axiom pow2_1 : (pow2(1) = 2)

axiom pow2_2 : (pow2(2) = 4)

axiom pow2_3 : (pow2(3) = 8)

axiom pow2_4 : (pow2(4) = 16)

axiom pow2_5 : (pow2(5) = 32)

axiom pow2_6 : (pow2(6) = 64)

axiom pow2_7 : (pow2(7) = 128)

axiom pow2_8 : (pow2(8) = 256)

axiom pow2_9 : (pow2(9) = 512)

axiom pow2_10 : (pow2(10) = 1024)

axiom pow2_11 : (pow2(11) = 2048)

axiom pow2_12 : (pow2(12) = 4096)

axiom pow2_13 : (pow2(13) = 8192)

axiom pow2_14 : (pow2(14) = 16384)

axiom pow2_15 : (pow2(15) = 32768)

axiom pow2_16 : (pow2(16) = 65536)

axiom pow2_17 : (pow2(17) = 131072)

axiom pow2_18 : (pow2(18) = 262144)

axiom pow2_19 : (pow2(19) = 524288)

axiom pow2_20 : (pow2(20) = 1048576)

axiom pow2_21 : (pow2(21) = 2097152)

axiom pow2_22 : (pow2(22) = 4194304)

axiom pow2_23 : (pow2(23) = 8388608)

axiom pow2_24 : (pow2(24) = 16777216)

axiom pow2_25 : (pow2(25) = 33554432)

axiom pow2_26 : (pow2(26) = 67108864)

axiom pow2_27 : (pow2(27) = 134217728)

axiom pow2_28 : (pow2(28) = 268435456)

axiom pow2_29 : (pow2(29) = 536870912)

axiom pow2_30 : (pow2(30) = 1073741824)

axiom pow2_31 : (pow2(31) = 2147483648)

axiom pow2_32 : (pow2(32) = 4294967296)

axiom pow2_33 : (pow2(33) = 8589934592)

axiom pow2_34 : (pow2(34) = 17179869184)

axiom pow2_35 : (pow2(35) = 34359738368)

axiom pow2_36 : (pow2(36) = 68719476736)

axiom pow2_37 : (pow2(37) = 137438953472)

axiom pow2_38 : (pow2(38) = 274877906944)

axiom pow2_39 : (pow2(39) = 549755813888)

axiom pow2_40 : (pow2(40) = 1099511627776)

axiom pow2_41 : (pow2(41) = 2199023255552)

axiom pow2_42 : (pow2(42) = 4398046511104)

axiom pow2_43 : (pow2(43) = 8796093022208)

axiom pow2_44 : (pow2(44) = 17592186044416)

axiom pow2_45 : (pow2(45) = 35184372088832)

axiom pow2_46 : (pow2(46) = 70368744177664)

axiom pow2_47 : (pow2(47) = 140737488355328)

axiom pow2_48 : (pow2(48) = 281474976710656)

axiom pow2_49 : (pow2(49) = 562949953421312)

axiom pow2_50 : (pow2(50) = 1125899906842624)

axiom pow2_51 : (pow2(51) = 2251799813685248)

axiom pow2_52 : (pow2(52) = 4503599627370496)

axiom pow2_53 : (pow2(53) = 9007199254740992)

axiom pow2_54 : (pow2(54) = 18014398509481984)

axiom pow2_55 : (pow2(55) = 36028797018963968)

axiom pow2_56 : (pow2(56) = 72057594037927936)

axiom pow2_57 : (pow2(57) = 144115188075855872)

axiom pow2_58 : (pow2(58) = 288230376151711744)

axiom pow2_59 : (pow2(59) = 576460752303423488)

axiom pow2_60 : (pow2(60) = 1152921504606846976)

axiom pow2_61 : (pow2(61) = 2305843009213693952)

axiom pow2_62 : (pow2(62) = 4611686018427387904)

axiom pow2_63 : (pow2(63) = 9223372036854775808)

axiom pow2_64 : (pow2(64) = 18446744073709551616)

logic abs : real -> real

axiom abs_def :
  (forall x:real [abs(x)]. (((0.0 <= x) -> (abs(x) = x)) and
  ((not (0.0 <= x)) -> (abs(x) = (-x)))))

axiom Abs_le :
  (forall x:real. forall y:real. ((abs(x) <= y) <-> (((-y) <= x) and
  (x <= y))))

axiom Abs_pos : (forall x:real. (0.0 <= abs(x)))

axiom Abs_sum :
  (forall x:real. forall y:real. (abs((x + y)) <= (abs(x) + abs(y))))

axiom Abs_prod :
  (forall x:real. forall y:real. (abs((x * y)) = (abs(x) * abs(y))))

axiom triangular_inequality :
  (forall x:real. forall y:real. forall z:real.
  (abs((x - z)) <= (abs((x - y)) + abs((y - z)))))

logic from_int : int -> real

axiom Zero : (from_int(0) = 0.0)

axiom One : (from_int(1) = 1.0)

axiom Add :
  (forall x:int. forall y:int.
  (from_int((x + y)) = (from_int(x) + from_int(y))))

axiom Sub :
  (forall x:int. forall y:int.
  (from_int((x - y)) = (from_int(x) - from_int(y))))

axiom Mul :
  (forall x:int. forall y:int.
  (from_int((x * y)) = (from_int(x) * from_int(y))))

axiom Neg : (forall x:int. (from_int((-x)) = (-from_int(x))))

axiom Monotonic :
  (forall x:int. forall y:int. ((x <= y) -> (from_int(x) <= from_int(y))))

logic truncate : real -> int

axiom Truncate_int : (forall i:int. (truncate(from_int(i)) = i))

axiom Truncate_down_pos :
  (forall x:real. ((0.0 <= x) -> ((from_int(truncate(x)) <= x) and
  (x <  from_int((truncate(x) + 1))))))

axiom Truncate_up_neg :
  (forall x:real. ((x <= 0.0) -> ((from_int((truncate(x) - 1)) <  x) and
  (x <= from_int(truncate(x))))))

axiom Real_of_truncate :
  (forall x:real. (((x - 1.0) <= from_int(truncate(x))) and
  (from_int(truncate(x)) <= (x + 1.0))))

axiom Truncate_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (truncate(x) <= truncate(y))))

axiom Truncate_monotonic_int1 :
  (forall x:real. forall i:int. ((x <= from_int(i)) -> (truncate(x) <= i)))

axiom Truncate_monotonic_int2 :
  (forall x:real. forall i:int. ((from_int(i) <= x) -> (i <= truncate(x))))

logic floor : real -> int

logic ceil : real -> int

axiom Floor_int : (forall i:int. (floor(from_int(i)) = i))

axiom Ceil_int : (forall i:int. (ceil(from_int(i)) = i))

axiom Floor_down :
  (forall x:real. ((from_int(floor(x)) <= x) and
  (x <  from_int((floor(x) + 1)))))

axiom Ceil_up :
  (forall x:real. ((from_int((ceil(x) - 1)) <  x) and
  (x <= from_int(ceil(x)))))

axiom Floor_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (floor(x) <= floor(y))))

axiom Ceil_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (ceil(x) <= ceil(y))))

type mode = RNE | RNA | RTP | RTN | RTZ

logic match_mode : mode, 'a, 'a, 'a, 'a, 'a -> 'a

axiom match_mode_RNE :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(RNE, z, z1, z2, z3, z4) = z))

axiom match_mode_RNA :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(RNA, z, z1, z2, z3, z4) = z1))

axiom match_mode_RTP :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(RTP, z, z1, z2, z3, z4) = z2))

axiom match_mode_RTN :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(RTN, z, z1, z2, z3, z4) = z3))

axiom match_mode_RTZ :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(RTZ, z, z1, z2, z3, z4) = z4))

predicate to_nearest(m: mode) = ((m = RNE) or (m = RNA))

logic zeroF : t

logic add : mode, t, t -> t

logic sub : mode, t, t -> t

logic mul : mode, t, t -> t

logic div : mode, t, t -> t

logic abs1 : t -> t

logic neg : t -> t

logic fma : mode, t, t, t -> t

logic sqrt : mode, t -> t

logic roundToIntegral : mode, t -> t

logic min : t, t -> t

logic max : t, t -> t

logic le : t, t -> prop

logic lt : t, t -> prop

logic eq : t, t -> prop

logic is_normal : t -> prop

logic is_subnormal : t -> prop

logic is_zero : t -> prop

logic is_infinite : t -> prop

logic is_nan : t -> prop

logic is_positive : t -> prop

logic is_negative : t -> prop

predicate is_plus_infinity(x: t) = (is_infinite(x) and is_positive(x))

predicate is_minus_infinity(x: t) = (is_infinite(x) and is_negative(x))

predicate is_plus_zero(x: t) = (is_zero(x) and is_positive(x))

predicate is_minus_zero(x: t) = (is_zero(x) and is_negative(x))

predicate is_not_nan(x: t) = (tqtisFinite(x) or is_infinite(x))

axiom is_not_nan1 : (forall x:t. (is_not_nan(x) <-> (not is_nan(x))))

axiom is_not_finite :
  (forall x:t. ((not tqtisFinite(x)) <-> (is_infinite(x) or is_nan(x))))

axiom zeroF_is_positive : is_positive(zeroF)

axiom zeroF_is_zero : is_zero(zeroF)

axiom zero_to_real :
  (forall x:t [is_zero(x)]. (is_zero(x) <-> (tqtisFinite(x) and
  (tqtreal(x) = 0.0))))

logic of_int : mode, int -> t

logic to_int : mode, t -> int

axiom zero_of_int : (forall m:mode. (zeroF = of_int(m, 0)))

logic round : mode, real -> real

logic max_int1 : int

axiom max_real_int : (0x1.FFFFFEp127 = from_int(max_int1))

predicate in_range(x: real) = (((-0x1.FFFFFEp127) <= x) and
  (x <= 0x1.FFFFFEp127))

predicate in_int_range(i: int) = (((-max_int1) <= i) and (i <= max_int1))

axiom is_finite : (forall x:t. (tqtisFinite(x) -> in_range(tqtreal(x))))

predicate no_overflow(m: mode, x: real) = in_range(round(m, x))

axiom Bounded_real_no_overflow :
  (forall m:mode. forall x:real. (in_range(x) -> in_range(round(m, x))))

axiom Round_monotonic :
  (forall m:mode. forall x:real. forall y:real. ((x <= y) -> (round(m,
  x) <= round(m, y))))

axiom Round_idempotent :
  (forall m1:mode. forall m2:mode. forall x:real. (round(m1, round(m2,
  x)) = round(m2, x)))

axiom Round_to_real :
  (forall m:mode. forall x:t. (tqtisFinite(x) -> (round(m,
  tqtreal(x)) = tqtreal(x))))

axiom Round_down_le : (forall x:real. (round(RTN, x) <= x))

axiom Round_up_ge : (forall x:real. (x <= round(RTP, x)))

axiom Round_down_neg : (forall x:real. (round(RTN, (-x)) = (-round(RTP, x))))

axiom Round_up_neg : (forall x:real. (round(RTP, (-x)) = (-round(RTN, x))))

predicate in_safe_int_range(i: int) = (((-16777216) <= i) and
  (i <= 16777216))

axiom Exact_rounding_for_integers :
  (forall m:mode. forall i:int. (in_safe_int_range(i) -> (round(m,
  from_int(i)) = from_int(i))))

predicate same_sign(x: t, y: t) = ((is_positive(x) and is_positive(y)) or
  (is_negative(x) and is_negative(y)))

predicate diff_sign(x: t, y: t) = ((is_positive(x) and is_negative(y)) or
  (is_negative(x) and is_positive(y)))

axiom feq_eq :
  (forall x:t. forall y:t. (tqtisFinite(x) -> (tqtisFinite(y) ->
  ((not is_zero(x)) -> (eq(x, y) -> (x = y))))))

axiom eq_feq :
  (forall x:t. forall y:t. (tqtisFinite(x) -> (tqtisFinite(y) -> ((x = y) ->
  eq(x, y)))))

axiom eq_refl : (forall x:t. (tqtisFinite(x) -> eq(x, x)))

axiom eq_sym : (forall x:t. forall y:t. (eq(x, y) -> eq(y, x)))

axiom eq_trans :
  (forall x:t. forall y:t. forall z:t. (eq(x, y) -> (eq(y, z) -> eq(x, z))))

axiom eq_zero : eq(zeroF, neg(zeroF))

axiom eq_to_real_finite :
  (forall x:t. forall y:t. ((tqtisFinite(x) and tqtisFinite(y)) -> (eq(x,
  y) <-> (tqtreal(x) = tqtreal(y)))))

axiom lt_finite :
  (forall x:t. forall y:t [lt(x, y)]. ((tqtisFinite(x) and tqtisFinite(y)) ->
  (lt(x, y) <-> (tqtreal(x) <  tqtreal(y)))))

axiom le_finite :
  (forall x:t. forall y:t [le(x, y)]. ((tqtisFinite(x) and tqtisFinite(y)) ->
  (le(x, y) <-> (tqtreal(x) <= tqtreal(y)))))

axiom le_lt_trans :
  (forall x:t. forall y:t. forall z:t. ((le(x, y) and lt(y, z)) -> lt(x, z)))

axiom lt_le_trans :
  (forall x:t. forall y:t. forall z:t. ((lt(x, y) and le(y, z)) -> lt(x, z)))

axiom le_ge_asym :
  (forall x:t. forall y:t. ((le(x, y) and le(y, x)) -> eq(x, y)))

axiom not_lt_ge :
  (forall x:t. forall y:t. (((not lt(x, y)) and (is_not_nan(x) and
  is_not_nan(y))) -> le(y, x)))

axiom not_gt_le :
  (forall x:t. forall y:t. (((not lt(y, x)) and (is_not_nan(x) and
  is_not_nan(y))) -> le(x, y)))

axiom lt_lt_finite :
  (forall x:t. forall y:t. forall z:t. (lt(x, y) -> (lt(y, z) ->
  tqtisFinite(y))))

axiom positive_to_real :
  (forall x:t [is_positive(x)]. (tqtisFinite(x) -> (is_positive(x) ->
  (0.0 <= tqtreal(x)))))

axiom to_real_positive :
  (forall x:t [is_positive(x)]. (tqtisFinite(x) -> ((0.0 <  tqtreal(x)) ->
  is_positive(x))))

axiom negative_to_real :
  (forall x:t [is_negative(x)]. (tqtisFinite(x) -> (is_negative(x) ->
  (tqtreal(x) <= 0.0))))

axiom to_real_negative :
  (forall x:t [is_negative(x)]. (tqtisFinite(x) -> ((tqtreal(x) <  0.0) ->
  is_negative(x))))

axiom negative_xor_positive :
  (forall x:t. (not (is_positive(x) and is_negative(x))))

axiom negative_or_positive :
  (forall x:t. (is_not_nan(x) -> (is_positive(x) or is_negative(x))))

axiom diff_sign_trans :
  (forall x:t. forall y:t. forall z:t. ((diff_sign(x, y) and diff_sign(y,
  z)) -> same_sign(x, z)))

axiom diff_sign_product :
  (forall x:t. forall y:t. ((tqtisFinite(x) and (tqtisFinite(y) and
  ((tqtreal(x) * tqtreal(y)) <  0.0))) -> diff_sign(x, y)))

axiom same_sign_product :
  (forall x:t. forall y:t. ((tqtisFinite(x) and (tqtisFinite(y) and
  same_sign(x, y))) -> (0.0 <= (tqtreal(x) * tqtreal(y)))))

predicate product_sign(z: t, x: t, y: t) = ((same_sign(x, y) ->
  is_positive(z)) and (diff_sign(x, y) -> is_negative(z)))

predicate overflow_value(m: mode, x: t) = ((((((m = RNE) ->
  is_infinite(x)) and ((m = RNA) -> is_infinite(x))) and ((m = RTP) ->
  ((is_positive(x) -> is_infinite(x)) and ((not is_positive(x)) ->
  (tqtisFinite(x) and (tqtreal(x) = (-0x1.FFFFFEp127))))))) and ((m = RTN) ->
  ((is_positive(x) -> (tqtisFinite(x) and (tqtreal(x) = 0x1.FFFFFEp127))) and
  ((not is_positive(x)) -> is_infinite(x))))) and ((m = RTZ) ->
  ((is_positive(x) -> (tqtisFinite(x) and (tqtreal(x) = 0x1.FFFFFEp127))) and
  ((not is_positive(x)) -> (tqtisFinite(x) and
  (tqtreal(x) = (-0x1.FFFFFEp127)))))))

predicate sign_zero_result(m: mode, x: t) = (is_zero(x) -> ((((((m = RNE) ->
  is_positive(x)) and ((m = RNA) -> is_positive(x))) and ((m = RTP) ->
  is_positive(x))) and ((m = RTN) -> is_negative(x))) and ((m = RTZ) ->
  is_positive(x))))

axiom add_finite :
  (forall m:mode. forall x:t. forall y:t [add(m, x, y)]. (tqtisFinite(x) ->
  (tqtisFinite(y) -> (in_range(round(m, (tqtreal(x) + tqtreal(y)))) ->
  (tqtisFinite(add(m, x, y)) and (tqtreal(add(m, x, y)) = round(m,
  (tqtreal(x) + tqtreal(y)))))))))

axiom add_finite_rev :
  (forall m:mode. forall x:t. forall y:t [add(m, x, y)]. (tqtisFinite(add(m,
  x, y)) -> (tqtisFinite(x) and tqtisFinite(y))))

axiom add_finite_rev_n :
  (forall m:mode. forall x:t. forall y:t [add(m, x, y)]. (to_nearest(m) ->
  (tqtisFinite(add(m, x, y)) -> (in_range(round(m,
  (tqtreal(x) + tqtreal(y)))) and (tqtreal(add(m, x, y)) = round(m,
  (tqtreal(x) + tqtreal(y))))))))

axiom sub_finite :
  (forall m:mode. forall x:t. forall y:t [sub(m, x, y)]. (tqtisFinite(x) ->
  (tqtisFinite(y) -> (in_range(round(m, (tqtreal(x) - tqtreal(y)))) ->
  (tqtisFinite(sub(m, x, y)) and (tqtreal(sub(m, x, y)) = round(m,
  (tqtreal(x) - tqtreal(y)))))))))

axiom sub_finite_rev :
  (forall m:mode. forall x:t. forall y:t [sub(m, x, y)]. (tqtisFinite(sub(m,
  x, y)) -> (tqtisFinite(x) and tqtisFinite(y))))

axiom sub_finite_rev_n :
  (forall m:mode. forall x:t. forall y:t [sub(m, x, y)]. (to_nearest(m) ->
  (tqtisFinite(sub(m, x, y)) -> (in_range(round(m,
  (tqtreal(x) - tqtreal(y)))) and (tqtreal(sub(m, x, y)) = round(m,
  (tqtreal(x) - tqtreal(y))))))))

axiom mul_finite :
  (forall m:mode. forall x:t. forall y:t [mul(m, x, y)]. (tqtisFinite(x) ->
  (tqtisFinite(y) -> (in_range(round(m, (tqtreal(x) * tqtreal(y)))) ->
  (tqtisFinite(mul(m, x, y)) and (tqtreal(mul(m, x, y)) = round(m,
  (tqtreal(x) * tqtreal(y)))))))))

axiom mul_finite_rev :
  (forall m:mode. forall x:t. forall y:t [mul(m, x, y)]. (tqtisFinite(mul(m,
  x, y)) -> (tqtisFinite(x) and tqtisFinite(y))))

axiom mul_finite_rev_n :
  (forall m:mode. forall x:t. forall y:t [mul(m, x, y)]. (to_nearest(m) ->
  (tqtisFinite(mul(m, x, y)) -> (in_range(round(m,
  (tqtreal(x) * tqtreal(y)))) and (tqtreal(mul(m, x, y)) = round(m,
  (tqtreal(x) * tqtreal(y))))))))

axiom div_finite :
  (forall m:mode. forall x:t. forall y:t [div(m, x, y)]. (tqtisFinite(x) ->
  (tqtisFinite(y) -> ((not is_zero(y)) -> (in_range(round(m,
  (tqtreal(x) / tqtreal(y)))) -> (tqtisFinite(div(m, x, y)) and
  (tqtreal(div(m, x, y)) = round(m, (tqtreal(x) / tqtreal(y))))))))))

axiom div_finite_rev :
  (forall m:mode. forall x:t. forall y:t [div(m, x, y)]. (tqtisFinite(div(m,
  x, y)) -> ((tqtisFinite(x) and (tqtisFinite(y) and (not is_zero(y)))) or
  (tqtisFinite(x) and (is_infinite(y) and (tqtreal(div(m, x, y)) = 0.0))))))

axiom div_finite_rev_n :
  (forall m:mode. forall x:t. forall y:t [div(m, x, y)]. (to_nearest(m) ->
  (tqtisFinite(div(m, x, y)) -> (tqtisFinite(y) -> (in_range(round(m,
  (tqtreal(x) / tqtreal(y)))) and (tqtreal(div(m, x, y)) = round(m,
  (tqtreal(x) / tqtreal(y)))))))))

axiom neg_finite :
  (forall x:t [neg(x)]. (tqtisFinite(x) -> (tqtisFinite(neg(x)) and
  (tqtreal(neg(x)) = (-tqtreal(x))))))

axiom neg_finite_rev :
  (forall x:t [neg(x)]. (tqtisFinite(neg(x)) -> (tqtisFinite(x) and
  (tqtreal(neg(x)) = (-tqtreal(x))))))

axiom abs_finite :
  (forall x:t [abs1(x)]. (tqtisFinite(x) -> (tqtisFinite(abs1(x)) and
  ((tqtreal(abs1(x)) = abs(tqtreal(x))) and is_positive(abs1(x))))))

axiom abs_finite_rev :
  (forall x:t [abs1(x)]. (tqtisFinite(abs1(x)) -> (tqtisFinite(x) and
  (tqtreal(abs1(x)) = abs(tqtreal(x))))))

axiom abs_universal : (forall x:t [abs1(x)]. (not is_negative(abs1(x))))

axiom fma_finite_rev :
  (forall m:mode. forall x:t. forall y:t. forall z:t [fma(m, x, y, z)].
  (tqtisFinite(fma(m, x, y, z)) -> (tqtisFinite(x) and (tqtisFinite(y) and
  tqtisFinite(z)))))

axiom fma_finite_rev_n :
  (forall m:mode. forall x:t. forall y:t. forall z:t [fma(m, x, y, z)].
  (to_nearest(m) -> (tqtisFinite(fma(m, x, y, z)) -> (in_range(round(m,
  ((tqtreal(x) * tqtreal(y)) + tqtreal(z)))) and (tqtreal(fma(m, x, y,
  z)) = round(m, ((tqtreal(x) * tqtreal(y)) + tqtreal(z))))))))

function sqr(x: real) : real = (x * x)

logic sqrt1 : real -> real

axiom sqrt_finite_rev :
  (forall m:mode. forall x:t [sqrt(m, x)]. (tqtisFinite(sqrt(m, x)) ->
  (tqtisFinite(x) and ((0.0 <= tqtreal(x)) and (tqtreal(sqrt(m,
  x)) = round(m, sqrt1(tqtreal(x))))))))

predicate same_sign_real(x: t, r: real) = ((is_positive(x) and (0.0 <  r)) or
  (is_negative(x) and (r <  0.0)))

axiom of_int_add_exact :
  (forall m:mode. forall n:mode. forall i:int. forall j:int.
  (in_safe_int_range(i) -> (in_safe_int_range(j) ->
  (in_safe_int_range((i + j)) -> eq(of_int(m, (i + j)), add(n, of_int(m, i),
  of_int(m, j)))))))

axiom of_int_sub_exact :
  (forall m:mode. forall n:mode. forall i:int. forall j:int.
  (in_safe_int_range(i) -> (in_safe_int_range(j) ->
  (in_safe_int_range((i - j)) -> eq(of_int(m, (i - j)), sub(n, of_int(m, i),
  of_int(m, j)))))))

axiom of_int_mul_exact :
  (forall m:mode. forall n:mode. forall i:int. forall j:int.
  (in_safe_int_range(i) -> (in_safe_int_range(j) ->
  (in_safe_int_range((i * j)) -> eq(of_int(m, (i * j)), mul(n, of_int(m, i),
  of_int(m, j)))))))

axiom Min_r : (forall x:t. forall y:t. (le(y, x) -> eq(min(x, y), y)))

axiom Min_l : (forall x:t. forall y:t. (le(x, y) -> eq(min(x, y), x)))

axiom Max_r : (forall x:t. forall y:t. (le(y, x) -> eq(max(x, y), x)))

axiom Max_l : (forall x:t. forall y:t. (le(x, y) -> eq(max(x, y), y)))

logic is_int : t -> prop

axiom zeroF_is_int : is_int(zeroF)

axiom of_int_is_int :
  (forall m:mode. forall x:int. (in_int_range(x) -> is_int(of_int(m, x))))

axiom big_float_is_int :
  (forall m:mode. forall i:t. (tqtisFinite(i) -> ((le(i, neg(of_int(m,
  16777216))) or le(of_int(m, 16777216), i)) -> is_int(i))))

axiom roundToIntegral_is_int :
  (forall m:mode. forall x:t. (tqtisFinite(x) -> is_int(roundToIntegral(m,
  x))))

axiom eq_is_int :
  (forall x:t. forall y:t. (eq(x, y) -> (is_int(x) -> is_int(y))))

axiom add_int :
  (forall x:t. forall y:t. forall m:mode. (is_int(x) -> (is_int(y) ->
  (tqtisFinite(add(m, x, y)) -> is_int(add(m, x, y))))))

axiom sub_int :
  (forall x:t. forall y:t. forall m:mode. (is_int(x) -> (is_int(y) ->
  (tqtisFinite(sub(m, x, y)) -> is_int(sub(m, x, y))))))

axiom mul_int :
  (forall x:t. forall y:t. forall m:mode. (is_int(x) -> (is_int(y) ->
  (tqtisFinite(mul(m, x, y)) -> is_int(mul(m, x, y))))))

axiom fma_int :
  (forall x:t. forall y:t. forall z:t. forall m:mode. (is_int(x) ->
  (is_int(y) -> (is_int(z) -> (tqtisFinite(fma(m, x, y, z)) -> is_int(fma(m,
  x, y, z)))))))

axiom neg_int : (forall x:t. (is_int(x) -> is_int(neg(x))))

axiom abs_int1 : (forall x:t. (is_int(x) -> is_int(abs1(x))))

axiom is_int_of_int :
  (forall x:t. forall m:mode. forall mqt:mode. (is_int(x) -> eq(x,
  of_int(mqt, to_int(m, x)))))

axiom is_int_to_int :
  (forall m:mode. forall x:t. (is_int(x) -> in_int_range(to_int(m, x))))

axiom is_int_is_finite : (forall x:t. (is_int(x) -> tqtisFinite(x)))

axiom int_to_real :
  (forall m:mode. forall x:t. (is_int(x) -> (tqtreal(x) = from_int(to_int(m,
  x)))))

axiom truncate_int :
  (forall m:mode. forall i:t. (is_int(i) -> eq(roundToIntegral(m, i), i)))

axiom truncate_neg :
  (forall x:t. (tqtisFinite(x) -> (is_negative(x) -> (roundToIntegral(RTZ,
  x) = roundToIntegral(RTP, x)))))

axiom truncate_pos :
  (forall x:t. (tqtisFinite(x) -> (is_positive(x) -> (roundToIntegral(RTZ,
  x) = roundToIntegral(RTN, x)))))

axiom ceil_le :
  (forall x:t. (tqtisFinite(x) -> le(x, roundToIntegral(RTP, x))))

axiom ceil_lest :
  (forall x:t. forall y:t. ((le(x, y) and is_int(y)) ->
  le(roundToIntegral(RTP, x), y)))

axiom ceil_to_real :
  (forall x:t. (tqtisFinite(x) -> (tqtreal(roundToIntegral(RTP,
  x)) = from_int(ceil(tqtreal(x))))))

axiom ceil_to_int :
  (forall m:mode. forall x:t. (tqtisFinite(x) -> (to_int(m,
  roundToIntegral(RTP, x)) = ceil(tqtreal(x)))))

axiom floor_le :
  (forall x:t. (tqtisFinite(x) -> le(roundToIntegral(RTN, x), x)))

axiom floor_lest :
  (forall x:t. forall y:t. ((le(y, x) and is_int(y)) -> le(y,
  roundToIntegral(RTN, x))))

axiom floor_to_real :
  (forall x:t. (tqtisFinite(x) -> (tqtreal(roundToIntegral(RTN,
  x)) = from_int(floor(tqtreal(x))))))

axiom floor_to_int :
  (forall m:mode. forall x:t. (tqtisFinite(x) -> (to_int(m,
  roundToIntegral(RTN, x)) = floor(tqtreal(x)))))

axiom RNA_down :
  (forall x:t. (lt(sub(RNE, x, roundToIntegral(RTN, x)), sub(RNE,
  roundToIntegral(RTP, x), x)) -> (roundToIntegral(RNA,
  x) = roundToIntegral(RTN, x))))

axiom RNA_up :
  (forall x:t. (lt(sub(RNE, roundToIntegral(RTP, x), x), sub(RNE, x,
  roundToIntegral(RTN, x))) -> (roundToIntegral(RNA,
  x) = roundToIntegral(RTP, x))))

axiom RNA_down_tie :
  (forall x:t. (eq(sub(RNE, x, roundToIntegral(RTN, x)), sub(RNE,
  roundToIntegral(RTP, x), x)) -> (is_negative(x) -> (roundToIntegral(RNA,
  x) = roundToIntegral(RTN, x)))))

axiom RNA_up_tie :
  (forall x:t. (eq(sub(RNE, roundToIntegral(RTP, x), x), sub(RNE, x,
  roundToIntegral(RTN, x))) -> (is_positive(x) -> (roundToIntegral(RNA,
  x) = roundToIntegral(RTP, x)))))

axiom to_int_roundToIntegral :
  (forall m:mode. forall x:t. (to_int(m, x) = to_int(m, roundToIntegral(m,
  x))))

axiom to_int_monotonic :
  (forall m:mode. forall x:t. forall y:t. (tqtisFinite(x) ->
  (tqtisFinite(y) -> (le(x, y) -> (to_int(m, x) <= to_int(m, y))))))

axiom to_int_of_int :
  (forall m:mode. forall i:int. (in_safe_int_range(i) -> (to_int(m, of_int(m,
  i)) = i)))

axiom eq_to_int :
  (forall m:mode. forall x:t. forall y:t. (tqtisFinite(x) -> (eq(x, y) ->
  (to_int(m, x) = to_int(m, y)))))

axiom neg_to_int :
  (forall m:mode. forall x:t. (is_int(x) -> (to_int(m, neg(x)) = (-to_int(m,
  x)))))

axiom roundToIntegral_is_finite :
  (forall m:mode. forall x:t. (tqtisFinite(x) ->
  tqtisFinite(roundToIntegral(m, x))))

axiom round_bound_ne :
  (forall x:real [round(RNE, x)]. (in_range(round(RNE, x)) ->
  ((((x - (0x1.0p-24 * abs(x))) - 0x1.0p-150) <= round(RNE, x)) and
  (round(RNE, x) <= ((x + (0x1.0p-24 * abs(x))) + 0x1.0p-150)))))

predicate neq(x: t, y: t) = (not eq(x, y))

logic bool_lt : t, t -> bool

axiom bool_lt_def :
  (forall x:t. forall y:t [bool_lt(x, y)]. ((lt(x, y) -> (bool_lt(x,
  y) = true)) and ((not lt(x, y)) -> (bool_lt(x, y) = false))))

logic bool_le : t, t -> bool

axiom bool_le_def :
  (forall x:t. forall y:t [bool_le(x, y)]. ((le(x, y) -> (bool_le(x,
  y) = true)) and ((not le(x, y)) -> (bool_le(x, y) = false))))

logic bool_gt : t, t -> bool

axiom bool_gt_def :
  (forall x:t. forall y:t [bool_gt(x, y)]. ((lt(y, x) -> (bool_gt(x,
  y) = true)) and ((not lt(y, x)) -> (bool_gt(x, y) = false))))

logic bool_ge : t, t -> bool

axiom bool_ge_def :
  (forall x:t. forall y:t [bool_ge(x, y)]. ((le(y, x) -> (bool_ge(x,
  y) = true)) and ((not le(y, x)) -> (bool_ge(x, y) = false))))

logic bool_eq : t, t -> bool

axiom bool_eq_def :
  (forall x:t. forall y:t [bool_eq(x, y)]. ((eq(x, y) -> (bool_eq(x,
  y) = true)) and ((not eq(x, y)) -> (bool_eq(x, y) = false))))

logic bool_neq : t, t -> bool

axiom bool_neq_def :
  (forall x:t. forall y:t [bool_neq(x, y)]. (((not eq(x, y)) -> (bool_neq(x,
  y) = true)) and (eq(x, y) -> (bool_neq(x, y) = false))))

logic rem : t, t -> t

logic fliteral : t

axiom fliteral_axiom : (tqtisFinite(fliteral) and (tqtreal(fliteral) = 1.0))

axiom one_is_int : is_int(fliteral)

axiom one_of_int : (fliteral = of_int(RNA, 1))

type t__ref = { t__content : t
}

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq1 : bool, bool -> bool

axiom bool_eq_def1 :
  (forall x:bool. forall y:bool [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic to_int1 : bool -> int

axiom to_int_def :
  (forall b:bool [to_int1(b)]. (((b = true) -> (to_int1(b) = 1)) and
  ((not (b = true)) -> (to_int1(b) = 0))))

logic of_int1 : int -> bool

axiom of_int_def :
  (forall i:int [of_int1(i)]. (((i = 0) -> (of_int1(i) = false)) and
  ((not (i = 0)) -> (of_int1(i) = true))))

predicate in_range1(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type float1

logic bool_eq2 : t, t -> bool

axiom bool_eq_def2 :
  (forall x:t. forall y:t [bool_eq2(x, y)]. ((eq(x, y) -> (bool_eq2(x,
  y) = true)) and ((not eq(x, y)) -> (bool_eq2(x, y) = false))))

logic user_eq : float1, float1 -> bool

logic attr__ATTRIBUTE_IMAGE1 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> t

logic dummy : float1

type float__ref = { float__content : float1
}

function float__ref___projection(a: float__ref) : float1 = (a).float__content

type t_rate

logic fliteral1 : t

axiom fliteral_axiom1 : (tqtisFinite(fliteral1) and
  (tqtreal(fliteral1) = 3000.0))

predicate in_range2(x: t) = (tqtisFinite(x) and (le(neg(fliteral1), x) and
  le(x, fliteral1)))

logic bool_eq3 : t, t -> bool

axiom bool_eq_def3 :
  (forall x:t. forall y:t [bool_eq3(x, y)]. ((eq(x, y) -> (bool_eq3(x,
  y) = true)) and ((not eq(x, y)) -> (bool_eq3(x, y) = false))))

logic user_eq1 : t_rate, t_rate -> bool

logic attr__ATTRIBUTE_IMAGE2 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> t

logic dummy1 : t_rate

type t_rate__ref = { t_rate__content : t_rate
}

function t_rate__ref___projection(a: t_rate__ref) : t_rate =
  (a).t_rate__content

type t_acc

logic fliteral2 : t

axiom fliteral_axiom2 : (tqtisFinite(fliteral2) and
  (tqtreal(fliteral2) = 16.0))

predicate in_range3(x: t) = (tqtisFinite(x) and (le(neg(fliteral2), x) and
  le(x, fliteral2)))

logic bool_eq4 : t, t -> bool

axiom bool_eq_def4 :
  (forall x:t. forall y:t [bool_eq4(x, y)]. ((eq(x, y) -> (bool_eq4(x,
  y) = true)) and ((not eq(x, y)) -> (bool_eq4(x, y) = false))))

logic user_eq2 : t_acc, t_acc -> bool

logic attr__ATTRIBUTE_IMAGE3 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> t

logic dummy2 : t_acc

type t_acc__ref = { t_acc__content : t_acc
}

function t_acc__ref___projection(a: t_acc__ref) : t_acc = (a).t_acc__content

type t_acc_lifted

predicate in_range4(x: t) = (tqtisFinite(x) and (le(neg(fliteral2), x) and
  le(x, fliteral2)))

logic bool_eq5 : t, t -> bool

axiom bool_eq_def5 :
  (forall x:t. forall y:t [bool_eq5(x, y)]. ((eq(x, y) -> (bool_eq5(x,
  y) = true)) and ((not eq(x, y)) -> (bool_eq5(x, y) = false))))

logic user_eq3 : t_acc_lifted, t_acc_lifted -> bool

logic attr__ATTRIBUTE_IMAGE4 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> t

logic dummy3 : t_acc_lifted

type t_acc_lifted__ref = { t_acc_lifted__content : t_acc_lifted
}

function t_acc_lifted__ref___projection(a: t_acc_lifted__ref) : t_acc_lifted =
  (a).t_acc_lifted__content

type positive_float

logic fliteral3 : t

axiom fliteral_axiom3 : (tqtisFinite(fliteral3) and
  (tqtreal(fliteral3) = 0.0e-1))

logic fliteral4 : t

axiom fliteral_axiom4 : (tqtisFinite(fliteral4) and
  (tqtreal(fliteral4) = 340282346638528859811704183484516925440.0))

predicate in_range5(x: t) = (tqtisFinite(x) and (le(fliteral3, x) and le(x,
  fliteral4)))

logic bool_eq6 : t, t -> bool

axiom bool_eq_def6 :
  (forall x:t. forall y:t [bool_eq6(x, y)]. ((eq(x, y) -> (bool_eq6(x,
  y) = true)) and ((not eq(x, y)) -> (bool_eq6(x, y) = false))))

logic user_eq4 : positive_float, positive_float -> bool

logic attr__ATTRIBUTE_IMAGE5 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> t

logic dummy4 : positive_float

type positive_float__ref = { positive_float__content : positive_float
}

function positive_float__ref___projection(a: positive_float__ref) : positive_float =
  (a).positive_float__content

type t_delta_time

logic fliteral5 : t

axiom fliteral_axiom5 : (tqtisFinite(fliteral5) and
  (tqtreal(fliteral5) = 0.001000000047497451305389404296875))

predicate in_range6(x: t) = (tqtisFinite(x) and (le(fliteral5, x) and le(x,
  fliteral)))

logic bool_eq7 : t, t -> bool

axiom bool_eq_def7 :
  (forall x:t. forall y:t [bool_eq7(x, y)]. ((eq(x, y) -> (bool_eq7(x,
  y) = true)) and ((not eq(x, y)) -> (bool_eq7(x, y) = false))))

logic user_eq5 : t_delta_time, t_delta_time -> bool

logic attr__ATTRIBUTE_IMAGE6 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> t

logic dummy5 : t_delta_time

type t_delta_time__ref = { t_delta_time__content : t_delta_time
}

function t_delta_time__ref___projection(a: t_delta_time__ref) : t_delta_time =
  (a).t_delta_time__content

type t_alpha

predicate in_range7(x: t) = (tqtisFinite(x) and (le(fliteral3, x) and le(x,
  fliteral)))

logic bool_eq8 : t, t -> bool

axiom bool_eq_def8 :
  (forall x:t. forall y:t [bool_eq8(x, y)]. ((eq(x, y) -> (bool_eq8(x,
  y) = true)) and ((not eq(x, y)) -> (bool_eq8(x, y) = false))))

logic user_eq6 : t_alpha, t_alpha -> bool

logic attr__ATTRIBUTE_IMAGE7 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> t

logic dummy6 : t_alpha

type t_alpha__ref = { t_alpha__content : t_alpha
}

function t_alpha__ref___projection(a: t_alpha__ref) : t_alpha =
  (a).t_alpha__content

type t_quaternion

predicate in_range8(x: t) = (tqtisFinite(x) and (le(neg(fliteral), x) and
  le(x, fliteral)))

logic bool_eq9 : t, t -> bool

axiom bool_eq_def9 :
  (forall x:t. forall y:t [bool_eq9(x, y)]. ((eq(x, y) -> (bool_eq9(x,
  y) = true)) and ((not eq(x, y)) -> (bool_eq9(x, y) = false))))

logic user_eq7 : t_quaternion, t_quaternion -> bool

logic attr__ATTRIBUTE_IMAGE8 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> t

logic dummy7 : t_quaternion

type t_quaternion__ref = { t_quaternion__content : t_quaternion
}

function t_quaternion__ref___projection(a: t_quaternion__ref) : t_quaternion =
  (a).t_quaternion__content

logic inv_sqrt : t -> t

logic inv_sqrt__function_guard : t, t -> prop

logic fliteral6 : t

axiom fliteral_axiom6 : (tqtisFinite(fliteral6) and
  (tqtreal(fliteral6) = 0.0000000000000000000000000000000000000000000014012984643248170709237295832899161312802619418765157717570682838897910826858606014866381883621215820312500000000000000000000000))

logic fliteral7 : t

axiom fliteral_axiom7 : (tqtisFinite(fliteral7) and
  (tqtreal(fliteral7) = 200000004008175468544.0))

axiom inv_sqrt__post_axiom :
  (forall x:t [inv_sqrt(x)]. ((tqtisFinite(x) and le(fliteral6, x)) ->
  ((lt(fliteral3, inv_sqrt(x)) and lt(inv_sqrt(x), fliteral7)) and
  tqtisFinite(inv_sqrt(x)))))

logic saturate : t, t, t -> t

logic saturate__function_guard : t, t, t, t -> prop

axiom saturate__post_axiom :
  (forall value:t. forall min_value:t. forall max_value:t [saturate(value,
  min_value, max_value)]. (((tqtisFinite(value) and
  tqtisFinite(min_value)) and tqtisFinite(max_value)) -> (((lt(value,
  min_value) -> eq(saturate(value, min_value, max_value), min_value)) and
  ((not lt(value, min_value)) -> ((lt(max_value, value) -> eq(saturate(value,
  min_value, max_value), max_value)) and ((not lt(max_value, value)) ->
  eq(saturate(value, min_value, max_value), value))))) and
  tqtisFinite(saturate(value, min_value, max_value)))))

logic lift_away_from_zero : t -> t

logic lift_away_from_zero__function_guard : t, t -> prop

axiom lift_away_from_zero__post_axiom :
  (forall x:t [lift_away_from_zero(x)]. (in_range3(x) -> (((eq(x,
  fliteral3) -> eq(lift_away_from_zero(x), fliteral3)) and ((not eq(x,
  fliteral3)) -> (neq(x, fliteral3) -> neq(lift_away_from_zero(x),
  fliteral3)))) and in_range4(lift_away_from_zero(x)))))

logic gx : t

logic attr__ATTRIBUTE_ADDRESS : int

logic gy : t

logic attr__ATTRIBUTE_ADDRESS1 : int

logic gz : t

logic attr__ATTRIBUTE_ADDRESS2 : int

logic ax : t

logic attr__ATTRIBUTE_ADDRESS3 : int

logic ay : t

logic attr__ATTRIBUTE_ADDRESS4 : int

logic az : t

logic attr__ATTRIBUTE_ADDRESS5 : int

logic dt : t

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic attr__ATTRIBUTE_ADDRESS16 : int

logic c3b : t

logic attr__ATTRIBUTE_ADDRESS17 : int

logic c4b : t

logic attr__ATTRIBUTE_ADDRESS18 : int

logic c5b : t

logic attr__ATTRIBUTE_ADDRESS19 : int

logic c6b : t

logic attr__ATTRIBUTE_ADDRESS20 : int

logic c7b : t

logic attr__ATTRIBUTE_ADDRESS21 : int

logic c8b : t

logic attr__ATTRIBUTE_ADDRESS22 : int

logic c9b : t

logic attr__ATTRIBUTE_ADDRESS23 : int

logic attr__ATTRIBUTE_ADDRESS24 : int

logic attr__ATTRIBUTE_ADDRESS25 : int

logic attr__ATTRIBUTE_ADDRESS26 : int

logic attr__ATTRIBUTE_ADDRESS27 : int

logic attr__ATTRIBUTE_ADDRESS28 : int

logic attr__ATTRIBUTE_ADDRESS29 : int

logic attr__ATTRIBUTE_ADDRESS30 : int

logic attr__ATTRIBUTE_ADDRESS31 : int

logic attr__ATTRIBUTE_ADDRESS32 : int

logic attr__ATTRIBUTE_ADDRESS33 : int

logic attr__ATTRIBUTE_ADDRESS34 : int

logic attr__ATTRIBUTE_ADDRESS35 : int

logic attr__ATTRIBUTE_ADDRESS36 : int

logic attr__ATTRIBUTE_ADDRESS37 : int

logic attr__ATTRIBUTE_ADDRESS38 : int

logic attr__ATTRIBUTE_ADDRESS39 : int

logic attr__ATTRIBUTE_ADDRESS40 : int

logic attr__ATTRIBUTE_ADDRESS41 : int

logic attr__ATTRIBUTE_ADDRESS42 : int

logic attr__ATTRIBUTE_ADDRESS43 : int

logic c11b : t

logic attr__ATTRIBUTE_ADDRESS44 : int

logic c12b : t

logic attr__ATTRIBUTE_ADDRESS45 : int

logic c13b : t

logic attr__ATTRIBUTE_ADDRESS46 : int

logic c14b : t

logic attr__ATTRIBUTE_ADDRESS47 : int

logic c15b : t

logic attr__ATTRIBUTE_ADDRESS48 : int

logic c16b : t

logic attr__ATTRIBUTE_ADDRESS49 : int

logic c17b : t

logic attr__ATTRIBUTE_ADDRESS50 : int

logic attr__ATTRIBUTE_ADDRESS51 : int

logic attr__ATTRIBUTE_ADDRESS52 : int

logic attr__ATTRIBUTE_ADDRESS53 : int

logic attr__ATTRIBUTE_ADDRESS54 : int

logic attr__ATTRIBUTE_ADDRESS55 : int

logic attr__ATTRIBUTE_ADDRESS56 : int

logic attr__ATTRIBUTE_ADDRESS57 : int

logic attr__ATTRIBUTE_ADDRESS58 : int

logic attr__ATTRIBUTE_ADDRESS59 : int

logic attr__ATTRIBUTE_ADDRESS60 : int

logic attr__ATTRIBUTE_ADDRESS61 : int

logic attr__ATTRIBUTE_ADDRESS62 : int

logic attr__ATTRIBUTE_ADDRESS63 : int

logic attr__ATTRIBUTE_ADDRESS64 : int

logic attr__ATTRIBUTE_ADDRESS65 : int

logic attr__ATTRIBUTE_ADDRESS66 : int

logic attr__ATTRIBUTE_ADDRESS67 : int

logic attr__ATTRIBUTE_ADDRESS68 : int

logic attr__ATTRIBUTE_ADDRESS69 : int

logic attr__ATTRIBUTE_ADDRESS70 : int

logic attr__ATTRIBUTE_ADDRESS71 : int

logic attr__ATTRIBUTE_ADDRESS72 : int

logic attr__ATTRIBUTE_ADDRESS73 : int

logic attr__ATTRIBUTE_ADDRESS74 : int

logic attr__ATTRIBUTE_ADDRESS75 : int

logic attr__ATTRIBUTE_ADDRESS76 : int

logic attr__ATTRIBUTE_ADDRESS77 : int

logic attr__ATTRIBUTE_ADDRESS78 : int

logic attr__ATTRIBUTE_ADDRESS79 : int

logic attr__ATTRIBUTE_ADDRESS80 : int

logic attr__ATTRIBUTE_ADDRESS81 : int

logic attr__ATTRIBUTE_ADDRESS82 : int

logic attr__ATTRIBUTE_ADDRESS83 : int

logic q0 : t

logic q1 : t

logic q2 : t

logic q3 : t

logic two_kp : t

logic two_ki : t

logic integral_fbx : t

logic integral_fby : t

logic integral_fbz : t

logic beta : t

logic recip_norm : t

logic norm_ax : t

logic norm_ay : t

logic norm_az : t

logic rad_gx : t

logic rad_gy : t

logic rad_gz : t

logic half_vx : t

logic half_vy : t

logic half_vz : t

logic half_ex : t

logic half_ey : t

logic half_ez : t

logic q0_tmp : t

logic q1_tmp : t

logic q2_tmp : t

logic q3_tmp : t

logic qa : t

logic qb : t

logic qc : t

logic o : t

logic o1 : t

logic o2 : t

logic o3 : t

logic o4 : t

logic o5 : t

logic o6 : t

logic o7 : t

logic o8 : t

logic o9 : t

logic o10 : t

logic o11 : t

logic o12 : t

logic o13 : t

logic o14 : t

logic o15 : t

logic o16 : t

logic o17 : t

logic o18 : t

logic o19 : t

logic o20 : t

logic o21 : t

logic o22 : t

logic o23 : t

logic o24 : t

logic o25 : t

logic o26 : t

logic o27 : t

logic o28 : t

logic o29 : t

logic o30 : t

logic o31 : t

logic o32 : t

logic o33 : t

logic o34 : t

logic o35 : t

logic o36 : t

logic o37 : t

logic o38 : t

logic o39 : t

logic o40 : t

logic o41 : t

logic o42 : t

logic o43 : t

logic o44 : t

logic o45 : t

logic o46 : t

logic o47 : t

logic o48 : t

logic o49 : t

logic o50 : t

logic o51 : t

logic o52 : t

logic o53 : t

logic o54 : t

logic o55 : t

logic o56 : t

logic o57 : t

logic o58 : t

logic o59 : t

logic o60 : t

logic o61 : t

logic o62 : t

logic o63 : t

logic o64 : t

logic o65 : t

logic o66 : t

logic o67 : t

logic o68 : t

logic o69 : t

logic o70 : t

logic o71 : t

logic o72 : t

logic o73 : t

logic o74 : t

logic o75 : t

logic o76 : t

logic o77 : t

logic o78 : t

logic o79 : t

logic o80 : t

logic o81 : t

logic o82 : t

logic o83 : t

logic o84 : t

logic o85 : t

logic o86 : t

logic o87 : t

logic o88 : t

logic o89 : t

logic o90 : t

logic o91 : t

logic o92 : t

logic o93 : t

logic o94 : t

logic o95 : t

logic o96 : t

logic o97 : t

logic o98 : t

logic o99 : t

logic o100 : t

logic o101 : t

logic o102 : t

logic o103 : t

logic o104 : t

logic o105 : t

logic o106 : t

logic o107 : t

logic o108 : t

logic integral_fbx1 : t

logic integral_fby1 : t

logic integral_fbz1 : t

logic recip_norm1 : t

logic norm_ax1 : t

logic norm_ay1 : t

logic norm_az1 : t

logic half_ex1 : t

logic half_ey1 : t

logic half_ez1 : t

logic result : t

logic rad_gx1 : t

logic result1 : t

logic rad_gy1 : t

logic result2 : t

logic rad_gz1 : t

logic result3 : t

logic half_vx1 : t

logic result4 : t

logic half_vy1 : t

logic result5 : t

logic half_vz1 : t

logic result6 : t

logic qa1 : t

logic result7 : t

logic qb1 : t

logic result8 : t

logic qc1 : t

logic result9 : t

logic recip_norm2 : t

logic result10 : t

logic norm_ax2 : t

logic result11 : t

logic norm_ay2 : t

logic result12 : t

logic norm_az2 : t

logic result13 : t

logic half_ex2 : t

logic result14 : t

logic half_ey2 : t

logic result15 : t

logic half_ez2 : t

logic result16 : t

logic integral_fbx2 : t

logic result17 : t

logic integral_fby2 : t

logic result18 : t

logic integral_fbz2 : t

logic result19 : t

logic rad_gx2 : t

logic result20 : t

logic rad_gy2 : t

logic result21 : t

logic rad_gz2 : t

logic result22 : t

logic integral_fbx3 : t

logic result23 : t

logic integral_fby3 : t

logic result24 : t

logic integral_fbz3 : t

logic result25 : t

logic rad_gx3 : t

logic result26 : t

logic rad_gy3 : t

logic result27 : t

logic rad_gz3 : t

logic result28 : t

logic rad_gx4 : t

logic result29 : t

logic rad_gy4 : t

logic result30 : t

logic rad_gz4 : t

logic result31 : t

logic q0_tmp1 : t

logic result32 : t

logic q1_tmp1 : t

logic result33 : t

logic q2_tmp1 : t

logic result34 : t

logic q3_tmp1 : t

logic result35 : t

logic recip_norm3 : t

logic result36 : t

logic q01 : t

logic result37 : t

logic q11 : t

logic result38 : t

logic q21 : t

axiom H : in_range2(gx)

axiom H1 : in_range2(gy)

axiom H2 : in_range2(gz)

axiom H3 : in_range3(ax)

axiom H4 : in_range3(ay)

axiom H5 : in_range3(az)

axiom H6 : in_range6(dt)

axiom H7 : in_range8(q0)

axiom H8 : in_range8(q1)

axiom H9 : in_range8(q2)

axiom H10 : in_range8(q3)

axiom H11 : tqtisFinite(two_kp)

axiom H12 : tqtisFinite(two_ki)

axiom H13 : tqtisFinite(integral_fbx)

axiom H14 : tqtisFinite(integral_fby)

axiom H15 : tqtisFinite(integral_fbz)

axiom H16 : in_range7(beta)

axiom H17 : (gx = c3b)

axiom H18 : in_range2(c3b)

axiom H19 : (gy = c4b)

axiom H20 : in_range2(c4b)

axiom H21 : (gz = c5b)

axiom H22 : in_range2(c5b)

axiom H23 : (ax = c6b)

axiom H24 : in_range3(c6b)

axiom H25 : (ay = c7b)

axiom H26 : in_range3(c7b)

axiom H27 : (az = c8b)

axiom H28 : in_range3(c8b)

axiom H29 : (dt = c9b)

axiom H30 : in_range6(c9b)

axiom H31 : (le(neg(fliteral4), fliteral4) -> tqtisFinite(recip_norm))

axiom H32 : (le(neg(fliteral2), fliteral2) -> in_range3(norm_ax))

axiom H33 : (le(neg(fliteral2), fliteral2) -> in_range3(norm_ay))

axiom H34 : (le(neg(fliteral2), fliteral2) -> in_range3(norm_az))

axiom H35 : (result = rad_gx)

logic fliteral8 : t

axiom fliteral_axiom8 : (tqtisFinite(fliteral8) and
  (tqtreal(fliteral8) = 3.1415927410125732421875))

logic fliteral9 : t

axiom fliteral_axiom9 : (tqtisFinite(fliteral9) and
  (tqtreal(fliteral9) = 180.0))

axiom H36 : (rad_gx1 = div(RNE, mul(RNE, c3b, fliteral8), fliteral9))

axiom H37 : tqtisFinite(rad_gx1)

axiom H38 : (result1 = rad_gy)

axiom H39 : (rad_gy1 = div(RNE, mul(RNE, c4b, fliteral8), fliteral9))

axiom H40 : tqtisFinite(rad_gy1)

axiom H41 : (result2 = rad_gz)

axiom H42 : (rad_gz1 = div(RNE, mul(RNE, c5b, fliteral8), fliteral9))

axiom H43 : tqtisFinite(rad_gz1)

axiom H44 : (result3 = half_vx)

axiom H45 : (half_vx1 = sub(RNE, mul(RNE, q1, q3), mul(RNE, q0, q2)))

axiom H46 : tqtisFinite(half_vx1)

axiom H47 : (result4 = half_vy)

axiom H48 : (half_vy1 = add(RNE, mul(RNE, q0, q1), mul(RNE, q2, q3)))

axiom H49 : tqtisFinite(half_vy1)

axiom H50 : (result5 = half_vz)

logic fliteral10 : t

axiom fliteral_axiom10 : (tqtisFinite(fliteral10) and
  (tqtreal(fliteral10) = 0.500000000000000000000000))

axiom H51 : (half_vz1 = add(RNE, sub(RNE, mul(RNE, q0, q0), fliteral10),
  mul(RNE, q3, q3)))

axiom H52 : tqtisFinite(half_vz1)

axiom H53 : (le(neg(fliteral4), fliteral4) -> tqtisFinite(half_ex))

axiom H54 : (le(neg(fliteral4), fliteral4) -> tqtisFinite(half_ey))

axiom H55 : (le(neg(fliteral4), fliteral4) -> tqtisFinite(half_ez))

axiom H56 : (le(neg(fliteral4), fliteral4) -> tqtisFinite(q0_tmp))

axiom H57 : (le(neg(fliteral4), fliteral4) -> tqtisFinite(q1_tmp))

axiom H58 : (le(neg(fliteral4), fliteral4) -> tqtisFinite(q2_tmp))

axiom H59 : (le(neg(fliteral4), fliteral4) -> tqtisFinite(q3_tmp))

axiom H60 : (result6 = qa)

axiom H61 : (qa1 = q0)

axiom H62 : in_range8(qa1)

axiom H63 : (result7 = qb)

axiom H64 : (qb1 = q1)

axiom H65 : in_range8(qb1)

axiom H66 : (result8 = qc)

axiom H67 : (qc1 = q2)

axiom H68 : in_range8(qc1)

axiom H69 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o = inv_sqrt(add(RNE, add(RNE, mul(RNE, c6b, c6b),
  mul(RNE, c7b, c7b)), mul(RNE, c8b, c8b)))) and (tqtisFinite(o) and
  (lt(fliteral3, o) and lt(o, fliteral7)))))

axiom H70 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (result9 = recip_norm))

axiom H71 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (recip_norm2 = o))

axiom H72 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o1 = mul(RNE, c6b, recip_norm2)) and
  tqtisFinite(mul(RNE, c6b, recip_norm2))))

axiom H73 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o2 = saturate(o1, neg(fliteral), fliteral)) and
  (tqtisFinite(o2) and ((lt(o1, neg(fliteral)) -> eq(o2, neg(fliteral))) and
  ((not lt(o1, neg(fliteral))) -> ((lt(fliteral, o1) -> eq(o2, fliteral)) and
  ((not lt(fliteral, o1)) -> eq(o2, o1))))))))

axiom H74 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o3 = o2) and tqtisFinite(o2)))

axiom H75 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (result10 = norm_ax))

axiom H76 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (norm_ax2 = o3))

axiom H77 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o4 = mul(RNE, c7b, recip_norm2)) and
  tqtisFinite(mul(RNE, c7b, recip_norm2))))

axiom H78 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o5 = saturate(o4, neg(fliteral), fliteral)) and
  (tqtisFinite(o5) and ((lt(o4, neg(fliteral)) -> eq(o5, neg(fliteral))) and
  ((not lt(o4, neg(fliteral))) -> ((lt(fliteral, o4) -> eq(o5, fliteral)) and
  ((not lt(fliteral, o4)) -> eq(o5, o4))))))))

axiom H79 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o6 = o5) and tqtisFinite(o5)))

axiom H80 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (result11 = norm_ay))

axiom H81 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (norm_ay2 = o6))

axiom H82 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o7 = mul(RNE, c8b, recip_norm2)) and
  tqtisFinite(mul(RNE, c8b, recip_norm2))))

axiom H83 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o8 = saturate(o7, neg(fliteral), fliteral)) and
  (tqtisFinite(o8) and ((lt(o7, neg(fliteral)) -> eq(o8, neg(fliteral))) and
  ((not lt(o7, neg(fliteral))) -> ((lt(fliteral, o7) -> eq(o8, fliteral)) and
  ((not lt(fliteral, o7)) -> eq(o8, o7))))))))

axiom H84 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o9 = o8) and tqtisFinite(o8)))

axiom H85 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (result12 = norm_az))

axiom H86 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (norm_az2 = o9))

axiom H87 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o10 = mul(RNE, norm_az2, half_vy1)) and
  tqtisFinite(mul(RNE, norm_az2, half_vy1))))

axiom H88 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o11 = mul(RNE, norm_ay2, half_vz1)) and
  tqtisFinite(mul(RNE, norm_ay2, half_vz1))))

axiom H89 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (o12 = sub(RNE, o11, o10)))

axiom H90 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o13 = o12) and tqtisFinite(o12)))

axiom H91 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (result13 = half_ex))

axiom H92 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (half_ex2 = o13))

axiom H93 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o14 = mul(RNE, norm_ax2, half_vz1)) and
  tqtisFinite(mul(RNE, norm_ax2, half_vz1))))

axiom H94 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o15 = mul(RNE, norm_az2, half_vx1)) and
  tqtisFinite(mul(RNE, norm_az2, half_vx1))))

axiom H95 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (o16 = sub(RNE, o15, o14)))

axiom H96 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o17 = o16) and tqtisFinite(o16)))

axiom H97 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (result14 = half_ey))

axiom H98 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (half_ey2 = o17))

axiom H99 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o18 = mul(RNE, norm_ay2, half_vx1)) and
  tqtisFinite(mul(RNE, norm_ay2, half_vx1))))

axiom H100 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o19 = mul(RNE, norm_ax2, half_vy1)) and
  tqtisFinite(mul(RNE, norm_ax2, half_vy1))))

axiom H101 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (o20 = sub(RNE, o19, o18)))

axiom H102 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o21 = o20) and tqtisFinite(o20)))

axiom H103 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (result15 = half_ez))

axiom H104 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (half_ez2 = o21))

axiom H105 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o22 = mul(RNE, two_ki,
  half_ex2)) and tqtisFinite(mul(RNE, two_ki, half_ex2)))))

axiom H106 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (o23 = mul(RNE, o22, c9b))))

axiom H107 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o24 = o23) and
  tqtisFinite(o23))))

axiom H108 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (o25 = add(RNE, integral_fbx,
  o24))))

axiom H109 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o26 = o25) and
  tqtisFinite(o25))))

axiom H110 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (result16 = integral_fbx)))

axiom H111 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (integral_fbx2 = o26)))

axiom H112 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o27 = mul(RNE, two_ki,
  half_ey2)) and tqtisFinite(mul(RNE, two_ki, half_ey2)))))

axiom H113 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (o28 = mul(RNE, o27, c9b))))

axiom H114 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o29 = o28) and
  tqtisFinite(o28))))

axiom H115 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (o30 = add(RNE, integral_fby,
  o29))))

axiom H116 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o31 = o30) and
  tqtisFinite(o30))))

axiom H117 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (result17 = integral_fby)))

axiom H118 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (integral_fby2 = o31)))

axiom H119 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o32 = mul(RNE, two_ki,
  half_ez2)) and tqtisFinite(mul(RNE, two_ki, half_ez2)))))

axiom H120 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (o33 = mul(RNE, o32, c9b))))

axiom H121 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o34 = o33) and
  tqtisFinite(o33))))

axiom H122 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (o35 = add(RNE, integral_fbz,
  o34))))

axiom H123 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o36 = o35) and
  tqtisFinite(o35))))

axiom H124 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (result18 = integral_fbz)))

axiom H125 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (integral_fbz2 = o36)))

axiom H126 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o37 = add(RNE, rad_gx1,
  integral_fbx2)) and tqtisFinite(add(RNE, rad_gx1, integral_fbx2)))))

axiom H127 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (result19 = rad_gx1)))

axiom H128 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (rad_gx2 = o37)))

axiom H129 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o38 = add(RNE, rad_gy1,
  integral_fby2)) and tqtisFinite(add(RNE, rad_gy1, integral_fby2)))))

axiom H130 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (result20 = rad_gy1)))

axiom H131 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (rad_gy2 = o38)))

axiom H132 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> ((o39 = add(RNE, rad_gz1,
  integral_fbz2)) and tqtisFinite(add(RNE, rad_gz1, integral_fbz2)))))

axiom H133 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (result21 = rad_gz1)))

axiom H134 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (lt(fliteral3, two_ki) -> (rad_gz2 = o39)))

axiom H135 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) ->
  (result22 = integral_fbx)))

axiom H136 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) ->
  (integral_fbx3 = fliteral3)))

axiom H137 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) ->
  (result23 = integral_fby)))

axiom H138 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) ->
  (integral_fby3 = fliteral3)))

axiom H139 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) ->
  (result24 = integral_fbz)))

axiom H140 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) ->
  (integral_fbz3 = fliteral3)))

axiom H141 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) -> (rad_gz2 = rad_gz1)))

axiom H142 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) -> (rad_gy2 = rad_gy1)))

axiom H143 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) -> (rad_gx2 = rad_gx1)))

axiom H144 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) ->
  (integral_fbz2 = integral_fbz3)))

axiom H145 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) ->
  (integral_fby2 = integral_fby3)))

axiom H146 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((not lt(fliteral3, two_ki)) ->
  (integral_fbx2 = integral_fbx3)))

axiom H147 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o40 = mul(RNE, two_kp, half_ex2)) and
  tqtisFinite(mul(RNE, two_kp, half_ex2))))

axiom H148 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (o41 = add(RNE, rad_gx2, o40)))

axiom H149 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o42 = o41) and tqtisFinite(o41)))

axiom H150 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (result25 = rad_gx2))

axiom H151 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (rad_gx3 = o42))

axiom H152 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o43 = mul(RNE, two_kp, half_ey2)) and
  tqtisFinite(mul(RNE, two_kp, half_ey2))))

axiom H153 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (o44 = add(RNE, rad_gy2, o43)))

axiom H154 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o45 = o44) and tqtisFinite(o44)))

axiom H155 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (result26 = rad_gy2))

axiom H156 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (rad_gy3 = o45))

axiom H157 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o46 = mul(RNE, two_kp, half_ez2)) and
  tqtisFinite(mul(RNE, two_kp, half_ez2))))

axiom H158 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (o47 = add(RNE, rad_gz2, o46)))

axiom H159 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> ((o48 = o47) and tqtisFinite(o47)))

axiom H160 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (result27 = rad_gz2))

axiom H161 : ((not (eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3)))) -> (rad_gz3 = o48))

axiom H162 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (half_ez2 = half_ez))

axiom H163 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (half_ey2 = half_ey))

axiom H164 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (half_ex2 = half_ex))

axiom H165 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (rad_gz3 = rad_gz1))

axiom H166 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (rad_gy3 = rad_gy1))

axiom H167 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (rad_gx3 = rad_gx1))

axiom H168 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (norm_az2 = norm_az))

axiom H169 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (norm_ay2 = norm_ay))

axiom H170 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (norm_ax2 = norm_ax))

axiom H171 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (recip_norm2 = recip_norm))

axiom H172 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (integral_fbz2 = integral_fbz))

axiom H173 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (integral_fby2 = integral_fby))

axiom H174 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (integral_fbx2 = integral_fbx))

axiom H175 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (half_ez2 = half_ez1))

axiom H176 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (half_ey2 = half_ey1))

axiom H177 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (half_ex2 = half_ex1))

axiom H178 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (rad_gz3 = rad_gz1))

axiom H179 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (rad_gy3 = rad_gy1))

axiom H180 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (rad_gx3 = rad_gx1))

axiom H181 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (norm_az2 = norm_az1))

axiom H182 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (norm_ay2 = norm_ay1))

axiom H183 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (norm_ax2 = norm_ax1))

axiom H184 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (recip_norm2 = recip_norm1))

axiom H185 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (integral_fbz2 = integral_fbz1))

axiom H186 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (integral_fby2 = integral_fby1))

axiom H187 : ((eq(c6b, fliteral3) and (eq(c7b, fliteral3) and eq(c8b,
  fliteral3))) -> (integral_fbx2 = integral_fbx1))

axiom H188 : (result28 = rad_gx3)

axiom H189 : (rad_gx4 = mul(RNE, rad_gx3, mul(RNE, fliteral10, c9b)))

axiom H190 : (result29 = rad_gy3)

axiom H191 : (rad_gy4 = mul(RNE, rad_gy3, mul(RNE, fliteral10, c9b)))

axiom H192 : (result30 = rad_gz3)

axiom H193 : (rad_gz4 = mul(RNE, rad_gz3, mul(RNE, fliteral10, c9b)))

axiom H194 : ((o53 = mul(RNE, q3, rad_gz4)) and tqtisFinite(mul(RNE, q3,
  rad_gz4)))

axiom H195 : ((o50 = mul(RNE, qc1, rad_gy4)) and tqtisFinite(mul(RNE, qc1,
  rad_gy4)))

axiom H196 : ((o49 = mul(RNE, qb1, rad_gx4)) and tqtisFinite(mul(RNE, qb1,
  rad_gx4)))

axiom H197 : (o51 = neg(o49))

axiom H198 : (o52 = sub(RNE, o51, o50))

axiom H199 : ((o54 = o52) and tqtisFinite(o52))

axiom H200 : (o55 = sub(RNE, o54, o53))

axiom H201 : ((o56 = o55) and tqtisFinite(o55))

axiom H202 : (o57 = add(RNE, q0, o56))

axiom H203 : ((o58 = o57) and tqtisFinite(o57))

axiom H204 : (result31 = q0_tmp)

axiom H205 : (q0_tmp1 = o58)

axiom H206 : ((o62 = mul(RNE, q3, rad_gy4)) and tqtisFinite(mul(RNE, q3,
  rad_gy4)))

axiom H207 : ((o59 = mul(RNE, qc1, rad_gz4)) and tqtisFinite(mul(RNE, qc1,
  rad_gz4)))

axiom H208 : ((o60 = mul(RNE, qa1, rad_gx4)) and tqtisFinite(mul(RNE, qa1,
  rad_gx4)))

axiom H209 : (o61 = add(RNE, o60, o59))

axiom H210 : ((o63 = o61) and tqtisFinite(o61))

axiom H211 : (o64 = sub(RNE, o63, o62))

axiom H212 : ((o65 = o64) and tqtisFinite(o64))

axiom H213 : (o66 = add(RNE, q1, o65))

axiom H214 : ((o67 = o66) and tqtisFinite(o66))

axiom H215 : (result32 = q1_tmp)

axiom H216 : (q1_tmp1 = o67)

axiom H217 : ((o71 = mul(RNE, q3, rad_gx4)) and tqtisFinite(mul(RNE, q3,
  rad_gx4)))

axiom H218 : ((o68 = mul(RNE, qb1, rad_gz4)) and tqtisFinite(mul(RNE, qb1,
  rad_gz4)))

axiom H219 : ((o69 = mul(RNE, qa1, rad_gy4)) and tqtisFinite(mul(RNE, qa1,
  rad_gy4)))

axiom H220 : (o70 = sub(RNE, o69, o68))

axiom H221 : ((o72 = o70) and tqtisFinite(o70))

axiom H222 : (o73 = add(RNE, o72, o71))

axiom H223 : ((o74 = o73) and tqtisFinite(o73))

axiom H224 : (o75 = add(RNE, q2, o74))

axiom H225 : ((o76 = o75) and tqtisFinite(o75))

axiom H226 : (result33 = q2_tmp)

axiom H227 : (q2_tmp1 = o76)

axiom H228 : ((o80 = mul(RNE, qc1, rad_gx4)) and tqtisFinite(mul(RNE, qc1,
  rad_gx4)))

axiom H229 : ((o77 = mul(RNE, qb1, rad_gy4)) and tqtisFinite(mul(RNE, qb1,
  rad_gy4)))

axiom H230 : ((o78 = mul(RNE, qa1, rad_gz4)) and tqtisFinite(mul(RNE, qa1,
  rad_gz4)))

axiom H231 : (o79 = add(RNE, o78, o77))

axiom H232 : ((o81 = o79) and tqtisFinite(o79))

axiom H233 : (o82 = sub(RNE, o81, o80))

axiom H234 : ((o83 = o82) and tqtisFinite(o82))

axiom H235 : (o84 = add(RNE, q3, o83))

axiom H236 : ((o85 = o84) and tqtisFinite(o84))

axiom H237 : (result34 = q3_tmp)

axiom H238 : (q3_tmp1 = o85)

 (* File "i-cexten.ads", line 59, characters 0-0 *)
goal WP_parameter_def : tqtisFinite(mul(RNE, q3_tmp1, q3_tmp1))
