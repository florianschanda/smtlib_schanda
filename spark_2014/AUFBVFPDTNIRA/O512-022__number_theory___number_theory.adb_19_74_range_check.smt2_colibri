;; produced by colibri_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
;;; SMT-LIB2: real arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_33)))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range3
                                     temp___expr_39)))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 46)))

(define-fun dynamic_invariant2 ((temp___expr_185 Int)
  (temp___is_init_182 Bool) (temp___skip_constant_183 Bool)
  (temp___do_toplevel_184 Bool)) Bool (=>
                                      (or (= temp___is_init_182 true)
                                      (<= 0 46)) (in_range4 temp___expr_185)))

(define-fun is_plus_infinity ((x Float32)) Bool (and (fp.isInfinite  x)
                                                (fp.isPositive  x)))

(define-fun is_minus_infinity ((x Float32)) Bool (and (fp.isInfinite  x)
                                                 (fp.isNegative  x)))

(define-fun is_plus_zero ((x Float32)) Bool (and (fp.isZero      x)
                                            (fp.isPositive  x)))

(define-fun is_minus_zero ((x Float32)) Bool (and (fp.isZero      x)
                                             (fp.isNegative  x)))

(declare-fun max_int () Int)

(define-fun in_range5 ((x Real)) Bool (and
                                      (<= (- (* 33554430.0 10141204801825835211973625643008.0)) x)
                                      (<= x (* 33554430.0 10141204801825835211973625643008.0))))

(define-fun in_int_range ((i Int)) Bool (and (<= (- max_int) i)
                                        (<= i max_int)))

(declare-fun abstr () Real)

(define-fun no_overflow ((m RoundingMode) (x Real)) Bool (in_range5 abstr))

(define-fun in_safe_int_range ((i Int)) Bool (and (<= (- 16777216) i)
                                             (<= i 16777216)))

(define-fun same_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive  x) (fp.isPositive  y))
                    (and (fp.isNegative  x) (fp.isNegative  y))))

(define-fun diff_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive  x) (fp.isNegative  y))
                    (and (fp.isNegative  x) (fp.isPositive  y))))

(define-fun product_sign ((z Float32) (x Float32)
  (y Float32)) Bool (and (=> (same_sign x y) (fp.isPositive  z))
                    (=> (diff_sign x y) (fp.isNegative  z))))

(define-fun sqr ((x Real)) Real (* x x))

(define-fun same_sign_real ((x Float32)
  (r Real)) Bool (or (and (fp.isPositive  x) (< 0.0 r))
                 (and (fp.isNegative  x) (< r 0.0))))

(declare-fun n () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(define-fun dynamic_invariant3 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun result__ () Int)

(declare-fun old__ () Int)

(declare-fun oldest () Int)

(declare-fun temp () Int)

(declare-fun i () Int)

(declare-fun number_theory__fibonacci__result () Int)

(declare-fun temp___194 () Int)

(declare-fun temp___193 () Int)

(declare-fun temp___192 () Int)

(declare-fun temp___191 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Bool)

(declare-fun o4 () Int)

(declare-fun old__1 () Int)

(declare-fun oldest1 () Int)

(declare-fun temp1 () Int)

(declare-fun i1 () Int)

(declare-fun result () Int)

(declare-fun result__1 () Int)

(declare-fun result1 () Int)

(declare-fun oldest2 () Int)

(declare-fun result2 () Int)

(declare-fun old__2 () Int)

(declare-fun result3 () Int)

(declare-fun i2 () Int)

(declare-fun old__3 () Int)

(declare-fun oldest3 () Int)

(declare-fun temp2 () Int)

(declare-fun i3 () Int)

(declare-fun result4 () Int)

(declare-fun temp3 () Int)

(declare-fun result5 () Int)

(declare-fun oldest4 () Int)

(declare-fun result6 () Int)

(declare-fun old__4 () Int)

(declare-fun result7 () Int)

(declare-fun i4 () Int)

(declare-fun old__5 () Int)

(declare-fun oldest5 () Int)

(declare-fun temp4 () Int)

(declare-fun i5 () Int)

(declare-fun old__6 () Int)

(declare-fun oldest6 () Int)

(declare-fun temp5 () Int)

(declare-fun i6 () Int)

(declare-fun old__7 () Int)

(declare-fun oldest7 () Int)

(declare-fun temp6 () Int)

(declare-fun old__8 () Int)

(declare-fun oldest8 () Int)

(declare-fun temp7 () Int)

(declare-fun i7 () Int)

(declare-fun old__9 () Int)

(declare-fun oldest9 () Int)

(declare-fun temp8 () Int)

(declare-fun i8 () Int)

(declare-fun result__2 () Int)

(declare-fun result__3 () Int)

(declare-fun old__10 () Int)

(declare-fun oldest10 () Int)

(declare-fun temp9 () Int)

(declare-fun i9 () Int)

(declare-fun number_theory__fibonacci__result1 () Int)

(declare-fun number_theory__fibonacci__result2 () Int)

(declare-fun result__4 () Int)

(declare-fun old__11 () Int)

(declare-fun oldest11 () Int)

(declare-fun temp10 () Int)

(declare-fun i10 () Int)

(declare-fun number_theory__fibonacci__result3 () Int)

;; H
  (assert (in_range4 n))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 result__)))

;; H
  (assert (=> (<= 1 2147483647) (in_range3 old__)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 oldest)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 temp)))

;; H
  (assert (not (= n 0)))

;; H
  (assert (not (= n 1)))

;; H
  (assert (= oldest2 0))

;; H
  (assert (= old__2 1))

;; H
  (assert (= i2 2))

;; H
  (assert (<= 2 i2))

;; H
  (assert (<= i2 n))

(declare-fun abstr1 () Int)

(declare-fun abstr2 () Int)

;; H
  (assert (and (= old__3 abstr2) (= oldest3 abstr1)))

;; H
  (assert
  (and
  (and
  (and
  (and (=> (<= 2 n) (dynamic_property 2 n i3))
  (=> (<= 1 2147483647) (in_range3 old__3)))
  (=> (<= 0 2147483647) (in_range2 oldest3)))
  (=> (<= 0 2147483647) (in_range2 temp2))) (and (<= 2 i3) (<= i3 n))))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (in_range4 (- i3 2))))
(check-sat)
(exit)
