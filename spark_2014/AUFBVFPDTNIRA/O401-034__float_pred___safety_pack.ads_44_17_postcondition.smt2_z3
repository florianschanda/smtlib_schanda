;; produced by z3_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 16) Int) Bool)

(declare-fun lsr ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 16)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

(declare-fun nth_bv ((_ BitVec 16) (_ BitVec 16)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

(define-fun eq_sub ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 16))))))
(declare-fun power ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(declare-sort t_uint16 0)

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_IMAGE ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) (_ BitVec 16))

(declare-fun user_eq (t_uint16 t_uint16) Bool)

(declare-fun dummy () t_uint16)

(declare-datatypes ()
((t_uint16__ref (mk_t_uint16__ref (t_uint16__content t_uint16)))))
(define-fun t_uint16__ref___projection ((a t_uint16__ref)) t_uint16 (t_uint16__content
                                                                    a))

(define-fun dynamic_invariant ((temp___expr_1285 (_ BitVec 16))
  (temp___is_init_1282 Bool) (temp___skip_constant_1283 Bool)
  (temp___do_toplevel_1284 Bool)) Bool true)

(declare-fun value () (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun min_value () (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun max_value () (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun res () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result () (_ BitVec 16))

(declare-fun result () (_ BitVec 16))

(declare-fun res1 () (_ BitVec 16))

(declare-fun result1 () (_ BitVec 16))

(declare-fun res2 () (_ BitVec 16))

(declare-fun result2 () (_ BitVec 16))

(declare-fun res3 () (_ BitVec 16))

(declare-fun result3 () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result1 () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result2 () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result3 () (_ BitVec 16))

(declare-fun res4 () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result4 () (_ BitVec 16))

(declare-fun res5 () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result5 () (_ BitVec 16))

(declare-fun result4 () (_ BitVec 16))

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert (= result res))

;; H
  (assert (= res1 value))

;; H
  (assert true)

;; H
  (assert (=> (bvult value min_value) (= result1 res1)))

;; H
  (assert (=> (bvult value min_value) (= res2 min_value)))

;; H
  (assert
  (=> (not (bvult value min_value))
  (=> (bvugt value max_value) (= result2 res1))))

;; H
  (assert
  (=> (not (bvult value min_value))
  (=> (bvugt value max_value) (= res3 max_value))))

;; H
  (assert
  (=> (not (bvult value min_value))
  (=> (not (bvugt value max_value)) (= res3 res1))))

;; H
  (assert (=> (not (bvult value min_value)) (= res2 res3)))

;; H
  (assert
  (= safety_pack__saturate__2__result1 safety_pack__saturate__2__result2))

;; H
  (assert
  (= safety_pack__saturate__2__result3 safety_pack__saturate__2__result1))

;; H
  (assert (= result3 safety_pack__saturate__2__result))

;; H
  (assert (= safety_pack__saturate__2__result1 res2))

;; H
  (assert
  (= (mk_t__ref safety_pack__saturate__2__result4) (mk_t__ref
                                                   safety_pack__saturate__2__result2)))

;; H
  (assert (= res4 res2))

;; H
  (assert
  (= safety_pack__saturate__2__result5 safety_pack__saturate__2__result3))

;; H
  (assert (= res5 res2))

;; H
  (assert (= result4 safety_pack__saturate__2__result4))

;; H
  (assert (bvult value min_value))

(assert
;; WP_parameter_def
 ;; File "types.ads", line 13, characters 0-0
  (not (= safety_pack__saturate__2__result4 min_value)))
(check-sat)
(exit)
