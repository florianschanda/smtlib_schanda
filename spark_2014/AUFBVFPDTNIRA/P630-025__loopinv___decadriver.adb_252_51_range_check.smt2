;; produced by cvc4_14.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 8)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 256)) (= (bv2nat ((_ int2bv 8) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvlshr x n) (lsr x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvashr x n) (asr x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvshl x n) (lsl x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_left1 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_right1 v (bv2nat n)))))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (nth x (bv2nat i)) (nth_bv x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 8)) (i Int))
  (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i)))
  (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun to_int2 ((_ BitVec 16)) Int)

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 65536)) (= (bv2nat ((_ int2bv 16) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvlshr x n) (lsr1 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvashr x n) (asr1 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvshl x n) (lsl1 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_left2 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_right2 v (bv2nat n)))))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (nth1 x (bv2nat i)) (nth_bv1 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 16)) (i Int))
  (=> (and (<= 0 i) (< i 65536))
  (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i)))
  (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))

(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(declare-fun nth2 ((_ BitVec 32) Int) Bool)

(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun to_int3 ((_ BitVec 32)) Int)

(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 4294967296)) (= (bv2nat ((_ int2bv 32) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvlshr x n) (lsr2 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvashr x n) (asr2 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvshl x n) (lsl2 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) 
  (rotate_left3 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) 
  (rotate_right3 v (bv2nat n)))))

(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
  (= (= (nth_bv2 x i) true)
  (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
  (= (nth2 x (bv2nat i)) (nth_bv2 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 32)) (i Int))
  (=> (and (<= 0 i) (< i 4294967296))
  (= (nth_bv2 x ((_ int2bv 32) i)) (nth2 x i)))))

(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32))
  (n (_ BitVec 32)))
  (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i)))
  (= (eq_sub_bv2 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32))
  (n (_ BitVec 32)))
  (= (eq_sub2 a b (bv2nat i) (bv2nat n)) (eq_sub_bv2 a b i n))))

(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(define-fun to_int4 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort bits_1 0)

(define-fun in_range1 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 1))))

(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(define-fun bool_eq ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 8))

(declare-fun user_eq (bits_1 bits_1) Bool)

(declare-fun dummy () bits_1)

(declare-datatypes ()
((bits_1__ref (mk_bits_1__ref (bits_1__content bits_1)))))
(define-fun bits_1__ref___projection ((a bits_1__ref)) bits_1 (bits_1__content
                                                              a))

(declare-fun to_rep (bits_1) (_ BitVec 8))

(declare-fun of_rep ((_ BitVec 8)) bits_1)

;; inversion_axiom
  (assert
  (forall ((x bits_1)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x bits_1)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 2))))
     (=> (in_range1 y) (= (to_rep (of_rep x)) y))) :pattern ((to_rep
                                                             (of_rep x))) )))

(define-fun to_int5 ((x bits_1)) Int (bv2nat (to_rep x)))

;; range_int_axiom
  (assert
  (forall ((x bits_1)) (! (in_range_int
  (to_int5 x)) :pattern ((to_int5 x)) )))

(declare-sort bits_5 0)

(define-fun in_range2 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 31))))

(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 31)))

(define-fun bool_eq1 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 8))

(declare-fun user_eq1 (bits_5 bits_5) Bool)

(declare-fun dummy1 () bits_5)

(declare-datatypes ()
((bits_5__ref (mk_bits_5__ref (bits_5__content bits_5)))))
(define-fun bits_5__ref___projection ((a bits_5__ref)) bits_5 (bits_5__content
                                                              a))

(declare-fun to_rep1 (bits_5) (_ BitVec 8))

(declare-fun of_rep1 ((_ BitVec 8)) bits_5)

;; inversion_axiom
  (assert
  (forall ((x bits_5))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_5)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 32))))
     (=> (in_range2 y) (= (to_rep1 (of_rep1 x)) y))) :pattern ((to_rep1
                                                               (of_rep1 x))) )))

(define-fun to_int6 ((x bits_5)) Int (bv2nat (to_rep1 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_5)) (! (in_range_int1
  (to_int6 x)) :pattern ((to_int6 x)) )))

(declare-sort bits_11 0)

(define-fun in_range3 ((x (_ BitVec 16))) Bool (and
                                               (bvule ((_ int2bv 16) 0) x)
                                               (bvule x ((_ int2bv 16) 2047))))

(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x) (<= x 2047)))

(define-fun bool_eq2 ((x (_ BitVec 16))
  (y (_ BitVec 16))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 16))

(declare-fun user_eq2 (bits_11 bits_11) Bool)

(declare-fun dummy2 () bits_11)

(declare-datatypes ()
((bits_11__ref (mk_bits_11__ref (bits_11__content bits_11)))))
(define-fun bits_11__ref___projection ((a bits_11__ref)) bits_11 (bits_11__content
                                                                 a))

(declare-sort bits_16 0)

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 16))

(define-fun bool_eq3 ((x (_ BitVec 16))
  (y (_ BitVec 16))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 16))

(declare-fun user_eq3 (bits_16 bits_16) Bool)

(declare-fun dummy3 () bits_16)

(declare-datatypes ()
((bits_16__ref (mk_bits_16__ref (bits_16__content bits_16)))))
(define-fun bits_16__ref___projection ((a bits_16__ref)) bits_16 (bits_16__content
                                                                 a))

(declare-fun to_rep2 (bits_16) (_ BitVec 16))

(declare-fun of_rep2 ((_ BitVec 16)) bits_16)

;; inversion_axiom
  (assert
  (forall ((x bits_16))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 16)))
  (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))) )))

(define-fun to_int7 ((x bits_16)) Int (bv2nat (to_rep2 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_16)) (! (uint_in_range1
  (to_int7 x)) :pattern ((to_int7 x)) )))

(declare-sort bits_32 0)

(declare-fun attr__ATTRIBUTE_MODULUS1 () (_ BitVec 32))

(define-fun bool_eq4 ((x (_ BitVec 32))
  (y (_ BitVec 32))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 32))

(declare-fun user_eq4 (bits_32 bits_32) Bool)

(declare-fun dummy4 () bits_32)

(declare-datatypes ()
((bits_32__ref (mk_bits_32__ref (bits_32__content bits_32)))))
(define-fun bits_32__ref___projection ((a bits_32__ref)) bits_32 (bits_32__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_467 (_ BitVec 32))
  (temp___is_init_464 Bool) (temp___skip_constant_465 Bool)
  (temp___do_toplevel_466 Bool)) Bool true)

(declare-fun to_rep3 (bits_32) (_ BitVec 32))

(declare-fun of_rep3 ((_ BitVec 32)) bits_32)

;; inversion_axiom
  (assert
  (forall ((x bits_32))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 32)))
  (! (= (to_rep3 (of_rep3 x)) x) :pattern ((to_rep3 (of_rep3 x))) )))

(define-fun to_int8 ((x bits_32)) Int (bv2nat (to_rep3 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_32)) (! (uint_in_range2
  (to_int8 x)) :pattern ((to_int8 x)) )))

(declare-sort bits_2 0)

(define-fun in_range4 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 3))))

(define-fun in_range_int3 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(define-fun bool_eq5 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 8))

(declare-fun user_eq5 (bits_2 bits_2) Bool)

(declare-fun dummy5 () bits_2)

(declare-datatypes ()
((bits_2__ref (mk_bits_2__ref (bits_2__content bits_2)))))
(define-fun bits_2__ref___projection ((a bits_2__ref)) bits_2 (bits_2__content
                                                              a))

(declare-fun to_rep4 (bits_2) (_ BitVec 8))

(declare-fun of_rep4 ((_ BitVec 8)) bits_2)

;; inversion_axiom
  (assert
  (forall ((x bits_2))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_2)) (! (in_range4 (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 4))))
     (=> (in_range4 y) (= (to_rep4 (of_rep4 x)) y))) :pattern ((to_rep4
                                                               (of_rep4 x))) )))

(define-fun to_int9 ((x bits_2)) Int (bv2nat (to_rep4 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_2)) (! (in_range_int3
  (to_int9 x)) :pattern ((to_int9 x)) )))

(declare-sort bits_3 0)

(define-fun in_range5 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 7))))

(define-fun in_range_int4 ((x Int)) Bool (and (<= 0 x) (<= x 7)))

(define-fun bool_eq6 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) (_ BitVec 8))

(declare-fun user_eq6 (bits_3 bits_3) Bool)

(declare-fun dummy6 () bits_3)

(declare-datatypes ()
((bits_3__ref (mk_bits_3__ref (bits_3__content bits_3)))))
(define-fun bits_3__ref___projection ((a bits_3__ref)) bits_3 (bits_3__content
                                                              a))

(declare-fun to_rep5 (bits_3) (_ BitVec 8))

(declare-fun of_rep5 ((_ BitVec 8)) bits_3)

;; inversion_axiom
  (assert
  (forall ((x bits_3))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_3)) (! (in_range5 (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 8))))
     (=> (in_range5 y) (= (to_rep5 (of_rep5 x)) y))) :pattern ((to_rep5
                                                               (of_rep5 x))) )))

(define-fun to_int10 ((x bits_3)) Int (bv2nat (to_rep5 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_3)) (! (in_range_int4
  (to_int10 x)) :pattern ((to_int10 x)) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__dw1000__register_types__sys_cfg_type__ffen bits_1)(rec__dw1000__register_types__sys_cfg_type__ffbc bits_1)(rec__dw1000__register_types__sys_cfg_type__ffab bits_1)(rec__dw1000__register_types__sys_cfg_type__ffad bits_1)(rec__dw1000__register_types__sys_cfg_type__ffaa bits_1)(rec__dw1000__register_types__sys_cfg_type__ffam bits_1)(rec__dw1000__register_types__sys_cfg_type__ffar bits_1)(rec__dw1000__register_types__sys_cfg_type__ffa4 bits_1)(rec__dw1000__register_types__sys_cfg_type__ffa5 bits_1)(rec__dw1000__register_types__sys_cfg_type__hirq_pol bits_1)(rec__dw1000__register_types__sys_cfg_type__spi_edge bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_fce bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_drxb bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_phe bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_rsde bits_1)(rec__dw1000__register_types__sys_cfg_type__fcs_int2f bits_1)(rec__dw1000__register_types__sys_cfg_type__phr_mode bits_2)(rec__dw1000__register_types__sys_cfg_type__dis_stxp bits_1)(rec__dw1000__register_types__sys_cfg_type__rxm110k bits_1)(rec__dw1000__register_types__sys_cfg_type__rxwtoe bits_1)(rec__dw1000__register_types__sys_cfg_type__rxautr bits_1)(rec__dw1000__register_types__sys_cfg_type__autoack bits_1)(rec__dw1000__register_types__sys_cfg_type__aackpend bits_1)(rec__dw1000__register_types__sys_cfg_type__reserved_1 bits_3)(rec__dw1000__register_types__sys_cfg_type__reserved_2 bits_5)))))
(define-fun us_split_fields_FFEN__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffen a))

(define-fun us_split_fields_FFBC__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffbc a))

(define-fun us_split_fields_FFAB__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffab a))

(define-fun us_split_fields_FFAD__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffad a))

(define-fun us_split_fields_FFAA__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffaa a))

(define-fun us_split_fields_FFAM__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffam a))

(define-fun us_split_fields_FFAR__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffar a))

(define-fun us_split_fields_FFA4__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffa4 a))

(define-fun us_split_fields_FFA5__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffa5 a))

(define-fun us_split_fields_HIRQ_POL__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__hirq_pol a))

(define-fun us_split_fields_SPI_EDGE__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__spi_edge a))

(define-fun us_split_fields_DIS_FCE__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__dis_fce a))

(define-fun us_split_fields_DIS_DRXB__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__dis_drxb a))

(define-fun us_split_fields_DIS_PHE__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__dis_phe a))

(define-fun us_split_fields_DIS_RSDE__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__dis_rsde a))

(define-fun us_split_fields_FCS_INT2F__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__fcs_int2f a))

(define-fun us_split_fields_PHR_MODE__projection ((a us_split_fields)) bits_2 
  (rec__dw1000__register_types__sys_cfg_type__phr_mode a))

(define-fun us_split_fields_DIS_STXP__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__dis_stxp a))

(define-fun us_split_fields_RXM110K__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__rxm110k a))

(define-fun us_split_fields_RXWTOE__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__rxwtoe a))

(define-fun us_split_fields_RXAUTR__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__rxautr a))

(define-fun us_split_fields_AUTOACK__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__autoack a))

(define-fun us_split_fields_AACKPEND__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__aackpend a))

(define-fun us_split_fields_Reserved_1__projection ((a us_split_fields)) bits_3 
  (rec__dw1000__register_types__sys_cfg_type__reserved_1 a))

(define-fun us_split_fields_Reserved_2__projection ((a us_split_fields)) bits_5 
  (rec__dw1000__register_types__sys_cfg_type__reserved_2 a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref_4__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep_4__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(define-fun bool_eq7 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffen
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffen
                                                  (us_split_fields1 b))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffbc
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffbc
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffab
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffab
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffad
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffad
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffaa
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffaa
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffam
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffam
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffar
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffar
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffa4
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffa4
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffa5
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffa5
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__hirq_pol
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__hirq_pol
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__spi_edge
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__spi_edge
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__dis_fce
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__dis_fce
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__dis_drxb
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__dis_drxb
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__dis_phe
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__dis_phe
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__dis_rsde
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__dis_rsde
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__fcs_int2f
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__fcs_int2f
                                                  (us_split_fields1 b)))))
                        (= (to_rep4
                           (rec__dw1000__register_types__sys_cfg_type__phr_mode
                           (us_split_fields1 a))) (to_rep4
                                                  (rec__dw1000__register_types__sys_cfg_type__phr_mode
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__dis_stxp
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__dis_stxp
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__rxm110k
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__rxm110k
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__rxwtoe
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__rxwtoe
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__rxautr
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__rxautr
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__autoack
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__autoack
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__aackpend
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__aackpend
                                                  (us_split_fields1 b)))))
                        (= (to_rep5
                           (rec__dw1000__register_types__sys_cfg_type__reserved_1
                           (us_split_fields1 a))) (to_rep5
                                                  (rec__dw1000__register_types__sys_cfg_type__reserved_1
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__dw1000__register_types__sys_cfg_type__reserved_2
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__dw1000__register_types__sys_cfg_type__reserved_2
                                                  (us_split_fields1 b)))))
                   true false))

(declare-fun user_eq7 (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun dw1000__register_types__sys_cfg_type__ffen__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffen__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffen__position () Int)

;; dw1000__register_types__sys_cfg_type__ffen__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffen__first__bit))

;; dw1000__register_types__sys_cfg_type__ffen__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffen__first__bit dw1000__register_types__sys_cfg_type__ffen__last__bit))

;; dw1000__register_types__sys_cfg_type__ffen__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffen__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffbc__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffbc__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffbc__position () Int)

;; dw1000__register_types__sys_cfg_type__ffbc__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffbc__first__bit))

;; dw1000__register_types__sys_cfg_type__ffbc__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffbc__first__bit dw1000__register_types__sys_cfg_type__ffbc__last__bit))

;; dw1000__register_types__sys_cfg_type__ffbc__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffbc__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffab__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffab__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffab__position () Int)

;; dw1000__register_types__sys_cfg_type__ffab__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffab__first__bit))

;; dw1000__register_types__sys_cfg_type__ffab__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffab__first__bit dw1000__register_types__sys_cfg_type__ffab__last__bit))

;; dw1000__register_types__sys_cfg_type__ffab__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffab__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffad__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffad__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffad__position () Int)

;; dw1000__register_types__sys_cfg_type__ffad__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffad__first__bit))

;; dw1000__register_types__sys_cfg_type__ffad__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffad__first__bit dw1000__register_types__sys_cfg_type__ffad__last__bit))

;; dw1000__register_types__sys_cfg_type__ffad__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffad__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffaa__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffaa__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffaa__position () Int)

;; dw1000__register_types__sys_cfg_type__ffaa__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffaa__first__bit))

;; dw1000__register_types__sys_cfg_type__ffaa__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffaa__first__bit dw1000__register_types__sys_cfg_type__ffaa__last__bit))

;; dw1000__register_types__sys_cfg_type__ffaa__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffaa__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffam__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffam__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffam__position () Int)

;; dw1000__register_types__sys_cfg_type__ffam__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffam__first__bit))

;; dw1000__register_types__sys_cfg_type__ffam__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffam__first__bit dw1000__register_types__sys_cfg_type__ffam__last__bit))

;; dw1000__register_types__sys_cfg_type__ffam__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffam__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffar__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffar__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffar__position () Int)

;; dw1000__register_types__sys_cfg_type__ffar__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffar__first__bit))

;; dw1000__register_types__sys_cfg_type__ffar__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffar__first__bit dw1000__register_types__sys_cfg_type__ffar__last__bit))

;; dw1000__register_types__sys_cfg_type__ffar__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffar__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffa4__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffa4__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffa4__position () Int)

;; dw1000__register_types__sys_cfg_type__ffa4__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa4__first__bit))

;; dw1000__register_types__sys_cfg_type__ffa4__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffa4__first__bit dw1000__register_types__sys_cfg_type__ffa4__last__bit))

;; dw1000__register_types__sys_cfg_type__ffa4__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa4__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffa5__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffa5__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffa5__position () Int)

;; dw1000__register_types__sys_cfg_type__ffa5__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa5__first__bit))

;; dw1000__register_types__sys_cfg_type__ffa5__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffa5__first__bit dw1000__register_types__sys_cfg_type__ffa5__last__bit))

;; dw1000__register_types__sys_cfg_type__ffa5__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa5__position))

(declare-fun dw1000__register_types__sys_cfg_type__hirq_pol__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__hirq_pol__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__hirq_pol__position () Int)

;; dw1000__register_types__sys_cfg_type__hirq_pol__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__hirq_pol__first__bit))

;; dw1000__register_types__sys_cfg_type__hirq_pol__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__hirq_pol__first__bit dw1000__register_types__sys_cfg_type__hirq_pol__last__bit))

;; dw1000__register_types__sys_cfg_type__hirq_pol__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__hirq_pol__position))

(declare-fun dw1000__register_types__sys_cfg_type__spi_edge__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__spi_edge__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__spi_edge__position () Int)

;; dw1000__register_types__sys_cfg_type__spi_edge__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__spi_edge__first__bit))

;; dw1000__register_types__sys_cfg_type__spi_edge__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__spi_edge__first__bit dw1000__register_types__sys_cfg_type__spi_edge__last__bit))

;; dw1000__register_types__sys_cfg_type__spi_edge__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__spi_edge__position))

(declare-fun dw1000__register_types__sys_cfg_type__dis_fce__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_fce__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_fce__position () Int)

;; dw1000__register_types__sys_cfg_type__dis_fce__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_fce__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_fce__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_fce__first__bit dw1000__register_types__sys_cfg_type__dis_fce__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_fce__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_fce__position))

(declare-fun dw1000__register_types__sys_cfg_type__dis_drxb__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_drxb__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_drxb__position () Int)

;; dw1000__register_types__sys_cfg_type__dis_drxb__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_drxb__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_drxb__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_drxb__first__bit dw1000__register_types__sys_cfg_type__dis_drxb__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_drxb__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_drxb__position))

(declare-fun dw1000__register_types__sys_cfg_type__dis_phe__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_phe__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_phe__position () Int)

;; dw1000__register_types__sys_cfg_type__dis_phe__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_phe__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_phe__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_phe__first__bit dw1000__register_types__sys_cfg_type__dis_phe__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_phe__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_phe__position))

(declare-fun dw1000__register_types__sys_cfg_type__dis_rsde__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_rsde__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_rsde__position () Int)

;; dw1000__register_types__sys_cfg_type__dis_rsde__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_rsde__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_rsde__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_rsde__first__bit dw1000__register_types__sys_cfg_type__dis_rsde__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_rsde__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_rsde__position))

(declare-fun dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__fcs_int2f__position () Int)

;; dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit))

;; dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit))

;; dw1000__register_types__sys_cfg_type__fcs_int2f__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__fcs_int2f__position))

(declare-fun dw1000__register_types__sys_cfg_type__phr_mode__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__phr_mode__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__phr_mode__position () Int)

;; dw1000__register_types__sys_cfg_type__phr_mode__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__phr_mode__first__bit))

;; dw1000__register_types__sys_cfg_type__phr_mode__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__phr_mode__first__bit dw1000__register_types__sys_cfg_type__phr_mode__last__bit))

;; dw1000__register_types__sys_cfg_type__phr_mode__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__phr_mode__position))

(declare-fun dw1000__register_types__sys_cfg_type__dis_stxp__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_stxp__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_stxp__position () Int)

;; dw1000__register_types__sys_cfg_type__dis_stxp__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_stxp__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_stxp__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_stxp__first__bit dw1000__register_types__sys_cfg_type__dis_stxp__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_stxp__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_stxp__position))

(declare-fun dw1000__register_types__sys_cfg_type__rxm110k__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxm110k__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxm110k__position () Int)

;; dw1000__register_types__sys_cfg_type__rxm110k__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxm110k__first__bit))

;; dw1000__register_types__sys_cfg_type__rxm110k__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__rxm110k__first__bit dw1000__register_types__sys_cfg_type__rxm110k__last__bit))

;; dw1000__register_types__sys_cfg_type__rxm110k__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxm110k__position))

(declare-fun dw1000__register_types__sys_cfg_type__rxwtoe__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxwtoe__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxwtoe__position () Int)

;; dw1000__register_types__sys_cfg_type__rxwtoe__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxwtoe__first__bit))

;; dw1000__register_types__sys_cfg_type__rxwtoe__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__rxwtoe__first__bit dw1000__register_types__sys_cfg_type__rxwtoe__last__bit))

;; dw1000__register_types__sys_cfg_type__rxwtoe__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxwtoe__position))

(declare-fun dw1000__register_types__sys_cfg_type__rxautr__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxautr__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxautr__position () Int)

;; dw1000__register_types__sys_cfg_type__rxautr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxautr__first__bit))

;; dw1000__register_types__sys_cfg_type__rxautr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__rxautr__first__bit dw1000__register_types__sys_cfg_type__rxautr__last__bit))

;; dw1000__register_types__sys_cfg_type__rxautr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxautr__position))

(declare-fun dw1000__register_types__sys_cfg_type__autoack__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__autoack__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__autoack__position () Int)

;; dw1000__register_types__sys_cfg_type__autoack__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__autoack__first__bit))

;; dw1000__register_types__sys_cfg_type__autoack__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__autoack__first__bit dw1000__register_types__sys_cfg_type__autoack__last__bit))

;; dw1000__register_types__sys_cfg_type__autoack__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__autoack__position))

(declare-fun dw1000__register_types__sys_cfg_type__aackpend__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__aackpend__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__aackpend__position () Int)

;; dw1000__register_types__sys_cfg_type__aackpend__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__aackpend__first__bit))

;; dw1000__register_types__sys_cfg_type__aackpend__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__aackpend__first__bit dw1000__register_types__sys_cfg_type__aackpend__last__bit))

;; dw1000__register_types__sys_cfg_type__aackpend__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__aackpend__position))

(declare-fun dw1000__register_types__sys_cfg_type__reserved_1__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__reserved_1__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__reserved_1__position () Int)

;; dw1000__register_types__sys_cfg_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_cfg_type__reserved_1__first__bit))

;; dw1000__register_types__sys_cfg_type__reserved_1__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__reserved_1__first__bit dw1000__register_types__sys_cfg_type__reserved_1__last__bit))

;; dw1000__register_types__sys_cfg_type__reserved_1__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__reserved_1__position))

(declare-fun dw1000__register_types__sys_cfg_type__reserved_2__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__reserved_2__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__reserved_2__position () Int)

;; dw1000__register_types__sys_cfg_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_cfg_type__reserved_2__first__bit))

;; dw1000__register_types__sys_cfg_type__reserved_2__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__reserved_2__first__bit dw1000__register_types__sys_cfg_type__reserved_2__last__bit))

;; dw1000__register_types__sys_cfg_type__reserved_2__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__reserved_2__position))

(declare-fun dummy7 () us_rep)

(declare-datatypes ()
((sys_cfg_type__ref (mk_sys_cfg_type__ref (sys_cfg_type__content us_rep)))))
(define-fun sys_cfg_type__ref___projection ((a sys_cfg_type__ref)) us_rep 
  (sys_cfg_type__content a))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__dw1000__register_types__sys_mask_type__mcplock bits_1)(rec__dw1000__register_types__sys_mask_type__mesyncr bits_1)(rec__dw1000__register_types__sys_mask_type__maat bits_1)(rec__dw1000__register_types__sys_mask_type__mtxfrb bits_1)(rec__dw1000__register_types__sys_mask_type__mtxprs bits_1)(rec__dw1000__register_types__sys_mask_type__mtxphs bits_1)(rec__dw1000__register_types__sys_mask_type__mtxfrs bits_1)(rec__dw1000__register_types__sys_mask_type__mrxprd bits_1)(rec__dw1000__register_types__sys_mask_type__mrxsfdd bits_1)(rec__dw1000__register_types__sys_mask_type__mldedone bits_1)(rec__dw1000__register_types__sys_mask_type__mrxphd bits_1)(rec__dw1000__register_types__sys_mask_type__mrxphe bits_1)(rec__dw1000__register_types__sys_mask_type__mrxdfr bits_1)(rec__dw1000__register_types__sys_mask_type__mrxfcg bits_1)(rec__dw1000__register_types__sys_mask_type__mrxfce bits_1)(rec__dw1000__register_types__sys_mask_type__mrxrfsl bits_1)(rec__dw1000__register_types__sys_mask_type__mrxrfto bits_1)(rec__dw1000__register_types__sys_mask_type__mldeerr bits_1)(rec__dw1000__register_types__sys_mask_type__mrxovrr bits_1)(rec__dw1000__register_types__sys_mask_type__mrxpto bits_1)(rec__dw1000__register_types__sys_mask_type__mgpioirq bits_1)(rec__dw1000__register_types__sys_mask_type__mslp2init bits_1)(rec__dw1000__register_types__sys_mask_type__mrfpllll bits_1)(rec__dw1000__register_types__sys_mask_type__mcpllll bits_1)(rec__dw1000__register_types__sys_mask_type__mrxsfdto bits_1)(rec__dw1000__register_types__sys_mask_type__mhpdwarn bits_1)(rec__dw1000__register_types__sys_mask_type__mtxberr bits_1)(rec__dw1000__register_types__sys_mask_type__maffrej bits_1)(rec__dw1000__register_types__sys_mask_type__reserved_1 bits_1)(rec__dw1000__register_types__sys_mask_type__reserved_2 bits_1)(rec__dw1000__register_types__sys_mask_type__reserved_3 bits_2)))))
(define-fun us_split_fields_MCPLOCK__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mcplock a))

(define-fun us_split_fields_MESYNCR__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mesyncr a))

(define-fun us_split_fields_MAAT__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__maat a))

(define-fun us_split_fields_MTXFRB__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mtxfrb a))

(define-fun us_split_fields_MTXPRS__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mtxprs a))

(define-fun us_split_fields_MTXPHS__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mtxphs a))

(define-fun us_split_fields_MTXFRS__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mtxfrs a))

(define-fun us_split_fields_MRXPRD__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxprd a))

(define-fun us_split_fields_MRXSFDD__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxsfdd a))

(define-fun us_split_fields_MLDEDONE__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mldedone a))

(define-fun us_split_fields_MRXPHD__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxphd a))

(define-fun us_split_fields_MRXPHE__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxphe a))

(define-fun us_split_fields_MRXDFR__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxdfr a))

(define-fun us_split_fields_MRXFCG__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxfcg a))

(define-fun us_split_fields_MRXFCE__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxfce a))

(define-fun us_split_fields_MRXRFSL__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxrfsl a))

(define-fun us_split_fields_MRXRFTO__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxrfto a))

(define-fun us_split_fields_MLDEERR__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mldeerr a))

(define-fun us_split_fields_MRXOVRR__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxovrr a))

(define-fun us_split_fields_MRXPTO__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxpto a))

(define-fun us_split_fields_MGPIOIRQ__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mgpioirq a))

(define-fun us_split_fields_MSLP2INIT__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mslp2init a))

(define-fun us_split_fields_MRFPLLLL__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrfpllll a))

(define-fun us_split_fields_MCPLLLL__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mcpllll a))

(define-fun us_split_fields_MRXSFDTO__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mrxsfdto a))

(define-fun us_split_fields_MHPDWARN__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mhpdwarn a))

(define-fun us_split_fields_MTXBERR__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__mtxberr a))

(define-fun us_split_fields_MAFFREJ__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__maffrej a))

(define-fun us_split_fields_Reserved_13__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__reserved_1 a))

(define-fun us_split_fields_Reserved_23__projection ((a us_split_fields2)) bits_1 
  (rec__dw1000__register_types__sys_mask_type__reserved_2 a))

(define-fun us_split_fields_Reserved_32__projection ((a us_split_fields2)) bits_2 
  (rec__dw1000__register_types__sys_mask_type__reserved_3 a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_11__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep_11__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                 a))

(define-fun bool_eq8 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mcplock
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mcplock
                                                   (us_split_fields3 b))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mesyncr
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mesyncr
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__maat
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__maat
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mtxfrb
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mtxfrb
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mtxprs
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mtxprs
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mtxphs
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mtxphs
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mtxfrs
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mtxfrs
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxprd
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxprd
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxsfdd
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxsfdd
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mldedone
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mldedone
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxphd
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxphd
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxphe
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxphe
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxdfr
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxdfr
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxfcg
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxfcg
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxfce
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxfce
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxrfsl
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxrfsl
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxrfto
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxrfto
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mldeerr
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mldeerr
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxovrr
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxovrr
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxpto
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxpto
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mgpioirq
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mgpioirq
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mslp2init
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mslp2init
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrfpllll
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrfpllll
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mcpllll
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mcpllll
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mrxsfdto
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mrxsfdto
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mhpdwarn
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mhpdwarn
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__mtxberr
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__mtxberr
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__maffrej
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__maffrej
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__reserved_1
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__reserved_1
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_mask_type__reserved_2
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_mask_type__reserved_2
                                                   (us_split_fields3 b)))))
                         (= (to_rep4
                            (rec__dw1000__register_types__sys_mask_type__reserved_3
                            (us_split_fields3 a))) (to_rep4
                                                   (rec__dw1000__register_types__sys_mask_type__reserved_3
                                                   (us_split_fields3 b)))))
                    true false))

(declare-fun user_eq8 (us_rep1 us_rep1) Bool)

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep1) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))

(declare-fun dw1000__register_types__sys_mask_type__mcplock__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mcplock__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mcplock__position () Int)

;; dw1000__register_types__sys_mask_type__mcplock__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mcplock__first__bit))

;; dw1000__register_types__sys_mask_type__mcplock__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mcplock__first__bit dw1000__register_types__sys_mask_type__mcplock__last__bit))

;; dw1000__register_types__sys_mask_type__mcplock__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mcplock__position))

(declare-fun dw1000__register_types__sys_mask_type__mesyncr__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mesyncr__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mesyncr__position () Int)

;; dw1000__register_types__sys_mask_type__mesyncr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mesyncr__first__bit))

;; dw1000__register_types__sys_mask_type__mesyncr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mesyncr__first__bit dw1000__register_types__sys_mask_type__mesyncr__last__bit))

;; dw1000__register_types__sys_mask_type__mesyncr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mesyncr__position))

(declare-fun dw1000__register_types__sys_mask_type__maat__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__maat__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__maat__position () Int)

;; dw1000__register_types__sys_mask_type__maat__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__maat__first__bit))

;; dw1000__register_types__sys_mask_type__maat__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__maat__first__bit dw1000__register_types__sys_mask_type__maat__last__bit))

;; dw1000__register_types__sys_mask_type__maat__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__maat__position))

(declare-fun dw1000__register_types__sys_mask_type__mtxfrb__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mtxfrb__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mtxfrb__position () Int)

;; dw1000__register_types__sys_mask_type__mtxfrb__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mtxfrb__first__bit))

;; dw1000__register_types__sys_mask_type__mtxfrb__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mtxfrb__first__bit dw1000__register_types__sys_mask_type__mtxfrb__last__bit))

;; dw1000__register_types__sys_mask_type__mtxfrb__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mtxfrb__position))

(declare-fun dw1000__register_types__sys_mask_type__mtxprs__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mtxprs__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mtxprs__position () Int)

;; dw1000__register_types__sys_mask_type__mtxprs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mtxprs__first__bit))

;; dw1000__register_types__sys_mask_type__mtxprs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mtxprs__first__bit dw1000__register_types__sys_mask_type__mtxprs__last__bit))

;; dw1000__register_types__sys_mask_type__mtxprs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mtxprs__position))

(declare-fun dw1000__register_types__sys_mask_type__mtxphs__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mtxphs__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mtxphs__position () Int)

;; dw1000__register_types__sys_mask_type__mtxphs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mtxphs__first__bit))

;; dw1000__register_types__sys_mask_type__mtxphs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mtxphs__first__bit dw1000__register_types__sys_mask_type__mtxphs__last__bit))

;; dw1000__register_types__sys_mask_type__mtxphs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mtxphs__position))

(declare-fun dw1000__register_types__sys_mask_type__mtxfrs__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mtxfrs__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mtxfrs__position () Int)

;; dw1000__register_types__sys_mask_type__mtxfrs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mtxfrs__first__bit))

;; dw1000__register_types__sys_mask_type__mtxfrs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mtxfrs__first__bit dw1000__register_types__sys_mask_type__mtxfrs__last__bit))

;; dw1000__register_types__sys_mask_type__mtxfrs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mtxfrs__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxprd__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxprd__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxprd__position () Int)

;; dw1000__register_types__sys_mask_type__mrxprd__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxprd__first__bit))

;; dw1000__register_types__sys_mask_type__mrxprd__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxprd__first__bit dw1000__register_types__sys_mask_type__mrxprd__last__bit))

;; dw1000__register_types__sys_mask_type__mrxprd__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxprd__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxsfdd__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxsfdd__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxsfdd__position () Int)

;; dw1000__register_types__sys_mask_type__mrxsfdd__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxsfdd__first__bit))

;; dw1000__register_types__sys_mask_type__mrxsfdd__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxsfdd__first__bit dw1000__register_types__sys_mask_type__mrxsfdd__last__bit))

;; dw1000__register_types__sys_mask_type__mrxsfdd__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxsfdd__position))

(declare-fun dw1000__register_types__sys_mask_type__mldedone__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mldedone__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mldedone__position () Int)

;; dw1000__register_types__sys_mask_type__mldedone__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mldedone__first__bit))

;; dw1000__register_types__sys_mask_type__mldedone__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mldedone__first__bit dw1000__register_types__sys_mask_type__mldedone__last__bit))

;; dw1000__register_types__sys_mask_type__mldedone__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mldedone__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxphd__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxphd__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxphd__position () Int)

;; dw1000__register_types__sys_mask_type__mrxphd__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxphd__first__bit))

;; dw1000__register_types__sys_mask_type__mrxphd__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxphd__first__bit dw1000__register_types__sys_mask_type__mrxphd__last__bit))

;; dw1000__register_types__sys_mask_type__mrxphd__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxphd__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxphe__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxphe__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxphe__position () Int)

;; dw1000__register_types__sys_mask_type__mrxphe__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxphe__first__bit))

;; dw1000__register_types__sys_mask_type__mrxphe__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxphe__first__bit dw1000__register_types__sys_mask_type__mrxphe__last__bit))

;; dw1000__register_types__sys_mask_type__mrxphe__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxphe__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxdfr__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxdfr__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxdfr__position () Int)

;; dw1000__register_types__sys_mask_type__mrxdfr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxdfr__first__bit))

;; dw1000__register_types__sys_mask_type__mrxdfr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxdfr__first__bit dw1000__register_types__sys_mask_type__mrxdfr__last__bit))

;; dw1000__register_types__sys_mask_type__mrxdfr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxdfr__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxfcg__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxfcg__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxfcg__position () Int)

;; dw1000__register_types__sys_mask_type__mrxfcg__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxfcg__first__bit))

;; dw1000__register_types__sys_mask_type__mrxfcg__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxfcg__first__bit dw1000__register_types__sys_mask_type__mrxfcg__last__bit))

;; dw1000__register_types__sys_mask_type__mrxfcg__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxfcg__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxfce__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxfce__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxfce__position () Int)

;; dw1000__register_types__sys_mask_type__mrxfce__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxfce__first__bit))

;; dw1000__register_types__sys_mask_type__mrxfce__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxfce__first__bit dw1000__register_types__sys_mask_type__mrxfce__last__bit))

;; dw1000__register_types__sys_mask_type__mrxfce__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxfce__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxrfsl__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxrfsl__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxrfsl__position () Int)

;; dw1000__register_types__sys_mask_type__mrxrfsl__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxrfsl__first__bit))

;; dw1000__register_types__sys_mask_type__mrxrfsl__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxrfsl__first__bit dw1000__register_types__sys_mask_type__mrxrfsl__last__bit))

;; dw1000__register_types__sys_mask_type__mrxrfsl__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxrfsl__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxrfto__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxrfto__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxrfto__position () Int)

;; dw1000__register_types__sys_mask_type__mrxrfto__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxrfto__first__bit))

;; dw1000__register_types__sys_mask_type__mrxrfto__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxrfto__first__bit dw1000__register_types__sys_mask_type__mrxrfto__last__bit))

;; dw1000__register_types__sys_mask_type__mrxrfto__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxrfto__position))

(declare-fun dw1000__register_types__sys_mask_type__mldeerr__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mldeerr__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mldeerr__position () Int)

;; dw1000__register_types__sys_mask_type__mldeerr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mldeerr__first__bit))

;; dw1000__register_types__sys_mask_type__mldeerr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mldeerr__first__bit dw1000__register_types__sys_mask_type__mldeerr__last__bit))

;; dw1000__register_types__sys_mask_type__mldeerr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mldeerr__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxovrr__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxovrr__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxovrr__position () Int)

;; dw1000__register_types__sys_mask_type__mrxovrr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxovrr__first__bit))

;; dw1000__register_types__sys_mask_type__mrxovrr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxovrr__first__bit dw1000__register_types__sys_mask_type__mrxovrr__last__bit))

;; dw1000__register_types__sys_mask_type__mrxovrr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxovrr__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxpto__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxpto__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxpto__position () Int)

;; dw1000__register_types__sys_mask_type__mrxpto__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxpto__first__bit))

;; dw1000__register_types__sys_mask_type__mrxpto__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxpto__first__bit dw1000__register_types__sys_mask_type__mrxpto__last__bit))

;; dw1000__register_types__sys_mask_type__mrxpto__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxpto__position))

(declare-fun dw1000__register_types__sys_mask_type__mgpioirq__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mgpioirq__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mgpioirq__position () Int)

;; dw1000__register_types__sys_mask_type__mgpioirq__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mgpioirq__first__bit))

;; dw1000__register_types__sys_mask_type__mgpioirq__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mgpioirq__first__bit dw1000__register_types__sys_mask_type__mgpioirq__last__bit))

;; dw1000__register_types__sys_mask_type__mgpioirq__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mgpioirq__position))

(declare-fun dw1000__register_types__sys_mask_type__mslp2init__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mslp2init__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mslp2init__position () Int)

;; dw1000__register_types__sys_mask_type__mslp2init__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_mask_type__mslp2init__first__bit))

;; dw1000__register_types__sys_mask_type__mslp2init__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mslp2init__first__bit dw1000__register_types__sys_mask_type__mslp2init__last__bit))

;; dw1000__register_types__sys_mask_type__mslp2init__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mslp2init__position))

(declare-fun dw1000__register_types__sys_mask_type__mrfpllll__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrfpllll__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrfpllll__position () Int)

;; dw1000__register_types__sys_mask_type__mrfpllll__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrfpllll__first__bit))

;; dw1000__register_types__sys_mask_type__mrfpllll__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrfpllll__first__bit dw1000__register_types__sys_mask_type__mrfpllll__last__bit))

;; dw1000__register_types__sys_mask_type__mrfpllll__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrfpllll__position))

(declare-fun dw1000__register_types__sys_mask_type__mcpllll__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mcpllll__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mcpllll__position () Int)

;; dw1000__register_types__sys_mask_type__mcpllll__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mcpllll__first__bit))

;; dw1000__register_types__sys_mask_type__mcpllll__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mcpllll__first__bit dw1000__register_types__sys_mask_type__mcpllll__last__bit))

;; dw1000__register_types__sys_mask_type__mcpllll__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mcpllll__position))

(declare-fun dw1000__register_types__sys_mask_type__mrxsfdto__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxsfdto__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mrxsfdto__position () Int)

;; dw1000__register_types__sys_mask_type__mrxsfdto__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxsfdto__first__bit))

;; dw1000__register_types__sys_mask_type__mrxsfdto__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mrxsfdto__first__bit dw1000__register_types__sys_mask_type__mrxsfdto__last__bit))

;; dw1000__register_types__sys_mask_type__mrxsfdto__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mrxsfdto__position))

(declare-fun dw1000__register_types__sys_mask_type__mhpdwarn__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mhpdwarn__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mhpdwarn__position () Int)

;; dw1000__register_types__sys_mask_type__mhpdwarn__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mhpdwarn__first__bit))

;; dw1000__register_types__sys_mask_type__mhpdwarn__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mhpdwarn__first__bit dw1000__register_types__sys_mask_type__mhpdwarn__last__bit))

;; dw1000__register_types__sys_mask_type__mhpdwarn__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mhpdwarn__position))

(declare-fun dw1000__register_types__sys_mask_type__mtxberr__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mtxberr__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__mtxberr__position () Int)

;; dw1000__register_types__sys_mask_type__mtxberr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mtxberr__first__bit))

;; dw1000__register_types__sys_mask_type__mtxberr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__mtxberr__first__bit dw1000__register_types__sys_mask_type__mtxberr__last__bit))

;; dw1000__register_types__sys_mask_type__mtxberr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__mtxberr__position))

(declare-fun dw1000__register_types__sys_mask_type__maffrej__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__maffrej__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__maffrej__position () Int)

;; dw1000__register_types__sys_mask_type__maffrej__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__maffrej__first__bit))

;; dw1000__register_types__sys_mask_type__maffrej__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__maffrej__first__bit dw1000__register_types__sys_mask_type__maffrej__last__bit))

;; dw1000__register_types__sys_mask_type__maffrej__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__maffrej__position))

(declare-fun dw1000__register_types__sys_mask_type__reserved_1__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__reserved_1__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__reserved_1__position () Int)

;; dw1000__register_types__sys_mask_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_mask_type__reserved_1__first__bit))

;; dw1000__register_types__sys_mask_type__reserved_1__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__reserved_1__first__bit dw1000__register_types__sys_mask_type__reserved_1__last__bit))

;; dw1000__register_types__sys_mask_type__reserved_1__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__reserved_1__position))

(declare-fun dw1000__register_types__sys_mask_type__reserved_2__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__reserved_2__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__reserved_2__position () Int)

;; dw1000__register_types__sys_mask_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_mask_type__reserved_2__first__bit))

;; dw1000__register_types__sys_mask_type__reserved_2__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__reserved_2__first__bit dw1000__register_types__sys_mask_type__reserved_2__last__bit))

;; dw1000__register_types__sys_mask_type__reserved_2__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__reserved_2__position))

(declare-fun dw1000__register_types__sys_mask_type__reserved_3__first__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__reserved_3__last__bit () Int)

(declare-fun dw1000__register_types__sys_mask_type__reserved_3__position () Int)

;; dw1000__register_types__sys_mask_type__reserved_3__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_mask_type__reserved_3__first__bit))

;; dw1000__register_types__sys_mask_type__reserved_3__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_mask_type__reserved_3__first__bit dw1000__register_types__sys_mask_type__reserved_3__last__bit))

;; dw1000__register_types__sys_mask_type__reserved_3__position_axiom
  (assert (<= 0 dw1000__register_types__sys_mask_type__reserved_3__position))

(declare-fun dummy8 () us_rep1)

(declare-datatypes ()
((sys_mask_type__ref
 (mk_sys_mask_type__ref (sys_mask_type__content us_rep1)))))
(define-fun sys_mask_type__ref___projection ((a sys_mask_type__ref)) us_rep1 
  (sys_mask_type__content a))

(declare-sort bits_6 0)

(define-fun in_range6 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 63))))

(define-fun in_range_int5 ((x Int)) Bool (and (<= 0 x) (<= x 63)))

(define-fun bool_eq9 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) (_ BitVec 8))

(declare-fun user_eq9 (bits_6 bits_6) Bool)

(declare-fun dummy9 () bits_6)

(declare-datatypes ()
((bits_6__ref (mk_bits_6__ref (bits_6__content bits_6)))))
(define-fun bits_6__ref___projection ((a bits_6__ref)) bits_6 (bits_6__content
                                                              a))

(declare-fun to_rep6 (bits_6) (_ BitVec 8))

(declare-fun of_rep6 ((_ BitVec 8)) bits_6)

;; inversion_axiom
  (assert
  (forall ((x bits_6))
  (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_6)) (! (in_range6 (to_rep6 x)) :pattern ((to_rep6 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 64))))
     (=> (in_range6 y) (= (to_rep6 (of_rep6 x)) y))) :pattern ((to_rep6
                                                               (of_rep6 x))) )))

(define-fun to_int11 ((x bits_6)) Int (bv2nat (to_rep6 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_6)) (! (in_range_int5
  (to_int11 x)) :pattern ((to_int11 x)) )))

(declare-sort bits_8 0)

(declare-fun attr__ATTRIBUTE_MODULUS2 () (_ BitVec 8))

(define-fun bool_eq10 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) (_ BitVec 8))

(declare-fun user_eq10 (bits_8 bits_8) Bool)

(declare-fun dummy10 () bits_8)

(declare-datatypes ()
((bits_8__ref (mk_bits_8__ref (bits_8__content bits_8)))))
(define-fun bits_8__ref___projection ((a bits_8__ref)) bits_8 (bits_8__content
                                                              a))

(declare-fun to_rep7 (bits_8) (_ BitVec 8))

(declare-fun of_rep7 ((_ BitVec 8)) bits_8)

;; inversion_axiom
  (assert
  (forall ((x bits_8))
  (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep7 (of_rep7 x)) x) :pattern ((to_rep7 (of_rep7 x))) )))

(define-fun to_int12 ((x bits_8)) Int (bv2nat (to_rep7 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_8)) (! (uint_in_range
  (to_int12 x)) :pattern ((to_int12 x)) )))

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2
 (rec__dw1000__register_types__pmsc_ctrl1_type__arx2init bits_1)(rec__dw1000__register_types__pmsc_ctrl1_type__pktseq bits_8)(rec__dw1000__register_types__pmsc_ctrl1_type__atxslp bits_1)(rec__dw1000__register_types__pmsc_ctrl1_type__arxslp bits_1)(rec__dw1000__register_types__pmsc_ctrl1_type__snoze bits_1)(rec__dw1000__register_types__pmsc_ctrl1_type__snozr bits_1)(rec__dw1000__register_types__pmsc_ctrl1_type__pllsyn bits_1)(rec__dw1000__register_types__pmsc_ctrl1_type__lderune bits_1)(rec__dw1000__register_types__pmsc_ctrl1_type__khzclkdiv bits_6)(rec__dw1000__register_types__pmsc_ctrl1_type__reserved_1 bits_1)(rec__dw1000__register_types__pmsc_ctrl1_type__reserved_2 bits_1)(rec__dw1000__register_types__pmsc_ctrl1_type__reserved_3 bits_1)(rec__dw1000__register_types__pmsc_ctrl1_type__reserved_4 bits_8)))))
(define-fun us_split_fields_ARX2INIT__projection ((a us_split_fields4)) bits_1 
  (rec__dw1000__register_types__pmsc_ctrl1_type__arx2init a))

(define-fun us_split_fields_PKTSEQ__projection ((a us_split_fields4)) bits_8 
  (rec__dw1000__register_types__pmsc_ctrl1_type__pktseq a))

(define-fun us_split_fields_ATXSLP__projection ((a us_split_fields4)) bits_1 
  (rec__dw1000__register_types__pmsc_ctrl1_type__atxslp a))

(define-fun us_split_fields_ARXSLP__projection ((a us_split_fields4)) bits_1 
  (rec__dw1000__register_types__pmsc_ctrl1_type__arxslp a))

(define-fun us_split_fields_SNOZE__projection ((a us_split_fields4)) bits_1 
  (rec__dw1000__register_types__pmsc_ctrl1_type__snoze a))

(define-fun us_split_fields_SNOZR__projection ((a us_split_fields4)) bits_1 
  (rec__dw1000__register_types__pmsc_ctrl1_type__snozr a))

(define-fun us_split_fields_PLLSYN__projection ((a us_split_fields4)) bits_1 
  (rec__dw1000__register_types__pmsc_ctrl1_type__pllsyn a))

(define-fun us_split_fields_LDERUNE__projection ((a us_split_fields4)) bits_1 
  (rec__dw1000__register_types__pmsc_ctrl1_type__lderune a))

(define-fun us_split_fields_KHZCLKDIV__projection ((a us_split_fields4)) bits_6 
  (rec__dw1000__register_types__pmsc_ctrl1_type__khzclkdiv a))

(define-fun us_split_fields_Reserved_117__projection ((a us_split_fields4)) bits_1 
  (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_1 a))

(define-fun us_split_fields_Reserved_217__projection ((a us_split_fields4)) bits_1 
  (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_2 a))

(define-fun us_split_fields_Reserved_36__projection ((a us_split_fields4)) bits_1 
  (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_3 a))

(define-fun us_split_fields_Reserved_43__projection ((a us_split_fields4)) bits_8 
  (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_4 a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref_102__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep_102__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                  a))

(define-fun bool_eq11 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep
                            (rec__dw1000__register_types__pmsc_ctrl1_type__arx2init
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__arx2init
                                                   (us_split_fields5 b))))
                         (= (to_rep7
                            (rec__dw1000__register_types__pmsc_ctrl1_type__pktseq
                            (us_split_fields5 a))) (to_rep7
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__pktseq
                                                   (us_split_fields5 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__pmsc_ctrl1_type__atxslp
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__atxslp
                                                   (us_split_fields5 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__pmsc_ctrl1_type__arxslp
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__arxslp
                                                   (us_split_fields5 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__pmsc_ctrl1_type__snoze
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__snoze
                                                   (us_split_fields5 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__pmsc_ctrl1_type__snozr
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__snozr
                                                   (us_split_fields5 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__pmsc_ctrl1_type__pllsyn
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__pllsyn
                                                   (us_split_fields5 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__pmsc_ctrl1_type__lderune
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__lderune
                                                   (us_split_fields5 b)))))
                         (= (to_rep6
                            (rec__dw1000__register_types__pmsc_ctrl1_type__khzclkdiv
                            (us_split_fields5 a))) (to_rep6
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__khzclkdiv
                                                   (us_split_fields5 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_1
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_1
                                                   (us_split_fields5 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_2
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_2
                                                   (us_split_fields5 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_3
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_3
                                                   (us_split_fields5 b)))))
                         (= (to_rep7
                            (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_4
                            (us_split_fields5 a))) (to_rep7
                                                   (rec__dw1000__register_types__pmsc_ctrl1_type__reserved_4
                                                   (us_split_fields5 b)))))
                    true false))

(declare-fun user_eq11 (us_rep2 us_rep2) Bool)

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep2) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment2 a))))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__arx2init__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__arx2init__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__arx2init__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__arx2init__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__arx2init__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__arx2init__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__arx2init__first__bit dw1000__register_types__pmsc_ctrl1_type__arx2init__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__arx2init__position_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__arx2init__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__pktseq__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__pktseq__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__pktseq__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__pktseq__first__bit_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__pktseq__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__pktseq__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__pktseq__first__bit dw1000__register_types__pmsc_ctrl1_type__pktseq__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__pktseq__position_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__pktseq__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__atxslp__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__atxslp__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__atxslp__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__atxslp__first__bit_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__atxslp__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__atxslp__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__atxslp__first__bit dw1000__register_types__pmsc_ctrl1_type__atxslp__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__atxslp__position_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__atxslp__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__arxslp__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__arxslp__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__arxslp__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__arxslp__first__bit_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__arxslp__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__arxslp__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__arxslp__first__bit dw1000__register_types__pmsc_ctrl1_type__arxslp__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__arxslp__position_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__arxslp__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__snoze__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__snoze__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__snoze__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__snoze__first__bit_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__snoze__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__snoze__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__snoze__first__bit dw1000__register_types__pmsc_ctrl1_type__snoze__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__snoze__position_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__snoze__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__snozr__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__snozr__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__snozr__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__snozr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__snozr__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__snozr__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__snozr__first__bit dw1000__register_types__pmsc_ctrl1_type__snozr__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__snozr__position_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__snozr__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__pllsyn__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__pllsyn__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__pllsyn__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__pllsyn__first__bit_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__pllsyn__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__pllsyn__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__pllsyn__first__bit dw1000__register_types__pmsc_ctrl1_type__pllsyn__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__pllsyn__position_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__pllsyn__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__lderune__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__lderune__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__lderune__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__lderune__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__lderune__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__lderune__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__lderune__first__bit dw1000__register_types__pmsc_ctrl1_type__lderune__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__lderune__position_axiom
  (assert (<= 0 dw1000__register_types__pmsc_ctrl1_type__lderune__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__khzclkdiv__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__khzclkdiv__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__khzclkdiv__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__khzclkdiv__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__khzclkdiv__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__khzclkdiv__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__khzclkdiv__first__bit dw1000__register_types__pmsc_ctrl1_type__khzclkdiv__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__khzclkdiv__position_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__khzclkdiv__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_1__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_1__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_1__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__reserved_1__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__reserved_1__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__reserved_1__first__bit 
  dw1000__register_types__pmsc_ctrl1_type__reserved_1__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__reserved_1__position_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__reserved_1__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_2__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_2__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_2__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__reserved_2__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__reserved_2__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__reserved_2__first__bit 
  dw1000__register_types__pmsc_ctrl1_type__reserved_2__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__reserved_2__position_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__reserved_2__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_3__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_3__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_3__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__reserved_3__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__reserved_3__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__reserved_3__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__reserved_3__first__bit 
  dw1000__register_types__pmsc_ctrl1_type__reserved_3__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__reserved_3__position_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__reserved_3__position))

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_4__first__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_4__last__bit () Int)

(declare-fun dw1000__register_types__pmsc_ctrl1_type__reserved_4__position () Int)

;; dw1000__register_types__pmsc_ctrl1_type__reserved_4__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__reserved_4__first__bit))

;; dw1000__register_types__pmsc_ctrl1_type__reserved_4__last__bit_axiom
  (assert
  (< dw1000__register_types__pmsc_ctrl1_type__reserved_4__first__bit 
  dw1000__register_types__pmsc_ctrl1_type__reserved_4__last__bit))

;; dw1000__register_types__pmsc_ctrl1_type__reserved_4__position_axiom
  (assert
  (<= 0 dw1000__register_types__pmsc_ctrl1_type__reserved_4__position))

(declare-fun dummy11 () us_rep2)

(declare-datatypes ()
((pmsc_ctrl1_type__ref
 (mk_pmsc_ctrl1_type__ref (pmsc_ctrl1_type__content us_rep2)))))
(define-fun pmsc_ctrl1_type__ref___projection ((a pmsc_ctrl1_type__ref)) us_rep2 
  (pmsc_ctrl1_type__content a))

(declare-datatypes ()
((register_type__ref (mk_register_type__ref (register_type__content us_rep)))))
(define-fun register_type__ref_4__projection ((a register_type__ref)) us_rep 
  (register_type__content a))

(declare-datatypes ()
((register_type__ref1
 (mk_register_type__ref1 (register_type__content1 us_rep1)))))
(define-fun register_type__ref_11__projection ((a register_type__ref1)) us_rep1 
  (register_type__content1 a))

(declare-datatypes ()
((register_type__ref2
 (mk_register_type__ref2 (register_type__content2 us_rep2)))))
(define-fun register_type__ref_101__projection ((a register_type__ref2)) us_rep2 
  (register_type__content2 a))

(declare-sort ttx_power_arrayD1 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 11)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq12 (ttx_power_arrayD1 ttx_power_arrayD1) Bool)

(declare-fun dummy12 () ttx_power_arrayD1)

(declare-datatypes ()
((ttx_power_arrayD1__ref
 (mk_ttx_power_arrayD1__ref (ttx_power_arrayD1__content ttx_power_arrayD1)))))
(define-fun ttx_power_arrayD1__ref___projection ((a ttx_power_arrayD1__ref)) ttx_power_arrayD1 
  (ttx_power_arrayD1__content a))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int bits_32))))))
(declare-fun slide ((Array Int bits_32) Int Int) (Array Int bits_32))

;; slide_eq
  (assert
  (forall ((a (Array Int bits_32)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bits_32)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int bits_32) Int Int (Array Int bits_32) Int
  Int) (Array Int bits_32))

;; concat_def
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (bits_32 Int) (Array Int bits_32))

;; singleton_def
  (assert
  (forall ((v bits_32))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq13 ((a (Array Int bits_32)) (a__first Int) (a__last Int)
  (b (Array Int bits_32)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_184 Int))
                           (=>
                           (and (<= a__first temp___idx_184)
                           (<= temp___idx_184 a__last))
                           (= (to_rep3 (select a temp___idx_184)) (to_rep3
                                                                  (select b (+ (- b__first a__first) temp___idx_184)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq13 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_184 Int))
  (=> (and (<= a__first temp___idx_184) (<= temp___idx_184 a__last))
  (= (to_rep3 (select a temp___idx_184)) (to_rep3
                                         (select b (+ (- b__first a__first) temp___idx_184)))))))))))

(declare-fun compare ((Array Int bits_32) Int Int (Array Int bits_32) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq13 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq13 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (bvult (to_rep3 (select a (+ i 1))) (to_rep3 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq13 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (bvugt (to_rep3 (select a (+ j 1))) (to_rep3 (select b (+ i 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-datatypes ()
((us_split_fields6
 (mk___split_fields3
 (rec__decadriver__driver_type__part_id bits_32)(rec__decadriver__driver_type__lot_id bits_32)(rec__decadriver__driver_type__antenna_delay_prf_64 bits_16)(rec__decadriver__driver_type__antenna_delay_prf_16 bits_16)(rec__decadriver__driver_type__xtal_trim bits_5)(rec__decadriver__driver_type__otp_tx_power_levels (Array Int bits_32))(rec__decadriver__driver_type__long_frames Bool)(rec__decadriver__driver_type__sys_cfg_reg us_rep)(rec__decadriver__driver_type__use_otp_xtal_trim Bool)(rec__decadriver__driver_type__use_otp_antenna_delay Bool)(rec__decadriver__driver_type__detect_frame_timeout Bool)(rec__decadriver__driver_type__detect_sfd_timeout Bool)(rec__decadriver__driver_type__detect_phr_error Bool)(rec__decadriver__driver_type__detect_rs_error Bool)(rec__decadriver__driver_type__detect_fcs_error Bool)))))
(define-fun us_split_fields_Part_ID__projection ((a us_split_fields6)) bits_32 
  (rec__decadriver__driver_type__part_id a))

(define-fun us_split_fields_Lot_ID__projection ((a us_split_fields6)) bits_32 
  (rec__decadriver__driver_type__lot_id a))

(define-fun us_split_fields_Antenna_Delay_PRF_64__projection ((a us_split_fields6)) bits_16 
  (rec__decadriver__driver_type__antenna_delay_prf_64 a))

(define-fun us_split_fields_Antenna_Delay_PRF_16__projection ((a us_split_fields6)) bits_16 
  (rec__decadriver__driver_type__antenna_delay_prf_16 a))

(define-fun us_split_fields_XTAL_Trim__projection ((a us_split_fields6)) bits_5 
  (rec__decadriver__driver_type__xtal_trim a))

(define-fun us_split_fields_OTP_Tx_Power_Levels__projection ((a us_split_fields6)) (Array Int bits_32) 
  (rec__decadriver__driver_type__otp_tx_power_levels a))

(define-fun us_split_fields_Long_Frames__projection ((a us_split_fields6)) Bool 
  (rec__decadriver__driver_type__long_frames a))

(define-fun us_split_fields_SYS_CFG_Reg__projection ((a us_split_fields6)) us_rep 
  (rec__decadriver__driver_type__sys_cfg_reg a))

(define-fun us_split_fields_Use_OTP_XTAL_Trim__projection ((a us_split_fields6)) Bool 
  (rec__decadriver__driver_type__use_otp_xtal_trim a))

(define-fun us_split_fields_Use_OTP_Antenna_Delay__projection ((a us_split_fields6)) Bool 
  (rec__decadriver__driver_type__use_otp_antenna_delay a))

(define-fun us_split_fields_Detect_Frame_Timeout__projection ((a us_split_fields6)) Bool 
  (rec__decadriver__driver_type__detect_frame_timeout a))

(define-fun us_split_fields_Detect_SFD_Timeout__projection ((a us_split_fields6)) Bool 
  (rec__decadriver__driver_type__detect_sfd_timeout a))

(define-fun us_split_fields_Detect_PHR_Error__projection ((a us_split_fields6)) Bool 
  (rec__decadriver__driver_type__detect_phr_error a))

(define-fun us_split_fields_Detect_RS_Error__projection ((a us_split_fields6)) Bool 
  (rec__decadriver__driver_type__detect_rs_error a))

(define-fun us_split_fields_Detect_FCS_Error__projection ((a us_split_fields6)) Bool 
  (rec__decadriver__driver_type__detect_fcs_error a))

(declare-datatypes ()
((us_split_fields__ref3
 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref_140__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep_141__projection ((a us_rep3)) us_split_fields6 (us_split_fields7
                                                                  a))

(declare-fun user_eq13 (us_rep3 us_rep3) Bool)

(declare-fun value__size3 () Int)

(declare-fun object__size3 (us_rep3) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 (us_rep3) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__alignment3 a))))

(declare-fun decadriver__driver_type__part_id__first__bit () Int)

(declare-fun decadriver__driver_type__part_id__last__bit () Int)

(declare-fun decadriver__driver_type__part_id__position () Int)

;; decadriver__driver_type__part_id__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__part_id__first__bit))

;; decadriver__driver_type__part_id__last__bit_axiom
  (assert
  (< decadriver__driver_type__part_id__first__bit decadriver__driver_type__part_id__last__bit))

;; decadriver__driver_type__part_id__position_axiom
  (assert (<= 0 decadriver__driver_type__part_id__position))

(declare-fun decadriver__driver_type__lot_id__first__bit () Int)

(declare-fun decadriver__driver_type__lot_id__last__bit () Int)

(declare-fun decadriver__driver_type__lot_id__position () Int)

;; decadriver__driver_type__lot_id__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__lot_id__first__bit))

;; decadriver__driver_type__lot_id__last__bit_axiom
  (assert
  (< decadriver__driver_type__lot_id__first__bit decadriver__driver_type__lot_id__last__bit))

;; decadriver__driver_type__lot_id__position_axiom
  (assert (<= 0 decadriver__driver_type__lot_id__position))

(declare-fun decadriver__driver_type__antenna_delay_prf_64__first__bit () Int)

(declare-fun decadriver__driver_type__antenna_delay_prf_64__last__bit () Int)

(declare-fun decadriver__driver_type__antenna_delay_prf_64__position () Int)

;; decadriver__driver_type__antenna_delay_prf_64__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__first__bit))

;; decadriver__driver_type__antenna_delay_prf_64__last__bit_axiom
  (assert
  (< decadriver__driver_type__antenna_delay_prf_64__first__bit decadriver__driver_type__antenna_delay_prf_64__last__bit))

;; decadriver__driver_type__antenna_delay_prf_64__position_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__position))

(declare-fun decadriver__driver_type__antenna_delay_prf_16__first__bit () Int)

(declare-fun decadriver__driver_type__antenna_delay_prf_16__last__bit () Int)

(declare-fun decadriver__driver_type__antenna_delay_prf_16__position () Int)

;; decadriver__driver_type__antenna_delay_prf_16__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__first__bit))

;; decadriver__driver_type__antenna_delay_prf_16__last__bit_axiom
  (assert
  (< decadriver__driver_type__antenna_delay_prf_16__first__bit decadriver__driver_type__antenna_delay_prf_16__last__bit))

;; decadriver__driver_type__antenna_delay_prf_16__position_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__position))

(declare-fun decadriver__driver_type__xtal_trim__first__bit () Int)

(declare-fun decadriver__driver_type__xtal_trim__last__bit () Int)

(declare-fun decadriver__driver_type__xtal_trim__position () Int)

;; decadriver__driver_type__xtal_trim__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__xtal_trim__first__bit))

;; decadriver__driver_type__xtal_trim__last__bit_axiom
  (assert
  (< decadriver__driver_type__xtal_trim__first__bit decadriver__driver_type__xtal_trim__last__bit))

;; decadriver__driver_type__xtal_trim__position_axiom
  (assert (<= 0 decadriver__driver_type__xtal_trim__position))

(declare-fun decadriver__driver_type__otp_tx_power_levels__first__bit () Int)

(declare-fun decadriver__driver_type__otp_tx_power_levels__last__bit () Int)

(declare-fun decadriver__driver_type__otp_tx_power_levels__position () Int)

;; decadriver__driver_type__otp_tx_power_levels__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__otp_tx_power_levels__first__bit))

;; decadriver__driver_type__otp_tx_power_levels__last__bit_axiom
  (assert
  (< decadriver__driver_type__otp_tx_power_levels__first__bit decadriver__driver_type__otp_tx_power_levels__last__bit))

;; decadriver__driver_type__otp_tx_power_levels__position_axiom
  (assert (<= 0 decadriver__driver_type__otp_tx_power_levels__position))

(declare-fun decadriver__driver_type__long_frames__first__bit () Int)

(declare-fun decadriver__driver_type__long_frames__last__bit () Int)

(declare-fun decadriver__driver_type__long_frames__position () Int)

;; decadriver__driver_type__long_frames__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__long_frames__first__bit))

;; decadriver__driver_type__long_frames__last__bit_axiom
  (assert
  (< decadriver__driver_type__long_frames__first__bit decadriver__driver_type__long_frames__last__bit))

;; decadriver__driver_type__long_frames__position_axiom
  (assert (<= 0 decadriver__driver_type__long_frames__position))

(declare-fun decadriver__driver_type__sys_cfg_reg__first__bit () Int)

(declare-fun decadriver__driver_type__sys_cfg_reg__last__bit () Int)

(declare-fun decadriver__driver_type__sys_cfg_reg__position () Int)

;; decadriver__driver_type__sys_cfg_reg__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__sys_cfg_reg__first__bit))

;; decadriver__driver_type__sys_cfg_reg__last__bit_axiom
  (assert
  (< decadriver__driver_type__sys_cfg_reg__first__bit decadriver__driver_type__sys_cfg_reg__last__bit))

;; decadriver__driver_type__sys_cfg_reg__position_axiom
  (assert (<= 0 decadriver__driver_type__sys_cfg_reg__position))

(declare-fun decadriver__driver_type__use_otp_xtal_trim__first__bit () Int)

(declare-fun decadriver__driver_type__use_otp_xtal_trim__last__bit () Int)

(declare-fun decadriver__driver_type__use_otp_xtal_trim__position () Int)

;; decadriver__driver_type__use_otp_xtal_trim__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__first__bit))

;; decadriver__driver_type__use_otp_xtal_trim__last__bit_axiom
  (assert
  (< decadriver__driver_type__use_otp_xtal_trim__first__bit decadriver__driver_type__use_otp_xtal_trim__last__bit))

;; decadriver__driver_type__use_otp_xtal_trim__position_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__position))

(declare-fun decadriver__driver_type__use_otp_antenna_delay__first__bit () Int)

(declare-fun decadriver__driver_type__use_otp_antenna_delay__last__bit () Int)

(declare-fun decadriver__driver_type__use_otp_antenna_delay__position () Int)

;; decadriver__driver_type__use_otp_antenna_delay__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__first__bit))

;; decadriver__driver_type__use_otp_antenna_delay__last__bit_axiom
  (assert
  (< decadriver__driver_type__use_otp_antenna_delay__first__bit decadriver__driver_type__use_otp_antenna_delay__last__bit))

;; decadriver__driver_type__use_otp_antenna_delay__position_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__position))

(declare-fun decadriver__driver_type__detect_frame_timeout__first__bit () Int)

(declare-fun decadriver__driver_type__detect_frame_timeout__last__bit () Int)

(declare-fun decadriver__driver_type__detect_frame_timeout__position () Int)

;; decadriver__driver_type__detect_frame_timeout__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_frame_timeout__first__bit))

;; decadriver__driver_type__detect_frame_timeout__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_frame_timeout__first__bit decadriver__driver_type__detect_frame_timeout__last__bit))

;; decadriver__driver_type__detect_frame_timeout__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_frame_timeout__position))

(declare-fun decadriver__driver_type__detect_sfd_timeout__first__bit () Int)

(declare-fun decadriver__driver_type__detect_sfd_timeout__last__bit () Int)

(declare-fun decadriver__driver_type__detect_sfd_timeout__position () Int)

;; decadriver__driver_type__detect_sfd_timeout__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_sfd_timeout__first__bit))

;; decadriver__driver_type__detect_sfd_timeout__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_sfd_timeout__first__bit decadriver__driver_type__detect_sfd_timeout__last__bit))

;; decadriver__driver_type__detect_sfd_timeout__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_sfd_timeout__position))

(declare-fun decadriver__driver_type__detect_phr_error__first__bit () Int)

(declare-fun decadriver__driver_type__detect_phr_error__last__bit () Int)

(declare-fun decadriver__driver_type__detect_phr_error__position () Int)

;; decadriver__driver_type__detect_phr_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_phr_error__first__bit))

;; decadriver__driver_type__detect_phr_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_phr_error__first__bit decadriver__driver_type__detect_phr_error__last__bit))

;; decadriver__driver_type__detect_phr_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_phr_error__position))

(declare-fun decadriver__driver_type__detect_rs_error__first__bit () Int)

(declare-fun decadriver__driver_type__detect_rs_error__last__bit () Int)

(declare-fun decadriver__driver_type__detect_rs_error__position () Int)

;; decadriver__driver_type__detect_rs_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_rs_error__first__bit))

;; decadriver__driver_type__detect_rs_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_rs_error__first__bit decadriver__driver_type__detect_rs_error__last__bit))

;; decadriver__driver_type__detect_rs_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_rs_error__position))

(declare-fun decadriver__driver_type__detect_fcs_error__first__bit () Int)

(declare-fun decadriver__driver_type__detect_fcs_error__last__bit () Int)

(declare-fun decadriver__driver_type__detect_fcs_error__position () Int)

;; decadriver__driver_type__detect_fcs_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_fcs_error__first__bit))

;; decadriver__driver_type__detect_fcs_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_fcs_error__first__bit decadriver__driver_type__detect_fcs_error__last__bit))

;; decadriver__driver_type__detect_fcs_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_fcs_error__position))

(declare-datatypes ()
((driver_type__ref (mk_driver_type__ref (driver_type__content us_rep3)))))
(define-fun driver_type__ref___projection ((a driver_type__ref)) us_rep3 
  (driver_type__content a))

(declare-fun load_antenna_delay () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun load_xtal_trim () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun load_tx_power_levels () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun load_ucode_from_rom () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-sort t21b 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 11)))

(define-fun bool_eq14 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq14 (t21b t21b) Bool)

(declare-fun dummy13 () t21b)

(declare-datatypes () ((t21b__ref (mk_t21b__ref (t21b__content t21b)))))
(define-fun t21b__ref___projection ((a t21b__ref)) t21b (t21b__content a))

(declare-fun temp___4624 ((_ BitVec 32)) (Array Int bits_32))

;; def_axiom
  (assert
  (forall ((temp___4626 (_ BitVec 32)))
  (forall ((temp___4627 Int))
  (= (select (temp___4624 temp___4626) temp___4627) (of_rep3 temp___4626)))))

(define-fun dynamic_invariant1 ((temp___expr_281 (_ BitVec 8))
  (temp___is_init_278 Bool) (temp___skip_constant_279 Bool)
  (temp___do_toplevel_280 Bool)) Bool (=>
                                      (or (= temp___is_init_278 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 1)))
                                      (in_range1 temp___expr_281)))

(define-fun dynamic_invariant2 ((temp___expr_287 (_ BitVec 8))
  (temp___is_init_284 Bool) (temp___skip_constant_285 Bool)
  (temp___do_toplevel_286 Bool)) Bool (=>
                                      (or (= temp___is_init_284 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 3)))
                                      (in_range4 temp___expr_287)))

(define-fun dynamic_invariant3 ((temp___expr_293 (_ BitVec 8))
  (temp___is_init_290 Bool) (temp___skip_constant_291 Bool)
  (temp___do_toplevel_292 Bool)) Bool (=>
                                      (or (= temp___is_init_290 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 7)))
                                      (in_range5 temp___expr_293)))

(define-fun dynamic_invariant4 ((temp___expr_305 (_ BitVec 8))
  (temp___is_init_302 Bool) (temp___skip_constant_303 Bool)
  (temp___do_toplevel_304 Bool)) Bool (=>
                                      (or (= temp___is_init_302 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 31)))
                                      (in_range2 temp___expr_305)))

(define-fun dynamic_invariant5 ((temp___expr_311 (_ BitVec 8))
  (temp___is_init_308 Bool) (temp___skip_constant_309 Bool)
  (temp___do_toplevel_310 Bool)) Bool (=>
                                      (or (= temp___is_init_308 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 63)))
                                      (in_range6 temp___expr_311)))

(define-fun dynamic_invariant6 ((temp___expr_323 (_ BitVec 8))
  (temp___is_init_320 Bool) (temp___skip_constant_321 Bool)
  (temp___do_toplevel_322 Bool)) Bool true)

(define-fun dynamic_invariant7 ((temp___expr_341 (_ BitVec 16))
  (temp___is_init_338 Bool) (temp___skip_constant_339 Bool)
  (temp___do_toplevel_340 Bool)) Bool (=>
                                      (or (= temp___is_init_338 true)
                                      (bvule ((_ int2bv 16) 0) ((_ int2bv 16) 2047)))
                                      (in_range3 temp___expr_341)))

(define-fun dynamic_invariant8 ((temp___expr_371 (_ BitVec 16))
  (temp___is_init_368 Bool) (temp___skip_constant_369 Bool)
  (temp___do_toplevel_370 Bool)) Bool true)

(declare-fun self__ () driver_type__ref)

(declare-fun o () bits_32)

(declare-fun o1 () us_split_fields6)

(declare-fun o2 () us_rep3)

(declare-fun o3 () bits_32)

(declare-fun o4 () us_split_fields6)

(declare-fun o5 () us_rep3)

(declare-fun o6 () bits_16)

(declare-fun o7 () us_split_fields6)

(declare-fun o8 () us_rep3)

(declare-fun dw1000__driver__read_otp__word () (_ BitVec 32))

(declare-fun result () driver_type__ref)

(declare-fun self__1 () us_rep3)

(declare-fun dw1000__driver__read_otp__word1 () (_ BitVec 32))

(declare-fun result1 () driver_type__ref)

(declare-fun self__2 () us_rep3)

(declare-fun word () (_ BitVec 32))

(declare-fun result2 () driver_type__ref)

(declare-fun self__3 () us_rep3)

(declare-fun result3 () (_ BitVec 32))

(declare-fun word1 () (_ BitVec 32))

;; H
  (assert (= (to_rep3 o) dw1000__driver__read_otp__word))

;; H
  (assert
  (= o1 (mk___split_fields3 o
        (rec__decadriver__driver_type__lot_id
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__antenna_delay_prf_64
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__antenna_delay_prf_16
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__xtal_trim
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__otp_tx_power_levels
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__long_frames
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__sys_cfg_reg
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__use_otp_xtal_trim
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__use_otp_antenna_delay
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__detect_frame_timeout
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__detect_sfd_timeout
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__detect_phr_error
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__detect_rs_error
        (us_split_fields7 (driver_type__content self__)))
        (rec__decadriver__driver_type__detect_fcs_error
        (us_split_fields7 (driver_type__content self__))))))

;; H
  (assert (= o2 (mk___rep3 o1)))

;; H
  (assert (= result self__))

;; H
  (assert (= (let ((subject self__)) self__1) o2))

;; H
  (assert (= (to_rep3 o3) dw1000__driver__read_otp__word1))

;; H
  (assert
  (= o4 (mk___split_fields3
        (rec__decadriver__driver_type__part_id
        (us_split_fields7 (let ((subject self__)) self__1))) o3
        (rec__decadriver__driver_type__antenna_delay_prf_64
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__antenna_delay_prf_16
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__xtal_trim
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__otp_tx_power_levels
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__long_frames
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__sys_cfg_reg
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__use_otp_xtal_trim
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__use_otp_antenna_delay
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__detect_frame_timeout
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__detect_sfd_timeout
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__detect_phr_error
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__detect_rs_error
        (us_split_fields7 (let ((subject self__)) self__1)))
        (rec__decadriver__driver_type__detect_fcs_error
        (us_split_fields7 (let ((subject self__)) self__1))))))

;; H
  (assert (= o5 (mk___rep3 o4)))

;; H
  (assert (= result1 (let ((subject self__)) (mk_driver_type__ref self__1))))

;; H
  (assert (= (let ((subject self__)) self__2) o5))

;; H
  (assert (= load_antenna_delay true))

;; H
  (assert
  (= (to_rep2 o6) ((_ extract 15 0) (bvand word ((_ int2bv 32) 65535)))))

;; H
  (assert
  (= o7 (mk___split_fields3
        (rec__decadriver__driver_type__part_id
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__lot_id
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__antenna_delay_prf_64
        (us_split_fields7 (let ((subject self__)) self__2))) o6
        (rec__decadriver__driver_type__xtal_trim
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__otp_tx_power_levels
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__long_frames
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__sys_cfg_reg
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__use_otp_xtal_trim
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__use_otp_antenna_delay
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__detect_frame_timeout
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__detect_sfd_timeout
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__detect_phr_error
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__detect_rs_error
        (us_split_fields7 (let ((subject self__)) self__2)))
        (rec__decadriver__driver_type__detect_fcs_error
        (us_split_fields7 (let ((subject self__)) self__2))))))

;; H
  (assert (= o8 (mk___rep3 o7)))

;; H
  (assert (= result2 (let ((subject self__)) (mk_driver_type__ref self__2))))

;; H
  (assert (= (let ((subject self__)) self__3) o8))

;; H
  (assert (= word result3))

;; H
  (assert (= word1 (bvlshr word ((_ int2bv 32) 16))))

(assert
;; WP_parameter_def
 ;; File "decadriver.ads", line 242, characters 0-0
  (not
  (bvule ((_ zero_extend 16) ((_ int2bv 16) 0)) (bvand word1 ((_ int2bv 32) 65535)))))
(check-sat)
