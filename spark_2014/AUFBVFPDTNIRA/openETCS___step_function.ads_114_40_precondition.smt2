;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
;;; SMT-LIB2: real arithmetic
(define-fun fp.isFinite32 ((x Float32)) Bool (not (or (fp.isInfinite x) (fp.isNaN x))))
(define-fun fp.isIntegral32 ((x Float32)) Bool (or (fp.isZero x) (and (fp.isNormal x) (= x (fp.roundToIntegral RNE x)))))
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun pow2 (Int) Int)

(define-fun is_plus_infinity ((x Float32)) Bool (and (fp.isInfinite x)
                                                (fp.isPositive x)))

(define-fun is_minus_infinity ((x Float32)) Bool (and (fp.isInfinite x)
                                                 (fp.isNegative x)))

(define-fun is_plus_zero ((x Float32)) Bool (and (fp.isZero x)
                                            (fp.isPositive x)))

(define-fun is_minus_zero ((x Float32)) Bool (and (fp.isZero x)
                                             (fp.isNegative x)))

(declare-fun of_int (RoundingMode Int) Float32)

(declare-fun to_int1 (RoundingMode Float32) Int)

(declare-const max_int Int)

(define-fun in_int_range ((i Int)) Bool (and (<= (- max_int) i)
                                        (<= i max_int)))

(define-fun in_safe_int_range ((i Int)) Bool (and (<= (- 16777216) i)
                                             (<= i 16777216)))

(define-fun same_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive x) (fp.isPositive y))
                    (and (fp.isNegative x) (fp.isNegative y))))

(define-fun diff_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive x) (fp.isNegative y))
                    (and (fp.isNegative x) (fp.isPositive y))))

(define-fun product_sign ((z Float32) (x Float32)
  (y Float32)) Bool (and (=> (same_sign x y) (fp.isPositive z))
                    (=> (diff_sign x y) (fp.isNegative z))))

(define-fun sqr ((x Real)) Real (* x x))

(declare-fun sqrt (Real) Real)

(define-fun same_sign_real ((x Float32)
  (r Real)) Bool (or (and (fp.isPositive x) (< 0.0 r))
                 (and (fp.isNegative x) (< r 0.0))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content Float32)))))
(define-fun to_int2 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int1 ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort float 0)

(declare-fun user_eq (float float) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE1 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Float32)

(declare-const dummy float)

(declare-datatypes () ((float__ref (mk_float__ref (float__content float)))))
(define-fun float__ref___projection ((a float__ref)) float (float__content a))

(declare-fun to_rep (float) Float32)

(declare-fun of_rep (Float32) float)

;; inversion_axiom
  (assert
  (forall ((x float)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x float)) (! (fp.isFinite32 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Float32))
  (! (=> (fp.isFinite32 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                                (of_rep x))) )))

(declare-sort num_delimiters_range 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (num_delimiters_range num_delimiters_range) Bool)

(declare-const dummy1 num_delimiters_range)

(declare-datatypes ()
((num_delimiters_range__ref
 (mk_num_delimiters_range__ref
 (num_delimiters_range__content num_delimiters_range)))))
(define-fun num_delimiters_range__ref___projection ((a num_delimiters_range__ref)) num_delimiters_range
  (num_delimiters_range__content a))

(define-fun dynamic_invariant ((temp___expr_136 Int)
  (temp___is_init_133 Bool) (temp___skip_constant_134 Bool)
  (temp___do_toplevel_135 Bool)) Bool (=>
                                      (or (= temp___is_init_133 true)
                                      (<= 0 10)) (in_range1 temp___expr_136)))

(declare-fun to_rep1 (num_delimiters_range) Int)

(declare-fun of_rep1 (Int) num_delimiters_range)

;; inversion_axiom
  (assert
  (forall ((x num_delimiters_range))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x num_delimiters_range)) (! (in_range1
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort function_range 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (function_range function_range) Bool)

(declare-const dummy2 function_range)

(declare-datatypes ()
((function_range__ref
 (mk_function_range__ref (function_range__content function_range)))))
(define-fun function_range__ref___projection ((a function_range__ref)) function_range
  (function_range__content a))

(declare-fun to_rep2 (function_range) Int)

(declare-fun of_rep2 (Int) function_range)

;; inversion_axiom
  (assert
  (forall ((x function_range))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x function_range)) (! (in_range2
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__step_function__delimiter_entry__delimiter function_range)(rec__step_function__delimiter_entry__value float)))))
(define-fun us_split_fields_Delimiter__projection ((a us_split_fields)) function_range
  (rec__step_function__delimiter_entry__delimiter a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep2
                           (rec__step_function__delimiter_entry__delimiter
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__step_function__delimiter_entry__delimiter
                                                  (us_split_fields1 b))))
                        (= (to_rep
                           (rec__step_function__delimiter_entry__value
                           (us_split_fields1 a))) (to_rep
                                                  (rec__step_function__delimiter_entry__value
                                                  (us_split_fields1 b)))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const step_function__delimiter_entry__delimiter__first__bit Int)

(declare-const step_function__delimiter_entry__delimiter__last__bit Int)

(declare-const step_function__delimiter_entry__delimiter__position Int)

;; step_function__delimiter_entry__delimiter__first__bit_axiom
  (assert (<= 0 step_function__delimiter_entry__delimiter__first__bit))

;; step_function__delimiter_entry__delimiter__last__bit_axiom
  (assert
  (< step_function__delimiter_entry__delimiter__first__bit step_function__delimiter_entry__delimiter__last__bit))

;; step_function__delimiter_entry__delimiter__position_axiom
  (assert (<= 0 step_function__delimiter_entry__delimiter__position))

(declare-const step_function__delimiter_entry__value__first__bit Int)

(declare-const step_function__delimiter_entry__value__last__bit Int)

(declare-const step_function__delimiter_entry__value__position Int)

;; step_function__delimiter_entry__value__first__bit_axiom
  (assert (<= 0 step_function__delimiter_entry__value__first__bit))

;; step_function__delimiter_entry__value__last__bit_axiom
  (assert
  (< step_function__delimiter_entry__value__first__bit step_function__delimiter_entry__value__last__bit))

;; step_function__delimiter_entry__value__position_axiom
  (assert (<= 0 step_function__delimiter_entry__value__position))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy3 us_rep)

(declare-datatypes ()
((delimiter_entry__ref
 (mk_delimiter_entry__ref (delimiter_entry__content us_rep)))))
(define-fun delimiter_entry__ref___projection ((a delimiter_entry__ref)) us_rep
  (delimiter_entry__content a))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int us_rep) Int Int (Array Int us_rep) Int
  Int) (Array Int us_rep))

;; concat_def
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (us_rep Int) (Array Int us_rep))

;; singleton_def
  (assert
  (forall ((v us_rep))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int)
  (b (Array Int us_rep)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (bool_eq (select a temp___idx_132)
                              (select b (+ (- b__first a__first) temp___idx_132))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (bool_eq (select a temp___idx_132)
     (select b (+ (- b__first a__first) temp___idx_132))) true))))))))

(declare-const dummy4 (Array Int us_rep))

(declare-const value__size1 Int)

(declare-fun object__size1 ((Array Int us_rep)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int us_rep)) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 ((Array Int us_rep)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int us_rep))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment1 a))))

(declare-fun user_eq4 ((Array Int us_rep) (Array Int us_rep)) Bool)

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__step_function__step_function_t__number_of_delimiters num_delimiters_range)(rec__step_function__step_function_t__step (Array Int us_rep))))))
(define-fun us_split_fields_Number_Of_Delimiters__projection ((a us_split_fields2)) num_delimiters_range
  (rec__step_function__step_function_t__number_of_delimiters a))

(define-fun us_split_fields_Step__projection ((a us_split_fields2)) (Array Int us_rep)
  (rec__step_function__step_function_t__step a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                  a))

(define-fun bool_eq2 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep1
                            (rec__step_function__step_function_t__number_of_delimiters
                            (us_split_fields3 a))) (to_rep1
                                                   (rec__step_function__step_function_t__number_of_delimiters
                                                   (us_split_fields3 b))))
                         (= (bool_eq1
                            (rec__step_function__step_function_t__step
                            (us_split_fields3 a)) 0 10
                            (rec__step_function__step_function_t__step
                            (us_split_fields3 b)) 0 10) true))
                    true false))

(declare-const value__size2 Int)

(declare-fun object__size2 (us_rep1) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))

(declare-const step_function__step_function_t__number_of_delimiters__first__bit Int)

(declare-const step_function__step_function_t__number_of_delimiters__last__bit Int)

(declare-const step_function__step_function_t__number_of_delimiters__position Int)

;; step_function__step_function_t__number_of_delimiters__first__bit_axiom
  (assert
  (<= 0 step_function__step_function_t__number_of_delimiters__first__bit))

;; step_function__step_function_t__number_of_delimiters__last__bit_axiom
  (assert
  (< step_function__step_function_t__number_of_delimiters__first__bit
  step_function__step_function_t__number_of_delimiters__last__bit))

;; step_function__step_function_t__number_of_delimiters__position_axiom
  (assert
  (<= 0 step_function__step_function_t__number_of_delimiters__position))

(declare-const step_function__step_function_t__step__first__bit Int)

(declare-const step_function__step_function_t__step__last__bit Int)

(declare-const step_function__step_function_t__step__position Int)

;; step_function__step_function_t__step__first__bit_axiom
  (assert (<= 0 step_function__step_function_t__step__first__bit))

;; step_function__step_function_t__step__last__bit_axiom
  (assert
  (< step_function__step_function_t__step__first__bit step_function__step_function_t__step__last__bit))

;; step_function__step_function_t__step__position_axiom
  (assert (<= 0 step_function__step_function_t__step__position))

(declare-fun user_eq5 (us_rep1 us_rep1) Bool)

(declare-const dummy5 us_rep1)

(declare-datatypes ()
((step_function_t__ref
 (mk_step_function_t__ref (step_function_t__content us_rep1)))))
(define-fun step_function_t__ref___projection ((a step_function_t__ref)) us_rep1
  (step_function_t__content a))

(declare-fun min (Float32 Float32) Float32)

(declare-fun min__function_guard (Float32 Float32 Float32) Bool)

(define-fun dynamic_invariant1 ((temp___expr_51 Float32)
  (temp___is_init_48 Bool) (temp___skip_constant_49 Bool)
  (temp___do_toplevel_50 Bool)) Bool (=>
                                     (or (= temp___is_init_48 true)
                                     (fp.leq (fp.neg (fp #b0 #b11111110 #b11111111111111111111111)) (fp #b0 #b11111110 #b11111111111111111111111)))
                                     (fp.isFinite32 temp___expr_51)))

;; min__post_axiom
  (assert
  (forall ((x1 Float32) (x2 Float32))
  (! (=>
     (and (dynamic_invariant1 x1 true true true) (dynamic_invariant1 x2 true
     true true))
     (let ((result (min x1 x2)))
     (and (ite (fp.leq x1 x2) (fp.eq result x1) (fp.eq result x2))
     (dynamic_invariant1 result true false true)))) :pattern ((min x1 x2)) )))

(declare-fun is_valid (us_rep1) Bool)

(declare-fun is_valid__function_guard (Bool us_rep1) Bool)

;; is_valid__post_axiom
  (assert true)

;; is_valid__def_axiom
  (assert
  (forall ((sfun us_rep1))
  (! (= (= (is_valid sfun) true)
     (and
     (= (to_rep2
        (rec__step_function__delimiter_entry__delimiter
        (us_split_fields1
        (let ((temp___182 (rec__step_function__step_function_t__step
                          (us_split_fields3 sfun))))
        (select temp___182 0))))) 0)
     (forall ((i Int))
     (=>
     (and (<= 0 i)
     (<= i (- (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun))) 1)))
     (< (to_rep2
        (rec__step_function__delimiter_entry__delimiter
        (us_split_fields1
        (let ((temp___184 (rec__step_function__step_function_t__step
                          (us_split_fields3 sfun))))
        (select temp___184 i))))) (to_rep2
                                  (rec__step_function__delimiter_entry__delimiter
                                  (us_split_fields1
                                  (let ((temp___183 (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun))))
                                  (select temp___183 (+ i 1))))))))))) :pattern (
  (is_valid sfun)) )))

(declare-fun get_value (us_rep1 Int) Float32)

(declare-fun get_value__function_guard (Float32 us_rep1 Int) Bool)

(define-fun dynamic_invariant2 ((temp___expr_142 Int)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (=>
                                      (or (= temp___is_init_139 true)
                                      (<= 0 2147483647)) (in_range2
                                      temp___expr_142)))

;; get_value__post_axiom
  (assert
  (forall ((sfun us_rep1))
  (forall ((x Int))
  (! (=> (and (dynamic_invariant2 x true true true) (= (is_valid sfun) true))
     (let ((result (get_value sfun x)))
     (and
     (or
     (exists ((i Int))
     (and
     (and (<= 0 i)
     (<= i (- (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun))) 1)))
     (and
     (and
     (<= (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (let ((temp___199 (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun))))
         (select temp___199 i))))) x)
     (< x (to_rep2
          (rec__step_function__delimiter_entry__delimiter
          (us_split_fields1
          (let ((temp___200 (rec__step_function__step_function_t__step
                            (us_split_fields3 sfun))))
          (select temp___200 (+ i 1))))))))
     (fp.eq result (to_rep
                   (rec__step_function__delimiter_entry__value
                   (us_split_fields1
                   (let ((temp___201 (rec__step_function__step_function_t__step
                                     (us_split_fields3 sfun))))
                   (select temp___201 i)))))))))
     (and
     (<= (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (let ((temp___202 (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun))))
         (select temp___202 (to_rep1
                            (rec__step_function__step_function_t__number_of_delimiters
                            (us_split_fields3 sfun)))))))) x)
     (fp.eq result (to_rep
                   (rec__step_function__delimiter_entry__value
                   (us_split_fields1
                   (let ((temp___203 (rec__step_function__step_function_t__step
                                     (us_split_fields3 sfun))))
                   (select temp___203 (to_rep1
                                      (rec__step_function__step_function_t__number_of_delimiters
                                      (us_split_fields3 sfun)))))))))))
     (dynamic_invariant1 result true false true)))) :pattern ((get_value sfun
                                                              x)) ))))

(declare-const sfun1 us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const sfun2 us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const merge__split_fields num_delimiters_range)

(declare-const merge__split_fields1 (Array Int us_rep))

(declare-const i1 Int)

(declare-const i2 Int)

(declare-const im Int)

(declare-const scan_sfun1 Bool)

(declare-const scan_sfun2 Bool)

(declare-const temp___389 Bool)

(declare-const temp___387 num_delimiters_range)

(declare-const temp___3871 (Array Int us_rep))

(declare-const temp___386 Bool)

(declare-const temp___385 Int)

(declare-const temp___384 Int)

(declare-const temp___383 Int)

(declare-const o float)

(declare-const o1 function_range)

(declare-const o2 function_range)

(declare-const o3 float)

(declare-const o4 function_range)

(declare-const o5 float)

(declare-const o6 (Array Int us_rep))

(declare-const o7 num_delimiters_range)

(declare-const o8 (Array Int us_rep))

(declare-const temp___313 num_delimiters_range)

(declare-const temp___3131 (Array Int us_rep))

(declare-const i Int)

(declare-const o9 Int)

(declare-const o10 function_range)

(declare-const o11 float)

(declare-const o12 function_range)

(declare-const o13 float)

(declare-const o14 function_range)

(declare-const o15 Int)

(declare-const i3 Int)

(declare-const j Int)

(declare-const o16 Int)

(declare-const o17 function_range)

(declare-const o18 float)

(declare-const o19 function_range)

(declare-const o20 float)

(declare-const o21 function_range)

(declare-const o22 Int)

(declare-const i4 Int)

(declare-const j1 Int)

(declare-const o23 Int)

(declare-const o24 us_rep)

(declare-const o25 us_split_fields)

(declare-const o26 function_range)

(declare-const o27 Int)

(declare-const i5 Int)

(declare-const j2 Int)

(declare-const o28 Int)

(declare-const o29 us_rep)

(declare-const o30 us_split_fields)

(declare-const o31 function_range)

(declare-const o32 Int)

(declare-const i6 Int)

(declare-const j3 Int)

(declare-const o33 Int)

(declare-const o34 us_rep)

(declare-const o35 us_split_fields)

(declare-const o36 function_range)

(declare-const o37 Int)

(declare-const i7 Int)

(declare-const o38 Int)

(declare-const o39 us_rep)

(declare-const o40 us_split_fields)

(declare-const o41 function_range)

(declare-const o42 Int)

(declare-const o43 Float32)

(declare-const o44 Int)

(declare-const o45 us_rep)

(declare-const o46 us_split_fields)

(declare-const o47 function_range)

(declare-const o48 Int)

(declare-const o49 Float32)

(declare-const o50 Float32)

(declare-const o51 function_range)

(declare-const o52 us_split_fields)

(declare-const o53 us_rep)

(declare-const o54 (Array Int us_rep))

(declare-const o55 us_split_fields2)

(declare-const temp___375 us_rep1)

(declare-const o56 Float32)

(declare-const o57 Float32)

(declare-const o58 Float32)

(declare-const o59 float)

(declare-const o60 us_split_fields)

(declare-const o61 us_rep)

(declare-const o62 (Array Int us_rep))

(declare-const o63 us_split_fields2)

(declare-const temp___382 us_rep1)

(declare-const o64 function_range)

(declare-const o65 us_split_fields)

(declare-const o66 us_rep)

(declare-const o67 (Array Int us_rep))

(declare-const o68 us_split_fields2)

(declare-const temp___360 us_rep1)

(declare-const o69 Float32)

(declare-const o70 Float32)

(declare-const o71 Float32)

(declare-const o72 float)

(declare-const o73 us_split_fields)

(declare-const o74 us_rep)

(declare-const o75 (Array Int us_rep))

(declare-const o76 us_split_fields2)

(declare-const temp___367 us_rep1)

(declare-const o77 function_range)

(declare-const o78 us_split_fields)

(declare-const o79 us_rep)

(declare-const o80 (Array Int us_rep))

(declare-const o81 us_split_fields2)

(declare-const temp___345 us_rep1)

(declare-const o82 Float32)

(declare-const o83 Float32)

(declare-const o84 Float32)

(declare-const o85 float)

(declare-const o86 us_split_fields)

(declare-const o87 us_rep)

(declare-const o88 (Array Int us_rep))

(declare-const o89 us_split_fields2)

(declare-const temp___352 us_rep1)

(declare-const o90 function_range)

(declare-const o91 us_split_fields)

(declare-const o92 us_rep)

(declare-const o93 (Array Int us_rep))

(declare-const o94 us_split_fields2)

(declare-const temp___332 us_rep1)

(declare-const o95 Float32)

(declare-const o96 Float32)

(declare-const o97 Float32)

(declare-const o98 float)

(declare-const o99 us_split_fields)

(declare-const o100 us_rep)

(declare-const o101 (Array Int us_rep))

(declare-const o102 us_split_fields2)

(declare-const temp___339 us_rep1)

(declare-const o103 function_range)

(declare-const o104 us_split_fields)

(declare-const o105 us_rep)

(declare-const o106 (Array Int us_rep))

(declare-const o107 us_split_fields2)

(declare-const temp___319 us_rep1)

(declare-const o108 Float32)

(declare-const o109 Float32)

(declare-const o110 Float32)

(declare-const o111 float)

(declare-const o112 us_split_fields)

(declare-const o113 us_rep)

(declare-const o114 (Array Int us_rep))

(declare-const o115 us_split_fields2)

(declare-const temp___326 us_rep1)

(declare-const o116 Int)

(declare-const o117 float)

(declare-const o118 function_range)

(declare-const o119 us_split_fields)

(declare-const o120 us_rep)

(declare-const o121 (Array Int us_rep))

(declare-const o122 us_split_fields2)

(declare-const temp___3132 us_rep1)

(declare-const o123 num_delimiters_range)

(declare-const o124 us_split_fields2)

(declare-const temp___451 us_rep1)

(declare-const i8 Int)

(declare-const j4 Int)

(declare-const o125 Int)

(declare-const o126 us_rep)

(declare-const o127 us_split_fields)

(declare-const o128 function_range)

(declare-const o129 Int)

(declare-const i9 Int)

(declare-const j5 Int)

(declare-const o130 Int)

(declare-const o131 us_rep)

(declare-const o132 us_split_fields)

(declare-const o133 function_range)

(declare-const o134 Int)

(declare-const o135 Bool)

(declare-const i10 Int)

(declare-const o136 Int)

(declare-const o137 us_rep)

(declare-const o138 us_split_fields)

(declare-const o139 function_range)

(declare-const o140 Int)

(declare-const o141 Float32)

(declare-const o142 Int)

(declare-const o143 us_rep)

(declare-const o144 us_split_fields)

(declare-const o145 function_range)

(declare-const o146 Int)

(declare-const o147 Float32)

(declare-const o148 Float32)

(declare-const o149 Bool)

(declare-const result int__ref)

(declare-const i11 Int)

(declare-const result1 int__ref)

(declare-const i21 Int)

(declare-const result2 int__ref)

(declare-const im1 Int)

(declare-const result3 bool__ref)

(declare-const scan_sfun11 Bool)

(declare-const result4 bool__ref)

(declare-const scan_sfun21 Bool)

(declare-const result5 us_split_fields__ref1)

(declare-const merge__split_fields2 us_split_fields2)

(declare-const merge__split_fields3 us_split_fields2)

(declare-const i12 Int)

(declare-const i22 Int)

(declare-const im2 Int)

(declare-const scan_sfun12 Bool)

(declare-const scan_sfun22 Bool)

(declare-const result6 us_split_fields__ref1)

(declare-const merge__split_fields4 us_split_fields2)

(declare-const result7 us_split_fields__ref1)

(declare-const merge__split_fields5 us_split_fields2)

(declare-const i13 Int)

(declare-const scan_sfun13 Bool)

(declare-const result8 us_split_fields__ref1)

(declare-const merge__split_fields6 us_split_fields2)

(declare-const result9 us_split_fields__ref1)

(declare-const merge__split_fields7 us_split_fields2)

(declare-const i23 Int)

(declare-const scan_sfun23 Bool)

(declare-const result10 us_split_fields__ref1)

(declare-const merge__split_fields8 us_split_fields2)

(declare-const result11 us_split_fields__ref1)

(declare-const merge__split_fields9 us_split_fields2)

(declare-const i14 Int)

(declare-const scan_sfun14 Bool)

(declare-const i24 Int)

(declare-const scan_sfun24 Bool)

(declare-const result12 us_split_fields__ref1)

(declare-const merge__split_fields10 us_split_fields2)

(declare-const result13 us_split_fields__ref1)

(declare-const merge__split_fields11 us_split_fields2)

(declare-const i15 Int)

(declare-const scan_sfun15 Bool)

(declare-const result14 us_split_fields__ref1)

(declare-const merge__split_fields12 us_split_fields2)

(declare-const result15 us_split_fields__ref1)

(declare-const merge__split_fields13 us_split_fields2)

(declare-const i25 Int)

(declare-const scan_sfun25 Bool)

(declare-const result16 int__ref)

(declare-const im3 Int)

(declare-const result17 us_split_fields__ref1)

(declare-const merge__split_fields14 us_split_fields2)

(declare-const im4 int__ref)

(declare-const im5 Int)

(declare-const merge__split_fields15 us_split_fields__ref1)

(declare-const i16 int__ref)

(declare-const i26 int__ref)

(declare-const im6 int__ref)

(declare-const scan_sfun16 bool__ref)

(declare-const scan_sfun26 bool__ref)

(declare-const merge__split_fields16 us_split_fields2)

(declare-const i17 Int)

(declare-const i27 Int)

(declare-const im7 Int)

(declare-const scan_sfun17 Bool)

(declare-const scan_sfun27 Bool)

(declare-const merge__split_fields17 us_split_fields__ref1)

(declare-const i18 int__ref)

(declare-const i28 int__ref)

(declare-const im8 int__ref)

(declare-const scan_sfun18 bool__ref)

(declare-const scan_sfun28 bool__ref)

(declare-const merge__split_fields18 us_split_fields2)

(declare-const i19 Int)

(declare-const i29 Int)

(declare-const im9 Int)

(declare-const scan_sfun19 Bool)

(declare-const scan_sfun29 Bool)

(declare-const result18 us_split_fields__ref1)

(declare-const merge__split_fields19 us_split_fields2)

(declare-const merge__split_fields20 us_split_fields__ref1)

(declare-const i110 int__ref)

(declare-const i210 int__ref)

(declare-const im10 int__ref)

(declare-const scan_sfun110 bool__ref)

(declare-const scan_sfun210 bool__ref)

(declare-const merge__split_fields21 us_split_fields2)

(declare-const i111 Int)

(declare-const i211 Int)

(declare-const im11 Int)

(declare-const scan_sfun111 Bool)

(declare-const scan_sfun211 Bool)

;; H
  (assert
  (and (and (= (is_valid sfun1) true) (= (is_valid sfun2) true))
  (<= (+ (to_rep1
         (rec__step_function__step_function_t__number_of_delimiters
         (us_split_fields3 sfun1))) (to_rep1
                                    (rec__step_function__step_function_t__number_of_delimiters
                                    (us_split_fields3 sfun2)))) 10)))

;; H
  (assert (= result (mk_int__ref i1)))

;; H
  (assert (= i11 0))

;; H
  (assert (in_range1 i11))

;; H
  (assert (= result1 (mk_int__ref i2)))

;; H
  (assert (= i21 0))

;; H
  (assert (in_range1 i21))

;; H
  (assert (= result2 (mk_int__ref im)))

;; H
  (assert (= im1 0))

;; H
  (assert (in_range1 im1))

;; H
  (assert (= result3 (mk_bool__ref scan_sfun1)))

;; H
  (assert (= scan_sfun11 (of_int1 1)))

;; H
  (assert (= result4 (mk_bool__ref scan_sfun2)))

;; H
  (assert (= scan_sfun21 (of_int1 1)))

;; H
  (assert (= temp___389 scan_sfun21))

;; H
  (assert
  (and (= merge__split_fields temp___387)
  (= merge__split_fields1 temp___3871)))

;; H
  (assert (= temp___386 scan_sfun11))

;; H
  (assert (= temp___385 im1))

;; H
  (assert (= temp___384 i21))

;; H
  (assert (= temp___383 i11))

;; H
  (assert (= (to_rep o) (fp #b0 #b00000000 #b00000000000000000000000)))

;; H
  (assert (= (to_rep2 o1) 0))

;; H
  (assert (= o1 o2))

;; H
  (assert (= o o3))

;; H
  (assert (= o4 o2))

;; H
  (assert (= o5 o3))

;; H
  (assert
  (= o6 (store merge__split_fields1 im1 (mk___rep (mk___split_fields o4 o5)))))

;; H
  (assert (= merge__split_fields o7))

;; H
  (assert (= o6 o8))

;; H
  (assert (= temp___313 o7))

;; H
  (assert (= temp___3131 o8))

;; H
  (assert
  (= result5 (mk___split_fields__ref1
             (mk___split_fields1 merge__split_fields merge__split_fields1))))

;; H
  (assert
  (= merge__split_fields2 (mk___split_fields1 temp___313 temp___3131)))

;; H
  (assert (<= 0 i12))

;; H
  (assert (<= 0 i22))

;; H
  (assert (<= 0 im2))

;; H
  (assert
  (<= i12 (to_rep1
          (rec__step_function__step_function_t__number_of_delimiters
          (us_split_fields3 sfun1)))))

;; H
  (assert
  (<= i22 (to_rep1
          (rec__step_function__step_function_t__number_of_delimiters
          (us_split_fields3 sfun2)))))

;; H
  (assert (<= im2 10))

;; H
  (assert (or (= scan_sfun12 true) (= scan_sfun22 true)))

;; H
  (assert
  (or (and (and (= i12 0) (= i22 0)) (= im2 0))
  (and
  (and (or (< 0 i12) (not (= scan_sfun12 true)))
  (or (< 0 i22) (not (= scan_sfun22 true)))) (< 0 im2))))

;; H
  (assert
  (ite (and (and (< 0 im2) (= scan_sfun12 true)) (= scan_sfun22 true))
  (< im2 (+ i12 i22)) (<= im2 (+ i12 i22))))

;; H
  (assert
  (=> (< 0 im2)
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) 0)))) 0)))

;; H
  (assert
  (=> (and (< 0 im2) (= scan_sfun12 true))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) (-
     im2 1))))) (to_rep2
                (rec__step_function__delimiter_entry__delimiter
                (us_split_fields1
                (select (rec__step_function__step_function_t__step
                        (us_split_fields3 sfun1)) i12)))))))

;; H
  (assert
  (=> (and (< 0 im2) (= scan_sfun22 true))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) (-
     im2 1))))) (to_rep2
                (rec__step_function__delimiter_entry__delimiter
                (us_split_fields1
                (select (rec__step_function__step_function_t__step
                        (us_split_fields3 sfun2)) i22)))))))

;; H
  (assert
  (forall ((i20 Int))
  (=> (and (<= 1 i20) (<= i20 (- im2 1)))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) (- i20 1)))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields3) i20))))))))

;; H
  (assert
  (forall ((i30 Int))
  (=> (and (<= 0 i30) (<= i30 (- i12 1)))
  (exists ((j6 Int))
  (and (and (<= 0 j6) (<= j6 (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i30)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields3) j6))))))))))

;; H
  (assert
  (=> (not (= scan_sfun12 true))
  (forall ((i30 Int))
  (=>
  (and (<= 0 i30)
  (<= i30 (to_rep1
          (rec__step_function__step_function_t__number_of_delimiters
          (us_split_fields3 sfun1)))))
  (exists ((j6 Int))
  (and (and (<= 0 j6) (<= j6 (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i30)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields3) j6)))))))))))

;; H
  (assert
  (forall ((i30 Int))
  (=> (and (<= 0 i30) (<= i30 (- i22 1)))
  (exists ((j6 Int))
  (and (and (<= 0 j6) (<= j6 (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i30)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields3) j6))))))))))

;; H
  (assert
  (=> (not (= scan_sfun22 true))
  (forall ((i30 Int))
  (=>
  (and (<= 0 i30)
  (<= i30 (to_rep1
          (rec__step_function__step_function_t__number_of_delimiters
          (us_split_fields3 sfun2)))))
  (exists ((j6 Int))
  (and (and (<= 0 j6) (<= j6 (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i30)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields3) j6)))))))))))

;; H
  (assert
  (forall ((i30 Int))
  (=> (and (<= 0 i30) (<= i30 (- im2 1)))
  (fp.eq (to_rep
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) i30)))) (min
                                               (get_value sfun1
                                               (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields3) i30)))))
                                               (get_value sfun2
                                               (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       merge__split_fields3) i30))))))))))

;; H
  (assert
  (and
  (and (and (=> (<= 0 10) (in_range1 i12)) (=> (<= 0 10) (in_range1 i22)))
  (=> (<= 0 10) (in_range1 im2)))
  (= (rec__step_function__step_function_t__number_of_delimiters
     merge__split_fields3) temp___387)))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= (to_rep2 o51) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun1)) i12))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o52 (mk___split_fields o51
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o53 (mk___rep o52)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o54 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o53)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o55 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o54)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= temp___375 (mk___rep1 o55)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= result6 (mk___split_fields__ref1 merge__split_fields3)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= merge__split_fields4 (us_split_fields3 temp___375)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and
  (= o57 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields4) im2))))))
  (and (fp.isFinite32 o57)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i30)))) (to_rep2
                                                (rec__step_function__delimiter_entry__delimiter
                                                (us_split_fields1
                                                (select (rec__step_function__step_function_t__step
                                                        merge__split_fields4)
                                                im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields4)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (+ i30 1)))))))
  (fp.eq o57 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields4)
  im2)))))
  (fp.eq o57 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2)))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and
  (= o56 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields4) im2))))))
  (and (fp.isFinite32 o56)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i30)))) (to_rep2
                                                (rec__step_function__delimiter_entry__delimiter
                                                (us_split_fields1
                                                (select (rec__step_function__step_function_t__step
                                                        merge__split_fields4)
                                                im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields4)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (+ i30 1)))))))
  (fp.eq o56 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields4)
  im2)))))
  (fp.eq o56 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1)))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and (= o58 (min o56 o57))
  (and (fp.isFinite32 o58)
  (ite (fp.leq o56 o57) (fp.eq o58 o56) (fp.eq o58 o57)))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= (to_rep o59) o58))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o60 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields4) im2)))
         o59)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o61 (mk___rep o60)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o62 (store (rec__step_function__step_function_t__step
                merge__split_fields4) im2 o61)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o63 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields4) o62)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= temp___382 (mk___rep1 o63)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= result7 (mk___split_fields__ref1 merge__split_fields4)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= merge__split_fields5 (us_split_fields3 temp___382)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and
  (ite (< i12 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun1))))
  (and (= i13 (+ i12 1)) (= (= scan_sfun13 true) (= scan_sfun12 true)))
  (and (= i13 i12) (not (= scan_sfun13 true)))) (in_range1 i13)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= scan_sfun23 scan_sfun22))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= i23 i22))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= (to_rep2 o64) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun2)) i22)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o65 (mk___split_fields o64
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o66 (mk___rep o65))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o67 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o66))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o68 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o67))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= temp___360 (mk___rep1 o68))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= result8 (mk___split_fields__ref1 merge__split_fields3))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= merge__split_fields6 (us_split_fields3 temp___360))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and
  (= o70 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields6) im2))))))
  (and (fp.isFinite32 o70)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i30)))) (to_rep2
                                                (rec__step_function__delimiter_entry__delimiter
                                                (us_split_fields1
                                                (select (rec__step_function__step_function_t__step
                                                        merge__split_fields6)
                                                im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields6)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (+ i30 1)))))))
  (fp.eq o70 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields6)
  im2)))))
  (fp.eq o70 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and
  (= o69 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields6) im2))))))
  (and (fp.isFinite32 o69)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i30)))) (to_rep2
                                                (rec__step_function__delimiter_entry__delimiter
                                                (us_split_fields1
                                                (select (rec__step_function__step_function_t__step
                                                        merge__split_fields6)
                                                im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields6)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (+ i30 1)))))))
  (fp.eq o69 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields6)
  im2)))))
  (fp.eq o69 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and (= o71 (min o69 o70))
  (and (fp.isFinite32 o71)
  (ite (fp.leq o69 o70) (fp.eq o71 o69) (fp.eq o71 o70))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= (to_rep o72) o71)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o73 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields6) im2)))
         o72))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o74 (mk___rep o73))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o75 (store (rec__step_function__step_function_t__step
                merge__split_fields6) im2 o74))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o76 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields6) o75))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= temp___367 (mk___rep1 o76))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= result9 (mk___split_fields__ref1 merge__split_fields6))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= merge__split_fields7 (us_split_fields3 temp___367))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and
  (ite (< i22 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun2))))
  (and (= i23 (+ i22 1)) (= (= scan_sfun23 true) (= scan_sfun22 true)))
  (and (= i23 i22) (not (= scan_sfun23 true)))) (in_range1 i23))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= scan_sfun14 scan_sfun12)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= i14 i12)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= (to_rep2 o77) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun1)) i12)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o78 (mk___split_fields o77
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o79 (mk___rep o78))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o80 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o79))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o81 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o80))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= temp___345 (mk___rep1 o81))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= result10 (mk___split_fields__ref1 merge__split_fields3))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= merge__split_fields8 (us_split_fields3 temp___345))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (= o83 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields8) im2))))))
  (and (fp.isFinite32 o83)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i30)))) (to_rep2
                                                (rec__step_function__delimiter_entry__delimiter
                                                (us_split_fields1
                                                (select (rec__step_function__step_function_t__step
                                                        merge__split_fields8)
                                                im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields8)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (+ i30 1)))))))
  (fp.eq o83 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields8)
  im2)))))
  (fp.eq o83 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (= o82 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields8) im2))))))
  (and (fp.isFinite32 o82)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i30)))) (to_rep2
                                                (rec__step_function__delimiter_entry__delimiter
                                                (us_split_fields1
                                                (select (rec__step_function__step_function_t__step
                                                        merge__split_fields8)
                                                im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields8)
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (+ i30 1)))))))
  (fp.eq o82 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields8)
  im2)))))
  (fp.eq o82 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and (= o84 (min o82 o83))
  (and (fp.isFinite32 o84)
  (ite (fp.leq o82 o83) (fp.eq o84 o82) (fp.eq o84 o83))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= (to_rep o85) o84)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o86 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields8) im2)))
         o85))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o87 (mk___rep o86))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o88 (store (rec__step_function__step_function_t__step
                merge__split_fields8) im2 o87))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o89 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields8) o88))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= temp___352 (mk___rep1 o89))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= result11 (mk___split_fields__ref1 merge__split_fields8))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= merge__split_fields9 (us_split_fields3 temp___352))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (ite (< i12 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun1))))
  (and (= i14 (+ i12 1)) (= (= scan_sfun14 true) (= scan_sfun12 true)))
  (and (= i14 i12) (not (= scan_sfun14 true)))) (in_range1 i14))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (ite (< i22 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun2))))
  (and (= i24 (+ i22 1)) (= (= scan_sfun24 true) (= scan_sfun22 true)))
  (and (= i24 i22) (not (= scan_sfun24 true)))) (in_range1 i24))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= scan_sfun23 scan_sfun24)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= i23 i24)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= merge__split_fields7 merge__split_fields9)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (= scan_sfun13 scan_sfun14))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (= i13 i14))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (= merge__split_fields5 merge__split_fields7))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= (to_rep2 o90) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun1)) i12))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o91 (mk___split_fields o90
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= o92 (mk___rep o91)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o93 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o92)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o94 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o93)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= temp___332 (mk___rep1 o94)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= result12 (mk___split_fields__ref1 merge__split_fields3)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= merge__split_fields10 (us_split_fields3 temp___332)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and
  (= o96 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields10) im2))))))
  (and (fp.isFinite32 o96)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i30)))) (to_rep2
                                                (rec__step_function__delimiter_entry__delimiter
                                                (us_split_fields1
                                                (select (rec__step_function__step_function_t__step
                                                        merge__split_fields10)
                                                im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields10) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun2)) (+ i30 1)))))))
  (fp.eq o96 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields10)
  im2)))))
  (fp.eq o96 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and
  (= o95 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields10) im2))))))
  (and (fp.isFinite32 o95)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i30)))) (to_rep2
                                                (rec__step_function__delimiter_entry__delimiter
                                                (us_split_fields1
                                                (select (rec__step_function__step_function_t__step
                                                        merge__split_fields10)
                                                im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields10) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun1)) (+ i30 1)))))))
  (fp.eq o95 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields10)
  im2)))))
  (fp.eq o95 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and (= o97 (min o95 o96))
  (and (fp.isFinite32 o97)
  (ite (fp.leq o95 o96) (fp.eq o97 o95) (fp.eq o97 o96)))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= (to_rep o98) o97))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o99 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields10) im2)))
         o98)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= o100 (mk___rep o99)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o101 (store (rec__step_function__step_function_t__step
                 merge__split_fields10) im2 o100)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o102 (mk___split_fields1
          (rec__step_function__step_function_t__number_of_delimiters
          merge__split_fields10) o101)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= temp___339 (mk___rep1 o102)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= result13 (mk___split_fields__ref1 merge__split_fields10)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= merge__split_fields11 (us_split_fields3 temp___339)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and
  (ite (< i12 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun1))))
  (and (= i15 (+ i12 1)) (= (= scan_sfun15 true) (= scan_sfun12 true)))
  (and (= i15 i12) (not (= scan_sfun15 true)))) (in_range1 i15)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= scan_sfun25 scan_sfun22))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= i25 i22))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= (to_rep2 o103) (to_rep2
                    (rec__step_function__delimiter_entry__delimiter
                    (us_split_fields1
                    (select (rec__step_function__step_function_t__step
                            (us_split_fields3 sfun2)) i22))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o104 (mk___split_fields o103
          (rec__step_function__delimiter_entry__value
          (us_split_fields1
          (select (rec__step_function__step_function_t__step
                  merge__split_fields3) im2))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= o105 (mk___rep o104)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o106 (store (rec__step_function__step_function_t__step
                 merge__split_fields3) im2 o105)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o107 (mk___split_fields1
          (rec__step_function__step_function_t__number_of_delimiters
          merge__split_fields3) o106)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= temp___319 (mk___rep1 o107)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= result14 (mk___split_fields__ref1 merge__split_fields3)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= merge__split_fields12 (us_split_fields3 temp___319)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and
  (= o109 (get_value sfun2
          (to_rep2
          (rec__step_function__delimiter_entry__delimiter
          (us_split_fields1
          (select (rec__step_function__step_function_t__step
                  merge__split_fields12) im2))))))
  (and (fp.isFinite32 o109)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i30)))) (to_rep2
                                                (rec__step_function__delimiter_entry__delimiter
                                                (us_split_fields1
                                                (select (rec__step_function__step_function_t__step
                                                        merge__split_fields12)
                                                im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields12) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun2)) (+ i30 1)))))))
  (fp.eq o109 (to_rep
              (rec__step_function__delimiter_entry__value
              (us_split_fields1
              (select (rec__step_function__step_function_t__step
                      (us_split_fields3 sfun2)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields12)
  im2)))))
  (fp.eq o109 (to_rep
              (rec__step_function__delimiter_entry__value
              (us_split_fields1
              (select (rec__step_function__step_function_t__step
                      (us_split_fields3 sfun2)) (to_rep1
                                                (rec__step_function__step_function_t__number_of_delimiters
                                                (us_split_fields3 sfun2)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and
  (= o108 (get_value sfun1
          (to_rep2
          (rec__step_function__delimiter_entry__delimiter
          (us_split_fields1
          (select (rec__step_function__step_function_t__step
                  merge__split_fields12) im2))))))
  (and (fp.isFinite32 o108)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i30)))) (to_rep2
                                                (rec__step_function__delimiter_entry__delimiter
                                                (us_split_fields1
                                                (select (rec__step_function__step_function_t__step
                                                        merge__split_fields12)
                                                im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields12) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun1)) (+ i30 1)))))))
  (fp.eq o108 (to_rep
              (rec__step_function__delimiter_entry__value
              (us_split_fields1
              (select (rec__step_function__step_function_t__step
                      (us_split_fields3 sfun1)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1)))))))
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields12)
  im2)))))
  (fp.eq o108 (to_rep
              (rec__step_function__delimiter_entry__value
              (us_split_fields1
              (select (rec__step_function__step_function_t__step
                      (us_split_fields3 sfun1)) (to_rep1
                                                (rec__step_function__step_function_t__number_of_delimiters
                                                (us_split_fields3 sfun1)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and (= o110 (min o108 o109))
  (and (fp.isFinite32 o110)
  (ite (fp.leq o108 o109) (fp.eq o110 o108) (fp.eq o110 o109)))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= (to_rep o111) o110))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o112 (mk___split_fields
          (rec__step_function__delimiter_entry__delimiter
          (us_split_fields1
          (select (rec__step_function__step_function_t__step
                  merge__split_fields12) im2)))
          o111)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= o113 (mk___rep o112)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o114 (store (rec__step_function__step_function_t__step
                 merge__split_fields12) im2 o113)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o115 (mk___split_fields1
          (rec__step_function__step_function_t__number_of_delimiters
          merge__split_fields12) o114)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= temp___326 (mk___rep1 o115)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= result15 (mk___split_fields__ref1 merge__split_fields12)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= merge__split_fields13 (us_split_fields3 temp___326)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and
  (ite (< i22 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun2))))
  (and (= i25 (+ i22 1)) (= (= scan_sfun25 true) (= scan_sfun22 true)))
  (and (= i25 i22) (not (= scan_sfun25 true)))) (in_range1 i25)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= scan_sfun15 scan_sfun12))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= i15 i12))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= merge__split_fields11 merge__split_fields13))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (= scan_sfun23 scan_sfun25)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (= scan_sfun13 scan_sfun15)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true))) (= i23 i25)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true))) (= i13 i15)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (= merge__split_fields5 merge__split_fields11)))

;; H
  (assert (= im4 (mk_int__ref im2)))

;; H
  (assert (= im5 im2))

;; H
  (assert (not (= (ite (= scan_sfun13 false) scan_sfun23 true) true)))

;; H
  (assert (= scan_sfun26 (mk_bool__ref scan_sfun23)))

;; H
  (assert (= scan_sfun16 (mk_bool__ref scan_sfun13)))

;; H
  (assert (= im6 im4))

;; H
  (assert (= i26 (mk_int__ref i23)))

;; H
  (assert (= i16 (mk_int__ref i13)))

;; H
  (assert
  (= merge__split_fields15 (mk___split_fields__ref1 merge__split_fields5)))

;; H
  (assert (= scan_sfun27 scan_sfun23))

;; H
  (assert (= scan_sfun17 scan_sfun13))

;; H
  (assert (= im7 im5))

;; H
  (assert (= i27 i23))

;; H
  (assert (= i17 i13))

;; H
  (assert (= merge__split_fields16 merge__split_fields5))

;; H
  (assert (= scan_sfun28 scan_sfun26))

;; H
  (assert (= scan_sfun18 scan_sfun16))

;; H
  (assert (= im8 im6))

;; H
  (assert (= i28 i26))

;; H
  (assert (= i18 i16))

;; H
  (assert (= merge__split_fields17 merge__split_fields15))

;; H
  (assert (= scan_sfun29 scan_sfun27))

;; H
  (assert (= scan_sfun19 scan_sfun17))

;; H
  (assert (= im9 im7))

;; H
  (assert (= i29 i27))

;; H
  (assert (= i19 i17))

;; H
  (assert (= merge__split_fields18 merge__split_fields16))

;; H
  (assert (= (to_rep1 o123) (int__content im8)))

;; H
  (assert
  (= o124 (mk___split_fields1 o123
          (rec__step_function__step_function_t__step
          (us_split_fields__content1 merge__split_fields17)))))

;; H
  (assert (= temp___451 (mk___rep1 o124)))

;; H
  (assert (= result18 merge__split_fields17))

;; H
  (assert (= merge__split_fields19 (us_split_fields3 temp___451)))

;; H
  (assert (= scan_sfun210 scan_sfun28))

;; H
  (assert (= scan_sfun110 scan_sfun18))

;; H
  (assert (= im10 im8))

;; H
  (assert (= i210 i28))

;; H
  (assert (= i110 i18))

;; H
  (assert
  (= merge__split_fields20 (mk___split_fields__ref1 merge__split_fields19)))

;; H
  (assert (= scan_sfun211 scan_sfun29))

;; H
  (assert (= scan_sfun111 scan_sfun19))

;; H
  (assert (= im11 im9))

;; H
  (assert (= i211 i29))

;; H
  (assert (= i111 i19))

;; H
  (assert (= merge__split_fields21 merge__split_fields19))

;; H
  (assert (<= 0 i10))

;; H
  (assert
  (<= i10 (to_rep1
          (rec__step_function__step_function_t__number_of_delimiters
          (us_split_fields__content1 merge__split_fields20)))))

;; H
  (assert (and (<= 0 i10) (<= i10 10)))

;; H
  (assert (= o142 i10))

;; H
  (assert
  (= o143 (select (rec__step_function__step_function_t__step
                  (us_split_fields__content1 merge__split_fields20))
  o142)))

;; H
  (assert (= o144 (us_split_fields1 o143)))

;; H
  (assert (= o145 (rec__step_function__delimiter_entry__delimiter o144)))

;; H
  (assert (= o146 (to_rep2 o145)))

;; H
  (assert
  (and (= o147 (get_value sfun2 o146))
  (and (fp.isFinite32 o147)
  (or
  (exists ((i30 Int))
  (and
  (and (<= 0 i30)
  (<= i30 (- (to_rep1
             (rec__step_function__step_function_t__number_of_delimiters
             (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i30)))) o146)
  (< o146 (to_rep2
          (rec__step_function__delimiter_entry__delimiter
          (us_split_fields1
          (select (rec__step_function__step_function_t__step
                  (us_split_fields3 sfun2)) (+ i30 1)))))))
  (fp.eq o147 (to_rep
              (rec__step_function__delimiter_entry__value
              (us_split_fields1
              (select (rec__step_function__step_function_t__step
                      (us_split_fields3 sfun2)) i30))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2)))))))
  o146)
  (fp.eq o147 (to_rep
              (rec__step_function__delimiter_entry__value
              (us_split_fields1
              (select (rec__step_function__step_function_t__step
                      (us_split_fields3 sfun2)) (to_rep1
                                                (rec__step_function__step_function_t__number_of_delimiters
                                                (us_split_fields3 sfun2)))))))))))))

;; H
  (assert (and (<= 0 i10) (<= i10 10)))

;; H
  (assert (= o136 i10))

;; H
  (assert
  (= o137 (select (rec__step_function__step_function_t__step
                  (us_split_fields__content1 merge__split_fields20))
  o136)))

;; H
  (assert (= o138 (us_split_fields1 o137)))

;; H
  (assert (= o139 (rec__step_function__delimiter_entry__delimiter o138)))

;; H
  (assert (= o140 (to_rep2 o139)))

(assert
;; WP_parameter_def
 ;; File "step_function.ads", line 89, characters 0-0
  (not (= (is_valid sfun1) true)))
(check-sat)
(exit)
