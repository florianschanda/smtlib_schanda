;; produced by cvc4_14.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 8)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 256)) (= (bv2nat ((_ int2bv 8) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvlshr x n) (lsr x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvashr x n) (asr x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvshl x n) (lsl x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_left1 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_right1 v (bv2nat n)))))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (nth x (bv2nat i)) (nth_bv x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 8)) (i Int))
  (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i)))
  (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-sort bits_1 0)

(define-fun in_range ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                             (bvule x ((_ int2bv 8) 1))))

(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(define-fun bool_eq ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) (_ BitVec 8))

(declare-fun user_eq (bits_1 bits_1) Bool)

(declare-fun dummy () bits_1)

(declare-datatypes ()
((bits_1__ref (mk_bits_1__ref (bits_1__content bits_1)))))
(define-fun bits_1__ref___projection ((a bits_1__ref)) bits_1 (bits_1__content
                                                              a))

(declare-fun to_rep (bits_1) (_ BitVec 8))

(declare-fun of_rep ((_ BitVec 8)) bits_1)

;; inversion_axiom
  (assert
  (forall ((x bits_1)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x bits_1)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 2))))
     (=> (in_range y) (= (to_rep (of_rep x)) y))) :pattern ((to_rep
                                                            (of_rep x))) )))

(define-fun to_int2 ((x bits_1)) Int (bv2nat (to_rep x)))

;; range_int_axiom
  (assert
  (forall ((x bits_1)) (! (in_range_int
  (to_int2 x)) :pattern ((to_int2 x)) )))

(declare-sort bits_5 0)

(define-fun in_range1 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 31))))

(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 31)))

(define-fun bool_eq1 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 8))

(declare-fun user_eq1 (bits_5 bits_5) Bool)

(declare-fun dummy1 () bits_5)

(declare-datatypes ()
((bits_5__ref (mk_bits_5__ref (bits_5__content bits_5)))))
(define-fun bits_5__ref___projection ((a bits_5__ref)) bits_5 (bits_5__content
                                                              a))

(declare-fun to_rep1 (bits_5) (_ BitVec 8))

(declare-fun of_rep1 ((_ BitVec 8)) bits_5)

;; inversion_axiom
  (assert
  (forall ((x bits_5))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_5)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 32))))
     (=> (in_range1 y) (= (to_rep1 (of_rep1 x)) y))) :pattern ((to_rep1
                                                               (of_rep1 x))) )))

(define-fun to_int3 ((x bits_5)) Int (bv2nat (to_rep1 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_5)) (! (in_range_int1
  (to_int3 x)) :pattern ((to_int3 x)) )))

(declare-sort priority 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 97)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (priority priority) Bool)

(declare-fun dummy2 () priority)

(declare-datatypes ()
((priority__ref (mk_priority__ref (priority__content priority)))))
(define-fun priority__ref___projection ((a priority__ref)) priority (priority__content
                                                                    a))

(declare-sort interrupt_priority 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 98 x) (<= x 98)))

(define-fun bool_eq3 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (interrupt_priority interrupt_priority) Bool)

(declare-fun dummy3 () interrupt_priority)

(declare-datatypes ()
((interrupt_priority__ref
 (mk_interrupt_priority__ref
 (interrupt_priority__content interrupt_priority)))))
(define-fun interrupt_priority__ref___projection ((a interrupt_priority__ref)) interrupt_priority 
  (interrupt_priority__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__dw1000__register_types__sys_status_type__irqs bits_1)(rec__dw1000__register_types__sys_status_type__cplock bits_1)(rec__dw1000__register_types__sys_status_type__esyncr bits_1)(rec__dw1000__register_types__sys_status_type__aat bits_1)(rec__dw1000__register_types__sys_status_type__txfrb bits_1)(rec__dw1000__register_types__sys_status_type__txprs bits_1)(rec__dw1000__register_types__sys_status_type__txphs bits_1)(rec__dw1000__register_types__sys_status_type__txfrs bits_1)(rec__dw1000__register_types__sys_status_type__rxprd bits_1)(rec__dw1000__register_types__sys_status_type__rxsfdd bits_1)(rec__dw1000__register_types__sys_status_type__ldedone bits_1)(rec__dw1000__register_types__sys_status_type__rxphd bits_1)(rec__dw1000__register_types__sys_status_type__rxphe bits_1)(rec__dw1000__register_types__sys_status_type__rxdfr bits_1)(rec__dw1000__register_types__sys_status_type__rxfcg bits_1)(rec__dw1000__register_types__sys_status_type__rxfce bits_1)(rec__dw1000__register_types__sys_status_type__rxrfsl bits_1)(rec__dw1000__register_types__sys_status_type__rxrfto bits_1)(rec__dw1000__register_types__sys_status_type__ldeerr bits_1)(rec__dw1000__register_types__sys_status_type__rxovrr bits_1)(rec__dw1000__register_types__sys_status_type__rxpto bits_1)(rec__dw1000__register_types__sys_status_type__gpioirq bits_1)(rec__dw1000__register_types__sys_status_type__slp2init bits_1)(rec__dw1000__register_types__sys_status_type__rfpll_ll bits_1)(rec__dw1000__register_types__sys_status_type__clkpll_ll bits_1)(rec__dw1000__register_types__sys_status_type__rxsfdto bits_1)(rec__dw1000__register_types__sys_status_type__hpdwarn bits_1)(rec__dw1000__register_types__sys_status_type__txberr bits_1)(rec__dw1000__register_types__sys_status_type__affrej bits_1)(rec__dw1000__register_types__sys_status_type__hsrbp bits_1)(rec__dw1000__register_types__sys_status_type__icrbp bits_1)(rec__dw1000__register_types__sys_status_type__rxrscs bits_1)(rec__dw1000__register_types__sys_status_type__rxprej bits_1)(rec__dw1000__register_types__sys_status_type__txpute bits_1)(rec__dw1000__register_types__sys_status_type__reserved_1 bits_1)(rec__dw1000__register_types__sys_status_type__reserved_2 bits_5)))))
(define-fun us_split_fields_IRQS__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__irqs a))

(define-fun us_split_fields_CPLOCK__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__cplock a))

(define-fun us_split_fields_ESYNCR__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__esyncr a))

(define-fun us_split_fields_AAT__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__aat a))

(define-fun us_split_fields_TXFRB__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__txfrb a))

(define-fun us_split_fields_TXPRS__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__txprs a))

(define-fun us_split_fields_TXPHS__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__txphs a))

(define-fun us_split_fields_TXFRS__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__txfrs a))

(define-fun us_split_fields_RXPRD__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxprd a))

(define-fun us_split_fields_RXSFDD__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxsfdd a))

(define-fun us_split_fields_LDEDONE__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__ldedone a))

(define-fun us_split_fields_RXPHD__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxphd a))

(define-fun us_split_fields_RXPHE__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxphe a))

(define-fun us_split_fields_RXDFR__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxdfr a))

(define-fun us_split_fields_RXFCG__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxfcg a))

(define-fun us_split_fields_RXFCE__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxfce a))

(define-fun us_split_fields_RXRFSL__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxrfsl a))

(define-fun us_split_fields_RXRFTO__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxrfto a))

(define-fun us_split_fields_LDEERR__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__ldeerr a))

(define-fun us_split_fields_RXOVRR__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxovrr a))

(define-fun us_split_fields_RXPTO__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxpto a))

(define-fun us_split_fields_GPIOIRQ__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__gpioirq a))

(define-fun us_split_fields_SLP2INIT__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__slp2init a))

(define-fun us_split_fields_RFPLL_LL__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rfpll_ll a))

(define-fun us_split_fields_CLKPLL_LL__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__clkpll_ll a))

(define-fun us_split_fields_RXSFDTO__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxsfdto a))

(define-fun us_split_fields_HPDWARN__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__hpdwarn a))

(define-fun us_split_fields_TXBERR__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__txberr a))

(define-fun us_split_fields_AFFREJ__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__affrej a))

(define-fun us_split_fields_HSRBP__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__hsrbp a))

(define-fun us_split_fields_ICRBP__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__icrbp a))

(define-fun us_split_fields_RXRSCS__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxrscs a))

(define-fun us_split_fields_RXPREJ__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__rxprej a))

(define-fun us_split_fields_TXPUTE__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__txpute a))

(define-fun us_split_fields_Reserved_14__projection ((a us_split_fields)) bits_1 
  (rec__dw1000__register_types__sys_status_type__reserved_1 a))

(define-fun us_split_fields_Reserved_24__projection ((a us_split_fields)) bits_5 
  (rec__dw1000__register_types__sys_status_type__reserved_2 a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref_12__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep_12__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                               a))

(define-fun bool_eq4 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__irqs
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__irqs
                                                  (us_split_fields1 b))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__cplock
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__cplock
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__esyncr
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__esyncr
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__aat
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__aat
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__txfrb
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__txfrb
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__txprs
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__txprs
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__txphs
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__txphs
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__txfrs
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__txfrs
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxprd
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxprd
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxsfdd
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxsfdd
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__ldedone
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__ldedone
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxphd
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxphd
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxphe
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxphe
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxdfr
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxdfr
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxfcg
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxfcg
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxfce
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxfce
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxrfsl
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxrfsl
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxrfto
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxrfto
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__ldeerr
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__ldeerr
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxovrr
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxovrr
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxpto
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxpto
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__gpioirq
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__gpioirq
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__slp2init
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__slp2init
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rfpll_ll
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rfpll_ll
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__clkpll_ll
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__clkpll_ll
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxsfdto
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxsfdto
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__hpdwarn
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__hpdwarn
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__txberr
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__txberr
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__affrej
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__affrej
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__hsrbp
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__hsrbp
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__icrbp
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__icrbp
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxrscs
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxrscs
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__rxprej
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__rxprej
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__txpute
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__txpute
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_status_type__reserved_1
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_status_type__reserved_1
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__dw1000__register_types__sys_status_type__reserved_2
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__dw1000__register_types__sys_status_type__reserved_2
                                                  (us_split_fields1 b)))))
                   true false))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun dw1000__register_types__sys_status_type__irqs__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__irqs__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__irqs__position () Int)

;; dw1000__register_types__sys_status_type__irqs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__irqs__first__bit))

;; dw1000__register_types__sys_status_type__irqs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__irqs__first__bit dw1000__register_types__sys_status_type__irqs__last__bit))

;; dw1000__register_types__sys_status_type__irqs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__irqs__position))

(declare-fun dw1000__register_types__sys_status_type__cplock__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__cplock__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__cplock__position () Int)

;; dw1000__register_types__sys_status_type__cplock__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__cplock__first__bit))

;; dw1000__register_types__sys_status_type__cplock__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__cplock__first__bit dw1000__register_types__sys_status_type__cplock__last__bit))

;; dw1000__register_types__sys_status_type__cplock__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__cplock__position))

(declare-fun dw1000__register_types__sys_status_type__esyncr__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__esyncr__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__esyncr__position () Int)

;; dw1000__register_types__sys_status_type__esyncr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__esyncr__first__bit))

;; dw1000__register_types__sys_status_type__esyncr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__esyncr__first__bit dw1000__register_types__sys_status_type__esyncr__last__bit))

;; dw1000__register_types__sys_status_type__esyncr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__esyncr__position))

(declare-fun dw1000__register_types__sys_status_type__aat__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__aat__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__aat__position () Int)

;; dw1000__register_types__sys_status_type__aat__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__aat__first__bit))

;; dw1000__register_types__sys_status_type__aat__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__aat__first__bit dw1000__register_types__sys_status_type__aat__last__bit))

;; dw1000__register_types__sys_status_type__aat__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__aat__position))

(declare-fun dw1000__register_types__sys_status_type__txfrb__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txfrb__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txfrb__position () Int)

;; dw1000__register_types__sys_status_type__txfrb__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txfrb__first__bit))

;; dw1000__register_types__sys_status_type__txfrb__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txfrb__first__bit dw1000__register_types__sys_status_type__txfrb__last__bit))

;; dw1000__register_types__sys_status_type__txfrb__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txfrb__position))

(declare-fun dw1000__register_types__sys_status_type__txprs__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txprs__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txprs__position () Int)

;; dw1000__register_types__sys_status_type__txprs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txprs__first__bit))

;; dw1000__register_types__sys_status_type__txprs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txprs__first__bit dw1000__register_types__sys_status_type__txprs__last__bit))

;; dw1000__register_types__sys_status_type__txprs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txprs__position))

(declare-fun dw1000__register_types__sys_status_type__txphs__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txphs__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txphs__position () Int)

;; dw1000__register_types__sys_status_type__txphs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txphs__first__bit))

;; dw1000__register_types__sys_status_type__txphs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txphs__first__bit dw1000__register_types__sys_status_type__txphs__last__bit))

;; dw1000__register_types__sys_status_type__txphs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txphs__position))

(declare-fun dw1000__register_types__sys_status_type__txfrs__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txfrs__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txfrs__position () Int)

;; dw1000__register_types__sys_status_type__txfrs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txfrs__first__bit))

;; dw1000__register_types__sys_status_type__txfrs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txfrs__first__bit dw1000__register_types__sys_status_type__txfrs__last__bit))

;; dw1000__register_types__sys_status_type__txfrs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txfrs__position))

(declare-fun dw1000__register_types__sys_status_type__rxprd__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxprd__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxprd__position () Int)

;; dw1000__register_types__sys_status_type__rxprd__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxprd__first__bit))

;; dw1000__register_types__sys_status_type__rxprd__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxprd__first__bit dw1000__register_types__sys_status_type__rxprd__last__bit))

;; dw1000__register_types__sys_status_type__rxprd__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxprd__position))

(declare-fun dw1000__register_types__sys_status_type__rxsfdd__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxsfdd__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxsfdd__position () Int)

;; dw1000__register_types__sys_status_type__rxsfdd__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxsfdd__first__bit))

;; dw1000__register_types__sys_status_type__rxsfdd__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxsfdd__first__bit dw1000__register_types__sys_status_type__rxsfdd__last__bit))

;; dw1000__register_types__sys_status_type__rxsfdd__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxsfdd__position))

(declare-fun dw1000__register_types__sys_status_type__ldedone__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__ldedone__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__ldedone__position () Int)

;; dw1000__register_types__sys_status_type__ldedone__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__ldedone__first__bit))

;; dw1000__register_types__sys_status_type__ldedone__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__ldedone__first__bit dw1000__register_types__sys_status_type__ldedone__last__bit))

;; dw1000__register_types__sys_status_type__ldedone__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__ldedone__position))

(declare-fun dw1000__register_types__sys_status_type__rxphd__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxphd__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxphd__position () Int)

;; dw1000__register_types__sys_status_type__rxphd__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxphd__first__bit))

;; dw1000__register_types__sys_status_type__rxphd__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxphd__first__bit dw1000__register_types__sys_status_type__rxphd__last__bit))

;; dw1000__register_types__sys_status_type__rxphd__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxphd__position))

(declare-fun dw1000__register_types__sys_status_type__rxphe__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxphe__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxphe__position () Int)

;; dw1000__register_types__sys_status_type__rxphe__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxphe__first__bit))

;; dw1000__register_types__sys_status_type__rxphe__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxphe__first__bit dw1000__register_types__sys_status_type__rxphe__last__bit))

;; dw1000__register_types__sys_status_type__rxphe__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxphe__position))

(declare-fun dw1000__register_types__sys_status_type__rxdfr__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxdfr__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxdfr__position () Int)

;; dw1000__register_types__sys_status_type__rxdfr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxdfr__first__bit))

;; dw1000__register_types__sys_status_type__rxdfr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxdfr__first__bit dw1000__register_types__sys_status_type__rxdfr__last__bit))

;; dw1000__register_types__sys_status_type__rxdfr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxdfr__position))

(declare-fun dw1000__register_types__sys_status_type__rxfcg__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxfcg__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxfcg__position () Int)

;; dw1000__register_types__sys_status_type__rxfcg__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxfcg__first__bit))

;; dw1000__register_types__sys_status_type__rxfcg__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxfcg__first__bit dw1000__register_types__sys_status_type__rxfcg__last__bit))

;; dw1000__register_types__sys_status_type__rxfcg__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxfcg__position))

(declare-fun dw1000__register_types__sys_status_type__rxfce__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxfce__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxfce__position () Int)

;; dw1000__register_types__sys_status_type__rxfce__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxfce__first__bit))

;; dw1000__register_types__sys_status_type__rxfce__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxfce__first__bit dw1000__register_types__sys_status_type__rxfce__last__bit))

;; dw1000__register_types__sys_status_type__rxfce__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxfce__position))

(declare-fun dw1000__register_types__sys_status_type__rxrfsl__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxrfsl__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxrfsl__position () Int)

;; dw1000__register_types__sys_status_type__rxrfsl__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrfsl__first__bit))

;; dw1000__register_types__sys_status_type__rxrfsl__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxrfsl__first__bit dw1000__register_types__sys_status_type__rxrfsl__last__bit))

;; dw1000__register_types__sys_status_type__rxrfsl__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrfsl__position))

(declare-fun dw1000__register_types__sys_status_type__rxrfto__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxrfto__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxrfto__position () Int)

;; dw1000__register_types__sys_status_type__rxrfto__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrfto__first__bit))

;; dw1000__register_types__sys_status_type__rxrfto__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxrfto__first__bit dw1000__register_types__sys_status_type__rxrfto__last__bit))

;; dw1000__register_types__sys_status_type__rxrfto__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrfto__position))

(declare-fun dw1000__register_types__sys_status_type__ldeerr__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__ldeerr__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__ldeerr__position () Int)

;; dw1000__register_types__sys_status_type__ldeerr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__ldeerr__first__bit))

;; dw1000__register_types__sys_status_type__ldeerr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__ldeerr__first__bit dw1000__register_types__sys_status_type__ldeerr__last__bit))

;; dw1000__register_types__sys_status_type__ldeerr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__ldeerr__position))

(declare-fun dw1000__register_types__sys_status_type__rxovrr__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxovrr__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxovrr__position () Int)

;; dw1000__register_types__sys_status_type__rxovrr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxovrr__first__bit))

;; dw1000__register_types__sys_status_type__rxovrr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxovrr__first__bit dw1000__register_types__sys_status_type__rxovrr__last__bit))

;; dw1000__register_types__sys_status_type__rxovrr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxovrr__position))

(declare-fun dw1000__register_types__sys_status_type__rxpto__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxpto__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxpto__position () Int)

;; dw1000__register_types__sys_status_type__rxpto__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxpto__first__bit))

;; dw1000__register_types__sys_status_type__rxpto__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxpto__first__bit dw1000__register_types__sys_status_type__rxpto__last__bit))

;; dw1000__register_types__sys_status_type__rxpto__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxpto__position))

(declare-fun dw1000__register_types__sys_status_type__gpioirq__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__gpioirq__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__gpioirq__position () Int)

;; dw1000__register_types__sys_status_type__gpioirq__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__gpioirq__first__bit))

;; dw1000__register_types__sys_status_type__gpioirq__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__gpioirq__first__bit dw1000__register_types__sys_status_type__gpioirq__last__bit))

;; dw1000__register_types__sys_status_type__gpioirq__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__gpioirq__position))

(declare-fun dw1000__register_types__sys_status_type__slp2init__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__slp2init__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__slp2init__position () Int)

;; dw1000__register_types__sys_status_type__slp2init__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__slp2init__first__bit))

;; dw1000__register_types__sys_status_type__slp2init__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__slp2init__first__bit dw1000__register_types__sys_status_type__slp2init__last__bit))

;; dw1000__register_types__sys_status_type__slp2init__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__slp2init__position))

(declare-fun dw1000__register_types__sys_status_type__rfpll_ll__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rfpll_ll__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rfpll_ll__position () Int)

;; dw1000__register_types__sys_status_type__rfpll_ll__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__rfpll_ll__first__bit))

;; dw1000__register_types__sys_status_type__rfpll_ll__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rfpll_ll__first__bit dw1000__register_types__sys_status_type__rfpll_ll__last__bit))

;; dw1000__register_types__sys_status_type__rfpll_ll__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rfpll_ll__position))

(declare-fun dw1000__register_types__sys_status_type__clkpll_ll__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__clkpll_ll__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__clkpll_ll__position () Int)

;; dw1000__register_types__sys_status_type__clkpll_ll__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__clkpll_ll__first__bit))

;; dw1000__register_types__sys_status_type__clkpll_ll__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__clkpll_ll__first__bit dw1000__register_types__sys_status_type__clkpll_ll__last__bit))

;; dw1000__register_types__sys_status_type__clkpll_ll__position_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__clkpll_ll__position))

(declare-fun dw1000__register_types__sys_status_type__rxsfdto__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxsfdto__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxsfdto__position () Int)

;; dw1000__register_types__sys_status_type__rxsfdto__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__rxsfdto__first__bit))

;; dw1000__register_types__sys_status_type__rxsfdto__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxsfdto__first__bit dw1000__register_types__sys_status_type__rxsfdto__last__bit))

;; dw1000__register_types__sys_status_type__rxsfdto__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxsfdto__position))

(declare-fun dw1000__register_types__sys_status_type__hpdwarn__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__hpdwarn__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__hpdwarn__position () Int)

;; dw1000__register_types__sys_status_type__hpdwarn__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__hpdwarn__first__bit))

;; dw1000__register_types__sys_status_type__hpdwarn__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__hpdwarn__first__bit dw1000__register_types__sys_status_type__hpdwarn__last__bit))

;; dw1000__register_types__sys_status_type__hpdwarn__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__hpdwarn__position))

(declare-fun dw1000__register_types__sys_status_type__txberr__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txberr__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txberr__position () Int)

;; dw1000__register_types__sys_status_type__txberr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txberr__first__bit))

;; dw1000__register_types__sys_status_type__txberr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txberr__first__bit dw1000__register_types__sys_status_type__txberr__last__bit))

;; dw1000__register_types__sys_status_type__txberr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txberr__position))

(declare-fun dw1000__register_types__sys_status_type__affrej__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__affrej__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__affrej__position () Int)

;; dw1000__register_types__sys_status_type__affrej__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__affrej__first__bit))

;; dw1000__register_types__sys_status_type__affrej__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__affrej__first__bit dw1000__register_types__sys_status_type__affrej__last__bit))

;; dw1000__register_types__sys_status_type__affrej__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__affrej__position))

(declare-fun dw1000__register_types__sys_status_type__hsrbp__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__hsrbp__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__hsrbp__position () Int)

;; dw1000__register_types__sys_status_type__hsrbp__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__hsrbp__first__bit))

;; dw1000__register_types__sys_status_type__hsrbp__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__hsrbp__first__bit dw1000__register_types__sys_status_type__hsrbp__last__bit))

;; dw1000__register_types__sys_status_type__hsrbp__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__hsrbp__position))

(declare-fun dw1000__register_types__sys_status_type__icrbp__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__icrbp__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__icrbp__position () Int)

;; dw1000__register_types__sys_status_type__icrbp__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__icrbp__first__bit))

;; dw1000__register_types__sys_status_type__icrbp__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__icrbp__first__bit dw1000__register_types__sys_status_type__icrbp__last__bit))

;; dw1000__register_types__sys_status_type__icrbp__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__icrbp__position))

(declare-fun dw1000__register_types__sys_status_type__rxrscs__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxrscs__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxrscs__position () Int)

;; dw1000__register_types__sys_status_type__rxrscs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrscs__first__bit))

;; dw1000__register_types__sys_status_type__rxrscs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxrscs__first__bit dw1000__register_types__sys_status_type__rxrscs__last__bit))

;; dw1000__register_types__sys_status_type__rxrscs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrscs__position))

(declare-fun dw1000__register_types__sys_status_type__rxprej__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxprej__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__rxprej__position () Int)

;; dw1000__register_types__sys_status_type__rxprej__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxprej__first__bit))

;; dw1000__register_types__sys_status_type__rxprej__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxprej__first__bit dw1000__register_types__sys_status_type__rxprej__last__bit))

;; dw1000__register_types__sys_status_type__rxprej__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxprej__position))

(declare-fun dw1000__register_types__sys_status_type__txpute__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txpute__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__txpute__position () Int)

;; dw1000__register_types__sys_status_type__txpute__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txpute__first__bit))

;; dw1000__register_types__sys_status_type__txpute__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txpute__first__bit dw1000__register_types__sys_status_type__txpute__last__bit))

;; dw1000__register_types__sys_status_type__txpute__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txpute__position))

(declare-fun dw1000__register_types__sys_status_type__reserved_1__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__reserved_1__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__reserved_1__position () Int)

;; dw1000__register_types__sys_status_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__reserved_1__first__bit))

;; dw1000__register_types__sys_status_type__reserved_1__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__reserved_1__first__bit 
  dw1000__register_types__sys_status_type__reserved_1__last__bit))

;; dw1000__register_types__sys_status_type__reserved_1__position_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__reserved_1__position))

(declare-fun dw1000__register_types__sys_status_type__reserved_2__first__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__reserved_2__last__bit () Int)

(declare-fun dw1000__register_types__sys_status_type__reserved_2__position () Int)

;; dw1000__register_types__sys_status_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__reserved_2__first__bit))

;; dw1000__register_types__sys_status_type__reserved_2__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__reserved_2__first__bit 
  dw1000__register_types__sys_status_type__reserved_2__last__bit))

;; dw1000__register_types__sys_status_type__reserved_2__position_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__reserved_2__position))

(declare-fun dummy4 () us_rep)

(declare-datatypes ()
((sys_status_type__ref
 (mk_sys_status_type__ref (sys_status_type__content us_rep)))))
(define-fun sys_status_type__ref___projection ((a sys_status_type__ref)) us_rep 
  (sys_status_type__content a))

(declare-datatypes ()
((register_type__ref (mk_register_type__ref (register_type__content us_rep)))))
(define-fun register_type__ref_12__projection ((a register_type__ref)) us_rep 
  (register_type__content a))

(declare-sort natural 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (natural natural) Bool)

(declare-fun dummy5 () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(declare-sort rx_frame_queue_index 0)

(define-fun in_range5 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 1))))

(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(define-fun bool_eq6 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 8))

(declare-fun user_eq6 (rx_frame_queue_index rx_frame_queue_index) Bool)

(declare-fun dummy6 () rx_frame_queue_index)

(declare-datatypes ()
((rx_frame_queue_index__ref
 (mk_rx_frame_queue_index__ref
 (rx_frame_queue_index__content rx_frame_queue_index)))))
(define-fun rx_frame_queue_index__ref___projection ((a rx_frame_queue_index__ref)) rx_frame_queue_index 
  (rx_frame_queue_index__content a))

(declare-sort frame_length 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))

(define-fun bool_eq7 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (frame_length frame_length) Bool)

(declare-fun dummy7 () frame_length)

(declare-datatypes ()
((frame_length__ref
 (mk_frame_length__ref (frame_length__content frame_length)))))
(define-fun frame_length__ref___projection ((a frame_length__ref)) frame_length 
  (frame_length__content a))

(declare-fun to_rep2 (frame_length) Int)

(declare-fun of_rep2 (Int) frame_length)

;; inversion_axiom
  (assert
  (forall ((x frame_length))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x frame_length)) (! (in_range6
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort rx_errors 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 5)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (rx_errors rx_errors) Bool)

(declare-fun dummy8 () rx_errors)

(declare-datatypes ()
((rx_errors__ref (mk_rx_errors__ref (rx_errors__content rx_errors)))))
(define-fun rx_errors__ref___projection ((a rx_errors__ref)) rx_errors 
  (rx_errors__content a))

(declare-fun to_rep3 (rx_errors) Int)

(declare-fun of_rep3 (Int) rx_errors)

;; inversion_axiom
  (assert
  (forall ((x rx_errors))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x rx_errors)) (! (in_range7
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range7 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-sort bits_8 0)

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 8))

(define-fun bool_eq9 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) (_ BitVec 8))

(declare-fun user_eq9 (bits_8 bits_8) Bool)

(declare-fun dummy9 () bits_8)

(declare-datatypes ()
((bits_8__ref (mk_bits_8__ref (bits_8__content bits_8)))))
(define-fun bits_8__ref___projection ((a bits_8__ref)) bits_8 (bits_8__content
                                                              a))

(declare-fun to_rep4 (bits_8) (_ BitVec 8))

(declare-fun of_rep4 ((_ BitVec 8)) bits_8)

;; inversion_axiom
  (assert
  (forall ((x bits_8))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep4 (of_rep4 x)) x) :pattern ((to_rep4 (of_rep4 x))) )))

(define-fun to_int4 ((x bits_8)) Int (bv2nat (to_rep4 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_8)) (! (uint_in_range
  (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int bits_8))))))
(declare-fun slide ((Array Int bits_8) Int Int) (Array Int bits_8))

;; slide_eq
  (assert
  (forall ((a (Array Int bits_8)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bits_8)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int bits_8) Int Int (Array Int bits_8) Int
  Int) (Array Int bits_8))

;; concat_def
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (bits_8 Int) (Array Int bits_8))

;; singleton_def
  (assert
  (forall ((v bits_8))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq10 ((a (Array Int bits_8)) (a__first Int) (a__last Int)
  (b (Array Int bits_8)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep4 (select a temp___idx_132)) (to_rep4
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq10 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep4 (select a temp___idx_132)) (to_rep4
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int bits_8) Int Int (Array Int bits_8) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq10 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq10 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (bvult (to_rep4 (select a (+ i 1))) (to_rep4 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq10 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (bvugt (to_rep4 (select a (+ j 1))) (to_rep4 (select b (+ i 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun dummy10 () (Array Int bits_8))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int bits_8)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int bits_8)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int bits_8)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int bits_8))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int bits_8))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int bits_8))) (<= 0 (object__alignment1 a))))

(declare-fun user_eq10 ((Array Int bits_8) (Array Int bits_8)) Bool)

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__decadriver__rx_frame_type__size frame_length)(rec__decadriver__rx_frame_type__frame (Array Int bits_8))(rec__decadriver__rx_frame_type__error rx_errors)(rec__decadriver__rx_frame_type__overrun Bool)))))
(define-fun us_split_fields_Size2__projection ((a us_split_fields2)) frame_length 
  (rec__decadriver__rx_frame_type__size a))

(define-fun us_split_fields_Frame__projection ((a us_split_fields2)) (Array Int bits_8) 
  (rec__decadriver__rx_frame_type__frame a))

(define-fun us_split_fields_Error__projection ((a us_split_fields2)) rx_errors 
  (rec__decadriver__rx_frame_type__error a))

(define-fun us_split_fields_Overrun__projection ((a us_split_fields2)) Bool 
  (rec__decadriver__rx_frame_type__overrun a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_137__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep_138__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                  a))

(define-fun bool_eq11 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (and
                         (= (to_rep2
                            (rec__decadriver__rx_frame_type__size
                            (us_split_fields3 a))) (to_rep2
                                                   (rec__decadriver__rx_frame_type__size
                                                   (us_split_fields3 b))))
                         (= (bool_eq10
                            (rec__decadriver__rx_frame_type__frame
                            (us_split_fields3 a)) 0 1024
                            (rec__decadriver__rx_frame_type__frame
                            (us_split_fields3 b)) 0 1024) true))
                         (= (to_rep3
                            (rec__decadriver__rx_frame_type__error
                            (us_split_fields3 a))) (to_rep3
                                                   (rec__decadriver__rx_frame_type__error
                                                   (us_split_fields3 b)))))
                         (= (rec__decadriver__rx_frame_type__overrun
                            (us_split_fields3 a)) (rec__decadriver__rx_frame_type__overrun
                                                  (us_split_fields3 b))))
                    true false))

(declare-fun user_eq11 (us_rep1 us_rep1) Bool)

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep1) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))

(declare-fun decadriver__rx_frame_type__size__first__bit () Int)

(declare-fun decadriver__rx_frame_type__size__last__bit () Int)

(declare-fun decadriver__rx_frame_type__size__position () Int)

;; decadriver__rx_frame_type__size__first__bit_axiom
  (assert (<= 0 decadriver__rx_frame_type__size__first__bit))

;; decadriver__rx_frame_type__size__last__bit_axiom
  (assert
  (< decadriver__rx_frame_type__size__first__bit decadriver__rx_frame_type__size__last__bit))

;; decadriver__rx_frame_type__size__position_axiom
  (assert (<= 0 decadriver__rx_frame_type__size__position))

(declare-fun decadriver__rx_frame_type__frame__first__bit () Int)

(declare-fun decadriver__rx_frame_type__frame__last__bit () Int)

(declare-fun decadriver__rx_frame_type__frame__position () Int)

;; decadriver__rx_frame_type__frame__first__bit_axiom
  (assert (<= 0 decadriver__rx_frame_type__frame__first__bit))

;; decadriver__rx_frame_type__frame__last__bit_axiom
  (assert
  (< decadriver__rx_frame_type__frame__first__bit decadriver__rx_frame_type__frame__last__bit))

;; decadriver__rx_frame_type__frame__position_axiom
  (assert (<= 0 decadriver__rx_frame_type__frame__position))

(declare-fun decadriver__rx_frame_type__error__first__bit () Int)

(declare-fun decadriver__rx_frame_type__error__last__bit () Int)

(declare-fun decadriver__rx_frame_type__error__position () Int)

;; decadriver__rx_frame_type__error__first__bit_axiom
  (assert (<= 0 decadriver__rx_frame_type__error__first__bit))

;; decadriver__rx_frame_type__error__last__bit_axiom
  (assert
  (< decadriver__rx_frame_type__error__first__bit decadriver__rx_frame_type__error__last__bit))

;; decadriver__rx_frame_type__error__position_axiom
  (assert (<= 0 decadriver__rx_frame_type__error__position))

(declare-fun decadriver__rx_frame_type__overrun__first__bit () Int)

(declare-fun decadriver__rx_frame_type__overrun__last__bit () Int)

(declare-fun decadriver__rx_frame_type__overrun__position () Int)

;; decadriver__rx_frame_type__overrun__first__bit_axiom
  (assert (<= 0 decadriver__rx_frame_type__overrun__first__bit))

;; decadriver__rx_frame_type__overrun__last__bit_axiom
  (assert
  (< decadriver__rx_frame_type__overrun__first__bit decadriver__rx_frame_type__overrun__last__bit))

;; decadriver__rx_frame_type__overrun__position_axiom
  (assert (<= 0 decadriver__rx_frame_type__overrun__position))

(declare-fun dummy11 () us_rep1)

(declare-datatypes ()
((rx_frame_type__ref
 (mk_rx_frame_type__ref (rx_frame_type__content us_rep1)))))
(define-fun rx_frame_type__ref___projection ((a rx_frame_type__ref)) us_rep1 
  (rx_frame_type__content a))

(declare-datatypes ()
((map__ref1 (mk_map__ref1 (map__content1 (Array (_ BitVec 8) us_rep1))))))
(declare-fun slide1 ((Array (_ BitVec 8) us_rep1) (_ BitVec 8)
  (_ BitVec 8)) (Array (_ BitVec 8) us_rep1))

;; slide_eq
  (assert
  (forall ((a (Array (_ BitVec 8) us_rep1)))
  (forall ((first (_ BitVec 8)))
  (! (= (slide1 a first first) a) :pattern ((slide1 a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array (_ BitVec 8) us_rep1)))
  (forall ((old_first (_ BitVec 8)))
  (forall ((new_first (_ BitVec 8)))
  (forall ((i (_ BitVec 8)))
  (! (= (select (slide1 a old_first new_first) i) (select a (bvsub i (bvsub new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array (_ BitVec 8) us_rep1) (_ BitVec 8) (_ BitVec 8)
  (Array (_ BitVec 8) us_rep1) (_ BitVec 8)
  (_ BitVec 8)) (Array (_ BitVec 8) us_rep1))

;; concat_def
  (assert
  (forall ((a (Array (_ BitVec 8) us_rep1)) (b (Array (_ BitVec 8) us_rep1)))
  (forall ((a_first (_ BitVec 8)) (a_last (_ BitVec 8))
  (b_first (_ BitVec 8)) (b_last (_ BitVec 8)))
  (forall ((i (_ BitVec 8)))
  (! (and
     (=> (and (bvule a_first i) (bvule i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (bvugt i a_last)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (bvadd (bvsub i a_last) (bvsub b_first #x01)))))) :pattern ((select 
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 (us_rep1 (_ BitVec 8)) (Array (_ BitVec 8) us_rep1))

;; singleton_def
  (assert
  (forall ((v us_rep1))
  (forall ((i (_ BitVec 8)))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq12 ((a (Array (_ BitVec 8) us_rep1))
  (a__first (_ BitVec 8)) (a__last (_ BitVec 8))
  (b (Array (_ BitVec 8) us_rep1)) (b__first (_ BitVec 8))
  (b__last (_ BitVec 8))) Bool (ite (and
                                    (ite (bvule a__first a__last)
                                    (and (bvule b__first b__last)
                                    (= (bvsub a__last a__first) (bvsub b__last b__first)))
                                    (bvugt b__first b__last))
                                    (forall ((temp___idx_183 (_ BitVec 8)))
                                    (=>
                                    (and (bvule a__first temp___idx_183)
                                    (bvule temp___idx_183 a__last))
                                    (= (bool_eq11 (select a temp___idx_183)
                                       (select b (bvadd (bvsub b__first a__first) temp___idx_183))) true))))
                               true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array (_ BitVec 8) us_rep1)) (b (Array (_ BitVec 8) us_rep1)))
  (forall ((a__first (_ BitVec 8)) (a__last (_ BitVec 8))
  (b__first (_ BitVec 8)) (b__last (_ BitVec 8)))
  (=> (= (bool_eq12 b b__first b__last a a__first a__last) true)
  (and
  (ite (bvule a__first a__last)
  (and (bvule b__first b__last)
  (= (bvsub a__last a__first) (bvsub b__last b__first)))
  (bvugt b__first b__last))
  (forall ((temp___idx_183 (_ BitVec 8)))
  (=> (and (bvule a__first temp___idx_183) (bvule temp___idx_183 a__last))
  (= (bool_eq11 (select a temp___idx_183)
     (select b (bvadd (bvsub b__first a__first) temp___idx_183))) true))))))))

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2
 (rec__decadriver__receiver_type__frame_queue (Array (_ BitVec 8) us_rep1))(rec__decadriver__receiver_type__queue_head rx_frame_queue_index)(rec__decadriver__receiver_type__rx_count natural)(rec__decadriver__receiver_type__overrun_occurred Bool)(rec__decadriver__receiver_type__frame_ready Bool)))))
(define-fun us_split_fields_Frame_Queue__projection ((a us_split_fields4)) (Array (_ BitVec 8) us_rep1) 
  (rec__decadriver__receiver_type__frame_queue a))

(define-fun us_split_fields_Queue_Head__projection ((a us_split_fields4)) rx_frame_queue_index 
  (rec__decadriver__receiver_type__queue_head a))

(define-fun us_split_fields_Rx_Count__projection ((a us_split_fields4)) natural 
  (rec__decadriver__receiver_type__rx_count a))

(define-fun us_split_fields_Overrun_Occurred__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__receiver_type__overrun_occurred a))

(define-fun us_split_fields_Frame_Ready__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__receiver_type__frame_ready a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref_138__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep_139__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                  a))

(declare-fun user_eq12 (us_rep2 us_rep2) Bool)

(declare-fun value__size3 () Int)

(declare-fun object__size3 (us_rep2) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))

(declare-fun decadriver__receiver_type__frame_queue__first__bit () Int)

(declare-fun decadriver__receiver_type__frame_queue__last__bit () Int)

(declare-fun decadriver__receiver_type__frame_queue__position () Int)

;; decadriver__receiver_type__frame_queue__first__bit_axiom
  (assert (<= 0 decadriver__receiver_type__frame_queue__first__bit))

;; decadriver__receiver_type__frame_queue__last__bit_axiom
  (assert
  (< decadriver__receiver_type__frame_queue__first__bit decadriver__receiver_type__frame_queue__last__bit))

;; decadriver__receiver_type__frame_queue__position_axiom
  (assert (<= 0 decadriver__receiver_type__frame_queue__position))

(declare-fun decadriver__receiver_type__queue_head__first__bit () Int)

(declare-fun decadriver__receiver_type__queue_head__last__bit () Int)

(declare-fun decadriver__receiver_type__queue_head__position () Int)

;; decadriver__receiver_type__queue_head__first__bit_axiom
  (assert (<= 0 decadriver__receiver_type__queue_head__first__bit))

;; decadriver__receiver_type__queue_head__last__bit_axiom
  (assert
  (< decadriver__receiver_type__queue_head__first__bit decadriver__receiver_type__queue_head__last__bit))

;; decadriver__receiver_type__queue_head__position_axiom
  (assert (<= 0 decadriver__receiver_type__queue_head__position))

(declare-fun decadriver__receiver_type__rx_count__first__bit () Int)

(declare-fun decadriver__receiver_type__rx_count__last__bit () Int)

(declare-fun decadriver__receiver_type__rx_count__position () Int)

;; decadriver__receiver_type__rx_count__first__bit_axiom
  (assert (<= 0 decadriver__receiver_type__rx_count__first__bit))

;; decadriver__receiver_type__rx_count__last__bit_axiom
  (assert
  (< decadriver__receiver_type__rx_count__first__bit decadriver__receiver_type__rx_count__last__bit))

;; decadriver__receiver_type__rx_count__position_axiom
  (assert (<= 0 decadriver__receiver_type__rx_count__position))

(declare-fun decadriver__receiver_type__overrun_occurred__first__bit () Int)

(declare-fun decadriver__receiver_type__overrun_occurred__last__bit () Int)

(declare-fun decadriver__receiver_type__overrun_occurred__position () Int)

;; decadriver__receiver_type__overrun_occurred__first__bit_axiom
  (assert (<= 0 decadriver__receiver_type__overrun_occurred__first__bit))

;; decadriver__receiver_type__overrun_occurred__last__bit_axiom
  (assert
  (< decadriver__receiver_type__overrun_occurred__first__bit decadriver__receiver_type__overrun_occurred__last__bit))

;; decadriver__receiver_type__overrun_occurred__position_axiom
  (assert (<= 0 decadriver__receiver_type__overrun_occurred__position))

(declare-fun decadriver__receiver_type__frame_ready__first__bit () Int)

(declare-fun decadriver__receiver_type__frame_ready__last__bit () Int)

(declare-fun decadriver__receiver_type__frame_ready__position () Int)

;; decadriver__receiver_type__frame_ready__first__bit_axiom
  (assert (<= 0 decadriver__receiver_type__frame_ready__first__bit))

;; decadriver__receiver_type__frame_ready__last__bit_axiom
  (assert
  (< decadriver__receiver_type__frame_ready__first__bit decadriver__receiver_type__frame_ready__last__bit))

;; decadriver__receiver_type__frame_ready__position_axiom
  (assert (<= 0 decadriver__receiver_type__frame_ready__position))

(declare-datatypes ()
((receiver_type__ref
 (mk_receiver_type__ref (receiver_type__content us_rep2)))))
(define-fun receiver_type__ref___projection ((a receiver_type__ref)) us_rep2 
  (receiver_type__content a))

(define-fun dynamic_invariant ((temp___expr_4469 us_rep2)
  (temp___is_init_4466 Bool) (temp___skip_constant_4467 Bool)
  (temp___do_toplevel_4468 Bool)) Bool (forall ((temp___4470 (_ BitVec 8)))
                                       (=>
                                       (and
                                       (bvule ((_ int2bv 8) 0) temp___4470)
                                       (bvule temp___4470 ((_ int2bv 8) 1)))
                                       (let ((temp___4471 (select (rec__decadriver__receiver_type__frame_queue
                                                                  (us_split_fields5
                                                                  temp___expr_4469)) temp___4470)))
                                       (ite (= (to_rep3
                                               (rec__decadriver__rx_frame_type__error
                                               (us_split_fields3 temp___4471))) 0)
                                       (< 0 (to_rep2
                                            (rec__decadriver__rx_frame_type__size
                                            (us_split_fields3 temp___4471))))
                                       (= (to_rep2
                                          (rec__decadriver__rx_frame_type__size
                                          (us_split_fields3 temp___4471))) 0))))))

(declare-datatypes ()
((us_split_fields6
 (mk___split_fields3 (rec__decadriver__transmitter_type__tx_idle Bool)))))
(define-fun us_split_fields_Tx_Idle__projection ((a us_split_fields6)) Bool 
  (rec__decadriver__transmitter_type__tx_idle a))

(declare-datatypes ()
((us_split_fields__ref3
 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref_139__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep_140__projection ((a us_rep3)) us_split_fields6 (us_split_fields7
                                                                  a))

(declare-fun user_eq13 (us_rep3 us_rep3) Bool)

(declare-fun value__size4 () Int)

(declare-fun object__size4 (us_rep3) Int)

(declare-fun value__alignment4 () Int)

(declare-fun object__alignment4 (us_rep3) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__alignment4 a))))

(declare-fun decadriver__transmitter_type__tx_idle__first__bit () Int)

(declare-fun decadriver__transmitter_type__tx_idle__last__bit () Int)

(declare-fun decadriver__transmitter_type__tx_idle__position () Int)

;; decadriver__transmitter_type__tx_idle__first__bit_axiom
  (assert (<= 0 decadriver__transmitter_type__tx_idle__first__bit))

;; decadriver__transmitter_type__tx_idle__last__bit_axiom
  (assert
  (< decadriver__transmitter_type__tx_idle__first__bit decadriver__transmitter_type__tx_idle__last__bit))

;; decadriver__transmitter_type__tx_idle__position_axiom
  (assert (<= 0 decadriver__transmitter_type__tx_idle__position))

(declare-datatypes ()
((transmitter_type__ref
 (mk_transmitter_type__ref (transmitter_type__content us_rep3)))))
(define-fun transmitter_type__ref___projection ((a transmitter_type__ref)) us_rep3 
  (transmitter_type__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun to_int5 ((_ BitVec 16)) Int)

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 65536)) (= (bv2nat ((_ int2bv 16) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvlshr x n) (lsr1 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvashr x n) (asr1 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvshl x n) (lsl1 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_left2 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_right2 v (bv2nat n)))))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (nth1 x (bv2nat i)) (nth_bv1 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 16)) (i Int))
  (=> (and (<= 0 i) (< i 65536))
  (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i)))
  (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))

(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(declare-sort bits_16 0)

(declare-fun attr__ATTRIBUTE_MODULUS1 () (_ BitVec 16))

(define-fun bool_eq13 ((x (_ BitVec 16))
  (y (_ BitVec 16))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) (_ BitVec 16))

(declare-fun user_eq14 (bits_16 bits_16) Bool)

(declare-fun dummy12 () bits_16)

(declare-datatypes ()
((bits_16__ref (mk_bits_16__ref (bits_16__content bits_16)))))
(define-fun bits_16__ref___projection ((a bits_16__ref)) bits_16 (bits_16__content
                                                                 a))

(declare-fun nth2 ((_ BitVec 32) Int) Bool)

(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun to_int6 ((_ BitVec 32)) Int)

(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 4294967296)) (= (bv2nat ((_ int2bv 32) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvlshr x n) (lsr2 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvashr x n) (asr2 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvshl x n) (lsl2 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) 
  (rotate_left3 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) 
  (rotate_right3 v (bv2nat n)))))

(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
  (= (= (nth_bv2 x i) true)
  (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
  (= (nth2 x (bv2nat i)) (nth_bv2 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 32)) (i Int))
  (=> (and (<= 0 i) (< i 4294967296))
  (= (nth_bv2 x ((_ int2bv 32) i)) (nth2 x i)))))

(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32))
  (n (_ BitVec 32)))
  (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i)))
  (= (eq_sub_bv2 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32))
  (n (_ BitVec 32)))
  (= (eq_sub2 a b (bv2nat i) (bv2nat n)) (eq_sub_bv2 a b i n))))

(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-sort bits_32 0)

(declare-fun attr__ATTRIBUTE_MODULUS2 () (_ BitVec 32))

(define-fun bool_eq14 ((x (_ BitVec 32))
  (y (_ BitVec 32))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) (_ BitVec 32))

(declare-fun user_eq15 (bits_32 bits_32) Bool)

(declare-fun dummy13 () bits_32)

(declare-datatypes ()
((bits_32__ref (mk_bits_32__ref (bits_32__content bits_32)))))
(define-fun bits_32__ref___projection ((a bits_32__ref)) bits_32 (bits_32__content
                                                                 a))

(declare-sort bits_2 0)

(define-fun in_range8 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 3))))

(define-fun in_range_int3 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(define-fun bool_eq15 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) (_ BitVec 8))

(declare-fun user_eq16 (bits_2 bits_2) Bool)

(declare-fun dummy14 () bits_2)

(declare-datatypes ()
((bits_2__ref (mk_bits_2__ref (bits_2__content bits_2)))))
(define-fun bits_2__ref___projection ((a bits_2__ref)) bits_2 (bits_2__content
                                                              a))

(declare-fun to_rep5 (bits_2) (_ BitVec 8))

(declare-fun of_rep5 ((_ BitVec 8)) bits_2)

;; inversion_axiom
  (assert
  (forall ((x bits_2))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_2)) (! (in_range8 (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 4))))
     (=> (in_range8 y) (= (to_rep5 (of_rep5 x)) y))) :pattern ((to_rep5
                                                               (of_rep5 x))) )))

(define-fun to_int7 ((x bits_2)) Int (bv2nat (to_rep5 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_2)) (! (in_range_int3
  (to_int7 x)) :pattern ((to_int7 x)) )))

(declare-sort bits_3 0)

(define-fun in_range9 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 7))))

(define-fun in_range_int4 ((x Int)) Bool (and (<= 0 x) (<= x 7)))

(define-fun bool_eq16 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE12 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) (_ BitVec 8))

(declare-fun user_eq17 (bits_3 bits_3) Bool)

(declare-fun dummy15 () bits_3)

(declare-datatypes ()
((bits_3__ref (mk_bits_3__ref (bits_3__content bits_3)))))
(define-fun bits_3__ref___projection ((a bits_3__ref)) bits_3 (bits_3__content
                                                              a))

(declare-fun to_rep6 (bits_3) (_ BitVec 8))

(declare-fun of_rep6 ((_ BitVec 8)) bits_3)

;; inversion_axiom
  (assert
  (forall ((x bits_3))
  (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_3)) (! (in_range9 (to_rep6 x)) :pattern ((to_rep6 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 8))))
     (=> (in_range9 y) (= (to_rep6 (of_rep6 x)) y))) :pattern ((to_rep6
                                                               (of_rep6 x))) )))

(define-fun to_int8 ((x bits_3)) Int (bv2nat (to_rep6 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_3)) (! (in_range_int4
  (to_int8 x)) :pattern ((to_int8 x)) )))

(declare-datatypes ()
((us_split_fields8
 (mk___split_fields4
 (rec__dw1000__register_types__sys_cfg_type__ffen bits_1)(rec__dw1000__register_types__sys_cfg_type__ffbc bits_1)(rec__dw1000__register_types__sys_cfg_type__ffab bits_1)(rec__dw1000__register_types__sys_cfg_type__ffad bits_1)(rec__dw1000__register_types__sys_cfg_type__ffaa bits_1)(rec__dw1000__register_types__sys_cfg_type__ffam bits_1)(rec__dw1000__register_types__sys_cfg_type__ffar bits_1)(rec__dw1000__register_types__sys_cfg_type__ffa4 bits_1)(rec__dw1000__register_types__sys_cfg_type__ffa5 bits_1)(rec__dw1000__register_types__sys_cfg_type__hirq_pol bits_1)(rec__dw1000__register_types__sys_cfg_type__spi_edge bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_fce bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_drxb bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_phe bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_rsde bits_1)(rec__dw1000__register_types__sys_cfg_type__fcs_int2f bits_1)(rec__dw1000__register_types__sys_cfg_type__phr_mode bits_2)(rec__dw1000__register_types__sys_cfg_type__dis_stxp bits_1)(rec__dw1000__register_types__sys_cfg_type__rxm110k bits_1)(rec__dw1000__register_types__sys_cfg_type__rxwtoe bits_1)(rec__dw1000__register_types__sys_cfg_type__rxautr bits_1)(rec__dw1000__register_types__sys_cfg_type__autoack bits_1)(rec__dw1000__register_types__sys_cfg_type__aackpend bits_1)(rec__dw1000__register_types__sys_cfg_type__reserved_1 bits_3)(rec__dw1000__register_types__sys_cfg_type__reserved_2 bits_5)))))
(define-fun us_split_fields_FFEN__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffen a))

(define-fun us_split_fields_FFBC__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffbc a))

(define-fun us_split_fields_FFAB__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffab a))

(define-fun us_split_fields_FFAD__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffad a))

(define-fun us_split_fields_FFAA__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffaa a))

(define-fun us_split_fields_FFAM__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffam a))

(define-fun us_split_fields_FFAR__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffar a))

(define-fun us_split_fields_FFA4__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffa4 a))

(define-fun us_split_fields_FFA5__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__ffa5 a))

(define-fun us_split_fields_HIRQ_POL__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__hirq_pol a))

(define-fun us_split_fields_SPI_EDGE__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__spi_edge a))

(define-fun us_split_fields_DIS_FCE__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__dis_fce a))

(define-fun us_split_fields_DIS_DRXB__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__dis_drxb a))

(define-fun us_split_fields_DIS_PHE__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__dis_phe a))

(define-fun us_split_fields_DIS_RSDE__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__dis_rsde a))

(define-fun us_split_fields_FCS_INT2F__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__fcs_int2f a))

(define-fun us_split_fields_PHR_MODE__projection ((a us_split_fields8)) bits_2 
  (rec__dw1000__register_types__sys_cfg_type__phr_mode a))

(define-fun us_split_fields_DIS_STXP__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__dis_stxp a))

(define-fun us_split_fields_RXM110K__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__rxm110k a))

(define-fun us_split_fields_RXWTOE__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__rxwtoe a))

(define-fun us_split_fields_RXAUTR__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__rxautr a))

(define-fun us_split_fields_AUTOACK__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__autoack a))

(define-fun us_split_fields_AACKPEND__projection ((a us_split_fields8)) bits_1 
  (rec__dw1000__register_types__sys_cfg_type__aackpend a))

(define-fun us_split_fields_Reserved_1__projection ((a us_split_fields8)) bits_3 
  (rec__dw1000__register_types__sys_cfg_type__reserved_1 a))

(define-fun us_split_fields_Reserved_2__projection ((a us_split_fields8)) bits_5 
  (rec__dw1000__register_types__sys_cfg_type__reserved_2 a))

(declare-datatypes ()
((us_split_fields__ref4
 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref_4__projection ((a us_split_fields__ref4)) us_split_fields8 
  (us_split_fields__content4 a))

(declare-datatypes ()
((us_rep4 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep_4__projection ((a us_rep4)) us_split_fields8 (us_split_fields9
                                                                a))

(define-fun bool_eq17 ((a us_rep4)
  (b us_rep4)) Bool (ite (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__ffen
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__ffen
                                                   (us_split_fields9 b))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__ffbc
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__ffbc
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__ffab
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__ffab
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__ffad
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__ffad
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__ffaa
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__ffaa
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__ffam
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__ffam
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__ffar
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__ffar
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__ffa4
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__ffa4
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__ffa5
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__ffa5
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__hirq_pol
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__hirq_pol
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__spi_edge
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__spi_edge
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__dis_fce
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__dis_fce
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__dis_drxb
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__dis_drxb
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__dis_phe
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__dis_phe
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__dis_rsde
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__dis_rsde
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__fcs_int2f
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__fcs_int2f
                                                   (us_split_fields9 b)))))
                         (= (to_rep5
                            (rec__dw1000__register_types__sys_cfg_type__phr_mode
                            (us_split_fields9 a))) (to_rep5
                                                   (rec__dw1000__register_types__sys_cfg_type__phr_mode
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__dis_stxp
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__dis_stxp
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__rxm110k
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__rxm110k
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__rxwtoe
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__rxwtoe
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__rxautr
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__rxautr
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__autoack
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__autoack
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_cfg_type__aackpend
                            (us_split_fields9 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_cfg_type__aackpend
                                                   (us_split_fields9 b)))))
                         (= (to_rep6
                            (rec__dw1000__register_types__sys_cfg_type__reserved_1
                            (us_split_fields9 a))) (to_rep6
                                                   (rec__dw1000__register_types__sys_cfg_type__reserved_1
                                                   (us_split_fields9 b)))))
                         (= (to_rep1
                            (rec__dw1000__register_types__sys_cfg_type__reserved_2
                            (us_split_fields9 a))) (to_rep1
                                                   (rec__dw1000__register_types__sys_cfg_type__reserved_2
                                                   (us_split_fields9 b)))))
                    true false))

(declare-fun user_eq18 (us_rep4 us_rep4) Bool)

(declare-fun value__size5 () Int)

(declare-fun object__size5 (us_rep4) Int)

(declare-fun value__alignment5 () Int)

(declare-fun object__alignment5 (us_rep4) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a us_rep4)) (<= 0 (object__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a us_rep4)) (<= 0 (object__alignment5 a))))

(declare-fun dw1000__register_types__sys_cfg_type__ffen__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffen__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffen__position () Int)

;; dw1000__register_types__sys_cfg_type__ffen__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffen__first__bit))

;; dw1000__register_types__sys_cfg_type__ffen__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffen__first__bit dw1000__register_types__sys_cfg_type__ffen__last__bit))

;; dw1000__register_types__sys_cfg_type__ffen__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffen__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffbc__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffbc__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffbc__position () Int)

;; dw1000__register_types__sys_cfg_type__ffbc__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffbc__first__bit))

;; dw1000__register_types__sys_cfg_type__ffbc__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffbc__first__bit dw1000__register_types__sys_cfg_type__ffbc__last__bit))

;; dw1000__register_types__sys_cfg_type__ffbc__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffbc__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffab__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffab__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffab__position () Int)

;; dw1000__register_types__sys_cfg_type__ffab__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffab__first__bit))

;; dw1000__register_types__sys_cfg_type__ffab__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffab__first__bit dw1000__register_types__sys_cfg_type__ffab__last__bit))

;; dw1000__register_types__sys_cfg_type__ffab__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffab__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffad__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffad__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffad__position () Int)

;; dw1000__register_types__sys_cfg_type__ffad__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffad__first__bit))

;; dw1000__register_types__sys_cfg_type__ffad__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffad__first__bit dw1000__register_types__sys_cfg_type__ffad__last__bit))

;; dw1000__register_types__sys_cfg_type__ffad__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffad__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffaa__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffaa__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffaa__position () Int)

;; dw1000__register_types__sys_cfg_type__ffaa__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffaa__first__bit))

;; dw1000__register_types__sys_cfg_type__ffaa__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffaa__first__bit dw1000__register_types__sys_cfg_type__ffaa__last__bit))

;; dw1000__register_types__sys_cfg_type__ffaa__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffaa__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffam__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffam__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffam__position () Int)

;; dw1000__register_types__sys_cfg_type__ffam__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffam__first__bit))

;; dw1000__register_types__sys_cfg_type__ffam__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffam__first__bit dw1000__register_types__sys_cfg_type__ffam__last__bit))

;; dw1000__register_types__sys_cfg_type__ffam__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffam__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffar__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffar__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffar__position () Int)

;; dw1000__register_types__sys_cfg_type__ffar__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffar__first__bit))

;; dw1000__register_types__sys_cfg_type__ffar__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffar__first__bit dw1000__register_types__sys_cfg_type__ffar__last__bit))

;; dw1000__register_types__sys_cfg_type__ffar__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffar__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffa4__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffa4__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffa4__position () Int)

;; dw1000__register_types__sys_cfg_type__ffa4__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa4__first__bit))

;; dw1000__register_types__sys_cfg_type__ffa4__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffa4__first__bit dw1000__register_types__sys_cfg_type__ffa4__last__bit))

;; dw1000__register_types__sys_cfg_type__ffa4__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa4__position))

(declare-fun dw1000__register_types__sys_cfg_type__ffa5__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffa5__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__ffa5__position () Int)

;; dw1000__register_types__sys_cfg_type__ffa5__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa5__first__bit))

;; dw1000__register_types__sys_cfg_type__ffa5__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffa5__first__bit dw1000__register_types__sys_cfg_type__ffa5__last__bit))

;; dw1000__register_types__sys_cfg_type__ffa5__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa5__position))

(declare-fun dw1000__register_types__sys_cfg_type__hirq_pol__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__hirq_pol__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__hirq_pol__position () Int)

;; dw1000__register_types__sys_cfg_type__hirq_pol__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__hirq_pol__first__bit))

;; dw1000__register_types__sys_cfg_type__hirq_pol__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__hirq_pol__first__bit dw1000__register_types__sys_cfg_type__hirq_pol__last__bit))

;; dw1000__register_types__sys_cfg_type__hirq_pol__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__hirq_pol__position))

(declare-fun dw1000__register_types__sys_cfg_type__spi_edge__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__spi_edge__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__spi_edge__position () Int)

;; dw1000__register_types__sys_cfg_type__spi_edge__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__spi_edge__first__bit))

;; dw1000__register_types__sys_cfg_type__spi_edge__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__spi_edge__first__bit dw1000__register_types__sys_cfg_type__spi_edge__last__bit))

;; dw1000__register_types__sys_cfg_type__spi_edge__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__spi_edge__position))

(declare-fun dw1000__register_types__sys_cfg_type__dis_fce__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_fce__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_fce__position () Int)

;; dw1000__register_types__sys_cfg_type__dis_fce__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_fce__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_fce__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_fce__first__bit dw1000__register_types__sys_cfg_type__dis_fce__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_fce__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_fce__position))

(declare-fun dw1000__register_types__sys_cfg_type__dis_drxb__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_drxb__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_drxb__position () Int)

;; dw1000__register_types__sys_cfg_type__dis_drxb__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_drxb__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_drxb__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_drxb__first__bit dw1000__register_types__sys_cfg_type__dis_drxb__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_drxb__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_drxb__position))

(declare-fun dw1000__register_types__sys_cfg_type__dis_phe__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_phe__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_phe__position () Int)

;; dw1000__register_types__sys_cfg_type__dis_phe__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_phe__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_phe__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_phe__first__bit dw1000__register_types__sys_cfg_type__dis_phe__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_phe__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_phe__position))

(declare-fun dw1000__register_types__sys_cfg_type__dis_rsde__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_rsde__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_rsde__position () Int)

;; dw1000__register_types__sys_cfg_type__dis_rsde__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_rsde__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_rsde__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_rsde__first__bit dw1000__register_types__sys_cfg_type__dis_rsde__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_rsde__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_rsde__position))

(declare-fun dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__fcs_int2f__position () Int)

;; dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit))

;; dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit))

;; dw1000__register_types__sys_cfg_type__fcs_int2f__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__fcs_int2f__position))

(declare-fun dw1000__register_types__sys_cfg_type__phr_mode__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__phr_mode__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__phr_mode__position () Int)

;; dw1000__register_types__sys_cfg_type__phr_mode__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__phr_mode__first__bit))

;; dw1000__register_types__sys_cfg_type__phr_mode__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__phr_mode__first__bit dw1000__register_types__sys_cfg_type__phr_mode__last__bit))

;; dw1000__register_types__sys_cfg_type__phr_mode__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__phr_mode__position))

(declare-fun dw1000__register_types__sys_cfg_type__dis_stxp__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_stxp__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__dis_stxp__position () Int)

;; dw1000__register_types__sys_cfg_type__dis_stxp__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_stxp__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_stxp__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_stxp__first__bit dw1000__register_types__sys_cfg_type__dis_stxp__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_stxp__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_stxp__position))

(declare-fun dw1000__register_types__sys_cfg_type__rxm110k__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxm110k__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxm110k__position () Int)

;; dw1000__register_types__sys_cfg_type__rxm110k__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxm110k__first__bit))

;; dw1000__register_types__sys_cfg_type__rxm110k__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__rxm110k__first__bit dw1000__register_types__sys_cfg_type__rxm110k__last__bit))

;; dw1000__register_types__sys_cfg_type__rxm110k__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxm110k__position))

(declare-fun dw1000__register_types__sys_cfg_type__rxwtoe__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxwtoe__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxwtoe__position () Int)

;; dw1000__register_types__sys_cfg_type__rxwtoe__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxwtoe__first__bit))

;; dw1000__register_types__sys_cfg_type__rxwtoe__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__rxwtoe__first__bit dw1000__register_types__sys_cfg_type__rxwtoe__last__bit))

;; dw1000__register_types__sys_cfg_type__rxwtoe__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxwtoe__position))

(declare-fun dw1000__register_types__sys_cfg_type__rxautr__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxautr__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__rxautr__position () Int)

;; dw1000__register_types__sys_cfg_type__rxautr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxautr__first__bit))

;; dw1000__register_types__sys_cfg_type__rxautr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__rxautr__first__bit dw1000__register_types__sys_cfg_type__rxautr__last__bit))

;; dw1000__register_types__sys_cfg_type__rxautr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxautr__position))

(declare-fun dw1000__register_types__sys_cfg_type__autoack__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__autoack__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__autoack__position () Int)

;; dw1000__register_types__sys_cfg_type__autoack__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__autoack__first__bit))

;; dw1000__register_types__sys_cfg_type__autoack__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__autoack__first__bit dw1000__register_types__sys_cfg_type__autoack__last__bit))

;; dw1000__register_types__sys_cfg_type__autoack__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__autoack__position))

(declare-fun dw1000__register_types__sys_cfg_type__aackpend__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__aackpend__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__aackpend__position () Int)

;; dw1000__register_types__sys_cfg_type__aackpend__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__aackpend__first__bit))

;; dw1000__register_types__sys_cfg_type__aackpend__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__aackpend__first__bit dw1000__register_types__sys_cfg_type__aackpend__last__bit))

;; dw1000__register_types__sys_cfg_type__aackpend__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__aackpend__position))

(declare-fun dw1000__register_types__sys_cfg_type__reserved_1__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__reserved_1__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__reserved_1__position () Int)

;; dw1000__register_types__sys_cfg_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_cfg_type__reserved_1__first__bit))

;; dw1000__register_types__sys_cfg_type__reserved_1__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__reserved_1__first__bit dw1000__register_types__sys_cfg_type__reserved_1__last__bit))

;; dw1000__register_types__sys_cfg_type__reserved_1__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__reserved_1__position))

(declare-fun dw1000__register_types__sys_cfg_type__reserved_2__first__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__reserved_2__last__bit () Int)

(declare-fun dw1000__register_types__sys_cfg_type__reserved_2__position () Int)

;; dw1000__register_types__sys_cfg_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_cfg_type__reserved_2__first__bit))

;; dw1000__register_types__sys_cfg_type__reserved_2__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__reserved_2__first__bit dw1000__register_types__sys_cfg_type__reserved_2__last__bit))

;; dw1000__register_types__sys_cfg_type__reserved_2__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__reserved_2__position))

(declare-fun dummy16 () us_rep4)

(declare-datatypes ()
((sys_cfg_type__ref (mk_sys_cfg_type__ref (sys_cfg_type__content us_rep4)))))
(define-fun sys_cfg_type__ref___projection ((a sys_cfg_type__ref)) us_rep4 
  (sys_cfg_type__content a))

(declare-fun to_rep7 (bits_32) (_ BitVec 32))

(declare-fun of_rep7 ((_ BitVec 32)) bits_32)

;; inversion_axiom
  (assert
  (forall ((x bits_32))
  (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 32)))
  (! (= (to_rep7 (of_rep7 x)) x) :pattern ((to_rep7 (of_rep7 x))) )))

(define-fun to_int9 ((x bits_32)) Int (bv2nat (to_rep7 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_32)) (! (uint_in_range2
  (to_int9 x)) :pattern ((to_int9 x)) )))

(declare-datatypes ()
((map__ref2 (mk_map__ref2 (map__content2 (Array Int bits_32))))))
(declare-fun slide2 ((Array Int bits_32) Int Int) (Array Int bits_32))

;; slide_eq
  (assert
  (forall ((a (Array Int bits_32)))
  (forall ((first Int))
  (! (= (slide2 a first first) a) :pattern ((slide2 a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bits_32)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide2 a old_first new_first) i)) ))))))

(declare-fun concat3 ((Array Int bits_32) Int Int (Array Int bits_32) Int
  Int) (Array Int bits_32))

;; concat_def
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat3 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton3 (bits_32 Int) (Array Int bits_32))

;; singleton_def
  (assert
  (forall ((v bits_32))
  (forall ((i Int))
  (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i)) ))))

(define-fun bool_eq18 ((a (Array Int bits_32)) (a__first Int) (a__last Int)
  (b (Array Int bits_32)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_184 Int))
                           (=>
                           (and (<= a__first temp___idx_184)
                           (<= temp___idx_184 a__last))
                           (= (to_rep7 (select a temp___idx_184)) (to_rep7
                                                                  (select b (+ (- b__first a__first) temp___idx_184)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq18 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_184 Int))
  (=> (and (<= a__first temp___idx_184) (<= temp___idx_184 a__last))
  (= (to_rep7 (select a temp___idx_184)) (to_rep7
                                         (select b (+ (- b__first a__first) temp___idx_184)))))))))))

(declare-fun compare1 ((Array Int bits_32) Int Int (Array Int bits_32) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare1 a a_first a_last b b_first b_last) 0)
     (= (bool_eq18 a a_first a_last b b_first b_last) true)) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare1 a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq18 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (bvult (to_rep7 (select a (+ i 1))) (to_rep7 (select b (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare1 a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq18 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (bvugt (to_rep7 (select a (+ j 1))) (to_rep7 (select b (+ i 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

(declare-datatypes ()
((us_split_fields10
 (mk___split_fields5
 (rec__decadriver__driver_type__part_id bits_32)(rec__decadriver__driver_type__lot_id bits_32)(rec__decadriver__driver_type__antenna_delay_prf_64 bits_16)(rec__decadriver__driver_type__antenna_delay_prf_16 bits_16)(rec__decadriver__driver_type__xtal_trim bits_5)(rec__decadriver__driver_type__otp_tx_power_levels (Array Int bits_32))(rec__decadriver__driver_type__long_frames Bool)(rec__decadriver__driver_type__sys_cfg_reg us_rep4)(rec__decadriver__driver_type__use_otp_xtal_trim Bool)(rec__decadriver__driver_type__use_otp_antenna_delay Bool)(rec__decadriver__driver_type__detect_frame_timeout Bool)(rec__decadriver__driver_type__detect_sfd_timeout Bool)(rec__decadriver__driver_type__detect_phr_error Bool)(rec__decadriver__driver_type__detect_rs_error Bool)(rec__decadriver__driver_type__detect_fcs_error Bool)))))
(define-fun us_split_fields_Part_ID__projection ((a us_split_fields10)) bits_32 
  (rec__decadriver__driver_type__part_id a))

(define-fun us_split_fields_Lot_ID__projection ((a us_split_fields10)) bits_32 
  (rec__decadriver__driver_type__lot_id a))

(define-fun us_split_fields_Antenna_Delay_PRF_64__projection ((a us_split_fields10)) bits_16 
  (rec__decadriver__driver_type__antenna_delay_prf_64 a))

(define-fun us_split_fields_Antenna_Delay_PRF_16__projection ((a us_split_fields10)) bits_16 
  (rec__decadriver__driver_type__antenna_delay_prf_16 a))

(define-fun us_split_fields_XTAL_Trim__projection ((a us_split_fields10)) bits_5 
  (rec__decadriver__driver_type__xtal_trim a))

(define-fun us_split_fields_OTP_Tx_Power_Levels__projection ((a us_split_fields10)) (Array Int bits_32) 
  (rec__decadriver__driver_type__otp_tx_power_levels a))

(define-fun us_split_fields_Long_Frames__projection ((a us_split_fields10)) Bool 
  (rec__decadriver__driver_type__long_frames a))

(define-fun us_split_fields_SYS_CFG_Reg__projection ((a us_split_fields10)) us_rep4 
  (rec__decadriver__driver_type__sys_cfg_reg a))

(define-fun us_split_fields_Use_OTP_XTAL_Trim__projection ((a us_split_fields10)) Bool 
  (rec__decadriver__driver_type__use_otp_xtal_trim a))

(define-fun us_split_fields_Use_OTP_Antenna_Delay__projection ((a us_split_fields10)) Bool 
  (rec__decadriver__driver_type__use_otp_antenna_delay a))

(define-fun us_split_fields_Detect_Frame_Timeout__projection ((a us_split_fields10)) Bool 
  (rec__decadriver__driver_type__detect_frame_timeout a))

(define-fun us_split_fields_Detect_SFD_Timeout__projection ((a us_split_fields10)) Bool 
  (rec__decadriver__driver_type__detect_sfd_timeout a))

(define-fun us_split_fields_Detect_PHR_Error__projection ((a us_split_fields10)) Bool 
  (rec__decadriver__driver_type__detect_phr_error a))

(define-fun us_split_fields_Detect_RS_Error__projection ((a us_split_fields10)) Bool 
  (rec__decadriver__driver_type__detect_rs_error a))

(define-fun us_split_fields_Detect_FCS_Error__projection ((a us_split_fields10)) Bool 
  (rec__decadriver__driver_type__detect_fcs_error a))

(declare-datatypes ()
((us_split_fields__ref5
 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref_140__projection ((a us_split_fields__ref5)) us_split_fields10 
  (us_split_fields__content5 a))

(declare-datatypes ()
((us_rep5 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep_141__projection ((a us_rep5)) us_split_fields10 (us_split_fields11
                                                                   a))

(declare-fun user_eq19 (us_rep5 us_rep5) Bool)

(declare-fun value__size6 () Int)

(declare-fun object__size6 (us_rep5) Int)

(declare-fun value__alignment6 () Int)

(declare-fun object__alignment6 (us_rep5) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a us_rep5)) (<= 0 (object__size6 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a us_rep5)) (<= 0 (object__alignment6 a))))

(declare-fun decadriver__driver_type__part_id__first__bit () Int)

(declare-fun decadriver__driver_type__part_id__last__bit () Int)

(declare-fun decadriver__driver_type__part_id__position () Int)

;; decadriver__driver_type__part_id__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__part_id__first__bit))

;; decadriver__driver_type__part_id__last__bit_axiom
  (assert
  (< decadriver__driver_type__part_id__first__bit decadriver__driver_type__part_id__last__bit))

;; decadriver__driver_type__part_id__position_axiom
  (assert (<= 0 decadriver__driver_type__part_id__position))

(declare-fun decadriver__driver_type__lot_id__first__bit () Int)

(declare-fun decadriver__driver_type__lot_id__last__bit () Int)

(declare-fun decadriver__driver_type__lot_id__position () Int)

;; decadriver__driver_type__lot_id__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__lot_id__first__bit))

;; decadriver__driver_type__lot_id__last__bit_axiom
  (assert
  (< decadriver__driver_type__lot_id__first__bit decadriver__driver_type__lot_id__last__bit))

;; decadriver__driver_type__lot_id__position_axiom
  (assert (<= 0 decadriver__driver_type__lot_id__position))

(declare-fun decadriver__driver_type__antenna_delay_prf_64__first__bit () Int)

(declare-fun decadriver__driver_type__antenna_delay_prf_64__last__bit () Int)

(declare-fun decadriver__driver_type__antenna_delay_prf_64__position () Int)

;; decadriver__driver_type__antenna_delay_prf_64__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__first__bit))

;; decadriver__driver_type__antenna_delay_prf_64__last__bit_axiom
  (assert
  (< decadriver__driver_type__antenna_delay_prf_64__first__bit decadriver__driver_type__antenna_delay_prf_64__last__bit))

;; decadriver__driver_type__antenna_delay_prf_64__position_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__position))

(declare-fun decadriver__driver_type__antenna_delay_prf_16__first__bit () Int)

(declare-fun decadriver__driver_type__antenna_delay_prf_16__last__bit () Int)

(declare-fun decadriver__driver_type__antenna_delay_prf_16__position () Int)

;; decadriver__driver_type__antenna_delay_prf_16__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__first__bit))

;; decadriver__driver_type__antenna_delay_prf_16__last__bit_axiom
  (assert
  (< decadriver__driver_type__antenna_delay_prf_16__first__bit decadriver__driver_type__antenna_delay_prf_16__last__bit))

;; decadriver__driver_type__antenna_delay_prf_16__position_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__position))

(declare-fun decadriver__driver_type__xtal_trim__first__bit () Int)

(declare-fun decadriver__driver_type__xtal_trim__last__bit () Int)

(declare-fun decadriver__driver_type__xtal_trim__position () Int)

;; decadriver__driver_type__xtal_trim__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__xtal_trim__first__bit))

;; decadriver__driver_type__xtal_trim__last__bit_axiom
  (assert
  (< decadriver__driver_type__xtal_trim__first__bit decadriver__driver_type__xtal_trim__last__bit))

;; decadriver__driver_type__xtal_trim__position_axiom
  (assert (<= 0 decadriver__driver_type__xtal_trim__position))

(declare-fun decadriver__driver_type__otp_tx_power_levels__first__bit () Int)

(declare-fun decadriver__driver_type__otp_tx_power_levels__last__bit () Int)

(declare-fun decadriver__driver_type__otp_tx_power_levels__position () Int)

;; decadriver__driver_type__otp_tx_power_levels__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__otp_tx_power_levels__first__bit))

;; decadriver__driver_type__otp_tx_power_levels__last__bit_axiom
  (assert
  (< decadriver__driver_type__otp_tx_power_levels__first__bit decadriver__driver_type__otp_tx_power_levels__last__bit))

;; decadriver__driver_type__otp_tx_power_levels__position_axiom
  (assert (<= 0 decadriver__driver_type__otp_tx_power_levels__position))

(declare-fun decadriver__driver_type__long_frames__first__bit () Int)

(declare-fun decadriver__driver_type__long_frames__last__bit () Int)

(declare-fun decadriver__driver_type__long_frames__position () Int)

;; decadriver__driver_type__long_frames__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__long_frames__first__bit))

;; decadriver__driver_type__long_frames__last__bit_axiom
  (assert
  (< decadriver__driver_type__long_frames__first__bit decadriver__driver_type__long_frames__last__bit))

;; decadriver__driver_type__long_frames__position_axiom
  (assert (<= 0 decadriver__driver_type__long_frames__position))

(declare-fun decadriver__driver_type__sys_cfg_reg__first__bit () Int)

(declare-fun decadriver__driver_type__sys_cfg_reg__last__bit () Int)

(declare-fun decadriver__driver_type__sys_cfg_reg__position () Int)

;; decadriver__driver_type__sys_cfg_reg__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__sys_cfg_reg__first__bit))

;; decadriver__driver_type__sys_cfg_reg__last__bit_axiom
  (assert
  (< decadriver__driver_type__sys_cfg_reg__first__bit decadriver__driver_type__sys_cfg_reg__last__bit))

;; decadriver__driver_type__sys_cfg_reg__position_axiom
  (assert (<= 0 decadriver__driver_type__sys_cfg_reg__position))

(declare-fun decadriver__driver_type__use_otp_xtal_trim__first__bit () Int)

(declare-fun decadriver__driver_type__use_otp_xtal_trim__last__bit () Int)

(declare-fun decadriver__driver_type__use_otp_xtal_trim__position () Int)

;; decadriver__driver_type__use_otp_xtal_trim__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__first__bit))

;; decadriver__driver_type__use_otp_xtal_trim__last__bit_axiom
  (assert
  (< decadriver__driver_type__use_otp_xtal_trim__first__bit decadriver__driver_type__use_otp_xtal_trim__last__bit))

;; decadriver__driver_type__use_otp_xtal_trim__position_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__position))

(declare-fun decadriver__driver_type__use_otp_antenna_delay__first__bit () Int)

(declare-fun decadriver__driver_type__use_otp_antenna_delay__last__bit () Int)

(declare-fun decadriver__driver_type__use_otp_antenna_delay__position () Int)

;; decadriver__driver_type__use_otp_antenna_delay__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__first__bit))

;; decadriver__driver_type__use_otp_antenna_delay__last__bit_axiom
  (assert
  (< decadriver__driver_type__use_otp_antenna_delay__first__bit decadriver__driver_type__use_otp_antenna_delay__last__bit))

;; decadriver__driver_type__use_otp_antenna_delay__position_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__position))

(declare-fun decadriver__driver_type__detect_frame_timeout__first__bit () Int)

(declare-fun decadriver__driver_type__detect_frame_timeout__last__bit () Int)

(declare-fun decadriver__driver_type__detect_frame_timeout__position () Int)

;; decadriver__driver_type__detect_frame_timeout__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_frame_timeout__first__bit))

;; decadriver__driver_type__detect_frame_timeout__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_frame_timeout__first__bit decadriver__driver_type__detect_frame_timeout__last__bit))

;; decadriver__driver_type__detect_frame_timeout__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_frame_timeout__position))

(declare-fun decadriver__driver_type__detect_sfd_timeout__first__bit () Int)

(declare-fun decadriver__driver_type__detect_sfd_timeout__last__bit () Int)

(declare-fun decadriver__driver_type__detect_sfd_timeout__position () Int)

;; decadriver__driver_type__detect_sfd_timeout__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_sfd_timeout__first__bit))

;; decadriver__driver_type__detect_sfd_timeout__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_sfd_timeout__first__bit decadriver__driver_type__detect_sfd_timeout__last__bit))

;; decadriver__driver_type__detect_sfd_timeout__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_sfd_timeout__position))

(declare-fun decadriver__driver_type__detect_phr_error__first__bit () Int)

(declare-fun decadriver__driver_type__detect_phr_error__last__bit () Int)

(declare-fun decadriver__driver_type__detect_phr_error__position () Int)

;; decadriver__driver_type__detect_phr_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_phr_error__first__bit))

;; decadriver__driver_type__detect_phr_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_phr_error__first__bit decadriver__driver_type__detect_phr_error__last__bit))

;; decadriver__driver_type__detect_phr_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_phr_error__position))

(declare-fun decadriver__driver_type__detect_rs_error__first__bit () Int)

(declare-fun decadriver__driver_type__detect_rs_error__last__bit () Int)

(declare-fun decadriver__driver_type__detect_rs_error__position () Int)

;; decadriver__driver_type__detect_rs_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_rs_error__first__bit))

;; decadriver__driver_type__detect_rs_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_rs_error__first__bit decadriver__driver_type__detect_rs_error__last__bit))

;; decadriver__driver_type__detect_rs_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_rs_error__position))

(declare-fun decadriver__driver_type__detect_fcs_error__first__bit () Int)

(declare-fun decadriver__driver_type__detect_fcs_error__last__bit () Int)

(declare-fun decadriver__driver_type__detect_fcs_error__position () Int)

;; decadriver__driver_type__detect_fcs_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_fcs_error__first__bit))

;; decadriver__driver_type__detect_fcs_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_fcs_error__first__bit decadriver__driver_type__detect_fcs_error__last__bit))

;; decadriver__driver_type__detect_fcs_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_fcs_error__position))

(declare-datatypes ()
((driver_type__ref (mk_driver_type__ref (driver_type__content us_rep5)))))
(define-fun driver_type__ref___projection ((a driver_type__ref)) us_rep5 
  (driver_type__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(define-fun dynamic_invariant1 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_33)))

(define-fun dynamic_invariant2 ((temp___expr_4407 Int)
  (temp___is_init_4404 Bool) (temp___skip_constant_4405 Bool)
  (temp___do_toplevel_4406 Bool)) Bool (=>
                                       (or (= temp___is_init_4404 true)
                                       (<= 0 1024)) (in_range6
                                       temp___expr_4407)))

(define-fun dynamic_invariant3 ((temp___expr_4413 Int)
  (temp___is_init_4410 Bool) (temp___skip_constant_4411 Bool)
  (temp___do_toplevel_4412 Bool)) Bool (=>
                                       (or (= temp___is_init_4410 true)
                                       (<= 0 5)) (in_range7
                                       temp___expr_4413)))

(define-fun dynamic_invariant4 ((temp___expr_4419 us_rep1)
  (temp___is_init_4416 Bool) (temp___skip_constant_4417 Bool)
  (temp___do_toplevel_4418 Bool)) Bool (=> (= temp___do_toplevel_4418 true)
                                       (=> (= temp___is_init_4416 true)
                                       (ite (= (to_rep3
                                               (rec__decadriver__rx_frame_type__error
                                               (us_split_fields3
                                               temp___expr_4419))) 0)
                                       (< 0 (to_rep2
                                            (rec__decadriver__rx_frame_type__size
                                            (us_split_fields3
                                            temp___expr_4419))))
                                       (= (to_rep2
                                          (rec__decadriver__rx_frame_type__size
                                          (us_split_fields3 temp___expr_4419))) 0)))))

(define-fun dynamic_predicate ((temp___4430 us_rep1)) Bool (ite (= (to_rep3
                                                                   (rec__decadriver__rx_frame_type__error
                                                                   (us_split_fields3
                                                                   temp___4430))) 0)
                                                           (< 0 (to_rep2
                                                                (rec__decadriver__rx_frame_type__size
                                                                (us_split_fields3
                                                                temp___4430))))
                                                           (= (to_rep2
                                                              (rec__decadriver__rx_frame_type__size
                                                              (us_split_fields3
                                                              temp___4430))) 0)))

(define-fun dynamic_invariant5 ((temp___expr_4437 (_ BitVec 8))
  (temp___is_init_4434 Bool) (temp___skip_constant_4435 Bool)
  (temp___do_toplevel_4436 Bool)) Bool (=>
                                       (or (= temp___is_init_4434 true)
                                       (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 1)))
                                       (in_range5 temp___expr_4437)))

(define-fun dynamic_invariant6 ((temp___expr_699 Int)
  (temp___is_init_696 Bool) (temp___skip_constant_697 Bool)
  (temp___do_toplevel_698 Bool)) Bool (=>
                                      (or (= temp___is_init_696 true)
                                      (<= 0 97)) (in_range2 temp___expr_699)))

(define-fun dynamic_invariant7 ((temp___expr_705 Int)
  (temp___is_init_702 Bool) (temp___skip_constant_703 Bool)
  (temp___do_toplevel_704 Bool)) Bool (=>
                                      (or (= temp___is_init_702 true)
                                      (<= 98 98)) (in_range3
                                      temp___expr_705)))

(define-fun dynamic_invariant8 ((temp___expr_281 (_ BitVec 8))
  (temp___is_init_278 Bool) (temp___skip_constant_279 Bool)
  (temp___do_toplevel_280 Bool)) Bool (=>
                                      (or (= temp___is_init_278 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 1)))
                                      (in_range temp___expr_281)))

(define-fun dynamic_invariant9 ((temp___expr_287 (_ BitVec 8))
  (temp___is_init_284 Bool) (temp___skip_constant_285 Bool)
  (temp___do_toplevel_286 Bool)) Bool (=>
                                      (or (= temp___is_init_284 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 3)))
                                      (in_range8 temp___expr_287)))

(define-fun dynamic_invariant10 ((temp___expr_293 (_ BitVec 8))
  (temp___is_init_290 Bool) (temp___skip_constant_291 Bool)
  (temp___do_toplevel_292 Bool)) Bool (=>
                                      (or (= temp___is_init_290 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 7)))
                                      (in_range9 temp___expr_293)))

(define-fun dynamic_invariant11 ((temp___expr_305 (_ BitVec 8))
  (temp___is_init_302 Bool) (temp___skip_constant_303 Bool)
  (temp___do_toplevel_304 Bool)) Bool (=>
                                      (or (= temp___is_init_302 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 31)))
                                      (in_range1 temp___expr_305)))

(define-fun dynamic_invariant12 ((temp___expr_323 (_ BitVec 8))
  (temp___is_init_320 Bool) (temp___skip_constant_321 Bool)
  (temp___do_toplevel_322 Bool)) Bool true)

(define-fun dynamic_invariant13 ((temp___expr_371 (_ BitVec 16))
  (temp___is_init_368 Bool) (temp___skip_constant_369 Bool)
  (temp___do_toplevel_370 Bool)) Bool true)

(define-fun dynamic_invariant14 ((temp___expr_467 (_ BitVec 32))
  (temp___is_init_464 Bool) (temp___skip_constant_465 Bool)
  (temp___do_toplevel_466 Bool)) Bool true)

(declare-fun receiver () (Array (_ BitVec 8) us_rep1))

(declare-fun receiver1 () rx_frame_queue_index)

(declare-fun receiver2 () natural)

(declare-fun receiver3 () Bool)

(declare-fun receiver4 () Bool)

(declare-fun sys_status_reg__split_fields () us_split_fields__ref)

(declare-fun sys_status_clear__split_fields () us_split_fields__ref)

(declare-fun self__ () driver_type__ref)

(declare-fun o () bits_5)

(declare-fun o1 () bits_1)

(declare-fun o2 () bits_1)

(declare-fun o3 () bits_1)

(declare-fun o4 () bits_1)

(declare-fun o5 () bits_1)

(declare-fun o6 () bits_1)

(declare-fun o7 () bits_1)

(declare-fun o8 () bits_1)

(declare-fun o9 () bits_1)

(declare-fun o10 () bits_1)

(declare-fun o11 () bits_1)

(declare-fun o12 () bits_1)

(declare-fun o13 () bits_1)

(declare-fun o14 () bits_1)

(declare-fun o15 () bits_1)

(declare-fun o16 () bits_1)

(declare-fun o17 () bits_1)

(declare-fun o18 () bits_1)

(declare-fun o19 () bits_1)

(declare-fun o20 () bits_1)

(declare-fun o21 () bits_1)

(declare-fun o22 () bits_1)

(declare-fun o23 () bits_1)

(declare-fun o24 () bits_1)

(declare-fun o25 () bits_1)

(declare-fun o26 () bits_1)

(declare-fun o27 () bits_1)

(declare-fun o28 () bits_1)

(declare-fun o29 () bits_1)

(declare-fun o30 () bits_1)

(declare-fun o31 () bits_1)

(declare-fun o32 () bits_1)

(declare-fun o33 () bits_1)

(declare-fun o34 () bits_1)

(declare-fun o35 () bits_1)

(declare-fun o36 () us_split_fields)

(declare-fun decadriver__driver_type__dw1000_irq__sys_status_clear__assume () us_rep)

(declare-fun o37 () (Array (_ BitVec 8) us_rep1))

(declare-fun o38 () rx_frame_queue_index)

(declare-fun o39 () natural)

(declare-fun o40 () Bool)

(declare-fun o41 () Bool)

(declare-fun o42 () bits_1)

(declare-fun o43 () us_split_fields)

(declare-fun temp___4603 () us_rep)

(declare-fun o44 () (Array (_ BitVec 8) us_rep1))

(declare-fun o45 () rx_frame_queue_index)

(declare-fun o46 () natural)

(declare-fun o47 () Bool)

(declare-fun o48 () Bool)

(declare-fun receiver5 () (Array (_ BitVec 8) us_rep1))

(declare-fun receiver6 () rx_frame_queue_index)

(declare-fun receiver7 () natural)

(declare-fun receiver8 () Bool)

(declare-fun receiver9 () Bool)

(declare-fun result () us_split_fields__ref)

(declare-fun sys_status_clear__split_fields1 () us_split_fields)

(declare-fun dw1000__registers__sys_status__read__reg__fields () us_split_fields)

(declare-fun result1 () us_split_fields__ref)

(declare-fun sys_status_reg__split_fields1 () us_split_fields)

(declare-fun receiver10 () (Array (_ BitVec 8) us_rep1))

(declare-fun receiver11 () rx_frame_queue_index)

(declare-fun receiver12 () natural)

(declare-fun receiver13 () Bool)

(declare-fun receiver14 () Bool)

(declare-fun result2 () us_split_fields__ref)

(declare-fun sys_status_clear__split_fields2 () us_split_fields)

(declare-fun receiver15 () (Array (_ BitVec 8) us_rep1))

(declare-fun receiver16 () rx_frame_queue_index)

(declare-fun receiver17 () natural)

(declare-fun receiver18 () Bool)

(declare-fun receiver19 () Bool)

(define-fun receiver20 () us_rep2 (mk___rep2
                                  (mk___split_fields2 receiver15 receiver16
                                  receiver17 receiver18 receiver19)))

(define-fun receiver21 () us_rep2 (mk___rep2
                                  (mk___split_fields2 receiver10 receiver11
                                  receiver12 receiver13 receiver14)))

(define-fun receiver22 () us_rep2 (mk___rep2
                                  (mk___split_fields2 receiver5 receiver6
                                  receiver7 receiver8 receiver9)))

;; H
  (assert (dynamic_invariant
  (mk___rep2
  (mk___split_fields2 receiver receiver1 receiver2 receiver3 receiver4)) true
  false true))

;; H
  (assert (= (to_rep1 o) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o1) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o2) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o3) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o4) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o5) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o6) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o7) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o8) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o9) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o10) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o11) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o12) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o13) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o14) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o15) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o16) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o17) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o18) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o19) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o20) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o21) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o22) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o23) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o24) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o25) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o26) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o27) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o28) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o29) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o30) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o31) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o32) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o33) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o34) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o35) ((_ int2bv 8) 0)))

;; H
  (assert
  (= o36 (mk___split_fields o35 o34 o33 o32 o31 o30 o29 o28 o27 o26 o25 
         o24 o23 o22 o21 o20 o19 o18 o17 o16 o15 o14 o13 o12 o11 o10 
         o9 o8 o7 o6 o5 o4 o3 o2 o1 o)))

;; H
  (assert
  (= decadriver__driver_type__dw1000_irq__sys_status_clear__assume (mk___rep
                                                                   o36)))

;; H
  (assert (= result sys_status_clear__split_fields))

;; H
  (assert
  (= (let ((subject sys_status_clear__split_fields))
     sys_status_clear__split_fields1) (us_split_fields1
                                      decadriver__driver_type__dw1000_irq__sys_status_clear__assume)))

;; H
  (assert (= result1 sys_status_reg__split_fields))

;; H
  (assert
  (= (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1) dw1000__registers__sys_status__read__reg__fields))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (=>
  (= (rec__decadriver__driver_type__detect_frame_timeout
     (us_split_fields11 (driver_type__content self__))) true)
  (dynamic_invariant receiver21 true true true))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (=>
  (= (rec__decadriver__driver_type__detect_frame_timeout
     (us_split_fields11 (driver_type__content self__))) true)
  (= (mk___rep2 (mk___split_fields2 o37 o38 o39 o40 o41)) receiver21))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (=>
  (not
  (= (rec__decadriver__driver_type__detect_frame_timeout
     (us_split_fields11 (driver_type__content self__))) true))
  (= receiver receiver10))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (=>
  (not
  (= (rec__decadriver__driver_type__detect_frame_timeout
     (us_split_fields11 (driver_type__content self__))) true))
  (= receiver1 receiver11))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (=>
  (not
  (= (rec__decadriver__driver_type__detect_frame_timeout
     (us_split_fields11 (driver_type__content self__))) true))
  (= receiver2 receiver12))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (=>
  (not
  (= (rec__decadriver__driver_type__detect_frame_timeout
     (us_split_fields11 (driver_type__content self__))) true))
  (= receiver3 receiver13))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (=>
  (not
  (= (rec__decadriver__driver_type__detect_frame_timeout
     (us_split_fields11 (driver_type__content self__))) true))
  (= receiver4 receiver14))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (=>
  (not
  (= (rec__decadriver__driver_type__detect_frame_timeout
     (us_split_fields11 (driver_type__content self__))) true))
  (= receiver21 receiver22))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (= (to_rep o42) ((_ int2bv 8) 1))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (= o43 (mk___split_fields
         (rec__dw1000__register_types__sys_status_type__irqs
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__cplock
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__esyncr
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__aat
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__txfrb
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__txprs
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__txphs
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__txfrs
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxprd
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxsfdd
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__ldedone
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxphd
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxphe
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxdfr
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxfcg
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxfce
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxrfsl
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1)) o42
         (rec__dw1000__register_types__sys_status_type__ldeerr
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxovrr
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxpto
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__gpioirq
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__slp2init
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rfpll_ll
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__clkpll_ll
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxsfdto
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__hpdwarn
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__txberr
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__affrej
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__hsrbp
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__icrbp
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxrscs
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__rxprej
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__txpute
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__reserved_1
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))
         (rec__dw1000__register_types__sys_status_type__reserved_2
         (let ((subject sys_status_clear__split_fields))
         sys_status_clear__split_fields1))))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (= temp___4603 (mk___rep o43))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (= result2 (let ((subject sys_status_clear__split_fields))
             (mk___split_fields__ref sys_status_clear__split_fields1)))))

;; H
  (assert
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1))
  (= (let ((subject sys_status_clear__split_fields))
     sys_status_clear__split_fields2) (us_split_fields1 temp___4603))))

;; H
  (assert
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1)))
  (= (let ((subject sys_status_clear__split_fields))
     (mk___split_fields__ref sys_status_clear__split_fields2)) (let ((subject 
                                                               sys_status_clear__split_fields))
                                                               (mk___split_fields__ref
                                                               sys_status_clear__split_fields1)))))

;; H
  (assert
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1)))
  (= receiver receiver10)))

;; H
  (assert
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1)))
  (= receiver1 receiver11)))

;; H
  (assert
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1)))
  (= receiver2 receiver12)))

;; H
  (assert
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1)))
  (= receiver3 receiver13)))

;; H
  (assert
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1)))
  (= receiver4 receiver14)))

;; H
  (assert
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1)))
  (= sys_status_clear__split_fields2 sys_status_clear__split_fields1)))

;; H
  (assert
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxrfto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1)))
  (= receiver21 receiver22)))

;; H
  (assert
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__rxsfdto
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields1))) ((_ int2bv 8) 1)))

;; H
  (assert
  (= (rec__decadriver__driver_type__detect_sfd_timeout
     (us_split_fields11 (driver_type__content self__))) true))

;; H
  (assert (dynamic_invariant receiver20 true true true))

;; H
  (assert
  (= (mk___rep2 (mk___split_fields2 o44 o45 o46 o47 o48)) receiver20))

(assert
;; WP_parameter_def
 ;; File "decadriver.ads", line 242, characters 0-0
  (not (not (= 3 0))))
(check-sat)
