;; produced by cvc4_14.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
;;; SMT-LIB2: real arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun pow2 (Int) Int)

(define-fun to_nearest ((m RoundingMode)) Bool (or (= m RNE) (= m RNA)))

(define-fun is_plus_infinity ((x Float32)) Bool (and (fp.isInfinite  x)
                                                (fp.isPositive  x)))

(define-fun is_minus_infinity ((x Float32)) Bool (and (fp.isInfinite  x)
                                                 (fp.isNegative  x)))

(define-fun is_plus_zero ((x Float32)) Bool (and (fp.isZero      x)
                                            (fp.isPositive  x)))

(define-fun is_minus_zero ((x Float32)) Bool (and (fp.isZero      x)
                                             (fp.isNegative  x)))

(declare-fun of_int (RoundingMode Int) Float32)

(declare-fun to_int1 (RoundingMode Float32) Int)

(declare-fun round (RoundingMode Real) Real)

(declare-fun max_int () Int)

(define-fun in_range ((x Real)) Bool (and
                                     (<= (- (* 33554430.0 10141204801825835211973625643008.0)) x)
                                     (<= x (* 33554430.0 10141204801825835211973625643008.0))))

(define-fun in_int_range ((i Int)) Bool (and (<= (- max_int) i)
                                        (<= i max_int)))

(define-fun no_overflow ((m RoundingMode) (x Real)) Bool (in_range
  (round m x)))

(define-fun in_safe_int_range ((i Int)) Bool (and (<= (- 16777216) i)
                                             (<= i 16777216)))

(define-fun same_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive  x) (fp.isPositive  y))
                    (and (fp.isNegative  x) (fp.isNegative  y))))

(define-fun diff_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive  x) (fp.isNegative  y))
                    (and (fp.isNegative  x) (fp.isPositive  y))))

(define-fun product_sign ((z Float32) (x Float32)
  (y Float32)) Bool (and (=> (same_sign x y) (fp.isPositive  z))
                    (=> (diff_sign x y) (fp.isNegative  z))))

(define-fun sqr ((x Real)) Real (* x x))

(declare-fun sqrt (Real) Real)

(define-fun same_sign_real ((x Float32)
  (r Real)) Bool (or (and (fp.isPositive  x) (< 0.0 r))
                 (and (fp.isNegative  x) (< r 0.0))))

(declare-fun is_int1 (Float32) Bool)

(declare-datatypes () ((t__ref (mk_t__ref (t__content Float32)))))
(define-fun to_int2 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int1 ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range1 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort float 0)

(declare-fun user_eq (float float) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE1 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Float32)

(declare-fun dummy () float)

(declare-datatypes () ((float__ref (mk_float__ref (float__content float)))))
(define-fun float__ref___projection ((a float__ref)) float (float__content a))

(declare-fun to_rep (float) Float32)

(declare-fun of_rep (Float32) float)

;; inversion_axiom
  (assert
  (forall ((x float)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x float))
  (! (not (or (fp.isInfinite (to_rep x)) (fp.isNaN (to_rep x)))) :pattern (
  (to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Float32))
  (! (=> (not (or (fp.isInfinite x) (fp.isNaN x))) (= (to_rep (of_rep x)) x)) :pattern (
  (to_rep (of_rep x))) )))

(declare-sort num_delimiters_range 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (num_delimiters_range num_delimiters_range) Bool)

(declare-fun dummy1 () num_delimiters_range)

(declare-datatypes ()
((num_delimiters_range__ref
 (mk_num_delimiters_range__ref
 (num_delimiters_range__content num_delimiters_range)))))
(define-fun num_delimiters_range__ref___projection ((a num_delimiters_range__ref)) num_delimiters_range 
  (num_delimiters_range__content a))

(define-fun dynamic_invariant ((temp___expr_136 Int)
  (temp___is_init_133 Bool) (temp___skip_constant_134 Bool)
  (temp___do_toplevel_135 Bool)) Bool (=>
                                      (or (= temp___is_init_133 true)
                                      (<= 0 10)) (in_range2 temp___expr_136)))

(declare-fun to_rep1 (num_delimiters_range) Int)

(declare-fun of_rep1 (Int) num_delimiters_range)

;; inversion_axiom
  (assert
  (forall ((x num_delimiters_range))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x num_delimiters_range)) (! (in_range2
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort function_range 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (function_range function_range) Bool)

(declare-fun dummy2 () function_range)

(declare-datatypes ()
((function_range__ref
 (mk_function_range__ref (function_range__content function_range)))))
(define-fun function_range__ref___projection ((a function_range__ref)) function_range 
  (function_range__content a))

(declare-fun to_rep2 (function_range) Int)

(declare-fun of_rep2 (Int) function_range)

;; inversion_axiom
  (assert
  (forall ((x function_range))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x function_range)) (! (in_range3
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__step_function__delimiter_entry__delimiter function_range)(rec__step_function__delimiter_entry__value float)))))
(define-fun us_split_fields_Delimiter__projection ((a us_split_fields)) function_range 
  (rec__step_function__delimiter_entry__delimiter a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep2
                           (rec__step_function__delimiter_entry__delimiter
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__step_function__delimiter_entry__delimiter
                                                  (us_split_fields1 b))))
                        (= (to_rep
                           (rec__step_function__delimiter_entry__value
                           (us_split_fields1 a))) (to_rep
                                                  (rec__step_function__delimiter_entry__value
                                                  (us_split_fields1 b)))))
                   true false))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun step_function__delimiter_entry__delimiter__first__bit () Int)

(declare-fun step_function__delimiter_entry__delimiter__last__bit () Int)

(declare-fun step_function__delimiter_entry__delimiter__position () Int)

;; step_function__delimiter_entry__delimiter__first__bit_axiom
  (assert (<= 0 step_function__delimiter_entry__delimiter__first__bit))

;; step_function__delimiter_entry__delimiter__last__bit_axiom
  (assert
  (< step_function__delimiter_entry__delimiter__first__bit step_function__delimiter_entry__delimiter__last__bit))

;; step_function__delimiter_entry__delimiter__position_axiom
  (assert (<= 0 step_function__delimiter_entry__delimiter__position))

(declare-fun step_function__delimiter_entry__value__first__bit () Int)

(declare-fun step_function__delimiter_entry__value__last__bit () Int)

(declare-fun step_function__delimiter_entry__value__position () Int)

;; step_function__delimiter_entry__value__first__bit_axiom
  (assert (<= 0 step_function__delimiter_entry__value__first__bit))

;; step_function__delimiter_entry__value__last__bit_axiom
  (assert
  (< step_function__delimiter_entry__value__first__bit step_function__delimiter_entry__value__last__bit))

;; step_function__delimiter_entry__value__position_axiom
  (assert (<= 0 step_function__delimiter_entry__value__position))

(declare-fun dummy3 () us_rep)

(declare-datatypes ()
((delimiter_entry__ref
 (mk_delimiter_entry__ref (delimiter_entry__content us_rep)))))
(define-fun delimiter_entry__ref___projection ((a delimiter_entry__ref)) us_rep 
  (delimiter_entry__content a))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int us_rep) Int Int (Array Int us_rep) Int
  Int) (Array Int us_rep))

;; concat_def
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (us_rep Int) (Array Int us_rep))

;; singleton_def
  (assert
  (forall ((v us_rep))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int)
  (b (Array Int us_rep)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (bool_eq (select a temp___idx_132)
                              (select b (+ (- b__first a__first) temp___idx_132))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (bool_eq (select a temp___idx_132)
     (select b (+ (- b__first a__first) temp___idx_132))) true))))))))

(declare-fun dummy4 () (Array Int us_rep))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int us_rep)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int us_rep)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int us_rep)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int us_rep))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment1 a))))

(declare-fun user_eq4 ((Array Int us_rep) (Array Int us_rep)) Bool)

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__step_function__step_function_t__number_of_delimiters num_delimiters_range)(rec__step_function__step_function_t__step (Array Int us_rep))))))
(define-fun us_split_fields_Number_Of_Delimiters__projection ((a us_split_fields2)) num_delimiters_range 
  (rec__step_function__step_function_t__number_of_delimiters a))

(define-fun us_split_fields_Step__projection ((a us_split_fields2)) (Array Int us_rep) 
  (rec__step_function__step_function_t__step a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep_2__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                a))

(define-fun bool_eq2 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep1
                            (rec__step_function__step_function_t__number_of_delimiters
                            (us_split_fields3 a))) (to_rep1
                                                   (rec__step_function__step_function_t__number_of_delimiters
                                                   (us_split_fields3 b))))
                         (= (bool_eq1
                            (rec__step_function__step_function_t__step
                            (us_split_fields3 a)) 0 10
                            (rec__step_function__step_function_t__step
                            (us_split_fields3 b)) 0 10) true))
                    true false))

(declare-fun user_eq5 (us_rep1 us_rep1) Bool)

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep1) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))

(declare-fun step_function__step_function_t__number_of_delimiters__first__bit () Int)

(declare-fun step_function__step_function_t__number_of_delimiters__last__bit () Int)

(declare-fun step_function__step_function_t__number_of_delimiters__position () Int)

;; step_function__step_function_t__number_of_delimiters__first__bit_axiom
  (assert
  (<= 0 step_function__step_function_t__number_of_delimiters__first__bit))

;; step_function__step_function_t__number_of_delimiters__last__bit_axiom
  (assert
  (< step_function__step_function_t__number_of_delimiters__first__bit 
  step_function__step_function_t__number_of_delimiters__last__bit))

;; step_function__step_function_t__number_of_delimiters__position_axiom
  (assert
  (<= 0 step_function__step_function_t__number_of_delimiters__position))

(declare-fun step_function__step_function_t__step__first__bit () Int)

(declare-fun step_function__step_function_t__step__last__bit () Int)

(declare-fun step_function__step_function_t__step__position () Int)

;; step_function__step_function_t__step__first__bit_axiom
  (assert (<= 0 step_function__step_function_t__step__first__bit))

;; step_function__step_function_t__step__last__bit_axiom
  (assert
  (< step_function__step_function_t__step__first__bit step_function__step_function_t__step__last__bit))

;; step_function__step_function_t__step__position_axiom
  (assert (<= 0 step_function__step_function_t__step__position))

(declare-fun dummy5 () us_rep1)

(declare-datatypes ()
((step_function_t__ref
 (mk_step_function_t__ref (step_function_t__content us_rep1)))))
(define-fun step_function_t__ref___projection ((a step_function_t__ref)) us_rep1 
  (step_function_t__content a))

(declare-fun min (Float32 Float32) Float32)

(declare-fun min__function_guard (Float32 Float32 Float32) Bool)

(define-fun dynamic_invariant1 ((temp___expr_51 Float32)
  (temp___is_init_48 Bool) (temp___skip_constant_49 Bool)
  (temp___do_toplevel_50 Bool)) Bool (=>
                                     (or (= temp___is_init_48 true)
                                     (fp.leq (fp.neg (fp #b0 #b11111110 #b11111111111111111111111)) (fp #b0 #b11111110 #b11111111111111111111111)))
                                     (not (or (fp.isInfinite temp___expr_51) (fp.isNaN temp___expr_51)))))

;; min__post_axiom
  (assert
  (forall ((x1 Float32) (x2 Float32))
  (! (=>
     (and (dynamic_invariant1 x1 true true true) (dynamic_invariant1 x2 true
     true true))
     (let ((result (min x1 x2)))
     (and (ite (fp.leq x1 x2) (fp.eq result x1) (fp.eq result x2))
     (dynamic_invariant1 result true false true)))) :pattern ((min x1 x2)) )))

(declare-fun is_valid (us_rep1) Bool)

(declare-fun is_valid__function_guard (Bool us_rep1) Bool)

;; is_valid__post_axiom
  (assert true)

;; is_valid__def_axiom
  (assert
  (forall ((sfun us_rep1))
  (! (= (= (is_valid sfun) true)
     (and
     (= (to_rep2
        (rec__step_function__delimiter_entry__delimiter
        (us_split_fields1
        (let ((temp___182 (rec__step_function__step_function_t__step
                          (us_split_fields3 sfun))))
        (select temp___182 0))))) 0)
     (forall ((i Int))
     (=>
     (and (<= 0 i)
     (<= i (- (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun))) 1)))
     (< (to_rep2
        (rec__step_function__delimiter_entry__delimiter
        (us_split_fields1
        (let ((temp___184 (rec__step_function__step_function_t__step
                          (us_split_fields3 sfun))))
        (select temp___184 i))))) (to_rep2
                                  (rec__step_function__delimiter_entry__delimiter
                                  (us_split_fields1
                                  (let ((temp___183 (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun))))
                                  (select temp___183 (+ i 1))))))))))) :pattern (
  (is_valid sfun)) )))

(declare-fun get_value (us_rep1 Int) Float32)

(declare-fun get_value__function_guard (Float32 us_rep1 Int) Bool)

(define-fun dynamic_invariant2 ((temp___expr_142 Int)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (=>
                                      (or (= temp___is_init_139 true)
                                      (<= 0 2147483647)) (in_range3
                                      temp___expr_142)))

;; get_value__post_axiom
  (assert
  (forall ((sfun us_rep1))
  (forall ((x Int))
  (! (=> (and (dynamic_invariant2 x true true true) (= (is_valid sfun) true))
     (let ((result (get_value sfun x)))
     (and
     (or
     (exists ((i Int))
     (and
     (and (<= 0 i)
     (<= i (- (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun))) 1)))
     (and
     (and
     (<= (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (let ((temp___199 (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun))))
         (select temp___199 i))))) x)
     (< x (to_rep2
          (rec__step_function__delimiter_entry__delimiter
          (us_split_fields1
          (let ((temp___200 (rec__step_function__step_function_t__step
                            (us_split_fields3 sfun))))
          (select temp___200 (+ i 1))))))))
     (fp.eq result (to_rep
                   (rec__step_function__delimiter_entry__value
                   (us_split_fields1
                   (let ((temp___201 (rec__step_function__step_function_t__step
                                     (us_split_fields3 sfun))))
                   (select temp___201 i)))))))))
     (and
     (<= (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (let ((temp___202 (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun))))
         (select temp___202 (to_rep1
                            (rec__step_function__step_function_t__number_of_delimiters
                            (us_split_fields3 sfun)))))))) x)
     (fp.eq result (to_rep
                   (rec__step_function__delimiter_entry__value
                   (us_split_fields1
                   (let ((temp___203 (rec__step_function__step_function_t__step
                                     (us_split_fields3 sfun))))
                   (select temp___203 (to_rep1
                                      (rec__step_function__step_function_t__number_of_delimiters
                                      (us_split_fields3 sfun)))))))))))
     (dynamic_invariant1 result true false true)))) :pattern ((get_value sfun
                                                              x)) ))))

(declare-fun sfun1 () us_rep1)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun sfun2 () us_rep1)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun merge__split_fields () num_delimiters_range)

(declare-fun merge__split_fields1 () (Array Int us_rep))

(declare-fun i1 () Int)

(declare-fun i2 () Int)

(declare-fun im () Int)

(declare-fun scan_sfun1 () Bool)

(declare-fun scan_sfun2 () Bool)

(declare-fun o () float)

(declare-fun o1 () function_range)

(declare-fun o2 () function_range)

(declare-fun o3 () float)

(declare-fun o4 () function_range)

(declare-fun o5 () float)

(declare-fun o6 () (Array Int us_rep))

(declare-fun o7 () num_delimiters_range)

(declare-fun o8 () (Array Int us_rep))

(declare-fun temp___313 () num_delimiters_range)

(declare-fun temp___3131 () (Array Int us_rep))

(declare-fun o9 () function_range)

(declare-fun o10 () us_split_fields)

(declare-fun o11 () us_rep)

(declare-fun o12 () (Array Int us_rep))

(declare-fun o13 () us_split_fields2)

(declare-fun temp___375 () us_rep1)

(declare-fun o14 () Float32)

(declare-fun o15 () Float32)

(declare-fun o16 () Float32)

(declare-fun o17 () float)

(declare-fun o18 () us_split_fields)

(declare-fun o19 () us_rep)

(declare-fun o20 () (Array Int us_rep))

(declare-fun o21 () us_split_fields2)

(declare-fun temp___382 () us_rep1)

(declare-fun o22 () function_range)

(declare-fun o23 () us_split_fields)

(declare-fun o24 () us_rep)

(declare-fun o25 () (Array Int us_rep))

(declare-fun o26 () us_split_fields2)

(declare-fun temp___360 () us_rep1)

(declare-fun o27 () Float32)

(declare-fun o28 () Float32)

(declare-fun o29 () Float32)

(declare-fun o30 () float)

(declare-fun o31 () us_split_fields)

(declare-fun o32 () us_rep)

(declare-fun o33 () (Array Int us_rep))

(declare-fun o34 () us_split_fields2)

(declare-fun temp___367 () us_rep1)

(declare-fun o35 () function_range)

(declare-fun o36 () us_split_fields)

(declare-fun o37 () us_rep)

(declare-fun o38 () (Array Int us_rep))

(declare-fun o39 () us_split_fields2)

(declare-fun temp___345 () us_rep1)

(declare-fun o40 () Float32)

(declare-fun o41 () Float32)

(declare-fun o42 () Float32)

(declare-fun o43 () float)

(declare-fun o44 () us_split_fields)

(declare-fun o45 () us_rep)

(declare-fun o46 () (Array Int us_rep))

(declare-fun o47 () us_split_fields2)

(declare-fun temp___352 () us_rep1)

(declare-fun o48 () function_range)

(declare-fun o49 () us_split_fields)

(declare-fun o50 () us_rep)

(declare-fun o51 () (Array Int us_rep))

(declare-fun o52 () us_split_fields2)

(declare-fun temp___332 () us_rep1)

(declare-fun o53 () Float32)

(declare-fun o54 () Float32)

(declare-fun o55 () Float32)

(declare-fun o56 () float)

(declare-fun o57 () us_split_fields)

(declare-fun o58 () us_rep)

(declare-fun o59 () (Array Int us_rep))

(declare-fun o60 () us_split_fields2)

(declare-fun temp___339 () us_rep1)

(declare-fun o61 () function_range)

(declare-fun o62 () us_split_fields)

(declare-fun o63 () us_rep)

(declare-fun o64 () (Array Int us_rep))

(declare-fun o65 () us_split_fields2)

(declare-fun temp___319 () us_rep1)

(declare-fun o66 () Float32)

(declare-fun o67 () Float32)

(declare-fun o68 () Float32)

(declare-fun o69 () float)

(declare-fun o70 () us_split_fields)

(declare-fun o71 () us_rep)

(declare-fun o72 () (Array Int us_rep))

(declare-fun o73 () us_split_fields2)

(declare-fun temp___326 () us_rep1)

(declare-fun o74 () Int)

(declare-fun o75 () float)

(declare-fun o76 () function_range)

(declare-fun o77 () us_split_fields)

(declare-fun o78 () us_rep)

(declare-fun o79 () (Array Int us_rep))

(declare-fun o80 () us_split_fields2)

(declare-fun temp___3132 () us_rep1)

(declare-fun result () int__ref)

(declare-fun i11 () Int)

(declare-fun result1 () int__ref)

(declare-fun i21 () Int)

(declare-fun result2 () int__ref)

(declare-fun im1 () Int)

(declare-fun result3 () bool__ref)

(declare-fun scan_sfun11 () Bool)

(declare-fun result4 () bool__ref)

(declare-fun scan_sfun21 () Bool)

(declare-fun result5 () us_split_fields__ref1)

(declare-fun merge__split_fields2 () us_split_fields2)

(declare-fun merge__split_fields3 () us_split_fields2)

(declare-fun i12 () Int)

(declare-fun i22 () Int)

(declare-fun im2 () Int)

(declare-fun scan_sfun12 () Bool)

(declare-fun scan_sfun22 () Bool)

(declare-fun result6 () us_split_fields__ref1)

(declare-fun merge__split_fields4 () us_split_fields2)

(declare-fun result7 () us_split_fields__ref1)

(declare-fun merge__split_fields5 () us_split_fields2)

(declare-fun i13 () Int)

(declare-fun scan_sfun13 () Bool)

(declare-fun result8 () us_split_fields__ref1)

(declare-fun merge__split_fields6 () us_split_fields2)

(declare-fun result9 () us_split_fields__ref1)

(declare-fun merge__split_fields7 () us_split_fields2)

(declare-fun i23 () Int)

(declare-fun scan_sfun23 () Bool)

(declare-fun result10 () us_split_fields__ref1)

(declare-fun merge__split_fields8 () us_split_fields2)

(declare-fun result11 () us_split_fields__ref1)

(declare-fun merge__split_fields9 () us_split_fields2)

(declare-fun i14 () Int)

(declare-fun scan_sfun14 () Bool)

(declare-fun i24 () Int)

(declare-fun scan_sfun24 () Bool)

(declare-fun result12 () us_split_fields__ref1)

(declare-fun merge__split_fields10 () us_split_fields2)

(declare-fun result13 () us_split_fields__ref1)

(declare-fun merge__split_fields11 () us_split_fields2)

(declare-fun i15 () Int)

(declare-fun scan_sfun15 () Bool)

(declare-fun result14 () us_split_fields__ref1)

(declare-fun merge__split_fields12 () us_split_fields2)

(declare-fun result15 () us_split_fields__ref1)

(declare-fun merge__split_fields13 () us_split_fields2)

(declare-fun i25 () Int)

(declare-fun scan_sfun25 () Bool)

(declare-fun result16 () int__ref)

(declare-fun im3 () Int)

(declare-fun result17 () us_split_fields__ref1)

(declare-fun merge__split_fields14 () us_split_fields2)

;; H
  (assert
  (and (and (= (is_valid sfun1) true) (= (is_valid sfun2) true))
  (<= (+ (to_rep1
         (rec__step_function__step_function_t__number_of_delimiters
         (us_split_fields3 sfun1))) (to_rep1
                                    (rec__step_function__step_function_t__number_of_delimiters
                                    (us_split_fields3 sfun2)))) 10)))

;; H
  (assert (= result (mk_int__ref i1)))

;; H
  (assert (= i11 0))

;; H
  (assert (in_range2 i11))

;; H
  (assert (= result1 (mk_int__ref i2)))

;; H
  (assert (= i21 0))

;; H
  (assert (in_range2 i21))

;; H
  (assert (= result2 (mk_int__ref im)))

;; H
  (assert (= im1 0))

;; H
  (assert (in_range2 im1))

;; H
  (assert (= result3 (mk_bool__ref scan_sfun1)))

;; H
  (assert (= scan_sfun11 (of_int1 1)))

;; H
  (assert (= result4 (mk_bool__ref scan_sfun2)))

;; H
  (assert (= scan_sfun21 (of_int1 1)))

;; H
  (assert (= (to_rep o) (fp #b0 #b00000000 #b00000000000000000000000)))

;; H
  (assert (= (to_rep2 o1) 0))

;; H
  (assert (= o1 o2))

;; H
  (assert (= o o3))

;; H
  (assert (= o4 o2))

;; H
  (assert (= o5 o3))

;; H
  (assert
  (= o6 (store merge__split_fields1 im1 (mk___rep (mk___split_fields o4 o5)))))

;; H
  (assert (= merge__split_fields o7))

;; H
  (assert (= o6 o8))

;; H
  (assert (= temp___313 o7))

;; H
  (assert (= temp___3131 o8))

;; H
  (assert
  (= result5 (mk___split_fields__ref1
             (mk___split_fields1 merge__split_fields merge__split_fields1))))

;; H
  (assert
  (= merge__split_fields2 (mk___split_fields1 temp___313 temp___3131)))

;; H
  (assert (<= 0 i12))

;; H
  (assert (<= 0 i22))

;; H
  (assert (<= 0 im2))

;; H
  (assert
  (<= i12 (to_rep1
          (rec__step_function__step_function_t__number_of_delimiters
          (us_split_fields3 sfun1)))))

;; H
  (assert
  (<= i22 (to_rep1
          (rec__step_function__step_function_t__number_of_delimiters
          (us_split_fields3 sfun2)))))

;; H
  (assert (<= im2 10))

;; H
  (assert (or (= scan_sfun12 true) (= scan_sfun22 true)))

;; H
  (assert
  (or (and (and (= i12 0) (= i22 0)) (= im2 0))
  (and
  (and (or (< 0 i12) (not (= scan_sfun12 true)))
  (or (< 0 i22) (not (= scan_sfun22 true)))) (< 0 im2))))

;; H
  (assert
  (ite (and (and (< 0 im2) (= scan_sfun12 true)) (= scan_sfun22 true))
  (< im2 (+ i12 i22)) (<= im2 (+ i12 i22))))

;; H
  (assert
  (=> (< 0 im2)
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) 0)))) 0)))

;; H
  (assert
  (=> (and (< 0 im2) (= scan_sfun12 true))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) (- 
     im2 1))))) (to_rep2
                (rec__step_function__delimiter_entry__delimiter
                (us_split_fields1
                (select (rec__step_function__step_function_t__step
                        (us_split_fields3 sfun1)) i12)))))))

;; H
  (assert
  (=> (and (< 0 im2) (= scan_sfun22 true))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) (- 
     im2 1))))) (to_rep2
                (rec__step_function__delimiter_entry__delimiter
                (us_split_fields1
                (select (rec__step_function__step_function_t__step
                        (us_split_fields3 sfun2)) i22)))))))

;; H
  (assert
  (forall ((i Int))
  (=> (and (<= 1 i) (<= i (- im2 1)))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields3) (- i 1))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields3) i))))))))

;; H
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (<= i (- i12 1)))
  (exists ((j Int))
  (and (and (<= 0 j) (<= j (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i)))) (to_rep2
                                             (rec__step_function__delimiter_entry__delimiter
                                             (us_split_fields1
                                             (select (rec__step_function__step_function_t__step
                                                     merge__split_fields3) j))))))))))

;; H
  (assert
  (=> (not (= scan_sfun12 true))
  (forall ((i Int))
  (=>
  (and (<= 0 i)
  (<= i (to_rep1
        (rec__step_function__step_function_t__number_of_delimiters
        (us_split_fields3 sfun1)))))
  (exists ((j Int))
  (and (and (<= 0 j) (<= j (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i)))) (to_rep2
                                             (rec__step_function__delimiter_entry__delimiter
                                             (us_split_fields1
                                             (select (rec__step_function__step_function_t__step
                                                     merge__split_fields3) j)))))))))))

;; H
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (<= i (- i22 1)))
  (exists ((j Int))
  (and (and (<= 0 j) (<= j (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i)))) (to_rep2
                                             (rec__step_function__delimiter_entry__delimiter
                                             (us_split_fields1
                                             (select (rec__step_function__step_function_t__step
                                                     merge__split_fields3) j))))))))))

;; H
  (assert
  (=> (not (= scan_sfun22 true))
  (forall ((i Int))
  (=>
  (and (<= 0 i)
  (<= i (to_rep1
        (rec__step_function__step_function_t__number_of_delimiters
        (us_split_fields3 sfun2)))))
  (exists ((j Int))
  (and (and (<= 0 j) (<= j (- im2 1)))
  (= (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i)))) (to_rep2
                                             (rec__step_function__delimiter_entry__delimiter
                                             (us_split_fields1
                                             (select (rec__step_function__step_function_t__step
                                                     merge__split_fields3) j)))))))))))

;; H
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (<= i (- im2 1)))
  (fp.eq (to_rep
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) i)))) (min
                                             (get_value sfun1
                                             (to_rep2
                                             (rec__step_function__delimiter_entry__delimiter
                                             (us_split_fields1
                                             (select (rec__step_function__step_function_t__step
                                                     merge__split_fields3) i)))))
                                             (get_value sfun2
                                             (to_rep2
                                             (rec__step_function__delimiter_entry__delimiter
                                             (us_split_fields1
                                             (select (rec__step_function__step_function_t__step
                                                     merge__split_fields3) i))))))))))

;; H
  (assert
  (and
  (and (and (=> (<= 0 10) (in_range2 i12)) (=> (<= 0 10) (in_range2 i22)))
  (=> (<= 0 10) (in_range2 im2)))
  (= (rec__step_function__step_function_t__number_of_delimiters
     merge__split_fields3) merge__split_fields)))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= (to_rep2 o9) (to_rep2
                  (rec__step_function__delimiter_entry__delimiter
                  (us_split_fields1
                  (select (rec__step_function__step_function_t__step
                          (us_split_fields3 sfun1)) i12))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o10 (mk___split_fields o9
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o11 (mk___rep o10)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o12 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o11)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o13 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o12)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= temp___375 (mk___rep1 o13)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= result6 (mk___split_fields__ref1 merge__split_fields3)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= merge__split_fields4 (us_split_fields3 temp___375)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and
  (= o15 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields4) im2))))))
  (and (not (or (fp.isInfinite o15) (fp.isNaN o15)))
  (or
  (exists ((i Int))
  (and
  (and (<= 0 i)
  (<= i (- (to_rep1
           (rec__step_function__step_function_t__number_of_delimiters
           (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields4) 
                                              im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields4) 
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (+ i 1)))))))
  (fp.eq o15 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2))))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields4) 
  im2)))))
  (fp.eq o15 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2)))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and
  (= o14 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields4) im2))))))
  (and (not (or (fp.isInfinite o14) (fp.isNaN o14)))
  (or
  (exists ((i Int))
  (and
  (and (<= 0 i)
  (<= i (- (to_rep1
           (rec__step_function__step_function_t__number_of_delimiters
           (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields4) 
                                              im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields4) 
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (+ i 1)))))))
  (fp.eq o14 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1))))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields4) 
  im2)))))
  (fp.eq o14 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1)))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and (= o16 (min o14 o15))
  (and (not (or (fp.isInfinite o16) (fp.isNaN o16)))
  (ite (fp.leq o14 o15) (fp.eq o16 o14) (fp.eq o16 o15)))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= (to_rep o17) o16))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o18 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields4) im2)))
         o17)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o19 (mk___rep o18)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o20 (store (rec__step_function__step_function_t__step
                merge__split_fields4) im2 o19)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= o21 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields4) o20)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= temp___382 (mk___rep1 o21)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= result7 (mk___split_fields__ref1 merge__split_fields4)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= merge__split_fields5 (us_split_fields3 temp___382)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (and
  (ite (< i12 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun1))))
  (and (= i13 (+ i12 1)) (= (= scan_sfun13 true) (= scan_sfun12 true)))
  (and (= i13 i12) (not (= scan_sfun13 true)))) (in_range2 i13)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= scan_sfun23 scan_sfun22))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22)))))
  (= i23 i22))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= (to_rep2 o22) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun2)) i22)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o23 (mk___split_fields o22
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o24 (mk___rep o23))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o25 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o24))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o26 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o25))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= temp___360 (mk___rep1 o26))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= result8 (mk___split_fields__ref1 merge__split_fields3))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= merge__split_fields6 (us_split_fields3 temp___360))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and
  (= o28 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields6) im2))))))
  (and (not (or (fp.isInfinite o28) (fp.isNaN o28)))
  (or
  (exists ((i Int))
  (and
  (and (<= 0 i)
  (<= i (- (to_rep1
           (rec__step_function__step_function_t__number_of_delimiters
           (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields6) 
                                              im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields6) 
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (+ i 1)))))))
  (fp.eq o28 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2))))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields6) 
  im2)))))
  (fp.eq o28 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and
  (= o27 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields6) im2))))))
  (and (not (or (fp.isInfinite o27) (fp.isNaN o27)))
  (or
  (exists ((i Int))
  (and
  (and (<= 0 i)
  (<= i (- (to_rep1
           (rec__step_function__step_function_t__number_of_delimiters
           (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields6) 
                                              im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields6) 
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (+ i 1)))))))
  (fp.eq o27 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1))))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields6) 
  im2)))))
  (fp.eq o27 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and (= o29 (min o27 o28))
  (and (not (or (fp.isInfinite o29) (fp.isNaN o29)))
  (ite (fp.leq o27 o28) (fp.eq o29 o27) (fp.eq o29 o28))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= (to_rep o30) o29)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o31 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields6) im2)))
         o30))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o32 (mk___rep o31))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o33 (store (rec__step_function__step_function_t__step
                merge__split_fields6) im2 o32))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= o34 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields6) o33))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= temp___367 (mk___rep1 o34))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= result9 (mk___split_fields__ref1 merge__split_fields6))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= merge__split_fields7 (us_split_fields3 temp___367))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (and
  (ite (< i22 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun2))))
  (and (= i23 (+ i22 1)) (= (= scan_sfun23 true) (= scan_sfun22 true)))
  (and (= i23 i22) (not (= scan_sfun23 true)))) (in_range2 i23))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= scan_sfun14 scan_sfun12)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12)))))
  (= i14 i12)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= (to_rep2 o35) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun1)) i12)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o36 (mk___split_fields o35
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2)))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o37 (mk___rep o36))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o38 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o37))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o39 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o38))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= temp___345 (mk___rep1 o39))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= result10 (mk___split_fields__ref1 merge__split_fields3))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= merge__split_fields8 (us_split_fields3 temp___345))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (= o41 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields8) im2))))))
  (and (not (or (fp.isInfinite o41) (fp.isNaN o41)))
  (or
  (exists ((i Int))
  (and
  (and (<= 0 i)
  (<= i (- (to_rep1
           (rec__step_function__step_function_t__number_of_delimiters
           (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields8) 
                                              im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields8) 
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (+ i 1)))))))
  (fp.eq o41 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2))))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields8) 
  im2)))))
  (fp.eq o41 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (= o40 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields8) im2))))))
  (and (not (or (fp.isInfinite o40) (fp.isNaN o40)))
  (or
  (exists ((i Int))
  (and
  (and (<= 0 i)
  (<= i (- (to_rep1
           (rec__step_function__step_function_t__number_of_delimiters
           (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields8) 
                                              im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step merge__split_fields8) 
     im2)))) (to_rep2
             (rec__step_function__delimiter_entry__delimiter
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (+ i 1)))))))
  (fp.eq o40 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1))))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields8) 
  im2)))))
  (fp.eq o40 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1))))))))))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and (= o42 (min o40 o41))
  (and (not (or (fp.isInfinite o42) (fp.isNaN o42)))
  (ite (fp.leq o40 o41) (fp.eq o42 o40) (fp.eq o42 o41))))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= (to_rep o43) o42)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o44 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields8) im2)))
         o43))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o45 (mk___rep o44))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o46 (store (rec__step_function__step_function_t__step
                merge__split_fields8) im2 o45))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= o47 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields8) o46))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= temp___352 (mk___rep1 o47))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= result11 (mk___split_fields__ref1 merge__split_fields8))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= merge__split_fields9 (us_split_fields3 temp___352))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (ite (< i12 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun1))))
  (and (= i14 (+ i12 1)) (= (= scan_sfun14 true) (= scan_sfun12 true)))
  (and (= i14 i12) (not (= scan_sfun14 true)))) (in_range2 i14))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (and
  (ite (< i22 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun2))))
  (and (= i24 (+ i22 1)) (= (= scan_sfun24 true) (= scan_sfun22 true)))
  (and (= i24 i22) (not (= scan_sfun24 true)))) (in_range2 i24))))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= scan_sfun23 scan_sfun24)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= i23 i24)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun2)) i22)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun1)) i12))))))
  (= merge__split_fields7 merge__split_fields9)))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (= scan_sfun13 scan_sfun14))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (= i13 i14))))

;; H
  (assert
  (=> (and (= scan_sfun12 true) (= scan_sfun22 true))
  (=>
  (not
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             (us_split_fields3 sfun1)) i12)))) (to_rep2
                                               (rec__step_function__delimiter_entry__delimiter
                                               (us_split_fields1
                                               (select (rec__step_function__step_function_t__step
                                                       (us_split_fields3
                                                       sfun2)) i22))))))
  (= merge__split_fields5 merge__split_fields7))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= (to_rep2 o48) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun1)) i12))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o49 (mk___split_fields o48
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= o50 (mk___rep o49)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o51 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o50)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o52 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o51)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= temp___332 (mk___rep1 o52)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= result12 (mk___split_fields__ref1 merge__split_fields3)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= merge__split_fields10 (us_split_fields3 temp___332)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and
  (= o54 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields10) im2))))))
  (and (not (or (fp.isInfinite o54) (fp.isNaN o54)))
  (or
  (exists ((i Int))
  (and
  (and (<= 0 i)
  (<= i (- (to_rep1
           (rec__step_function__step_function_t__number_of_delimiters
           (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields10) 
                                              im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields10) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun2)) (+ i 1)))))))
  (fp.eq o54 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2))))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields10) 
  im2)))))
  (fp.eq o54 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and
  (= o53 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields10) im2))))))
  (and (not (or (fp.isInfinite o53) (fp.isNaN o53)))
  (or
  (exists ((i Int))
  (and
  (and (<= 0 i)
  (<= i (- (to_rep1
           (rec__step_function__step_function_t__number_of_delimiters
           (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields10) 
                                              im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields10) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun1)) (+ i 1)))))))
  (fp.eq o53 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1))))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields10) 
  im2)))))
  (fp.eq o53 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and (= o55 (min o53 o54))
  (and (not (or (fp.isInfinite o55) (fp.isNaN o55)))
  (ite (fp.leq o53 o54) (fp.eq o55 o53) (fp.eq o55 o54)))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= (to_rep o56) o55))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o57 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields10) im2)))
         o56)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= o58 (mk___rep o57)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o59 (store (rec__step_function__step_function_t__step
                merge__split_fields10) im2 o58)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= o60 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields10) o59)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= temp___339 (mk___rep1 o60)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= result13 (mk___split_fields__ref1 merge__split_fields10)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (= merge__split_fields11 (us_split_fields3 temp___339)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true)
  (and
  (ite (< i12 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun1))))
  (and (= i15 (+ i12 1)) (= (= scan_sfun15 true) (= scan_sfun12 true)))
  (and (= i15 i12) (not (= scan_sfun15 true)))) (in_range2 i15)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= scan_sfun25 scan_sfun22))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (= scan_sfun12 true) (= i25 i22))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= (to_rep2 o61) (to_rep2
                   (rec__step_function__delimiter_entry__delimiter
                   (us_split_fields1
                   (select (rec__step_function__step_function_t__step
                           (us_split_fields3 sfun2)) i22))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o62 (mk___split_fields o61
         (rec__step_function__delimiter_entry__value
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields3) im2))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= o63 (mk___rep o62)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o64 (store (rec__step_function__step_function_t__step
                merge__split_fields3) im2 o63)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o65 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields3) o64)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= temp___319 (mk___rep1 o65)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= result14 (mk___split_fields__ref1 merge__split_fields3)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= merge__split_fields12 (us_split_fields3 temp___319)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and
  (= o67 (get_value sfun2
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields12) im2))))))
  (and (not (or (fp.isInfinite o67) (fp.isNaN o67)))
  (or
  (exists ((i Int))
  (and
  (and (<= 0 i)
  (<= i (- (to_rep1
           (rec__step_function__step_function_t__number_of_delimiters
           (us_split_fields3 sfun2))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) i)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields12) 
                                              im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields12) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun2)) (+ i 1)))))))
  (fp.eq o67 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) i))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun2)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun2))))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields12) 
  im2)))))
  (fp.eq o67 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun2)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun2)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and
  (= o66 (get_value sfun1
         (to_rep2
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields12) im2))))))
  (and (not (or (fp.isInfinite o66) (fp.isNaN o66)))
  (or
  (exists ((i Int))
  (and
  (and (<= 0 i)
  (<= i (- (to_rep1
           (rec__step_function__step_function_t__number_of_delimiters
           (us_split_fields3 sfun1))) 1)))
  (and
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) i)))) (to_rep2
                                              (rec__step_function__delimiter_entry__delimiter
                                              (us_split_fields1
                                              (select (rec__step_function__step_function_t__step
                                                      merge__split_fields12) 
                                              im2)))))
  (< (to_rep2
     (rec__step_function__delimiter_entry__delimiter
     (us_split_fields1
     (select (rec__step_function__step_function_t__step
             merge__split_fields12) im2)))) (to_rep2
                                            (rec__step_function__delimiter_entry__delimiter
                                            (us_split_fields1
                                            (select (rec__step_function__step_function_t__step
                                                    (us_split_fields3 sfun1)) (+ i 1)))))))
  (fp.eq o66 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) i))))))))
  (and
  (<= (to_rep2
      (rec__step_function__delimiter_entry__delimiter
      (us_split_fields1
      (select (rec__step_function__step_function_t__step
              (us_split_fields3 sfun1)) (to_rep1
                                        (rec__step_function__step_function_t__number_of_delimiters
                                        (us_split_fields3 sfun1))))))) 
  (to_rep2
  (rec__step_function__delimiter_entry__delimiter
  (us_split_fields1
  (select (rec__step_function__step_function_t__step merge__split_fields12) 
  im2)))))
  (fp.eq o66 (to_rep
             (rec__step_function__delimiter_entry__value
             (us_split_fields1
             (select (rec__step_function__step_function_t__step
                     (us_split_fields3 sfun1)) (to_rep1
                                               (rec__step_function__step_function_t__number_of_delimiters
                                               (us_split_fields3 sfun1)))))))))))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and (= o68 (min o66 o67))
  (and (not (or (fp.isInfinite o68) (fp.isNaN o68)))
  (ite (fp.leq o66 o67) (fp.eq o68 o66) (fp.eq o68 o67)))))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= (to_rep o69) o68))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o70 (mk___split_fields
         (rec__step_function__delimiter_entry__delimiter
         (us_split_fields1
         (select (rec__step_function__step_function_t__step
                 merge__split_fields12) im2)))
         o69)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= o71 (mk___rep o70)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o72 (store (rec__step_function__step_function_t__step
                merge__split_fields12) im2 o71)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= o73 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields12) o72)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= temp___326 (mk___rep1 o73)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= result15 (mk___split_fields__ref1 merge__split_fields12)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= merge__split_fields13 (us_split_fields3 temp___326)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (and
  (ite (< i22 (to_rep1
              (rec__step_function__step_function_t__number_of_delimiters
              (us_split_fields3 sfun2))))
  (and (= i25 (+ i22 1)) (= (= scan_sfun25 true) (= scan_sfun22 true)))
  (and (= i25 i22) (not (= scan_sfun25 true)))) (in_range2 i25)))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= scan_sfun15 scan_sfun12))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true)) (= i15 i12))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (=> (not (= scan_sfun12 true))
  (= merge__split_fields11 merge__split_fields13))))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (= scan_sfun23 scan_sfun25)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (= scan_sfun13 scan_sfun15)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true))) (= i23 i25)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true))) (= i13 i15)))

;; H
  (assert
  (=> (not (and (= scan_sfun12 true) (= scan_sfun22 true)))
  (= merge__split_fields5 merge__split_fields11)))

;; H
  (assert (= (ite (= scan_sfun13 false) scan_sfun23 true) true))

;; H
  (assert (and (= o74 (+ im2 1)) (in_range2 (+ im2 1))))

;; H
  (assert (= result16 (mk_int__ref im2)))

;; H
  (assert (= im3 o74))

;; H
  (assert (= (to_rep o75) (fp #b0 #b00000000 #b00000000000000000000000)))

;; H
  (assert (= (to_rep2 o76) 0))

;; H
  (assert (= o77 (mk___split_fields o76 o75)))

;; H
  (assert (= o78 (mk___rep o77)))

;; H
  (assert
  (= o79 (store (rec__step_function__step_function_t__step
                merge__split_fields5) im3 o78)))

;; H
  (assert
  (= o80 (mk___split_fields1
         (rec__step_function__step_function_t__number_of_delimiters
         merge__split_fields5) o79)))

;; H
  (assert (= temp___3132 (mk___rep1 o80)))

;; H
  (assert (= result17 (mk___split_fields__ref1 merge__split_fields5)))

;; H
  (assert (= merge__split_fields14 (us_split_fields3 temp___3132)))

(assert
;; WP_parameter_def
 ;; File "step_function.ads", line 89, characters 0-0
  (not (or (= scan_sfun13 true) (= scan_sfun23 true))))
(check-sat)
