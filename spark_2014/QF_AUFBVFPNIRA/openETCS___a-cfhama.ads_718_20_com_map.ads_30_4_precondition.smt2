;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun abstr () (_ BitVec 32))

(declare-fun abstr1 () (_ BitVec 32))

(declare-fun abstr2 () (_ BitVec 32))

(declare-fun abstr3 () (_ BitVec 32))

(declare-fun abstr4 () (_ BitVec 32))

(define-fun nth_bv ((x (_ BitVec 32))
  (i (_ BitVec 32))) Bool (ite (not
                               (= (bvand (bvlshr x i) #x00000001) #x00000000))
                          true false))

(declare-fun abstr5 () Bool)

(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool abstr5)

(define-fun bv_min ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 32))

(declare-fun value__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(declare-fun com_map__com_to_rbc_map__map__capacity__first__bit () Int)

(declare-fun com_map__com_to_rbc_map__map__capacity__last__bit () Int)

(declare-fun com_map__com_to_rbc_map__map__capacity__position () Int)

;; com_map__com_to_rbc_map__map__capacity__first__bit_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__capacity__first__bit))

;; com_map__com_to_rbc_map__map__capacity__last__bit_axiom
  (assert
  (< com_map__com_to_rbc_map__map__capacity__first__bit com_map__com_to_rbc_map__map__capacity__last__bit))

;; com_map__com_to_rbc_map__map__capacity__position_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__capacity__position))

(declare-fun com_map__com_to_rbc_map__map__modulus__first__bit () Int)

(declare-fun com_map__com_to_rbc_map__map__modulus__last__bit () Int)

(declare-fun com_map__com_to_rbc_map__map__modulus__position () Int)

;; com_map__com_to_rbc_map__map__modulus__first__bit_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__modulus__first__bit))

;; com_map__com_to_rbc_map__map__modulus__last__bit_axiom
  (assert
  (< com_map__com_to_rbc_map__map__modulus__first__bit com_map__com_to_rbc_map__map__modulus__last__bit))

;; com_map__com_to_rbc_map__map__modulus__position_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__modulus__position))

(declare-fun value__size1 () Int)

(declare-fun value__alignment1 () Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

(declare-fun com_map__com_to_rbc_map__cursor__node__first__bit () Int)

(declare-fun com_map__com_to_rbc_map__cursor__node__last__bit () Int)

(declare-fun com_map__com_to_rbc_map__cursor__node__position () Int)

;; com_map__com_to_rbc_map__cursor__node__first__bit_axiom
  (assert (<= 0 com_map__com_to_rbc_map__cursor__node__first__bit))

;; com_map__com_to_rbc_map__cursor__node__last__bit_axiom
  (assert
  (< com_map__com_to_rbc_map__cursor__node__first__bit com_map__com_to_rbc_map__cursor__node__last__bit))

;; com_map__com_to_rbc_map__cursor__node__position_axiom
  (assert (<= 0 com_map__com_to_rbc_map__cursor__node__position))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun dynamic_invariant ((temp___expr_173 Int)
  (temp___is_init_170 Bool) (temp___skip_constant_171 Bool)
  (temp___do_toplevel_172 Bool)) Bool (=>
                                      (or (= temp___is_init_170 true)
                                      (<= 0 2147483647)) (in_range1
                                      temp___expr_173)))

(declare-fun value__size2 () Int)

(declare-fun value__alignment2 () Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun dynamic_invariant1 ((temp___expr_417 Int)
  (temp___is_init_414 Bool) (temp___skip_constant_415 Bool)
  (temp___do_toplevel_416 Bool)) Bool (=>
                                      (or (= temp___is_init_414 true)
                                      (<= 1 2147483647)) (in_range2
                                      temp___expr_417)))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(define-fun dynamic_invariant2 ((temp___expr_167 (_ BitVec 32))
  (temp___is_init_164 Bool) (temp___skip_constant_165 Bool)
  (temp___do_toplevel_166 Bool)) Bool true)

(declare-fun value__size3 () Int)

(declare-fun value__alignment3 () Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 10000)))

(define-fun dynamic_invariant3 ((temp___expr_366 Int)
  (temp___is_init_363 Bool) (temp___skip_constant_364 Bool)
  (temp___do_toplevel_365 Bool)) Bool (=>
                                      (or (= temp___is_init_363 true)
                                      (<= 1 10000)) (in_range3
                                      temp___expr_366)))

(declare-fun o () Int)

(declare-fun o1 () Int)

(assert
;; WP_parameter_def
 ;; File "a-cfhama.ads", line 702, characters 0-0
  (not false))
(check-sat)
(exit)
