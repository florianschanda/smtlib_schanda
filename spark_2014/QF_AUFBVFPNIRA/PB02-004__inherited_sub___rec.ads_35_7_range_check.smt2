;; produced by colibri_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range
                                     temp___expr_33)))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range1
                                     temp___expr_39)))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(define-fun dynamic_invariant2 ((temp___expr_136 Int)
  (temp___is_init_133 Bool) (temp___skip_constant_134 Bool)
  (temp___do_toplevel_135 Bool)) Bool (=>
                                      (or (= temp___is_init_133 true)
                                      (<= 0 2)) (in_range2 temp___expr_136)))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(define-fun dynamic_invariant3 ((temp___expr_142 Int)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (=>
                                      (or (= temp___is_init_139 true)
                                      (<= 0 1)) (in_range3 temp___expr_142)))

(declare-fun temp___z_186 () Int)

(declare-fun us () Int)

(declare-fun temp___z_185 () Int)

(declare-fun us1 () Int)

(declare-fun temp___l_184 () Int)

(declare-fun temp___f_183 () Int)

(declare-fun temp___l_182 () Int)

(declare-fun temp___f_181 () Int)

;; H
  (assert (in_range2 temp___z_186))

;; H
  (assert (and (= us temp___z_186) (in_range3 temp___z_186)))

;; H
  (assert (in_range2 temp___z_185))

;; H
  (assert (and (= us1 temp___z_185) (in_range3 temp___z_185)))

;; H
  (assert (in_range temp___l_184))

;; H
  (assert (in_range temp___f_183))

;; H
  (assert (in_range temp___l_182))

;; H
  (assert (in_range1 temp___f_181))

;; H
  (assert (<= temp___f_181 temp___l_182))

(assert
;; WP_parameter_def
 ;; File "rec.ads", line 34, characters 0-0
  (not (<= 1 temp___f_181)))
(check-sat)
(exit)
