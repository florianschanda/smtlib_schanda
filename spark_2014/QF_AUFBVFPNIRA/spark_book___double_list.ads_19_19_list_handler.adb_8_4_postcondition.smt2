;; produced by colibri_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 128)))

(declare-fun value__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(declare-fun list_handler__integer_list__list_node__value__first__bit () Int)

(declare-fun list_handler__integer_list__list_node__value__last__bit () Int)

(declare-fun list_handler__integer_list__list_node__value__position () Int)

;; list_handler__integer_list__list_node__value__first__bit_axiom
  (assert (<= 0 list_handler__integer_list__list_node__value__first__bit))

;; list_handler__integer_list__list_node__value__last__bit_axiom
  (assert
  (< list_handler__integer_list__list_node__value__first__bit list_handler__integer_list__list_node__value__last__bit))

;; list_handler__integer_list__list_node__value__position_axiom
  (assert (<= 0 list_handler__integer_list__list_node__value__position))

(declare-fun list_handler__integer_list__list_node__next__first__bit () Int)

(declare-fun list_handler__integer_list__list_node__next__last__bit () Int)

(declare-fun list_handler__integer_list__list_node__next__position () Int)

;; list_handler__integer_list__list_node__next__first__bit_axiom
  (assert (<= 0 list_handler__integer_list__list_node__next__first__bit))

;; list_handler__integer_list__list_node__next__last__bit_axiom
  (assert
  (< list_handler__integer_list__list_node__next__first__bit list_handler__integer_list__list_node__next__last__bit))

;; list_handler__integer_list__list_node__next__position_axiom
  (assert (<= 0 list_handler__integer_list__list_node__next__position))

(declare-fun list_handler__integer_list__list_node__previous__first__bit () Int)

(declare-fun list_handler__integer_list__list_node__previous__last__bit () Int)

(declare-fun list_handler__integer_list__list_node__previous__position () Int)

;; list_handler__integer_list__list_node__previous__first__bit_axiom
  (assert (<= 0 list_handler__integer_list__list_node__previous__first__bit))

;; list_handler__integer_list__list_node__previous__last__bit_axiom
  (assert
  (< list_handler__integer_list__list_node__previous__first__bit list_handler__integer_list__list_node__previous__last__bit))

;; list_handler__integer_list__list_node__previous__position_axiom
  (assert (<= 0 list_handler__integer_list__list_node__previous__position))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range3
                                     temp___expr_33)))

(define-fun dynamic_invariant1 ((temp___expr_164 Int)
  (temp___is_init_161 Bool) (temp___skip_constant_162 Bool)
  (temp___do_toplevel_163 Bool)) Bool (=>
                                      (or (= temp___is_init_161 true)
                                      (<= 0 128)) (in_range2
                                      temp___expr_164)))

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(define-fun dynamic_invariant2 ((temp___expr_141 Int)
  (temp___is_init_138 Bool) (temp___skip_constant_139 Bool)
  (temp___do_toplevel_140 Bool)) Bool (=>
                                      (or (= temp___is_init_138 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range1 temp___expr_141)))

(declare-fun count () Int)

(declare-fun free () Int)

(declare-fun index () Int)

(declare-fun result () Int)

(declare-fun count1 () Int)

(declare-fun result1 () Int)

(declare-fun free1 () Int)

(declare-fun result2 () Int)

(declare-fun index1 () Int)

(declare-fun index2 () Int)

(declare-fun index3 () Int)

(declare-fun index4 () Int)

(declare-fun index5 () Int)

(declare-fun index6 () Int)

(declare-fun count2 () Int)

(declare-fun free2 () Int)

(declare-fun index7 () Int)

;; H
  (assert (=> (<= 0 128) (in_range2 count)))

;; H
  (assert (=> (<= 0 128) (in_range2 free)))

;; H
  (assert (= result count))

;; H
  (assert (= count1 0))

;; H
  (assert (= result1 free))

;; H
  (assert (= free1 1))

;; H
  (assert (= result2 index))

;; H
  (assert (= index1 1))

;; H
  (assert (=> (and (<= 1 index1) (<= index1 127)) (= index2 127)))

;; H
  (assert (=> (and (<= 1 index1) (<= index1 127)) (= index2 index3)))

;; H
  (assert (=> (and (<= 1 index1) (<= index1 127)) (= index4 index2)))

;; H
  (assert (=> (and (<= 1 index1) (<= index1 127)) (= index6 index4)))

;; H
  (assert (=> (not (and (<= 1 index1) (<= index1 127))) (= index1 index5)))

;; H
  (assert (=> (not (and (<= 1 index1) (<= index1 127))) (= index6 index1)))

;; H
  (assert (= index7 index6))

;; H
  (assert (= free2 free1))

;; H
  (assert (= count2 count1))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not false))
(check-sat)
(exit)
