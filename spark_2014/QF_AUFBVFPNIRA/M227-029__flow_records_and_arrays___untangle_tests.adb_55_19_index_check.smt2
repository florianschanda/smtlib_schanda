;; produced by colibri_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 1000)))

(declare-fun abstr () Bool)

(define-fun bool_eq ((a (Array Int Bool)) (a__first Int) (a__last Int)
  (b (Array Int Bool)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first)) abstr)
                      true false))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun p () (Array Int Bool))

(declare-fun n () Int)

(declare-fun i () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () (Array Int Bool))

(declare-fun o4 () Int)

(declare-fun result () (Array Int Bool))

(declare-fun p1 () (Array Int Bool))

(declare-fun result1 () Int)

(declare-fun i1 () Int)

(declare-fun p2 () (Array Int Bool))

(declare-fun n1 () Int)

(declare-fun i2 () Int)

(declare-fun result2 () Int)

(declare-fun n2 () Int)

(declare-fun p3 () (Array Int Bool))

(declare-fun n3 () Int)

(declare-fun result3 () (Array Int Bool))

(declare-fun p4 () (Array Int Bool))

;; H
  (assert (=> (<= 1 2147483647) (in_range2 n)))

;; H
  (assert (= result p))

(declare-fun abstr1 () (Array Int Bool))

;; H
  (assert (= p1 abstr1))

;; H
  (assert (= result1 i))

;; H
  (assert (= i1 1))

;; H
  (assert (<= 1 i1))

;; H
  (assert (<= i1 1000))

;; H
  (assert
  (and (=> (<= 1 2147483647) (in_range2 n1)) (and (<= 1 i2) (<= i2 1000))))

;; H
  (assert (= (select p2 i2) true))

;; H
  (assert (and (= o (* 2 i2)) (in_range1 (* 2 i2))))

;; H
  (assert (and (= o1 o) (in_range2 o)))

;; H
  (assert (= result2 n1))

;; H
  (assert (= n2 o1))

;; H
  (assert (<= n2 1000))

;; H
  (assert (and (=> (<= 1 2147483647) (in_range2 n3)) (<= n3 1000)))

(assert
;; WP_parameter_def
 ;; File "untangle_tests.adb", line 34, characters 0-0
  (not (<= 1 n3)))
(check-sat)
(exit)
