;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun mod1 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun value__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(declare-fun types__value__e__first__bit () Int)

(declare-fun types__value__e__last__bit () Int)

(declare-fun types__value__e__position () Int)

;; types__value__e__first__bit_axiom
  (assert (<= 0 types__value__e__first__bit))

;; types__value__e__last__bit_axiom
  (assert (< types__value__e__first__bit types__value__e__last__bit))

;; types__value__e__position_axiom
  (assert (<= 0 types__value__e__position))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 200)))

(define-fun dynamic_invariant1 ((temp___expr_149 Int)
  (temp___is_init_146 Bool) (temp___skip_constant_147 Bool)
  (temp___do_toplevel_148 Bool)) Bool (=>
                                      (or (= temp___is_init_146 true)
                                      (<= 0 200)) (in_range2
                                      temp___expr_149)))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(define-fun dynamic_invariant2 ((temp___expr_158 Int)
  (temp___is_init_155 Bool) (temp___skip_constant_156 Bool)
  (temp___do_toplevel_157 Bool)) Bool (=>
                                      (or (= temp___is_init_155 true)
                                      (<= 0 3)) (in_range3 temp___expr_158)))

(declare-fun op () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun last () Int)

(declare-fun result__ () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun last1 () Int)

(declare-fun last2 () Int)

(declare-fun result () Int)

(declare-fun result__1 () Int)

(declare-fun result1 () Int)

(declare-fun result__2 () Int)

(declare-fun result2 () Int)

(declare-fun result__3 () Int)

(declare-fun result3 () Int)

(declare-fun result__4 () Int)

(declare-fun last3 () Int)

;; H
  (assert (in_range3 op))

;; H
  (assert (in_range2 last))

(declare-fun abstr () Int)

;; H
  (assert (<= 2 abstr))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 result__)))

(declare-fun abstr1 () Bool)

(assert
;; WP_parameter_def
 ;; File "values-operations.ads", line 22, characters 0-0
  (not (not (= abstr1 true))))
(check-sat)
(exit)
