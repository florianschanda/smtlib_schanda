;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

(declare-fun abstr () (_ BitVec 8))

(declare-fun abstr1 () (_ BitVec 8))

(declare-fun abstr2 () (_ BitVec 8))

(declare-fun abstr3 () (_ BitVec 8))

(declare-fun abstr4 () (_ BitVec 8))

(define-fun nth_bv ((x (_ BitVec 8))
  (i (_ BitVec 8))) Bool (ite (not (= (bvand (bvlshr x i) #x01) #x00)) true
                         false))

(declare-fun abstr5 () Bool)

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool abstr5)

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

(declare-fun abstr6 () (_ BitVec 16))

(declare-fun abstr7 () (_ BitVec 16))

(declare-fun abstr8 () (_ BitVec 16))

(declare-fun abstr9 () (_ BitVec 16))

(declare-fun abstr10 () (_ BitVec 16))

(define-fun nth_bv1 ((x (_ BitVec 16))
  (i (_ BitVec 16))) Bool (ite (not (= (bvand (bvlshr x i) #x0001) #x0000))
                          true false))

(declare-fun abstr11 () Bool)

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool abstr11)

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 65536)))

(define-fun dynamic_invariant ((temp___expr_204 Int)
  (temp___is_init_201 Bool) (temp___skip_constant_202 Bool)
  (temp___do_toplevel_203 Bool)) Bool (=>
                                      (or (= temp___is_init_201 true)
                                      (<= 1 65536)) (in_range2
                                      temp___expr_204)))

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 8))

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property range_first range_last low)
                   (dynamic_property range_first range_last high))))))

(declare-fun value__size () Int)

(declare-fun value__component__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(declare-fun value__size1 () Int)

(declare-fun value__alignment1 () Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

(declare-fun very_longs__very_long__length__first__bit () Int)

(declare-fun very_longs__very_long__length__last__bit () Int)

(declare-fun very_longs__very_long__length__position () Int)

;; very_longs__very_long__length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__length__first__bit))

;; very_longs__very_long__length__last__bit_axiom
  (assert
  (< very_longs__very_long__length__first__bit very_longs__very_long__length__last__bit))

;; very_longs__very_long__length__position_axiom
  (assert (<= 0 very_longs__very_long__length__position))

(declare-fun very_longs__very_long__long_digits__first__bit () Int)

(declare-fun very_longs__very_long__long_digits__last__bit () Int)

(declare-fun very_longs__very_long__long_digits__position () Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit very_longs__very_long__long_digits__last__bit))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 65536)))

(define-fun dynamic_invariant1 ((temp___expr_198 Int)
  (temp___is_init_195 Bool) (temp___skip_constant_196 Bool)
  (temp___do_toplevel_197 Bool)) Bool (=>
                                      (or (= temp___is_init_195 true)
                                      (<= 0 65536)) (in_range3
                                      temp___expr_198)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_MODULUS1 () (_ BitVec 16))

(define-fun dynamic_invariant2 ((temp___expr_312 (_ BitVec 16))
  (temp___is_init_309 Bool) (temp___skip_constant_310 Bool)
  (temp___do_toplevel_311 Bool)) Bool true)

(declare-fun last () Int)

(define-fun dynamic_property2 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_invariant3 ((temp___expr_690 Int)
  (temp___is_init_687 Bool) (temp___skip_constant_688 Bool)
  (temp___do_toplevel_689 Bool)) Bool (=>
                                      (or (= temp___is_init_687 true)
                                      (<= 1 last)) (dynamic_property2 1
                                      last temp___expr_690)))

(declare-fun first () Int)

(declare-fun last1 () Int)

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_invariant4 ((temp___expr_696 Int)
  (temp___is_init_693 Bool) (temp___skip_constant_694 Bool)
  (temp___do_toplevel_695 Bool)) Bool (=>
                                      (or (= temp___is_init_693 true)
                                      (<= first last1)) (dynamic_property3
                                      first last1 temp___expr_696)))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 7)))

(define-fun dynamic_invariant5 ((temp___expr_702 Int)
  (temp___is_init_699 Bool) (temp___skip_constant_700 Bool)
  (temp___do_toplevel_701 Bool)) Bool (=>
                                      (or (= temp___is_init_699 true)
                                      (<= 0 7)) (in_range4 temp___expr_702)))

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(define-fun dynamic_property4 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property4 range_first range_last low)
                   (dynamic_property4 range_first range_last high))))))

(declare-fun value__size2 () Int)

(declare-fun value__component__size1 () Int)

(declare-fun value__alignment2 () Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

(declare-fun value__size3 () Int)

(declare-fun value__alignment3 () Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

(declare-fun very_longs__very_long__length__first__bit1 () Int)

(declare-fun very_longs__very_long__length__last__bit1 () Int)

(declare-fun very_longs__very_long__length__position1 () Int)

;; very_longs__very_long__length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__length__first__bit1))

;; very_longs__very_long__length__last__bit_axiom
  (assert
  (< very_longs__very_long__length__first__bit1 very_longs__very_long__length__last__bit1))

;; very_longs__very_long__length__position_axiom
  (assert (<= 0 very_longs__very_long__length__position1))

(declare-fun very_longs__very_long__long_digits__first__bit1 () Int)

(declare-fun very_longs__very_long__long_digits__last__bit1 () Int)

(declare-fun very_longs__very_long__long_digits__position1 () Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit1))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit1 very_longs__very_long__long_digits__last__bit1))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position1))

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(define-fun dynamic_property6 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property6 range_first range_last low)
                   (dynamic_property6 range_first range_last high))))))

(declare-fun value__size4 () Int)

(declare-fun value__component__size2 () Int)

(declare-fun value__alignment4 () Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

(declare-fun value__size5 () Int)

(declare-fun value__alignment5 () Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

(declare-fun very_longs__very_long__length__first__bit2 () Int)

(declare-fun very_longs__very_long__length__last__bit2 () Int)

(declare-fun very_longs__very_long__length__position2 () Int)

;; very_longs__very_long__length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__length__first__bit2))

;; very_longs__very_long__length__last__bit_axiom
  (assert
  (< very_longs__very_long__length__first__bit2 very_longs__very_long__length__last__bit2))

;; very_longs__very_long__length__position_axiom
  (assert (<= 0 very_longs__very_long__length__position2))

(declare-fun very_longs__very_long__long_digits__first__bit2 () Int)

(declare-fun very_longs__very_long__long_digits__last__bit2 () Int)

(declare-fun very_longs__very_long__long_digits__position2 () Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit2))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit2 very_longs__very_long__long_digits__last__bit2))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position2))

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(define-fun dynamic_invariant6 ((temp___expr_210 (_ BitVec 8))
  (temp___is_init_207 Bool) (temp___skip_constant_208 Bool)
  (temp___do_toplevel_209 Bool)) Bool true)

(declare-fun r131b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(define-fun dynamic_property8 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property9 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property8 range_first range_last low)
                   (dynamic_property8 range_first range_last high))))))

(declare-fun value__size6 () Int)

(declare-fun value__component__size3 () Int)

(declare-fun value__alignment6 () Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

(define-fun dynamic_property10 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property11 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property10 range_first range_last low)
                   (dynamic_property10 range_first range_last high))))))

(declare-fun value__size7 () Int)

(declare-fun value__component__size4 () Int)

(declare-fun value__alignment7 () Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; value__component__size_axiom
  (assert (<= 0 value__component__size4))

;; value__alignment_axiom
  (assert (<= 0 value__alignment7))

(declare-fun r135b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS12 () Int)

(define-fun dynamic_property12 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property13 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property12 range_first range_last low)
                   (dynamic_property12 range_first range_last high))))))

(declare-fun value__size8 () Int)

(declare-fun value__component__size5 () Int)

(declare-fun value__alignment8 () Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; value__component__size_axiom
  (assert (<= 0 value__component__size5))

;; value__alignment_axiom
  (assert (<= 0 value__alignment8))

(define-fun dynamic_property14 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property15 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property14 range_first range_last low)
                   (dynamic_property14 range_first range_last high))))))

(declare-fun value__size9 () Int)

(declare-fun value__component__size6 () Int)

(declare-fun value__alignment9 () Int)

;; value__size_axiom
  (assert (<= 0 value__size9))

;; value__component__size_axiom
  (assert (<= 0 value__component__size6))

;; value__alignment_axiom
  (assert (<= 0 value__alignment9))

(declare-fun r138b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS13 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS14 () Int)

(declare-fun r140b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS15 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS16 () Int)

(define-fun dynamic_property16 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-fun value__size10 () Int)

(declare-fun value__component__size7 () Int)

(declare-fun value__alignment10 () Int)

;; value__size_axiom
  (assert (<= 0 value__size10))

;; value__component__size_axiom
  (assert (<= 0 value__component__size7))

;; value__alignment_axiom
  (assert (<= 0 value__alignment10))

(declare-fun n () Int)

(declare-fun m () Int)

(declare-fun shift_distance () Int)

(declare-fun q_hat () (_ BitVec 16))

(declare-fun current_borrow () (_ BitVec 16))

(declare-fun j () Int)

(declare-fun divisor_index () Int)

(declare-fun o () Int)

(declare-fun us () Int)

(declare-fun us1 () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun us2 () Int)

(declare-fun us3 () Int)

(declare-fun us4 () Int)

(declare-fun temp___1095 () Int)

(declare-fun us5 () Int)

(declare-fun o3 () Int)

(declare-fun us6 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Int)

(declare-fun o6 () (_ BitVec 8))

(declare-fun o7 () Int)

(declare-fun very_longs__divide__L_7__R138b__assume () Int)

(declare-fun temp___1103 () (_ BitVec 16))

(declare-fun temp___1102 () (_ BitVec 16))

(declare-fun o8 () Int)

(declare-fun o9 () Int)

(declare-fun o10 () Int)

(declare-fun o11 () Int)

(declare-fun o12 () (_ BitVec 8))

(declare-fun q_hat1 () (_ BitVec 16))

(declare-fun current_borrow1 () (_ BitVec 16))

(declare-fun n1 () Int)

(declare-fun m1 () Int)

(declare-fun shift_distance1 () Int)

(declare-fun j1 () Int)

(declare-fun q_hat2 () (_ BitVec 16))

(declare-fun current_borrow2 () (_ BitVec 16))

(declare-fun j2 () Int)

(declare-fun q_hat3 () (_ BitVec 16))

(declare-fun current_borrow3 () (_ BitVec 16))

(declare-fun q_hat4 () (_ BitVec 16))

(declare-fun current_borrow4 () (_ BitVec 16))

(declare-fun j3 () Int)

(declare-fun q_hat5 () (_ BitVec 16))

(declare-fun current_borrow5 () (_ BitVec 16))

(declare-fun j4 () Int)

(declare-fun divisor_index1 () Int)

(declare-fun divisor_index2 () Int)

;; H
  (assert (=> (<= 1 last) (dynamic_property2 1 last n)))

;; H
  (assert (=> (<= first last1) (dynamic_property3 first last1 m)))

;; H
  (assert (=> (<= 0 7) (in_range4 shift_distance)))

;; H
  (assert (in_range2 r131b))

;; H
  (assert (in_range2 r135b))

;; H
  (assert (and (= us5 temp___1095) (dynamic_property2 1 last temp___1095)))

;; H
  (assert (= o3 temp___1095))

;; H
  (assert (= n1 o3))

;; H
  (assert (= m1 o4))

;; H
  (assert (= o5 n1))

(declare-fun abstr12 () Int)

;; H
  (assert (and (= o7 abstr12) (in_range4 o7)))

;; H
  (assert (= shift_distance1 o7))

(assert
;; WP_parameter_def
 ;; File "very_longs.ads", line 84, characters 0-0
  (not true))
(check-sat)
(exit)
