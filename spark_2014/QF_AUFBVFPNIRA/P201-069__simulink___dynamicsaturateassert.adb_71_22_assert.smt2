;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun abstr () (_ BitVec 32))

(declare-fun abstr1 () (_ BitVec 32))

(declare-fun abstr2 () (_ BitVec 32))

(declare-fun abstr3 () (_ BitVec 32))

(declare-fun abstr4 () (_ BitVec 32))

(define-fun nth_bv ((x (_ BitVec 32))
  (i (_ BitVec 32))) Bool (ite (not
                               (= (bvand (bvlshr x i) #x00000001) #x00000000))
                          true false))

(declare-fun abstr5 () Bool)

(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool abstr5)

(define-fun bv_min ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 32))

(define-fun dynamic_invariant ((temp___expr_177 (_ BitVec 32))
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)) Bool true)

(declare-fun attr__ATTRIBUTE_MODULUS1 () (_ BitVec 32))

(declare-fun abstr6 () (_ BitVec 32))

(declare-fun abstr7 () (_ BitVec 32))

(define-fun in_range ((x (_ BitVec 32))) Bool (and (bvule abstr7 x)
                                              (bvule x abstr6)))

(define-fun in_range_int ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(define-fun dynamic_invariant1 ((temp___expr_201 (_ BitVec 32))
  (temp___is_init_198 Bool) (temp___skip_constant_199 Bool)
  (temp___do_toplevel_200 Bool)) Bool (=>
                                      (or (= temp___is_init_198 true)
                                      (bvule abstr7 abstr6)) (in_range
                                      temp___expr_201)))

(declare-fun value () (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun max () (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun min () (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun saturated_value () (_ BitVec 32))

(declare-fun saturation_dynamic_out1 () (_ BitVec 32))

(declare-fun result () (_ BitVec 32))

(declare-fun saturation_dynamic_out11 () (_ BitVec 32))

(declare-fun result1 () (_ BitVec 32))

(declare-fun saturation_dynamic_out12 () (_ BitVec 32))

(declare-fun result2 () (_ BitVec 32))

(declare-fun saturation_dynamic_out13 () (_ BitVec 32))

(declare-fun result3 () (_ BitVec 32))

(declare-fun saturated_value1 () (_ BitVec 32))

;; H
  (assert (in_range value))

;; H
  (assert (in_range max))

;; H
  (assert (in_range min))

;; H
  (assert (bvuge max min))

;; H
  (assert (=> (bvult value min) (= result saturation_dynamic_out1)))

;; H
  (assert (=> (bvult value min) (= saturation_dynamic_out11 min)))

;; H
  (assert
  (=> (not (bvult value min))
  (=> (bvugt value max) (= result1 saturation_dynamic_out1))))

;; H
  (assert
  (=> (not (bvult value min))
  (=> (bvugt value max) (= saturation_dynamic_out12 max))))

;; H
  (assert
  (=> (not (bvult value min))
  (=> (not (bvugt value max)) (= result2 saturation_dynamic_out1))))

;; H
  (assert
  (=> (not (bvult value min))
  (=> (not (bvugt value max)) (= saturation_dynamic_out13 value))))

;; H
  (assert
  (=> (not (bvult value min))
  (=> (not (bvugt value max))
  (= saturation_dynamic_out12 saturation_dynamic_out13))))

;; H
  (assert
  (=> (not (bvult value min))
  (= saturation_dynamic_out11 saturation_dynamic_out12)))

;; H
  (assert (= result3 saturated_value))

;; H
  (assert (= saturated_value1 saturation_dynamic_out11))

;; H
  (assert
  (and (bvule saturation_dynamic_out11 max)
  (bvuge saturation_dynamic_out11 min)))

(assert
;; WP_parameter_def
 ;; File "dynamicsaturateassert.ads", line 23, characters 0-0
  (not (bvuge max min)))
(check-sat)
(exit)
