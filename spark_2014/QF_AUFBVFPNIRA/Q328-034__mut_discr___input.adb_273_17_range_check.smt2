;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-fun value__size () Int)

(declare-fun value__component__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant1 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_33)))

(define-fun dynamic_invariant2 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(define-fun in_range5 ((x Int)) Bool (and (<= 33 x) (<= x 126)))

(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 1024)))

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 1025)))

(define-fun dynamic_invariant3 ((temp___expr_583 Int)
  (temp___is_init_580 Bool) (temp___skip_constant_581 Bool)
  (temp___do_toplevel_582 Bool)) Bool (=>
                                      (or (= temp___is_init_580 true)
                                      (<= 1 1025)) (in_range7
                                      temp___expr_583)))

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))

(define-fun dynamic_invariant4 ((temp___expr_589 Int)
  (temp___is_init_586 Bool) (temp___skip_constant_587 Bool)
  (temp___do_toplevel_588 Bool)) Bool (=>
                                      (or (= temp___is_init_586 true)
                                      (<= 0 1024)) (in_range8
                                      temp___expr_589)))

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun r25b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun r26b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-fun value__size1 () Int)

(declare-fun value__component__size1 () Int)

(declare-fun value__alignment1 () Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property3 range_first range_last low)
                   (dynamic_property3 range_first range_last high))))))

(declare-fun value__size2 () Int)

(declare-fun value__component__size2 () Int)

(declare-fun value__alignment2 () Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

(define-fun dynamic_invariant5 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant6 ((temp___expr_568 Int)
  (temp___is_init_565 Bool) (temp___skip_constant_566 Bool)
  (temp___do_toplevel_567 Bool)) Bool (=>
                                      (or (= temp___is_init_565 true)
                                      (<= 33 126)) (in_range5
                                      temp___expr_568)))

(declare-fun size () Int)

(declare-fun first_char () Int)

(declare-fun last_char () Int)

(declare-fun line_num () Int)

(declare-fun start () Int)

(declare-fun current_char () Int)

(declare-fun i () Int)

(declare-fun temp___615 () Int)

(declare-fun temp___613 () Int)

(declare-fun temp___612 () Int)

(declare-fun temp___611 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun temp___616 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Int)

(declare-fun o6 () Bool)

(declare-fun o7 () Int)

(declare-fun o8 () Int)

(declare-fun o9 () Int)

(declare-fun o10 () Int)

(declare-fun o11 () Int)

(declare-fun o12 () Int)

(declare-fun o13 () Int)

(declare-fun o14 () Int)

(declare-fun o15 () Int)

(declare-fun us () Int)

(declare-fun o16 () Int)

(declare-fun o17 () Int)

(declare-fun o18 () Int)

(declare-fun o19 () Int)

(declare-fun o20 () Int)

(declare-fun o21 () Int)

(declare-fun o22 () Int)

(declare-fun o23 () Int)

(declare-fun o24 () Int)

(declare-fun o25 () Int)

(declare-fun o26 () Int)

(declare-fun o27 () Int)

(declare-fun o28 () Int)

(declare-fun o29 () Int)

(declare-fun o30 () Int)

(declare-fun o31 () Int)

(declare-fun o32 () Int)

(declare-fun o33 () Int)

(declare-fun o34 () Int)

(declare-fun first_char1 () Int)

(declare-fun last_char1 () Int)

(declare-fun line_num1 () Int)

(declare-fun current_char1 () Int)

(declare-fun first_char2 () Int)

(declare-fun last_char2 () Int)

(declare-fun line_num2 () Int)

(declare-fun current_char2 () Int)

(declare-fun first_char3 () Int)

(declare-fun last_char3 () Int)

(declare-fun line_num3 () Int)

(declare-fun current_char3 () Int)

(declare-fun first_char4 () Int)

(declare-fun last_char4 () Int)

(declare-fun line_num4 () Int)

(declare-fun current_char4 () Int)

(declare-fun first_char5 () Int)

(declare-fun last_char5 () Int)

(declare-fun line_num5 () Int)

(declare-fun current_char5 () Int)

(declare-fun first_char6 () Int)

(declare-fun first_char7 () Int)

(declare-fun first_char8 () Int)

(declare-fun start1 () Int)

(declare-fun result () Bool)

(declare-fun first_char9 () Int)

(declare-fun first_char10 () Int)

(declare-fun result1 () Bool)

(declare-fun first_char11 () Int)

(declare-fun first_char12 () Int)

(declare-fun i1 () Int)

(declare-fun i2 () Int)

(declare-fun i3 () Int)

(declare-fun i4 () Int)

(declare-fun result2 () Bool)

(declare-fun size1 () Int)

(declare-fun size2 () Int)

(declare-fun first_char13 () Int)

(declare-fun last_char6 () Int)

(declare-fun line_num6 () Int)

(declare-fun start2 () Int)

(declare-fun current_char6 () Int)

(declare-fun i5 () Int)

;; H
  (assert (in_range7 first_char))

;; H
  (assert (in_range8 last_char))

;; H
  (assert (in_range4 line_num))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 size)))

;; H
  (assert (=> (<= 0 2147483647) (in_range4 start)))

;; H
  (assert (=> (<= 0 255) (in_range3 current_char)))

;; H
  (assert (=> (<= first_char 1024) (= temp___615 first_char)))

;; H
  (assert (=> (<= first_char 1024) (= temp___613 line_num)))

;; H
  (assert (=> (<= first_char 1024) (= temp___612 current_char)))

;; H
  (assert (=> (<= first_char 1024) (= temp___611 last_char)))

;; H
  (assert
  (=> (<= first_char 1024)
  (and
  (and
  (and (and (in_range8 last_char2) (=> (<= 0 255) (in_range3 current_char2)))
  (in_range4 line_num2)) (in_range7 first_char2)) (<= first_char2 1024))))

;; H
  (assert
  (=> (<= first_char 1024)
  (and
  (and (and (in_range3 current_char3) (in_range7 first_char3)) (in_range8
  last_char3)) (in_range4 line_num3))))

;; H
  (assert
  (=> (<= first_char 1024)
  (or (in_range5 current_char3)
  (and (not (in_range5 current_char3)) (not (<= first_char3 1024))))))

;; H
  (assert (=> (<= first_char 1024) (= current_char4 current_char3)))

;; H
  (assert (=> (<= first_char 1024) (= line_num4 line_num3)))

;; H
  (assert (=> (<= first_char 1024) (= last_char4 last_char3)))

;; H
  (assert (=> (<= first_char 1024) (= first_char4 first_char3)))

;; H
  (assert (=> (<= first_char 1024) (= current_char5 current_char4)))

;; H
  (assert (=> (<= first_char 1024) (= line_num5 line_num4)))

;; H
  (assert (=> (<= first_char 1024) (= last_char5 last_char4)))

;; H
  (assert (=> (<= first_char 1024) (= first_char5 first_char4)))

;; H
  (assert (=> (not (<= first_char 1024)) (= current_char5 current_char1)))

;; H
  (assert (=> (not (<= first_char 1024)) (= line_num5 line_num1)))

;; H
  (assert (=> (not (<= first_char 1024)) (= last_char5 last_char1)))

;; H
  (assert (=> (not (<= first_char 1024)) (= first_char5 first_char1)))

;; H
  (assert
  (=> (= result true)
  (and (= o3 (+ first_char9 1)) (in_range7 (+ first_char9 1)))))

;; H
  (assert (=> (= result true) (= first_char10 o3)))

;; H
  (assert
  (=> (= result true)
  (=> (<= first_char10 1024)
  (and (<= 1 first_char10) (<= first_char10 1024)))))

;; H
  (assert
  (=> (= result true) (=> (<= first_char10 1024) (= o4 first_char10))))

;; H
  (assert
  (=> (= result true)
  (=> (<= first_char10 1024) (= o6 (ite (in_range5 o5) true false)))))

;; H
  (assert
  (=> (= result true) (=> (not (<= first_char10 1024)) (= o6 false))))

;; H
  (assert
  (=> (= result true) (= result1 (ite (not (= o6 true)) true false))))

;; H
  (assert (=> (= result true) (= result1 true)))

;; H
  (assert (=> (= result true) (= first_char11 first_char10)))

;; H
  (assert (=> (= result true) (= first_char12 first_char11)))

;; H
  (assert (=> (not (= result true)) (= first_char12 first_char8)))

;; H
  (assert (= start1 r25b))

;; H
  (assert (in_range4 r25b))

;; H
  (assert (in_range1 r26b))

;; H
  (assert
  (=> (<= r25b r26b)
  (and (and (<= 1 r25b) (<= r25b 1024)) (and (<= 1 r26b) (<= r26b 1024)))))

;; H
  (assert (= o24 (- o23 o22)))

;; H
  (assert (= result2 (ite (= o25 0) true false)))

;; H
  (assert (not (= result2 true)))

;; H
  (assert (= o28 (+ o27 o26)))

;; H
  (assert (= o30 (- o29 1)))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (in_range2 o30)))
(check-sat)
(exit)
