;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range1
                                     temp___expr_33)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun value__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(declare-fun foo__thing__d__first__bit () Int)

(declare-fun foo__thing__d__last__bit () Int)

(declare-fun foo__thing__d__position () Int)

;; foo__thing__d__first__bit_axiom
  (assert (<= 0 foo__thing__d__first__bit))

;; foo__thing__d__last__bit_axiom
  (assert (< foo__thing__d__first__bit foo__thing__d__last__bit))

;; foo__thing__d__position_axiom
  (assert (<= 0 foo__thing__d__position))

(declare-fun foo__thing__a__first__bit () Int)

(declare-fun foo__thing__a__last__bit () Int)

(declare-fun foo__thing__a__position () Int)

;; foo__thing__a__first__bit_axiom
  (assert (<= 0 foo__thing__a__first__bit))

;; foo__thing__a__last__bit_axiom
  (assert (< foo__thing__a__first__bit foo__thing__a__last__bit))

;; foo__thing__a__position_axiom
  (assert (<= 0 foo__thing__a__position))

(declare-fun foo__thing__x__first__bit () Int)

(declare-fun foo__thing__x__last__bit () Int)

(declare-fun foo__thing__x__position () Int)

;; foo__thing__x__first__bit_axiom
  (assert (<= 0 foo__thing__x__first__bit))

;; foo__thing__x__last__bit_axiom
  (assert (< foo__thing__x__first__bit foo__thing__x__last__bit))

;; foo__thing__x__position_axiom
  (assert (<= 0 foo__thing__x__position))

(declare-fun n () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun b () Bool)

(declare-fun self__ () Bool)

(declare-fun self__1 () Bool)

(declare-fun result () Bool)

(declare-fun result1 () Bool)

(declare-fun self__2 () Bool)

(declare-fun self__3 () Bool)

(declare-fun self__4 () Bool)

(declare-fun self__5 () Bool)

(declare-fun self__6 () Bool)

(declare-fun self__7 () Bool)

;; H
  (assert (in_range1 n))

;; H
  (assert (and (and (< 10 n) (= b true)) (= self__ true)))

;; H
  (assert (= result self__))

;; H
  (assert (= result1 self__1))

;; H
  (assert (= self__ self__2))

;; H
  (assert (= (of_int 0) self__3))

;; H
  (assert (= self__4 self__2))

;; H
  (assert (= self__5 self__3))

;; H
  (assert (= self__6 self__2))

;; H
  (assert (= self__7 self__3))

(assert
;; WP_parameter_def
 ;; File "foo.adb", line 7, characters 0-0
  (not (= b true)))
(check-sat)
(exit)
