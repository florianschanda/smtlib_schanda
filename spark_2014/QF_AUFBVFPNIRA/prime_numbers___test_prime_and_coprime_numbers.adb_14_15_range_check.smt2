;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun in_range ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range
                                     temp___expr_39)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range1 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun abstr () Bool)

(define-fun bool_eq ((a (Array Int Bool)) (a__first Int) (a__last Int)
  (b (Array Int Bool)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first)) abstr)
                      true false))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant1 ((temp___expr_178 Int)
  (temp___is_init_175 Bool) (temp___skip_constant_176 Bool)
  (temp___do_toplevel_177 Bool)) Bool (=>
                                      (or (= temp___is_init_175 true)
                                      (<= 0 2147483647)) (in_range2
                                      temp___expr_178)))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(define-fun mod1 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(declare-fun is_prime () (Array Int Bool))

(declare-fun coprimes () (Array Int Bool))

(declare-fun result__ () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () (Array Int Bool))

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun result () Int)

(declare-fun result__1 () Int)

(declare-fun result1 () (Array Int Bool))

(declare-fun coprimes1 () (Array Int Bool))

(declare-fun abstr1 () Bool)

;; H
  (assert (= abstr1 true))

;; H
  (assert (=> (<= 1 2147483647) (in_range result__)))

(declare-fun abstr2 () Bool)

(declare-fun abstr3 () Bool)

(declare-fun abstr4 () Bool)

(declare-fun abstr5 () Bool)

(declare-fun abstr6 () Bool)

(declare-fun abstr7 () Int)

;; H
  (assert
  (and (= o abstr7)
  (and (in_range2 o)
  (and (and (and (<= 0 o) (<= o 100000)) (= abstr6 true))
  (ite (= abstr5 true) (= o 555)
  (ite (= abstr4 true) (and (< 555 o) true)
  (ite (= abstr3 true) (and (< o 555) true)
  (=> (= abstr2 true) (and true true)))))))))

;; H
  (assert (and (= o1 o) (in_range o)))

;; H
  (assert (= result result__))

;; H
  (assert (= result__1 o1))

(declare-fun abstr8 () (Array Int Bool))

;; H
  (assert (and (= o2 abstr8) true))

;; H
  (assert (= result1 coprimes))

;; H
  (assert (= coprimes1 o2))

(declare-fun abstr9 () Bool)

(declare-fun abstr10 () Bool)

(declare-fun abstr11 () Bool)

(declare-fun abstr12 () Int)

;; H
  (assert
  (and (= o3 abstr12)
  (and (in_range2 o3)
  (and (and (and (<= 0 o3) (<= o3 100000)) (= (select coprimes1 o3) true))
  (ite (= (= (to_int1 (select coprimes1 555)) (to_int1 (of_int 1))) true)
  (= o3 555)
  (ite (= abstr11 true) (and (< 555 o3) true)
  (ite (= abstr10 true) (and (< o3 555) true)
  (=> (= abstr9 true) (and true true)))))))))

(assert
;; WP_parameter_def
 ;; File "prime_and_coprime_numbers.adb", line 12, characters 0-0
  (not (in_range o3)))
(check-sat)
(exit)
