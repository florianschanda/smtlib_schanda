;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(define-fun in_range1 ((x Int)) Bool (and (<= 1000 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_135 Int)
  (temp___is_init_132 Bool) (temp___skip_constant_133 Bool)
  (temp___do_toplevel_134 Bool)) Bool (=>
                                      (or (= temp___is_init_132 true)
                                      (<= 1000 2147483647)) (in_range1
                                      temp___expr_135)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun number () Int)

(declare-fun next_number () Int)

(declare-fun o () Int)

(declare-fun result () Int)

(declare-fun number1 () Int)

;; H
  (assert (in_range1 next_number))

;; H
  (assert (=> (<= 1000 2147483647) (in_range1 number)))

;; H
  (assert (= result number))

;; H
  (assert (= number1 next_number))

(assert
;; WP_parameter_def
 ;; File "serial_numbers2.ads", line 2, characters 0-0
  (not (in_range (+ next_number 1))))
(check-sat)
(exit)
