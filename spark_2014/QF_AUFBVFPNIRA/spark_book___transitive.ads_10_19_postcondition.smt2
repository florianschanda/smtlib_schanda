;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range1
                                     temp___expr_33)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun x () Int)

(declare-fun x_last () Int)

(declare-fun i () Int)

(declare-fun temp___136 () Int)

(declare-fun temp___135 () Int)

(declare-fun temp___134 () Int)

(declare-fun temp___132 () Int)

(declare-fun temp___133 () Int)

(declare-fun x1 () Int)

(declare-fun x_last1 () Int)

(declare-fun result () Int)

(declare-fun i1 () Int)

(declare-fun x2 () Int)

(declare-fun x_last2 () Int)

(declare-fun i2 () Int)

(declare-fun result1 () Int)

(declare-fun x_last3 () Int)

(declare-fun x3 () Int)

(declare-fun result2 () Int)

(declare-fun i3 () Int)

(declare-fun x4 () Int)

(declare-fun x_last4 () Int)

(declare-fun i4 () Int)

(declare-fun x5 () Int)

(declare-fun x_last5 () Int)

(declare-fun i5 () Int)

(declare-fun x6 () Int)

(declare-fun x_last6 () Int)

(declare-fun i6 () Int)

(declare-fun x7 () Int)

(declare-fun x_last7 () Int)

(declare-fun i7 () Int)

(declare-fun x8 () Int)

(declare-fun x_last8 () Int)

(declare-fun i8 () Int)

(declare-fun x9 () Int)

(declare-fun x_last9 () Int)

(declare-fun i9 () Int)

(declare-fun x10 () Int)

(declare-fun x_last10 () Int)

(declare-fun i10 () Int)

(declare-fun x11 () Int)

(declare-fun x_last11 () Int)

(declare-fun i11 () Int)

;; H
  (assert (in_range1 x))

;; H
  (assert (=> (<= 0 2147483647) (in_range1 x_last)))

(declare-fun abstr () Bool)

;; H
  (assert (= abstr true))

;; H
  (assert (= i1 1))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 10)) (= i9 i7)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 10)) (= x_last9 x_last7)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 10)) (= x9 x7)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 10))) (= i1 i8)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 10))) (= i9 i1)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 10))) (= x_last9 x_last1)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 10))) (= x9 x1)))

;; H
  (assert (= i10 i8))

;; H
  (assert (= x_last10 x_last8))

;; H
  (assert (= i11 i9))

;; H
  (assert (= x_last11 x_last9))

;; H
  (assert (= x11 x9))

(declare-fun abstr1 () Bool)

(assert
;; WP_parameter_def
 ;; File "transitive.ads", line 4, characters 0-0
  (not (= abstr1 true)))
(check-sat)
(exit)
