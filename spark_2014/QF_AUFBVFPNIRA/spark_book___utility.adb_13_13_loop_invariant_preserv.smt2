;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 1023)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant1 ((temp___expr_136 Int)
  (temp___is_init_133 Bool) (temp___skip_constant_134 Bool)
  (temp___do_toplevel_135 Bool)) Bool (=>
                                      (or (= temp___is_init_133 true)
                                      (<= 0 1023)) (in_range2
                                      temp___expr_136)))

(declare-fun index () Int)

(declare-fun utility__search_for_zero__result () Int)

(declare-fun temp___151 () Int)

(declare-fun temp___152 () Int)

(declare-fun temp___150 () Int)

(declare-fun j () Int)

(declare-fun utility__search_for_zero__result1 () Int)

(declare-fun result () Int)

(declare-fun index1 () Int)

(declare-fun result1 () Int)

(declare-fun utility__search_for_zero__result2 () Int)

(declare-fun index2 () Int)

(declare-fun utility__search_for_zero__result3 () Int)

(declare-fun result2 () Int)

(declare-fun index3 () Int)

(declare-fun result3 () Int)

(declare-fun utility__search_for_zero__result4 () Int)

(declare-fun index4 () Int)

(declare-fun utility__search_for_zero__result5 () Int)

(declare-fun index5 () Int)

(declare-fun utility__search_for_zero__result6 () Int)

(declare-fun index6 () Int)

(declare-fun utility__search_for_zero__result7 () Int)

(declare-fun index7 () Int)

(declare-fun utility__search_for_zero__result8 () Int)

(declare-fun index8 () Int)

(declare-fun utility__search_for_zero__result9 () Int)

(declare-fun index9 () Int)

(declare-fun utility__search_for_zero__result10 () Int)

(declare-fun index10 () Int)

(declare-fun utility__search_for_zero__result11 () Int)

(declare-fun index11 () Int)

(declare-fun utility__search_for_zero__result12 () Int)

(declare-fun index12 () Int)

(declare-fun utility__search_for_zero__result13 () Int)

(declare-fun index13 () Int)

(declare-fun utility__search_for_zero__result14 () Int)

(declare-fun index14 () Int)

(declare-fun utility__search_for_zero__result15 () Int)

(declare-fun index15 () Int)

(declare-fun utility__search_for_zero__result16 () Int)

;; H
  (assert (= index1 0))

;; H
  (assert (<= 0 index1))

;; H
  (assert (<= index1 1023))

;; H
  (assert
  (= utility__search_for_zero__result2 utility__search_for_zero__result))

;; H
  (assert
  (= utility__search_for_zero__result2 utility__search_for_zero__result1))

;; H
  (assert
  (and (=> (<= 0 1023) (in_range2 index2))
  (and (<= 0 index2) (<= index2 1023))))

;; H
  (assert (not (= index2 1023)))

;; H
  (assert (= index2 result2))

;; H
  (assert (= index3 (+ index2 1)))

;; H
  (assert
  (= utility__search_for_zero__result4 utility__search_for_zero__result3))

(assert
;; WP_parameter_def
 ;; File "utility.ads", line 6, characters 0-0
  (not false))
(check-sat)
(exit)
