;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun mod1 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_163 Int)
  (temp___is_init_160 Bool) (temp___skip_constant_161 Bool)
  (temp___do_toplevel_162 Bool)) Bool (=>
                                      (or (= temp___is_init_160 true)
                                      (<= 0 2147483647)) (in_range3
                                      temp___expr_163)))

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(define-fun dynamic_invariant1 ((temp___expr_169 Int)
  (temp___is_init_166 Bool) (temp___skip_constant_167 Bool)
  (temp___do_toplevel_168 Bool)) Bool (=>
                                      (or (= temp___is_init_166 true)
                                      (<= 1 10)) (in_range4 temp___expr_169)))

(declare-fun search_item () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(define-fun dynamic_invariant2 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range1
                                     temp___expr_33)))

(define-fun dynamic_invariant3 ((temp___expr_148 Int)
  (temp___is_init_145 Bool) (temp___skip_constant_146 Bool)
  (temp___do_toplevel_147 Bool)) Bool (=>
                                      (or (= temp___is_init_145 true)
                                      (<= 1 10)) (in_range2 temp___expr_148)))

(declare-fun found () Bool)

(declare-fun result__ () Int)

(declare-fun low_index () Int)

(declare-fun mid_index () Int)

(declare-fun high_index () Int)

(declare-fun j () Int)

(declare-fun k () Int)

(declare-fun temp___187 () Bool)

(declare-fun temp___186 () Int)

(declare-fun temp___185 () Int)

(declare-fun temp___184 () Int)

(declare-fun temp___183 () Int)

(declare-fun temp___189 () Int)

(declare-fun temp___188 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun mid_index1 () Int)

(declare-fun result () Int)

(declare-fun low_index1 () Int)

(declare-fun result1 () Int)

(declare-fun high_index1 () Int)

(declare-fun result2 () Bool)

(declare-fun found1 () Bool)

(declare-fun result3 () Int)

(declare-fun result__1 () Int)

(declare-fun temp___1891 () Int)

(declare-fun temp___1881 () Int)

(declare-fun result4 () Int)

(declare-fun mid_index2 () Int)

(declare-fun result5 () Bool)

(declare-fun found2 () Bool)

(declare-fun result6 () Int)

(declare-fun result__2 () Int)

(declare-fun found3 () Bool)

(declare-fun result__3 () Int)

(declare-fun low_index2 () Int)

(declare-fun mid_index3 () Int)

(declare-fun high_index2 () Int)

(declare-fun temp___1892 () Int)

(declare-fun temp___1882 () Int)

(declare-fun result7 () Int)

(declare-fun temp___1893 () Int)

(declare-fun result8 () Int)

(declare-fun temp___1883 () Int)

(declare-fun result9 () Bool)

(declare-fun result10 () Int)

(declare-fun low_index3 () Int)

(declare-fun result11 () Int)

(declare-fun high_index3 () Int)

(declare-fun result12 () Int)

(declare-fun mid_index4 () Int)

(declare-fun result13 () Bool)

(declare-fun found4 () Bool)

(declare-fun result14 () Int)

(declare-fun result__4 () Int)

(declare-fun found5 () Bool)

(declare-fun result__5 () Int)

(declare-fun mid_index5 () Int)

(declare-fun found6 () Bool)

(declare-fun result__6 () Int)

(declare-fun low_index4 () Int)

(declare-fun mid_index6 () Int)

(declare-fun high_index4 () Int)

(declare-fun found7 () Bool)

(declare-fun result__7 () Int)

(declare-fun low_index5 () Int)

(declare-fun mid_index7 () Int)

(declare-fun high_index5 () Int)

(declare-fun temp___1894 () Int)

(declare-fun temp___1884 () Int)

(declare-fun found8 () Bool)

(declare-fun result__8 () Int)

(declare-fun low_index6 () Int)

(declare-fun mid_index8 () Int)

(declare-fun high_index6 () Int)

(declare-fun temp___1895 () Int)

(declare-fun temp___1885 () Int)

(declare-fun found9 () Bool)

(declare-fun result__9 () Int)

(declare-fun low_index7 () Int)

(declare-fun mid_index9 () Int)

(declare-fun high_index7 () Int)

(declare-fun found10 () Bool)

(declare-fun result__10 () Int)

(declare-fun low_index8 () Int)

(declare-fun mid_index10 () Int)

(declare-fun high_index8 () Int)

(declare-fun found11 () Bool)

(declare-fun result__11 () Int)

(declare-fun low_index9 () Int)

(declare-fun mid_index11 () Int)

(declare-fun high_index9 () Int)

(declare-fun found12 () Bool)

(declare-fun result__12 () Int)

(declare-fun low_index10 () Int)

(declare-fun mid_index12 () Int)

(declare-fun high_index10 () Int)

(declare-fun found13 () Bool)

(declare-fun result__13 () Int)

(declare-fun low_index11 () Int)

(declare-fun mid_index13 () Int)

(declare-fun high_index11 () Int)

;; H
  (assert (in_range3 search_item))

;; H
  (assert (=> (<= 1 10) (in_range4 result__)))

;; H
  (assert (= low_index1 1))

;; H
  (assert (in_range4 low_index1))

;; H
  (assert (=> (<= 1 10) (in_range4 mid_index)))

;; H
  (assert (= high_index1 10))

;; H
  (assert (in_range4 high_index1))

;; H
  (assert (= found1 (of_int 0)))

;; H
  (assert (= result__1 1))

(declare-fun abstr () Int)

;; H
  (assert (= mid_index2 abstr))

;; H
  (assert (= result__2 result__1))

;; H
  (assert (= found2 found1))

;; H
  (assert (not (= low_index1 high_index1)))

(assert
;; WP_parameter_def
 ;; File "prime_search.adb", line 3, characters 0-0
  (not (<= low_index1 mid_index2)))
(check-sat)
(exit)
