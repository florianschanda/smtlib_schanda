;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_33)))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 20000)))

(define-fun dynamic_invariant1 ((temp___expr_135 Int)
  (temp___is_init_132 Bool) (temp___skip_constant_133 Bool)
  (temp___do_toplevel_134 Bool)) Bool (=>
                                      (or (= temp___is_init_132 true)
                                      (<= 0 20000)) (in_range3
                                      temp___expr_135)))

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 10000)))

(define-fun dynamic_invariant2 ((temp___expr_147 Int)
  (temp___is_init_144 Bool) (temp___skip_constant_145 Bool)
  (temp___do_toplevel_146 Bool)) Bool (=>
                                      (or (= temp___is_init_144 true)
                                      (<= 1 10000)) (in_range4
                                      temp___expr_147)))

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 4)))

(define-fun dynamic_invariant3 ((temp___expr_159 Int)
  (temp___is_init_156 Bool) (temp___skip_constant_157 Bool)
  (temp___do_toplevel_158 Bool)) Bool (=>
                                      (or (= temp___is_init_156 true)
                                      (<= 0 4)) (in_range5 temp___expr_159)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun abstr () (_ BitVec 32))

(declare-fun abstr1 () (_ BitVec 32))

(declare-fun abstr2 () (_ BitVec 32))

(declare-fun abstr3 () (_ BitVec 32))

(declare-fun abstr4 () (_ BitVec 32))

(define-fun nth_bv ((x (_ BitVec 32))
  (i (_ BitVec 32))) Bool (ite (not
                               (= (bvand (bvlshr x i) #x00000001) #x00000000))
                          true false))

(declare-fun abstr5 () Bool)

(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool abstr5)

(define-fun bv_min ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 32))

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun value__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(declare-fun com_map__com_to_rbc_map__map__capacity__first__bit () Int)

(declare-fun com_map__com_to_rbc_map__map__capacity__last__bit () Int)

(declare-fun com_map__com_to_rbc_map__map__capacity__position () Int)

;; com_map__com_to_rbc_map__map__capacity__first__bit_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__capacity__first__bit))

;; com_map__com_to_rbc_map__map__capacity__last__bit_axiom
  (assert
  (< com_map__com_to_rbc_map__map__capacity__first__bit com_map__com_to_rbc_map__map__capacity__last__bit))

;; com_map__com_to_rbc_map__map__capacity__position_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__capacity__position))

(declare-fun com_map__com_to_rbc_map__map__modulus__first__bit () Int)

(declare-fun com_map__com_to_rbc_map__map__modulus__last__bit () Int)

(declare-fun com_map__com_to_rbc_map__map__modulus__position () Int)

;; com_map__com_to_rbc_map__map__modulus__first__bit_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__modulus__first__bit))

;; com_map__com_to_rbc_map__map__modulus__last__bit_axiom
  (assert
  (< com_map__com_to_rbc_map__map__modulus__first__bit com_map__com_to_rbc_map__map__modulus__last__bit))

;; com_map__com_to_rbc_map__map__modulus__position_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__modulus__position))

(declare-fun value__size1 () Int)

(declare-fun value__alignment1 () Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS12 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS13 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS14 () Int)

(declare-fun value__size2 () Int)

(declare-fun value__alignment2 () Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

(declare-fun com_map__com_to_rbc_map__map__capacity__first__bit1 () Int)

(declare-fun com_map__com_to_rbc_map__map__capacity__last__bit1 () Int)

(declare-fun com_map__com_to_rbc_map__map__capacity__position1 () Int)

;; com_map__com_to_rbc_map__map__capacity__first__bit_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__capacity__first__bit1))

;; com_map__com_to_rbc_map__map__capacity__last__bit_axiom
  (assert
  (< com_map__com_to_rbc_map__map__capacity__first__bit1 com_map__com_to_rbc_map__map__capacity__last__bit1))

;; com_map__com_to_rbc_map__map__capacity__position_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__capacity__position1))

(declare-fun com_map__com_to_rbc_map__map__modulus__first__bit1 () Int)

(declare-fun com_map__com_to_rbc_map__map__modulus__last__bit1 () Int)

(declare-fun com_map__com_to_rbc_map__map__modulus__position1 () Int)

;; com_map__com_to_rbc_map__map__modulus__first__bit_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__modulus__first__bit1))

;; com_map__com_to_rbc_map__map__modulus__last__bit_axiom
  (assert
  (< com_map__com_to_rbc_map__map__modulus__first__bit1 com_map__com_to_rbc_map__map__modulus__last__bit1))

;; com_map__com_to_rbc_map__map__modulus__position_axiom
  (assert (<= 0 com_map__com_to_rbc_map__map__modulus__position1))

(declare-fun r1s () (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_ADDRESS15 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS16 () Int)

(declare-fun destination () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS17 () Int)

(declare-fun phone () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS18 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS19 () Int)

(define-fun dynamic_invariant4 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant5 ((temp___expr_165 (_ BitVec 32))
  (temp___is_init_162 Bool) (temp___skip_constant_163 Bool)
  (temp___do_toplevel_164 Bool)) Bool true)

(define-fun dynamic_invariant6 ((temp___expr_171 Int)
  (temp___is_init_168 Bool) (temp___skip_constant_169 Bool)
  (temp___do_toplevel_170 Bool)) Bool (=>
                                      (or (= temp___is_init_168 true)
                                      (<= 0 2147483647)) (in_range6
                                      temp___expr_171)))

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 10000)))

(define-fun dynamic_invariant7 ((temp___expr_274 Int)
  (temp___is_init_271 Bool) (temp___skip_constant_272 Bool)
  (temp___do_toplevel_273 Bool)) Bool (=>
                                      (or (= temp___is_init_271 true)
                                      (<= 1 10000)) (in_range7
                                      temp___expr_274)))

(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 10000)))

(define-fun dynamic_invariant8 ((temp___expr_303 Int)
  (temp___is_init_300 Bool) (temp___skip_constant_301 Bool)
  (temp___do_toplevel_302 Bool)) Bool (=>
                                      (or (= temp___is_init_300 true)
                                      (<= 1 10000)) (in_range8
                                      temp___expr_303)))

(declare-fun ertms_etcs_level () Int)

(declare-fun start_of_mission () Bool)

(declare-fun end_of_mission () Bool)

(declare-fun track_side_new_communication_order () Bool)

(declare-fun track_side_terminate_communication_order () Bool)

(declare-fun train_passes_level_transition_border () Bool)

(declare-fun train_passes_rbc_rbc_border () Bool)

(declare-fun train_passes_start_of_announced_radio_hole () Bool)

(declare-fun order_to_contact_different_rbc () Bool)

(declare-fun contact_order_not_for_accepting_rbc () Bool)

(declare-fun mode_change_report_to_rbc_not_considered_as_end_of_mission () Bool)

(declare-fun manual_level_change () Bool)

(declare-fun train_front_reaches_end_of_radio_hole () Bool)

(declare-fun previous_communication_loss () Bool)

(declare-fun start_of_mission_procedure_completed_without_com () Bool)

(declare-fun connection_attemps () Int)

(declare-fun temp___524 () Int)

(declare-fun o () Int)

(declare-fun o1 () Bool)

(declare-fun o2 () Bool)

(declare-fun o3 () Bool)

(declare-fun o4 () Bool)

(declare-fun o5 () Bool)

(declare-fun o6 () Bool)

(declare-fun o7 () Bool)

(declare-fun result () Int)

(declare-fun connection_attemps1 () Int)

(declare-fun connection_attemps2 () Int)

(declare-fun result1 () Bool)

(declare-fun result2 () Int)

(declare-fun connection_attemps3 () Int)

(declare-fun connection_attemps4 () Int)

(declare-fun connection_attemps5 () Int)

(declare-fun result3 () Bool)

(declare-fun connection_attemps6 () Int)

(declare-fun connection_attemps7 () Int)

(declare-fun connection_attemps8 () Int)

(declare-fun connection_attemps9 () Int)

;; H
  (assert (in_range4 destination))

;; H
  (assert (in_range3 phone))

;; H
  (assert (in_range5 ertms_etcs_level))

;; H
  (assert (= connection_attemps1 0))

;; H
  (assert (in_range2 connection_attemps1))

;; H
  (assert (= connection_attemps9 connection_attemps8))

(assert
;; WP_parameter_def
 ;; File "section_3_5_3.ads", line 53, characters 0-0
  (not false))
(check-sat)
(exit)
