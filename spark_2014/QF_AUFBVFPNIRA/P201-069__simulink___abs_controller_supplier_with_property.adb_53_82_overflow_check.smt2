;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun abstr () (_ BitVec 32))

(declare-fun abstr1 () (_ BitVec 32))

(declare-fun abstr2 () (_ BitVec 32))

(declare-fun abstr3 () (_ BitVec 32))

(declare-fun abstr4 () (_ BitVec 32))

(define-fun nth_bv ((x (_ BitVec 32))
  (i (_ BitVec 32))) Bool (ite (not
                               (= (bvand (bvlshr x i) #x00000001) #x00000000))
                          true false))

(declare-fun abstr5 () Bool)

(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool abstr5)

(define-fun bv_min ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(define-fun in_range ((x Int)) Bool (and (<= (- 128) x) (<= x 127)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 128) x) (<= x 127)))

(define-fun dynamic_invariant ((temp___expr_147 Int)
  (temp___is_init_144 Bool) (temp___skip_constant_145 Bool)
  (temp___do_toplevel_146 Bool)) Bool (=>
                                      (or (= temp___is_init_144 true)
                                      (<= (- 128) 127)) (in_range1
                                      temp___expr_147)))

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun dynamic_invariant1 ((temp___expr_159 Int)
  (temp___is_init_156 Bool) (temp___skip_constant_157 Bool)
  (temp___do_toplevel_158 Bool)) Bool (=>
                                      (or (= temp___is_init_156 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range3 temp___expr_159)))

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 32))

(define-fun dynamic_invariant2 ((temp___expr_189 (_ BitVec 32))
  (temp___is_init_186 Bool) (temp___skip_constant_187 Bool)
  (temp___do_toplevel_188 Bool)) Bool true)

(declare-fun wheel_speed () (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun vehicle_speed () (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun apply_brakes () Int)

(declare-fun sum_out1 () Int)

(declare-fun sum_1_out1 () Int)

(declare-fun at_rest_switch_out1 () Int)

(declare-fun sum_1_out1_sat () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Int)

(declare-fun o6 () Int)

(declare-fun o7 () Int)

(declare-fun o8 () Int)

(declare-fun sum_out11 () Int)

(declare-fun sum_1_out11 () Int)

(declare-fun sum_1_out1_sat1 () Int)

(declare-fun result () Int)

(declare-fun sum_out12 () Int)

(declare-fun result1 () Int)

(declare-fun sum_1_out1_sat2 () Int)

(declare-fun result2 () Int)

(declare-fun sum_1_out12 () Int)

(declare-fun result3 () Int)

(declare-fun sum_1_out13 () Int)

(declare-fun result4 () Int)

(declare-fun sum_1_out14 () Int)

(declare-fun result5 () Int)

(declare-fun at_rest_switch_out11 () Int)

(declare-fun result6 () Int)

(declare-fun at_rest_switch_out12 () Int)

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range3 apply_brakes)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range3 sum_out1)))

;; H
  (assert (=> (<= (- 128) 127) (in_range1 sum_1_out1)))

;; H
  (assert
  (=> (<= (- 2147483648) 2147483647) (in_range3 at_rest_switch_out1)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range3 sum_1_out1_sat)))

(declare-fun abstr6 () (_ BitVec 32))

;; H
  (assert (bvugt vehicle_speed abstr6))

(declare-fun abstr7 () Int)

;; H
  (assert (and (= o abstr7) (in_range3 abstr7)))

(declare-fun abstr8 () Int)

;; H
  (assert (and (= o1 abstr8) (in_range3 abstr8)))

;; H
  (assert (= o2 (- o1 o)))

;; H
  (assert (and (= o3 o2) (in_range2 o2)))

;; H
  (assert (= sum_out12 o3))

(declare-fun abstr9 () Int)

;; H
  (assert (and (= o4 abstr9) (in_range1 o4)))

(declare-fun abstr10 () Int)

;; H
  (assert (and (= o5 abstr10) (in_range1 o5)))

;; H
  (assert (= o6 (- o5 o4)))

(assert
;; WP_parameter_def
 ;; File "abs_controller_supplier_with_property.ads", line 22, characters 0-0
  (not (in_range o6)))
(check-sat)
(exit)
