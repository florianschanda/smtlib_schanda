;; produced by colibri_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-fun value__size () Int)

(declare-fun value__component__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))

(define-fun dynamic_invariant ((temp___expr_135 Int)
  (temp___is_init_132 Bool) (temp___skip_constant_133 Bool)
  (temp___do_toplevel_134 Bool)) Bool (=>
                                      (or (= temp___is_init_132 true)
                                      (<= 0 1024)) (in_range4
                                      temp___expr_135)))

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 1024)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun r14b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant2 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant3 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant4 ((temp___expr_141 Int)
  (temp___is_init_138 Bool) (temp___skip_constant_139 Bool)
  (temp___do_toplevel_140 Bool)) Bool (=>
                                      (or (= temp___is_init_138 true)
                                      (<= 1 1024)) (in_range5
                                      temp___expr_141)))

(declare-fun characters_to_copy () Int)

(declare-fun index () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun temp___257 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun result () Int)

(declare-fun characters_to_copy1 () Int)

(declare-fun result1 () Bool)

(declare-fun result2 () Int)

(declare-fun characters_to_copy2 () Int)

(declare-fun result3 () Int)

(declare-fun index1 () Int)

(declare-fun index2 () Int)

(declare-fun result4 () Int)

(declare-fun index3 () Int)

;; H
  (assert (= result characters_to_copy))

;; H
  (assert (= characters_to_copy1 1024))

;; H
  (assert (in_range4 characters_to_copy1))

;; H
  (assert (= result1 (ite (< o characters_to_copy1) true false)))

;; H
  (assert (=> (= result1 true) (= result2 characters_to_copy1)))

;; H
  (assert (=> (= result1 true) (= characters_to_copy2 o1)))

;; H
  (assert
  (=> (not (= result1 true)) (= characters_to_copy2 characters_to_copy1)))

;; H
  (assert (= characters_to_copy2 r14b))

;; H
  (assert (in_range4 r14b))

;; H
  (assert (= result3 index))

;; H
  (assert (= index1 1))

;; H
  (assert (<= 1 index1))

;; H
  (assert (<= index1 r14b))

;; H
  (assert (= o3 temp___257))

;; H
  (assert (not (= index2 r14b)))

;; H
  (assert (= result4 index2))

;; H
  (assert (= index3 (+ index2 1)))

(assert
;; WP_parameter_def
 ;; File "buffers.adb", line 69, characters 0-0
  (not false))
(check-sat)
(exit)
