;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range
                                     temp___expr_33)))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 97)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun value__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(declare-fun foo__thing__d__first__bit () Int)

(declare-fun foo__thing__d__last__bit () Int)

(declare-fun foo__thing__d__position () Int)

;; foo__thing__d__first__bit_axiom
  (assert (<= 0 foo__thing__d__first__bit))

;; foo__thing__d__last__bit_axiom
  (assert (< foo__thing__d__first__bit foo__thing__d__last__bit))

;; foo__thing__d__position_axiom
  (assert (<= 0 foo__thing__d__position))

(declare-fun foo__thing__a__first__bit () Int)

(declare-fun foo__thing__a__last__bit () Int)

(declare-fun foo__thing__a__position () Int)

;; foo__thing__a__first__bit_axiom
  (assert (<= 0 foo__thing__a__first__bit))

;; foo__thing__a__last__bit_axiom
  (assert (< foo__thing__a__first__bit foo__thing__a__last__bit))

;; foo__thing__a__position_axiom
  (assert (<= 0 foo__thing__a__position))

(declare-fun foo__thing__x__first__bit () Int)

(declare-fun foo__thing__x__last__bit () Int)

(declare-fun foo__thing__x__position () Int)

;; foo__thing__x__first__bit_axiom
  (assert (<= 0 foo__thing__x__first__bit))

;; foo__thing__x__last__bit_axiom
  (assert (< foo__thing__x__first__bit foo__thing__x__last__bit))

;; foo__thing__x__position_axiom
  (assert (<= 0 foo__thing__x__position))

(declare-fun value__size1 () Int)

(declare-fun value__alignment1 () Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

(declare-fun foo__thing__d__first__bit1 () Int)

(declare-fun foo__thing__d__last__bit1 () Int)

(declare-fun foo__thing__d__position1 () Int)

;; foo__thing__d__first__bit_axiom
  (assert (<= 0 foo__thing__d__first__bit1))

;; foo__thing__d__last__bit_axiom
  (assert (< foo__thing__d__first__bit1 foo__thing__d__last__bit1))

;; foo__thing__d__position_axiom
  (assert (<= 0 foo__thing__d__position1))

(declare-fun foo__thing__a__first__bit1 () Int)

(declare-fun foo__thing__a__last__bit1 () Int)

(declare-fun foo__thing__a__position1 () Int)

;; foo__thing__a__first__bit_axiom
  (assert (<= 0 foo__thing__a__first__bit1))

;; foo__thing__a__last__bit_axiom
  (assert (< foo__thing__a__first__bit1 foo__thing__a__last__bit1))

;; foo__thing__a__position_axiom
  (assert (<= 0 foo__thing__a__position1))

(declare-fun foo__thing__x__first__bit1 () Int)

(declare-fun foo__thing__x__last__bit1 () Int)

(declare-fun foo__thing__x__position1 () Int)

;; foo__thing__x__first__bit_axiom
  (assert (<= 0 foo__thing__x__first__bit1))

;; foo__thing__x__last__bit_axiom
  (assert (< foo__thing__x__first__bit1 foo__thing__x__last__bit1))

;; foo__thing__x__position_axiom
  (assert (<= 0 foo__thing__x__position1))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range2 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun d () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(define-fun dynamic_invariant1 ((temp___expr_208 Int)
  (temp___is_init_205 Bool) (temp___skip_constant_206 Bool)
  (temp___do_toplevel_207 Bool)) Bool (=>
                                      (or (= temp___is_init_205 true)
                                      (<= 0 97)) (in_range1 temp___expr_208)))

(declare-fun o () Bool)

(declare-fun o1 () Bool)

(declare-fun o2 () Bool)

(declare-fun o3 () Bool)

(declare-fun us_self__compl () Bool)

(declare-fun us_self__compl1 () Bool)

(declare-fun o4 () Bool)

(declare-fun o5 () Bool)

(declare-fun o6 () Bool)

(declare-fun o7 () Bool)

(declare-fun o8 () Bool)

(declare-fun o9 () Bool)

(declare-fun o10 () Bool)

(declare-fun b () Bool)

(declare-fun b1 () Bool)

;; H
  (assert false)

(assert
;; WP_parameter_def
 ;; File "foo.adb", line 5, characters 0-0
  (not false))
(check-sat)
(exit)
