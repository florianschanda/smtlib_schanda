;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-fun x () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun y () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun z () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(define-fun in_range1 ((x1 Int)) Bool (and (<= (- 3000) x1) (<= x1 3000)))

(define-fun dynamic_invariant1 ((temp___expr_135 Int)
  (temp___is_init_132 Bool) (temp___skip_constant_133 Bool)
  (temp___do_toplevel_134 Bool)) Bool (=>
                                      (or (= temp___is_init_132 true)
                                      (<= (- 3000) 3000)) (in_range1
                                      temp___expr_135)))

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun roll_rate_desired () Int)

(declare-fun pitch_rate_desired () Int)

(declare-fun yaw_rate_desired () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Int)

(declare-fun result () Int)

(declare-fun roll_rate_desired1 () Int)

(declare-fun result1 () Int)

(declare-fun pitch_rate_desired1 () Int)

(declare-fun result2 () Int)

(declare-fun yaw_rate_desired1 () Int)

(declare-fun get_out_subtype_int__controller_get_desired_rate__yaw_rate_desired () Int)

(declare-fun get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired1 () Int)

(declare-fun get_out_subtype_int__controller_get_desired_rate__roll_rate_desired () Int)

(declare-fun result3 () Int)

(declare-fun roll_rate_desired2 () Int)

(declare-fun result4 () Int)

(declare-fun pitch_rate_desired2 () Int)

;; H
  (assert (in_range x))

;; H
  (assert (in_range y))

;; H
  (assert (in_range z))

;; H
  (assert (= result roll_rate_desired))

;; H
  (assert (= roll_rate_desired1 0))

;; H
  (assert (in_range1 roll_rate_desired1))

;; H
  (assert (= result1 pitch_rate_desired))

;; H
  (assert (= pitch_rate_desired1 0))

;; H
  (assert (in_range1 pitch_rate_desired1))

;; H
  (assert (= result2 yaw_rate_desired))

;; H
  (assert (= yaw_rate_desired1 0))

;; H
  (assert (in_range1 yaw_rate_desired1))

;; H
  (assert (and (= o pitch_rate_desired1) (in_range pitch_rate_desired1)))

;; H
  (assert (and (= o1 o) (in_range o)))

;; H
  (assert
  (= o1 get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired))

;; H
  (assert
  (and
  (and (in_range
  get_out_subtype_int__controller_get_desired_rate__roll_rate_desired)
  (in_range
  get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired1))
  (in_range
  get_out_subtype_int__controller_get_desired_rate__yaw_rate_desired)))

;; H
  (assert
  (and
  (= o2 get_out_subtype_int__controller_get_desired_rate__roll_rate_desired)
  (in_range1
  get_out_subtype_int__controller_get_desired_rate__roll_rate_desired)))

;; H
  (assert (= result3 roll_rate_desired1))

;; H
  (assert (= roll_rate_desired2 o2))

(assert
;; WP_parameter_def
 ;; File "get_out_subtype_int.adb", line 7, characters 0-0
  (not (in_range1
  get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired1)))
(check-sat)
(exit)
