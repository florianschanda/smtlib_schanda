;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-fun value__size () Int)

(declare-fun value__component__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun dynamic_invariant1 ((temp___expr_472 Int)
  (temp___is_init_469 Bool) (temp___skip_constant_470 Bool)
  (temp___do_toplevel_471 Bool)) Bool (=>
                                      (or (= temp___is_init_469 true)
                                      (<= 0 255)) (in_range4
                                      temp___expr_472)))

(define-fun in_range5 ((x Int)) Bool (and (<= 2 x) (<= x 16)))

(define-fun dynamic_invariant2 ((temp___expr_478 Int)
  (temp___is_init_475 Bool) (temp___skip_constant_476 Bool)
  (temp___do_toplevel_477 Bool)) Bool (=>
                                      (or (= temp___is_init_475 true)
                                      (<= 2 16)) (in_range5 temp___expr_478)))

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(define-fun dynamic_invariant3 ((temp___expr_484 Int)
  (temp___is_init_481 Bool) (temp___skip_constant_482 Bool)
  (temp___do_toplevel_483 Bool)) Bool (=>
                                      (or (= temp___is_init_481 true)
                                      (<= 0 1)) (in_range6 temp___expr_484)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 6)))

(define-fun dynamic_invariant4 ((temp___expr_525 Int)
  (temp___is_init_522 Bool) (temp___skip_constant_523 Bool)
  (temp___do_toplevel_524 Bool)) Bool (=>
                                      (or (= temp___is_init_522 true)
                                      (<= 0 6)) (in_range7 temp___expr_525)))

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 6)))

(define-fun dynamic_invariant5 ((temp___expr_543 Int)
  (temp___is_init_540 Bool) (temp___skip_constant_541 Bool)
  (temp___do_toplevel_542 Bool)) Bool (=>
                                      (or (= temp___is_init_540 true)
                                      (<= 0 6)) (in_range9 temp___expr_543)))

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(define-fun dynamic_invariant6 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant7 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant8 ((temp___expr_531 Int)
  (temp___is_init_528 Bool) (temp___skip_constant_529 Bool)
  (temp___do_toplevel_530 Bool)) Bool (=>
                                      (or (= temp___is_init_528 true)
                                      (<= 0 2)) (in_range8 temp___expr_531)))

(declare-fun default_base () Int)

(declare-fun default_width () Int)

(declare-fun default_setting () Int)

(declare-fun today () Int)

(declare-fun tomorrow () Int)

(declare-fun count () Int)

(declare-fun day () Int)

(declare-fun color () Int)

(declare-fun color1 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun enum_example__day_io__get__2__item () Int)

(declare-fun result () Int)

(declare-fun today1 () Int)

(declare-fun result1 () Int)

(declare-fun tomorrow1 () Int)

(declare-fun result2 () Int)

(declare-fun day1 () Int)

(declare-fun day2 () Int)

(declare-fun day3 () Int)

(declare-fun day4 () Int)

(declare-fun day5 () Int)

(declare-fun day6 () Int)

(declare-fun result3 () Int)

(declare-fun color2 () Int)

(declare-fun color3 () Int)

(declare-fun color4 () Int)

(declare-fun color5 () Int)

(declare-fun color6 () Int)

(declare-fun color7 () Int)

(declare-fun result4 () Int)

(declare-fun count1 () Int)

(declare-fun result5 () Int)

(declare-fun color8 () Int)

(declare-fun count2 () Int)

(declare-fun color9 () Int)

;; H
  (assert (in_range5 default_base))

;; H
  (assert (in_range4 default_width))

;; H
  (assert (in_range6 default_setting))

;; H
  (assert (=> (<= 0 6) (in_range7 today)))

;; H
  (assert (=> (<= 0 6) (in_range7 tomorrow)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 count)))

;; H
  (assert (in_range9 enum_example__day_io__get__2__item))

;; H
  (assert (= result today))

;; H
  (assert (= today1 enum_example__day_io__get__2__item))

(declare-fun abstr () Int)

;; H
  (assert (and (= o abstr) (in_range7 o)))

;; H
  (assert (= result1 tomorrow))

;; H
  (assert (= tomorrow1 o))

;; H
  (assert (= result2 day))

;; H
  (assert (= day1 0))

;; H
  (assert (=> (and (<= 0 day1) (<= day1 4)) (and (<= 0 day2) (<= day2 4))))

;; H
  (assert (=> (and (<= 0 day1) (<= day1 4)) (= day2 4)))

;; H
  (assert (=> (and (<= 0 day1) (<= day1 4)) (= day2 day3)))

;; H
  (assert (=> (and (<= 0 day1) (<= day1 4)) (= day4 day2)))

;; H
  (assert (=> (and (<= 0 day1) (<= day1 4)) (= day6 day4)))

;; H
  (assert (=> (not (and (<= 0 day1) (<= day1 4))) (= day1 day5)))

;; H
  (assert (=> (not (and (<= 0 day1) (<= day1 4))) (= day6 day1)))

;; H
  (assert (= result3 color))

;; H
  (assert (= color2 0))

;; H
  (assert
  (=> (and (<= 0 color2) (<= color2 2)) (and (<= 0 color3) (<= color3 2))))

;; H
  (assert (=> (and (<= 0 color2) (<= color2 2)) (= color3 2)))

;; H
  (assert (=> (and (<= 0 color2) (<= color2 2)) (= color3 color4)))

;; H
  (assert (=> (and (<= 0 color2) (<= color2 2)) (= color5 color3)))

;; H
  (assert (=> (and (<= 0 color2) (<= color2 2)) (= color7 color5)))

;; H
  (assert (=> (not (and (<= 0 color2) (<= color2 2))) (= color2 color6)))

;; H
  (assert (=> (not (and (<= 0 color2) (<= color2 2))) (= color7 color2)))

;; H
  (assert (= result4 count))

;; H
  (assert (= count1 0))

;; H
  (assert (= result5 color1))

;; H
  (assert (= color8 0))

;; H
  (assert (<= 0 color8))

;; H
  (assert (<= color8 5))

;; H
  (assert
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 count2))
  (and (<= 0 color9) (<= color9 5))))

(assert
;; WP_parameter_def
 ;; File "enum_example.adb", line 13, characters 0-0
  (not (in_range1 (+ count2 1))))
(check-sat)
(exit)
