;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

(declare-fun abstr () (_ BitVec 16))

(declare-fun abstr1 () (_ BitVec 16))

(declare-fun abstr2 () (_ BitVec 16))

(declare-fun abstr3 () (_ BitVec 16))

(declare-fun abstr4 () (_ BitVec 16))

(define-fun nth_bv ((x (_ BitVec 16))
  (i (_ BitVec 16))) Bool (ite (not (= (bvand (bvlshr x i) #x0001) #x0000))
                          true false))

(declare-fun abstr5 () Bool)

(define-fun eq_sub ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool abstr5)

(define-fun bv_min ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 16))

(define-fun dynamic_invariant ((temp___expr_1282 (_ BitVec 16))
  (temp___is_init_1279 Bool) (temp___skip_constant_1280 Bool)
  (temp___do_toplevel_1281 Bool)) Bool true)

(declare-fun value () (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun min_value () (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun max_value () (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun res () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result () (_ BitVec 16))

(declare-fun result () (_ BitVec 16))

(declare-fun res1 () (_ BitVec 16))

(declare-fun result1 () (_ BitVec 16))

(declare-fun res2 () (_ BitVec 16))

(declare-fun result2 () (_ BitVec 16))

(declare-fun res3 () (_ BitVec 16))

(declare-fun result3 () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result1 () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result2 () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result3 () (_ BitVec 16))

(declare-fun res4 () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result4 () (_ BitVec 16))

(declare-fun res5 () (_ BitVec 16))

(declare-fun safety_pack__saturate__2__result5 () (_ BitVec 16))

(declare-fun result4 () (_ BitVec 16))

;; H
  (assert (= result res))

;; H
  (assert (= res1 value))

;; H
  (assert (=> (bvult value min_value) (= result1 res1)))

;; H
  (assert (=> (bvult value min_value) (= res2 min_value)))

;; H
  (assert
  (=> (not (bvult value min_value))
  (=> (bvugt value max_value) (= result2 res1))))

;; H
  (assert
  (=> (not (bvult value min_value))
  (=> (bvugt value max_value) (= res3 max_value))))

;; H
  (assert
  (=> (not (bvult value min_value))
  (=> (not (bvugt value max_value)) (= res3 res1))))

;; H
  (assert (=> (not (bvult value min_value)) (= res2 res3)))

;; H
  (assert
  (= safety_pack__saturate__2__result1 safety_pack__saturate__2__result2))

;; H
  (assert
  (= safety_pack__saturate__2__result3 safety_pack__saturate__2__result1))

;; H
  (assert (= result3 safety_pack__saturate__2__result))

;; H
  (assert (= safety_pack__saturate__2__result1 res2))

;; H
  (assert (= res4 res2))

;; H
  (assert
  (= safety_pack__saturate__2__result5 safety_pack__saturate__2__result3))

;; H
  (assert (= res5 res2))

;; H
  (assert (= result4 safety_pack__saturate__2__result4))

;; H
  (assert (bvult value min_value))

(assert
;; WP_parameter_def
 ;; File "types.ads", line 13, characters 0-0
  (not (= safety_pack__saturate__2__result4 min_value)))
(check-sat)
(exit)
