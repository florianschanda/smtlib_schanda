;; produced by colibri_gnatprove.drv ;;
(set-logic QF_AUFFPBVNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-fun value__size () Int)

(declare-fun value__component__size () Int)

(declare-fun value__alignment () Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun dynamic_invariant1 ((temp___expr_156 Int)
  (temp___is_init_153 Bool) (temp___skip_constant_154 Bool)
  (temp___do_toplevel_155 Bool)) Bool (=>
                                      (or (= temp___is_init_153 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range5 temp___expr_156)))

(declare-fun max_size () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-fun value__size1 () Int)

(declare-fun value__component__size1 () Int)

(declare-fun value__alignment1 () Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

(declare-fun value__size2 () Int)

(declare-fun value__alignment2 () Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

(declare-fun bounded_queue_v2__queue_type__max_size__first__bit () Int)

(declare-fun bounded_queue_v2__queue_type__max_size__last__bit () Int)

(declare-fun bounded_queue_v2__queue_type__max_size__position () Int)

;; bounded_queue_v2__queue_type__max_size__first__bit_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__max_size__first__bit))

;; bounded_queue_v2__queue_type__max_size__last__bit_axiom
  (assert
  (< bounded_queue_v2__queue_type__max_size__first__bit bounded_queue_v2__queue_type__max_size__last__bit))

;; bounded_queue_v2__queue_type__max_size__position_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__max_size__position))

(declare-fun bounded_queue_v2__queue_type__count__first__bit () Int)

(declare-fun bounded_queue_v2__queue_type__count__last__bit () Int)

(declare-fun bounded_queue_v2__queue_type__count__position () Int)

;; bounded_queue_v2__queue_type__count__first__bit_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__count__first__bit))

;; bounded_queue_v2__queue_type__count__last__bit_axiom
  (assert
  (< bounded_queue_v2__queue_type__count__first__bit bounded_queue_v2__queue_type__count__last__bit))

;; bounded_queue_v2__queue_type__count__position_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__count__position))

(declare-fun bounded_queue_v2__queue_type__front__first__bit () Int)

(declare-fun bounded_queue_v2__queue_type__front__last__bit () Int)

(declare-fun bounded_queue_v2__queue_type__front__position () Int)

;; bounded_queue_v2__queue_type__front__first__bit_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__front__first__bit))

;; bounded_queue_v2__queue_type__front__last__bit_axiom
  (assert
  (< bounded_queue_v2__queue_type__front__first__bit bounded_queue_v2__queue_type__front__last__bit))

;; bounded_queue_v2__queue_type__front__position_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__front__position))

(declare-fun bounded_queue_v2__queue_type__rear__first__bit () Int)

(declare-fun bounded_queue_v2__queue_type__rear__last__bit () Int)

(declare-fun bounded_queue_v2__queue_type__rear__position () Int)

;; bounded_queue_v2__queue_type__rear__first__bit_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__rear__first__bit))

;; bounded_queue_v2__queue_type__rear__last__bit_axiom
  (assert
  (< bounded_queue_v2__queue_type__rear__first__bit bounded_queue_v2__queue_type__rear__last__bit))

;; bounded_queue_v2__queue_type__rear__position_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__rear__position))

(declare-fun bounded_queue_v2__queue_type__items__first__bit () Int)

(declare-fun bounded_queue_v2__queue_type__items__last__bit () Int)

(declare-fun bounded_queue_v2__queue_type__items__position () Int)

;; bounded_queue_v2__queue_type__items__first__bit_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__items__first__bit))

;; bounded_queue_v2__queue_type__items__last__bit_axiom
  (assert
  (< bounded_queue_v2__queue_type__items__first__bit bounded_queue_v2__queue_type__items__last__bit))

;; bounded_queue_v2__queue_type__items__position_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__items__position))

(define-fun dynamic_invariant2 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_33)))

(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun value__size3 () Int)

(declare-fun value__component__size2 () Int)

(declare-fun value__alignment3 () Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

(declare-fun value__size4 () Int)

(declare-fun value__alignment4 () Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

(declare-fun bounded_queue_v2__queue_type__max_size__first__bit1 () Int)

(declare-fun bounded_queue_v2__queue_type__max_size__last__bit1 () Int)

(declare-fun bounded_queue_v2__queue_type__max_size__position1 () Int)

;; bounded_queue_v2__queue_type__max_size__first__bit_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__max_size__first__bit1))

;; bounded_queue_v2__queue_type__max_size__last__bit_axiom
  (assert
  (< bounded_queue_v2__queue_type__max_size__first__bit1 bounded_queue_v2__queue_type__max_size__last__bit1))

;; bounded_queue_v2__queue_type__max_size__position_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__max_size__position1))

(declare-fun bounded_queue_v2__queue_type__count__first__bit1 () Int)

(declare-fun bounded_queue_v2__queue_type__count__last__bit1 () Int)

(declare-fun bounded_queue_v2__queue_type__count__position1 () Int)

;; bounded_queue_v2__queue_type__count__first__bit_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__count__first__bit1))

;; bounded_queue_v2__queue_type__count__last__bit_axiom
  (assert
  (< bounded_queue_v2__queue_type__count__first__bit1 bounded_queue_v2__queue_type__count__last__bit1))

;; bounded_queue_v2__queue_type__count__position_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__count__position1))

(declare-fun bounded_queue_v2__queue_type__front__first__bit1 () Int)

(declare-fun bounded_queue_v2__queue_type__front__last__bit1 () Int)

(declare-fun bounded_queue_v2__queue_type__front__position1 () Int)

;; bounded_queue_v2__queue_type__front__first__bit_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__front__first__bit1))

;; bounded_queue_v2__queue_type__front__last__bit_axiom
  (assert
  (< bounded_queue_v2__queue_type__front__first__bit1 bounded_queue_v2__queue_type__front__last__bit1))

;; bounded_queue_v2__queue_type__front__position_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__front__position1))

(declare-fun bounded_queue_v2__queue_type__rear__first__bit1 () Int)

(declare-fun bounded_queue_v2__queue_type__rear__last__bit1 () Int)

(declare-fun bounded_queue_v2__queue_type__rear__position1 () Int)

;; bounded_queue_v2__queue_type__rear__first__bit_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__rear__first__bit1))

;; bounded_queue_v2__queue_type__rear__last__bit_axiom
  (assert
  (< bounded_queue_v2__queue_type__rear__first__bit1 bounded_queue_v2__queue_type__rear__last__bit1))

;; bounded_queue_v2__queue_type__rear__position_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__rear__position1))

(declare-fun bounded_queue_v2__queue_type__items__first__bit1 () Int)

(declare-fun bounded_queue_v2__queue_type__items__last__bit1 () Int)

(declare-fun bounded_queue_v2__queue_type__items__position1 () Int)

;; bounded_queue_v2__queue_type__items__first__bit_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__items__first__bit1))

;; bounded_queue_v2__queue_type__items__last__bit_axiom
  (assert
  (< bounded_queue_v2__queue_type__items__first__bit1 bounded_queue_v2__queue_type__items__last__bit1))

;; bounded_queue_v2__queue_type__items__position_axiom
  (assert (<= 0 bounded_queue_v2__queue_type__items__position1))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant4 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(declare-fun value () Int)

(declare-fun count () Int)

(declare-fun count1 () Int)

(declare-fun us () Int)

(declare-fun temp___579 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Int)

(declare-fun o6 () Int)

(declare-fun value1 () Int)

(declare-fun result () Int)

(declare-fun count2 () Int)

(declare-fun count3 () Int)

(declare-fun count4 () Int)

(declare-fun count5 () Int)

(declare-fun count6 () Int)

(declare-fun value2 () Int)

(declare-fun count7 () Int)

(declare-fun bounded_queue_v2__dequeue__item () Int)

(declare-fun value3 () Int)

(declare-fun value4 () Int)

(declare-fun count8 () Int)

(declare-fun value5 () Int)

(declare-fun count9 () Int)

(declare-fun value6 () Int)

;; H
  (assert (and (= us 100) (in_range2 100)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 value)))

;; H
  (assert (= count2 17))

;; H
  (assert
  (=> (and (<= 17 count2) (<= count2 52))
  (and (<= 17 count3) (<= count3 52))))

;; H
  (assert (=> (and (<= 17 count2) (<= count2 52)) (= count3 52)))

;; H
  (assert (=> (and (<= 17 count2) (<= count2 52)) (= count4 count3)))

;; H
  (assert (=> (and (<= 17 count2) (<= count2 52)) (= count5 count4)))

;; H
  (assert (=> (not (and (<= 17 count2) (<= count2 52))) (= count5 count2)))

;; H
  (assert (= count6 1))

;; H
  (assert (<= 1 count6))

;; H
  (assert (<= count6 5))

;; H
  (assert
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 value2))
  (and (<= 1 count7) (<= count7 5))))

(assert
;; WP_parameter_def
 ;; File "bounded_queue_example_v2.adb", line 3, characters 0-0
  (not false))
(check-sat)
(exit)
